Gadgets information
============================================================
0x0000000000187804 : adc ah, -5 ; call rax
0x00000000001878ad : adc ah, bh ; jmp qword ptr [rax]
0x0000000000187b51 : adc ah, bh ; jmp rax
0x000000000019f109 : adc al, -0x10 ; jmp rbx
0x000000000019e004 : adc al, -0x12 ; add byte ptr [rax], al ; sbb bh, dh ; out dx, al ; call qword ptr [rcx]
0x0000000000173939 : adc al, -0x14 ; jmp qword ptr [rax]
0x000000000019381d : adc al, -0x15 ; jmp qword ptr [rdx]
0x0000000000165bd1 : adc al, -0x16 ; test rdx, rdx ; je 0x165bda ; call rdx
0x00000000000cffe6 : adc al, -0x17 ; ret -6
0x0000000000002b63 : adc al, -0x19 ; ret
0x000000000018ad50 : adc al, -0x1f ; out dx, eax ; jmp rsp
0x00000000001abd04 : adc al, -0x35 ; add dword ptr [rax], eax ; fdivrp st(5) ; call qword ptr [rax]
0x0000000000037664 : adc al, -0x39 ; setne al ; movzx eax, al ; ret
0x0000000000037684 : adc al, -0x39 ; xor eax, eax ; ret
0x00000000000841f7 : adc al, -0x48 ; add rax, rdx ; jmp rax
0x0000000000034c02 : adc al, -0x49 ; add rdx, rdi ; jmp rdx
0x0000000000064e7e : adc al, -0x50 ; add rax, rdx ; jmp rax
0x00000000001a8d04 : adc al, -0x65 ; add dword ptr [rax], eax ; test al, 0x2e ; cmc ; jmp qword ptr [rcx]
0x00000000001a8a04 : adc al, -0x68 ; add dword ptr [rax], eax ; call 0x221a7f37
0x0000000000054c47 : adc al, -0x68 ; add rax, rdx ; jmp rax
0x00000000000b590d : adc al, -0x69 ; add rdx, rdi ; jmp rdx
0x0000000000060674 : adc al, -0x6b ; add byte ptr [rax], 0 ; add byte ptr [rcx + 1], cl ; ret 0x3145
0x00000000001438b1 : adc al, -0x6d ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000006dee5 : adc al, -0x6f ; add rcx, rdx ; jmp rcx
0x000000000013b9c0 : adc al, -0x6f ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000013a0ee : adc al, -0x6f ; sub eax, edx ; ret
0x00000000001a8204 : adc al, -0x70 ; add dword ptr [rax], eax ; or byte ptr [rbx], cl ; cmc ; jmp qword ptr [rcx]
0x00000000000b5faa : adc al, -0x70 ; add rax, rdx ; jmp rax
0x00000000001a29bc : adc al, -0x70 ; int1 ; jmp qword ptr [rdx]
0x00000000000dcafa : adc al, -0x73 ; add qword ptr [r8 + 0xffffffffffffff83], rcx ; ret
0x00000000000fe248 : adc al, -0x76 ; add eax, dword ptr [rsi + rdx] ; ret
0x00000000000fb21e : adc al, -0x77 ; ret
0x00000000000ec8c3 : adc al, -0x77 ; ret -0x2509
0x0000000000058463 : adc al, -0x7d ; ret -0x7cf8
0x00000000000e26e1 : adc al, -0x80 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000018bc71 : adc al, -0xc ; call rsp
0x00000000001a1aa0 : adc al, -0xf ; call rsi
0x000000000019f104 : adc al, -1 ; add byte ptr [rax], al ; cmp byte ptr [rax + rsi*8], dl ; jmp rbx
0x00000000001872a9 : adc al, -5 ; jmp qword ptr [rax]
0x00000000001a6121 : adc al, -7 ; call qword ptr [rax]
0x000000000010ae9b : adc al, -9 ; dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x76b4
0x000000000013a599 : adc al, 0 ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x000000000013a52f : adc al, 0 ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x00000000000573f7 : adc al, 0 ; add byte ptr [rax + 0xffffffffffffff89], cl ; ror byte ptr [rax + 0xffffffffffffff83], 1 ; ret
0x00000000001ab5f0 : adc al, 0 ; add byte ptr [rax], al ; add al, -0x3c ; add dword ptr [rax], eax ; clc ; ret
0x00000000001a56e8 : adc al, 0 ; add byte ptr [rax], al ; cld ; add dword ptr fs:[rax], eax ; ret -0x19
0x00000000001ab4e8 : adc al, 0 ; add byte ptr [rax], al ; cld ; ret 1
0x00000000001ab5d8 : adc al, 0 ; add byte ptr [rax], al ; in al, dx ; ret
0x000000000019b4d8 : adc al, 0 ; add byte ptr [rax], al ; in al, dx ; ret 0
0x0000000000198a58 : adc al, 0 ; add byte ptr [rax], al ; insb byte ptr es:[rdi], dx ; cwde ; add byte ptr [rax], al ; nop ; ret -0x13
0x00000000001ab458 : adc al, 0 ; add byte ptr [rax], al ; insb byte ptr es:[rdi], dx ; ret 1
0x00000000001ab590 : adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr es:[rdi], byte ptr [rsi] ; ret
0x00000000001ab548 : adc al, 0 ; add byte ptr [rax], al ; pop rsp ; ret
0x00000000001ab440 : adc al, 0 ; add byte ptr [rax], al ; push rsp ; ret 1
0x00000000001ab488 : adc al, 0 ; add byte ptr [rax], al ; pushfq ; ret 1
0x00000000001ab530 : adc al, 0 ; add byte ptr [rax], al ; ret
0x00000000001ab620 : adc al, 0 ; add byte ptr [rax], al ; xor al, -0x3c ; add dword ptr [rax], eax ; clc ; ret
0x000000000003071e : adc al, 0 ; movsxd rax, dword ptr [rdx + r12*4] ; add rdx, rax ; jmp rdx
0x00000000001438b5 : adc al, 0x13 ; jmp rdx
0x00000000001a0804 : adc al, 0x16 ; add dword ptr [rax], eax ; call 0x241a044f
0x00000000000988f5 : adc al, 0x16 ; sub eax, edx ; ret
0x000000000005e1a4 : adc al, 0x24 ; add rsp, 0x18 ; mov eax, edx ; ret
0x00000000000cc31d : adc al, 0x24 ; add rsp, 0x18 ; mov rax, rdx ; ret
0x00000000000be88e : adc al, 0x24 ; mov rdx, qword ptr [rsp + 0x28] ; call rax
0x0000000000031dab : adc al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x00000000000a1b33 : adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000b7fb8 : adc al, 0x31 ; rol byte ptr [rcx + 0xffffffffffffff83], cl ; stc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbf
0x00000000000238e8 : adc al, 0x33 ; adc dword ptr [rax], eax ; mov rdi, rbx ; call r15
0x000000000001f573 : adc al, 0x3a ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x0000000000193f4c : adc al, 0x3a ; jmp 0x193f4f
0x000000000007fa90 : adc al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000009f270 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x14] ; ret
0x00000000000a00c3 : adc al, 0x48 ; lea eax, dword ptr [rdi + 0x15] ; ret
0x0000000000097c9b : adc al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x0000000000021eba : adc al, 0x48 ; mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000100813 : adc al, 0x5b ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x000000000018d8f8 : adc al, 0x5e ; clc ; jmp rsp
0x00000000001ad0cc : adc al, 0x68 ; cmc ; jmp qword ptr [rdx]
0x00000000000d22c2 : adc al, 0x74 ; or byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x3901
0x0000000000084ae2 : adc al, 0x77 ; sub ecx, dword ptr [rcx + 0xffffffffffffff83] ; ret
0x0000000000087cc7 : adc al, 0xa ; jmp r10
0x0000000000098a63 : adc al, 0xa ; sub eax, edx ; ret
0x0000000000138201 : adc al, 0xe ; sub eax, edx ; ret
0x000000000009fc39 : adc al, 0xf ; test edx, dword ptr [rax + 7] ; add byte ptr [rax], al ; ret
0x0000000000164fd8 : adc al, 1 ; add byte ptr [rax], al ; ret
0x000000000013a741 : adc al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x000000000013a6d7 : adc al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000000c282 : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000ed5a : adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x00000000000007ba : adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x000000000004de51 : adc al, byte ptr [rax] ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, r12 ; jmp rax
0x00000000000048fc : adc al, byte ptr [rax] ; or al, 0 ; nop ; ret 3
0x000000000000af44 : adc al, byte ptr [rax] ; or al, 0 ; push rax ; ret
0x000000000005ff43 : adc al, byte ptr [rbx + 0xffffffffffeee8bd] ; call qword ptr [rax]
0x000000000009a764 : adc al, byte ptr [rcx] ; movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x00000000001b043d : adc al, byte ptr [rdx] ; add al, dl ; xchg esi, esi ; jmp qword ptr [rdi]
0x00000000000d2aa8 : adc al, ch ; ret -0xb37
0x000000000018d4a9 : adc bh, al ; call rsp
0x00000000001877bc : adc bh, bl ; sti ; inc dword ptr [rax] ; loope 0x1877be ; call rax
0x0000000000003aa3 : adc bh, byte ptr [rax] ; cwde ; ret
0x000000000018daa0 : adc bh, byte ptr [rbp + 0xfffffffffffffff8] ; call rsp
0x00000000000a4408 : adc bh, byte ptr [rcx] ; ja 0xa4414 ; cmove rax, rcx ; ret
0x000000000018def9 : adc bh, cl ; jmp rsp
0x0000000000116646 : adc bh, dh ; ret -0x7f80
0x000000000019e189 : adc bh, dl ; call qword ptr [rax]
0x0000000000121a7d : adc bl, al ; nop ; mov dword ptr [rsi], 0xb ; ret
0x0000000000187295 : adc bl, bh ; jmp qword ptr [rax]
0x00000000000367c8 : adc bl, bl ; insb byte ptr es:[rdi], dx ; and al, 8 ; ret
0x00000000001876f0 : adc bl, bl ; sti ; call rax
0x00000000000891a5 : adc bl, ch ; call -0x3bfee50c
0x00000000000879a5 : adc bl, ch ; call -0x3bfefd0c
0x000000000008d855 : adc bl, ch ; call -0x3c269e5c
0x0000000000038b12 : adc bl, ch ; jno 0x38b5f ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000035ada : adc bl, ch ; ret 0x1f0f
0x000000000009e856 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009dbc6 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009dc37 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009db97 : adc bl, dh ; movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000f3e17 : adc bl, dh ; ret
0x00000000001ab550 : adc bl, dl ; cmc ; jmp qword ptr [rsi]
0x000000000009e855 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009dbc5 : adc bl, r14b ; movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x0000000000108dc1 : adc byte ptr [r13 + 0xfffffffff30975c0], r8b ; ret
0x00000000000e415f : adc byte ptr [r13 + rcx*4 + 0x52], cl ; adc byte ptr [rax + 0x39], cl ; ret -0x6cf1
0x00000000000875d2 : adc byte ptr [r15], cl ; mov dh, 0xc ; adc dword ptr [rax + 0xffffffffffffff83], ecx ; ret 0x4201
0x00000000000755a1 : adc byte ptr [r15], cl ; xchg eax, ebx ; ret 0x3948
0x0000000000077c23 : adc byte ptr [r15], r9b ; xchg eax, ebx ; ret 0x3948
0x00000000000e30ca : adc byte ptr [r8 + 0x39], cl ; ret
0x00000000000dff0e : adc byte ptr [r8 + 0x39], cl ; ret 0x574
0x00000000000c4b05 : adc byte ptr [r8 + 0xffffffffffffff83], r9b ; ret
0x0000000000073342 : adc byte ptr [r8 + 1], cl ; ret 0x3948
0x00000000000bdf88 : adc byte ptr [r8 + r9*4 + 0x63], al ; adc cl, byte ptr [rax + 1] ; ret
0x000000000007a5de : adc byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret -0x76b8
0x0000000000079cad : adc byte ptr [r8], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x294d
0x00000000000a1aac : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a1ace : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a1b0c : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a1b8e : adc byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x000000000003aaba : adc byte ptr [rax + 0x39], cl ; ret
0x00000000000e4164 : adc byte ptr [rax + 0x39], cl ; ret -0x6cf1
0x0000000000080ef4 : adc byte ptr [rax + 0x39], cl ; ret -0x7bf1
0x00000000000fc86f : adc byte ptr [rax + 0x39], cl ; ret 0x1b72
0x00000000000d57a9 : adc byte ptr [rax + 0x39], cl ; ret 0x574
0x00000000000fc86e : adc byte ptr [rax + 0x39], r9b ; ret 0x1b72
0x00000000000360fa : adc byte ptr [rax + 0x48d00148], al ; shr eax, 0x3f ; ret
0x00000000000e4146 : adc byte ptr [rax + 0x63], cl ; ret
0x0000000000188520 : adc byte ptr [rax + 0x7f90fffc], al ; cld ; call qword ptr [rax]
0x0000000000079b18 : adc byte ptr [rax + 0xf], cl ; ret -0x76b8
0x00000000000a1b30 : adc byte ptr [rax + 0xffffffffed301457], cl ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a1bb2 : adc byte ptr [rax + 0xffffffffed30184f], cl ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a1cb4 : adc byte ptr [rax + 0xffffffffed30204f], cl ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000c4b06 : adc byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x0000000000035ca5 : adc byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x7fff
0x000000000007e743 : adc byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4801
0x00000000000849bc : adc byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4810
0x0000000000092c26 : adc byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4c01
0x0000000000157fb7 : adc byte ptr [rax + 0xffffffffffffff85], cl ; ror byte ptr [rdi], -0x7b ; call qword ptr [rbx]
0x0000000000157ff3 : adc byte ptr [rax + 0xffffffffffffff85], cl ; ror byte ptr [rdi], -0x7b ; ret
0x0000000000099354 : adc byte ptr [rax + 0xffffffffffffff85], cl ; ror byte ptr [rdi], -0x7b ; ret 0x13
0x00000000000422d4 : adc byte ptr [rax + 0xffffffffffffff85], cl ; ror byte ptr [rdi], -0x7c ; ret
0x000000000009d5ac : adc byte ptr [rax + 0xffffffffffffff89], cl ; clc ; ret
0x0000000000074d97 : adc byte ptr [rax + 0xffffffffffffff89], cl ; jo 0x74dac ; mov qword ptr [rax + 0x40], rcx ; ret
0x00000000001201ab : adc byte ptr [rax + 0xffffffffffffff89], cl ; out dx, eax ; call r14
0x0000000000070d88 : adc byte ptr [rax + 0xffffffffffffff89], cl ; rcr byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000da1e1 : adc byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x00000000001226f8 : adc byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x617
0x0000000000081e7a : adc byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x72b8
0x000000000010bb65 : adc byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x7ab8
0x00000000000814b1 : adc byte ptr [rax + 0xffffffffffffff89], cl ; ret 0x58b
0x0000000000021ebd : adc byte ptr [rax + 0xffffffffffffff8b], cl ; and al, 0x18 ; call rax
0x000000000012f571 : adc byte ptr [rax + 0xffffffffffffff8b], cl ; sbb byte ptr [r8 + 0xffffffffffffff89], r9b ; out -0x18, eax ; ret -0xc02
0x00000000000927aa : adc byte ptr [rax + 0xffffffffffffff8b], cl ; sbb byte ptr [rax + 0xffffffffffffff83], r9b ; ret 0x4802
0x00000000000fe245 : adc byte ptr [rax + 0xffffffffffffff8d], cl ; adc al, -0x76 ; add eax, dword ptr [rsi + rdx] ; ret
0x000000000002f92e : adc byte ptr [rax + 0xffffffffffffff8d], cl ; add al, -0x4e ; mov eax, dword ptr [rdi + rax] ; ret
0x00000000000fe244 : adc byte ptr [rax + 0xffffffffffffff8d], r9b ; adc al, -0x76 ; add eax, dword ptr [rsi + rdx] ; ret
0x0000000000179324 : adc byte ptr [rax + 0xfffffffffffffff2], cl ; jmp qword ptr [rax]
0x00000000000f2e31 : adc byte ptr [rax + 0xffffffffffffffff], bh ; pop rbx ; ret
0x00000000000f9cb1 : adc byte ptr [rax + 1], bh ; pop rbx ; ret
0x000000000012481e : adc byte ptr [rax + 1], bh ; ret
0x00000000000a2b9e : adc byte ptr [rax + 1], cl ; clc ; ret
0x000000000003918e : adc byte ptr [rax + 1], cl ; ret
0x0000000000097c96 : adc byte ptr [rax + 1], cl ; ret 0x147c
0x0000000000073343 : adc byte ptr [rax + 1], cl ; ret 0x3948
0x000000000003d447 : adc byte ptr [rax + 1], cl ; ror byte ptr [rax + 0xffffffffffffff89], 1 ; ret -0x769a
0x000000000003d446 : adc byte ptr [rax + 1], r9b ; ror byte ptr [rax + 0xffffffffffffff89], 1 ; ret -0x769a
0x00000000000bdf89 : adc byte ptr [rax + rcx*4 + 0x63], al ; adc cl, byte ptr [rax + 1] ; ret
0x0000000000190255 : adc byte ptr [rax], al ; add al, ch ; pop rax ; std ; jmp qword ptr [rdi]
0x00000000000f31a2 : adc byte ptr [rax], al ; add al, ch ; ret 0xfff2
0x00000000000f12bb : adc byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x000000000013a8e1 : adc byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x000000000013c951 : adc byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000005dafc : adc byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000007ae64 : adc byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x0000000000048967 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; out dx, eax ; ret
0x000000000007a5df : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret -0x76b8
0x0000000000079cae : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x294d
0x00000000000109b0 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000000ec82 : adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000000e520c : adc byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000003d28c : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000121a0a : adc byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x00000000001200f5 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000a27e9 : adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000017b68d : adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x0000000000109339 : adc byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000103183 : adc byte ptr [rax], al ; je 0x103190 ; xor eax, eax ; ret
0x0000000000136e76 : adc byte ptr [rax], al ; jne 0x136e98 ; add rsp, 0x48 ; ret
0x000000000002c094 : adc byte ptr [rax], al ; mov rdi, rbx ; call r12
0x000000000006ddd1 : adc byte ptr [rax], al ; movsxd rcx, dword ptr [rsi + rcx*4] ; add rsi, rcx ; jmp rsi
0x000000000006dee1 : adc byte ptr [rax], al ; movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x00000000000a1aad : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a1acf : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a1b0d : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a1b8f : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a1c91 : adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x0000000000109338 : adc byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000018810c : adc byte ptr [rbp + 0xffffffff84a6fffc], al ; cld ; call qword ptr [rsi]
0x000000000005ff4a : adc byte ptr [rbp + 0xffffffff940ffe41], cl ; ret -0x2d7c
0x000000000011a9b7 : adc byte ptr [rbp + 0xffffffffb60f41ff], al ; ret 0x48d
0x0000000000108dc2 : adc byte ptr [rbp + 0xfffffffff30975c0], al ; ret
0x00000000000a56d9 : adc byte ptr [rbp + 0xfffffffff3f275d2], al ; ret
0x00000000000efe01 : adc byte ptr [rbp + 0xffffffffffffff85], cl ; dec dword ptr [rbp + 0xffffffff840f0158] ; ret 1
0x000000000008d318 : adc byte ptr [rbp + 0xffffffffffffffe5], dh ; mov rax, rdi ; ret
0x0000000000188538 : adc byte ptr [rbp + 0xfffffffffffffffc], bh ; call qword ptr [rax + 0x10fffc7c]
0x00000000000a4307 : adc byte ptr [rbp + rcx*4 + 0x4e], cl ; adc byte ptr [rcx + 0x39], al ; ret
0x00000000000e4160 : adc byte ptr [rbp + rcx*4 + 0x52], cl ; adc byte ptr [rax + 0x39], cl ; ret -0x6cf1
0x000000000019c65b : adc byte ptr [rbx + 0x1020302], al ; ret
0x00000000000edf7f : adc byte ptr [rbx + 0x1374a1f8], al ; neg eax ; pop rbx ; ret
0x00000000001afe2b : adc byte ptr [rbx + 0x1990302], al ; ret
0x0000000000108ed3 : adc byte ptr [rbx + 0x5d], bl ; and eax, 0xc ; pop r12 ; ret
0x000000000006d99c : adc byte ptr [rbx + 0x5d], bl ; mov rax, r12 ; pop r12 ; ret
0x0000000000081fab : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000118673 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000346b3 : adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000019d35b : adc byte ptr [rbx + 0xa440202], al ; ret
0x000000000019142b : adc byte ptr [rbx + 0xa4c0202], al ; ret
0x00000000001afe36 : adc byte ptr [rbx + 0xa550202], al ; ret
0x00000000000a44ff : adc byte ptr [rbx + 0xffffffff8348fc46], cl ; ret
0x000000000017a320 : adc byte ptr [rbx + 0xffffffff92b8fff4], dl ; hlt ; call qword ptr [rax]
0x000000000007d262 : adc byte ptr [rbx + 0xffffffffd0291047], cl ; ret
0x0000000000178e60 : adc byte ptr [rbx + 0xffffffffffffffef], dl ; call qword ptr [rax]
0x000000000012d13e : adc byte ptr [rbx + rcx*4 + 0x24], cl ; ret -0x7ab3
0x00000000000c3a26 : adc byte ptr [rbx], al ; add cl, ch ; ret -2
0x00000000000386e9 : adc byte ptr [rcx + 0x29], cl ; ret
0x00000000000a430b : adc byte ptr [rcx + 0x39], al ; ret
0x00000000000a430a : adc byte ptr [rcx + 0x39], r8b ; ret
0x0000000000112783 : adc byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x00000000000a6d9a : adc byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret -0x67d
0x0000000000188a48 : adc byte ptr [rcx + 0xffffffffa080fffc], ah ; cld ; jmp rax
0x00000000000a1bf2 : adc byte ptr [rcx + 0xffffffffed30174f], cl ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a1c12 : adc byte ptr [rcx + 0xffffffffed30184f], cl ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000adba1 : adc byte ptr [rcx + 0xffffffffffffff83], cl ; ret
0x0000000000138283 : adc byte ptr [rcx + 0xffffffffffffff83], cl ; ret 0x7f10
0x000000000013be27 : adc byte ptr [rcx + 0xffffffffffffff83], cl ; ret 0xf10
0x0000000000165187 : adc byte ptr [rcx + 0xffffffffffffff8b], cl ; sbb byte ptr [r8 + 0xffffffffffffff83], r9b ; ret
0x000000000004a66a : adc byte ptr [rcx + 0xffffffffffffff8d], al ; dec byte ptr [rdi] ; xchg eax, esp ; ret -0x2d7c
0x00000000001795f4 : adc byte ptr [rcx + 0xfffffffffffffff2], ch ; jmp qword ptr [rax]
0x00000000001b39d0 : adc byte ptr [rcx + 0xfffffffffffffff7], cl ; jmp qword ptr [rax]
0x000000000012d296 : adc byte ptr [rcx + rcx*4 + 0x24], cl ; ret -0x7cb8
0x000000000006d5d2 : adc byte ptr [rcx + rcx*4 + 0xffffffffffffffe0], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000018a545 : adc byte ptr [rcx], al ; add bl, ch ; add bh, ch ; call rsp
0x000000000018a565 : adc byte ptr [rcx], al ; add byte ptr [rcx + 2], cl ; out dx, eax ; call rsp
0x00000000000afd94 : adc byte ptr [rcx], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000003ce86 : adc byte ptr [rcx], ch ; ret -0x3d97
0x000000000007d265 : adc byte ptr [rcx], ch ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000187980 : adc byte ptr [rcx], cl ; cld ; jmp rax
0x00000000001227c2 : adc byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000126aef : adc byte ptr [rcx], dh ; ror byte ptr [rax + 0xffffffffffffff83], -0x3c ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x0000000000188528 : adc byte ptr [rdi + 0xfffffffffffffffc], bh ; call qword ptr [rax + 0x10fffc7e]
0x0000000000187b5c : adc byte ptr [rdi], -4 ; call rax
0x0000000000187858 : adc byte ptr [rdi], al ; cld ; push rax ; or ah, bh ; call rax
0x0000000000187a38 : adc byte ptr [rdi], ch ; cld ; push rax ; xor ah, bh ; call rax
0x000000000002fe05 : adc byte ptr [rdi], cl ; mov bh, -0x40 ; ret
0x000000000010d242 : adc byte ptr [rdi], cl ; mov bh, -0xa ; or eax, esi ; bswap eax ; ret
0x00000000000875d3 : adc byte ptr [rdi], cl ; mov dh, 0xc ; adc dword ptr [rax + 0xffffffffffffff83], ecx ; ret 0x4201
0x0000000000130499 : adc byte ptr [rdi], cl ; test al, byte ptr [rax + 0x1000001] ; ret -0x76b4
0x000000000015b098 : adc byte ptr [rdi], cl ; test eax, dword ptr [rcx + 5] ; add byte ptr [rax], al ; ret
0x00000000000d4db4 : adc byte ptr [rdi], cl ; test eax, ecx ; add byte ptr [rax], al ; add byte ptr [rcx + 0xffffffffffffff83], cl ; ret 0x4c01
0x0000000000163103 : adc byte ptr [rdi], cl ; test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000139471 : adc byte ptr [rdi], cl ; xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x0000000000139561 : adc byte ptr [rdi], cl ; xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x0000000000139381 : adc byte ptr [rdi], cl ; xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x0000000000140c8b : adc byte ptr [rdi], cl ; xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x000000000013f78f : adc byte ptr [rdi], cl ; xchg bl, cl ; adc eax, 0x83480000 ; ret -0x16f0
0x000000000014098f : adc byte ptr [rdi], cl ; xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x000000000014008f : adc byte ptr [rdi], cl ; xchg bl, cl ; or al, 0 ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x000000000014038f : adc byte ptr [rdi], cl ; xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x000000000013fa87 : adc byte ptr [rdi], cl ; xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x0000000000139921 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + 0xffffffff83480000], ch ; ret -0x14f0
0x0000000000139dc9 : adc byte ptr [rdi], cl ; xchg byte ptr [rax + rax + 0xffffffff83480000], al ; ret -0x14f0
0x00000000001390b1 : adc byte ptr [rdi], cl ; xchg byte ptr [rbp + rcx + 0xffffffff83480000], bl ; ret -0x14f0
0x0000000000139b01 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rax], cl ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x0000000000139291 : adc byte ptr [rdi], cl ; xchg byte ptr [rbx + rcx + 0xffffffff83480000], bh ; ret -0x14f0
0x0000000000139ce1 : adc byte ptr [rdi], cl ; xchg byte ptr [rcx + rax], ch ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x0000000000139bf1 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx + rax], bl ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x0000000000139533 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x0000000000139623 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x0000000000139443 : adc byte ptr [rdi], cl ; xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000013fd34 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x0000000000140934 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x0000000000140c34 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x0000000000140334 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x0000000000140034 : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000013fa2c : adc byte ptr [rdi], cl ; xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x00000000001391a1 : adc byte ptr [rdi], cl ; xchg byte ptr [rsp + rcx + 0xffffffff83480000], ch ; ret -0x14f0
0x000000000013d0cd : adc byte ptr [rdi], cl ; xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000013ceed : adc byte ptr [rdi], cl ; xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000013d8c5 : adc byte ptr [rdi], cl ; xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x000000000013c7e5 : adc byte ptr [rdi], cl ; xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x000000000013d6e5 : adc byte ptr [rdi], cl ; xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x0000000000139353 : adc byte ptr [rdi], cl ; xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x0000000000139173 : adc byte ptr [rdi], cl ; xchg dl, bl ; or al, 0 ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x0000000000139263 : adc byte ptr [rdi], cl ; xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x0000000000139083 : adc byte ptr [rdi], cl ; xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x00000000000755a2 : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x000000000003a47d : adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3949
0x00000000000cf825 : adc byte ptr [rdi], cl ; xchg eax, esp ; ret 0x38b
0x000000000007577e : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3948
0x000000000003a47c : adc byte ptr [rdi], r9b ; xchg eax, ebx ; ret 0x3949
0x0000000000003901 : adc byte ptr [rdx + 0x71], bh ; xchg eax, ebx ; and cl, ah ; ret
0x0000000000143da9 : adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000000496d3 : adc byte ptr [rdx + rdx*8 + 0x394ce875], al ; ret
0x00000000000007b6 : adc byte ptr [rdx], ah ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x00000000000ec8cb : adc byte ptr [rdx], al ; cmove eax, edx ; jmp 0xec88b
0x00000000001ad2b3 : adc byte ptr [rdx], al ; ret
0x0000000000187b10 : adc byte ptr [rdx], ch ; cld ; call rax
0x00000000001617eb : adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000187a54 : adc byte ptr [rip + 0x2ef0fffc], ch ; cld ; call rax
0x000000000016169a : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret
0x0000000000160c95 : adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret -0x7cf1
0x0000000000087e15 : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx + 0xffffffffffffff83] ; ret 0x7f10
0x000000000008dd1b : adc byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx + 0xffffffffffffff83] ; ret 0xf10
0x000000000009ddab : adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx + 0xffffffffffffff83], 1 ; ret 0x4d10
0x000000000009ddaa : adc byte ptr [rsi + 0xf], r12b ; xlatb ; ror byte ptr [rcx + 0xffffffffffffff83], 1 ; ret 0x4d10
0x00000000000fd735 : adc byte ptr [rsi + 0xffffffffffffff83], ah ; cli ; push qword ptr [rsi + rax + 0xffffffffffffff83] ; ret 0x6601
0x00000000001794a8 : adc byte ptr [rsi + 0xfffffffffffffff2], dl ; jmp qword ptr [rax]
0x0000000000188530 : adc byte ptr [rsi + 0xfffffffffffffffc], bh ; call qword ptr [rax + 0x10fffc7d]
0x00000000000a453c : adc byte ptr [rsi + rdi*8 + 0x438d48ff], cl ; cld ; pop rbx ; ret
0x00000000001aa429 : adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret
0x0000000000191019 : adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret -0x15dd
0x00000000001b4179 : adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret -0x93d
0x00000000001a9941 : adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret -0xb24
0x00000000001a3d09 : adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret -0xc52
0x00000000000b142a : adc byte ptr [rsp + 0xfffffffffffffff0], al ; ret
0x0000000000039ef5 : adc byte ptr [rsp + 0xfffffffffffffff8], al ; ret
0x0000000000039eaf : adc byte ptr [rsp + 0xfffffffffffffffc], al ; ret
0x000000000003d0da : adc byte ptr [rsp + 8], al ; add rsp, 0x18 ; ret
0x0000000000000453 : adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x000000000013fd37 : adc byte ptr es:[rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x0000000000190254 : adc byte ptr fs:[rax], al ; add al, ch ; pop rax ; std ; jmp qword ptr [rdi]
0x000000000018a544 : adc byte ptr fs:[rcx], al ; add bl, ch ; add bh, ch ; call rsp
0x00000000000e54b8 : adc byte ptr gs:[rax + 0xffffffffffffff89], cl ; ret
0x00000000001876b4 : adc ch, bl ; sti ; push rax ; fdivp st(3) ; call rax
0x00000000001a71f0 : adc cl, al ; hlt ; jmp qword ptr [rsi]
0x00000000000b2112 : adc cl, byte ptr [rax + 0x29] ; ret -0x76b8
0x00000000000b218d : adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x0000000000100594 : adc cl, byte ptr [rax + 0xffffffffffffff83] ; ret
0x0000000000098b9d : adc cl, byte ptr [rax + 0xffffffffffffff89] ; clc ; ret
0x00000000000f32b8 : adc cl, byte ptr [rax + 0xffffffffffffff89] ; ret -0x76b8
0x0000000000085d7c : adc cl, byte ptr [rax + 0xffffffffffffff89] ; ret 0x348
0x0000000000087995 : adc cl, byte ptr [rax + 0xffffffffffffffff] ; ret 0x2288
0x00000000000bdf8d : adc cl, byte ptr [rax + 1] ; ret
0x0000000000039024 : adc cl, byte ptr [rax + 1] ; ror byte ptr [rax + 0x39], 1 ; ret -0x76b7
0x0000000000028ec1 : adc cl, byte ptr [rbp + 0xffffffffffffff89] ; ret
0x00000000000ba475 : adc cl, ch ; ret
0x000000000008bf88 : adc cl, ch ; ret -3
0x00000000000d4a50 : adc cl, ch ; ret -4
0x00000000001ac650 : adc dh, ah ; cmc ; call qword ptr [rax]
0x000000000019b6bc : adc dh, bh ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019a270 : adc dh, bh ; in eax, dx ; jmp rax
0x000000000008d234 : adc dh, bh ; ret
0x0000000000195f5c : adc dh, byte ptr [rcx + 0xffffffffffffffed] ; jmp qword ptr [rdx]
0x000000000019ace1 : adc dh, ch ; jmp qword ptr [rcx]
0x000000000019bb3d : adc dh, ch ; jmp qword ptr [rdx]
0x000000000012092e : adc dh, dh ; ret 0x7401
0x00000000000022d3 : adc dh, dl ; ret
0x00000000001ab4c0 : adc dl, -0xb ; jmp qword ptr [rsi]
0x0000000000187740 : adc dl, ah ; sti ; jmp rax
0x00000000001ad2d0 : adc dl, bh ; cmc ; call qword ptr [rax]
0x000000000019a834 : adc dl, bl ; in eax, dx ; jmp qword ptr [rdx]
0x000000000017a268 : adc dl, byte ptr [rsi] ; hlt ; call qword ptr [rax]
0x0000000000081d92 : adc dword ptr [rax + 0x29], ecx ; ret 0x3948
0x000000000008badb : adc dword ptr [rax + 0x39], ecx ; ret
0x0000000000187468 : adc dword ptr [rax + 0xffffffffa891fffd], ebp ; std ; call qword ptr [rcx]
0x00000000000875d7 : adc dword ptr [rax + 0xffffffffffffff83], ecx ; ret 0x4201
0x00000000000d2821 : adc dword ptr [rax + 0xffffffffffffff83], ecx ; ret 0x4401
0x0000000000108fcb : adc dword ptr [rax + 0xffffffffffffff85], ecx ; sal byte ptr [rbp + 0xffffffffffffffef], cl ; leave ; ret
0x000000000007f175 : adc dword ptr [rax + 0xffffffffffffff89], ecx ; ret -0x7cb8
0x000000000013e2db : adc dword ptr [rax], 0x83480000 ; ret 0x4910
0x00000000000a9744 : adc dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x000000000013c7e9 : adc dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x000000000013a877 : adc dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x0000000000023f6b : adc dword ptr [rax], eax ; mov rdi, r14 ; mov rax, qword ptr [rbp + 0xffffffffffffffa0] ; call rax
0x00000000000238ea : adc dword ptr [rax], eax ; mov rdi, rbx ; call r15
0x000000000005f6ee : adc dword ptr [rax], eax ; movsxd rax, dword ptr [rax + rdx*4] ; add rax, r13 ; jmp rax
0x000000000005ebce : adc dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x0000000000064ce9 : adc dword ptr [rax], eax ; movsxd rax, dword ptr [rsi + rax*4] ; add rsi, rax ; jmp rsi
0x0000000000064e7a : adc dword ptr [rax], eax ; movsxd rdx, dword ptr [rax + r14*4] ; add rax, rdx ; jmp rax
0x0000000000187458 : adc dword ptr [rbp + 0xffffffffa611fffd], esp ; std ; call qword ptr [rcx]
0x000000000018748c : adc dword ptr [rbp + 0xffffffffad8efffd], ebp ; std ; jmp qword ptr [rsi]
0x000000000003d264 : adc dword ptr [rbp], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000011cc66 : adc dword ptr [rbx + 0xffffffffffffff8b], eax ; adc r8d, dword ptr [rbx + rax*4] ; ret
0x0000000000083d7b : adc dword ptr [rbx + rsi + 0x358d4800], esi ; ret 0xfec
0x000000000010f7cc : adc dword ptr [rbx], ebp ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x76b8
0x0000000000187470 : adc dword ptr [rcx + 0xffffffffa991fffd], ebp ; std ; jmp qword ptr [rcx]
0x000000000003cb16 : adc dword ptr [rcx], eax ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000046631 : adc dword ptr [rcx], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000009779e : adc dword ptr [rcx], edi ; lock jne 0x97790 ; mov rax, rdi ; ret
0x0000000000187460 : adc dword ptr [rdi + 0xffffffffa791fffd], esp ; std ; call qword ptr [rcx]
0x00000000001ae29c : adc dword ptr [rdi + 0xfffffffffffffff5], edi ; jmp qword ptr [rdx]
0x00000000000361e4 : adc dword ptr [rdi], ecx ; ret
0x00000000000361ad : adc dword ptr [rdi], ecx ; subsd xmm0, xmm1 ; ret
0x0000000000036512 : adc dword ptr [rdi], ecx ; subss xmm0, xmm1 ; ret
0x00000000001b0345 : adc dword ptr [rdx], eax ; add al, ch ; test dh, dh ; jmp rdx
0x000000000011bd5c : adc dword ptr [rsi], 2 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000013a876 : adc dword ptr es:[rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x00000000000a2b9a : adc eax, 0x10ef8348 ; add rax, rdi ; ret
0x0000000000173931 : adc eax, 0x1636ffec ; in al, dx ; jmp qword ptr [rax]
0x0000000000134537 : adc eax, 0x28c354 ; add rsp, 8 ; ret
0x000000000012b829 : adc eax, 0x299052 ; mov qword ptr fs:[rax], rdx ; ret
0x0000000000121ee2 : adc eax, 0x29cc99 ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x000000000010b949 : adc eax, 0x2b7e72 ; pop rbp ; ret
0x00000000000f45ae : adc eax, 0x2ce07d ; add rsp, 8 ; ret
0x000000000001fea6 : adc eax, 0x31f63100 ; shr al, -8 ; ret 0xc
0x00000000000869d1 : adc eax, 0x33b1ba ; add rsp, 0x18 ; ret
0x00000000000290fd : adc eax, 0x358d4800 ; ret
0x00000000000287fe : adc eax, 0x358d4800 ; ret 0x154b
0x0000000000037c8d : adc eax, 0x38740e ; ret
0x000000000002ef09 : adc eax, 0x391d6f ; ret
0x00000000000a382a : adc eax, 0x3b30478b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x000000000002baed : adc eax, 0x3d8d4800 ; ret 0x1553
0x0000000000098837 : adc eax, 0x48ffff49 ; mov eax, ebx ; pop rbx ; ret
0x0000000000021998 : adc eax, 0x5b000001 ; pop rbp ; pop r12 ; ret
0x000000000009e558 : adc eax, 0x621850f ; add byte ptr [rax], al ; ret
0x000000000009fc6c : adc eax, 0x71d850f ; add byte ptr [rax], al ; ret
0x00000000000365e9 : adc eax, 0x7e0f6600 ; ret -0x2f77
0x000000000013a401 : adc eax, 0x83480000 ; ret -0x16f0
0x0000000000078b97 : adc eax, 0x89ffffd1 ; ret 0x3f7
0x000000000019658d : adc eax, 0x95600000 ; in eax, dx ; jmp rsi
0x00000000000a3b2a : adc eax, 0xe180d188 ; pcmpeqb mm3, qword ptr [rsi] ; ret
0x000000000002d139 : adc eax, 0xef394800 ; je 0x2d156 ; call 0x893b0
0x000000000013c609 : adc eax, dword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x000000000013e03e : adc eax, dword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000006f7ea : adc eax, dword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret 0x38b
0x0000000000034e67 : adc eax, dword ptr [rax] ; movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x0000000000034bfe : adc eax, dword ptr [rax] ; movsxd rdx, dword ptr [rdi + rsi*4] ; add rdx, rdi ; jmp rdx
0x000000000011cc6a : adc eax, dword ptr [rbx + rax*4] ; ret
0x00000000000cc1ed : adc eax, dword ptr [rcx + rcx*8 + 0x63480f75] ; ret -0x76b8
0x00000000001980c6 : adc eax, dword ptr [rdi + 0xd1cffed] ; xchg eax, edi ; xchg ch, ch ; jmp qword ptr [rdx]
0x000000000009a768 : adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x000000000013fa2f : adc eax, dword ptr cs:[rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x0000000000038459 : adc eax, eax ; ret
0x0000000000038596 : adc eax, edx ; pop rbp ; pop rbx ; ret
0x00000000001758a5 : adc ebp, dword ptr [rbx] ; fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x0000000000189439 : adc ebp, ebx ; call rsp
0x000000000010c9e0 : adc ebp, ebx ; ret
0x000000000010aa0d : adc ebp, ebx ; xor dword ptr [rcx], -0x40 ; ret
0x00000000000745cd : adc ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000017a470 : adc ebx, dword ptr [rcx + 0xffffffff991dfff4] ; hlt ; jmp qword ptr [rdi]
0x0000000000199f8c : adc ebx, ebx ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000187299 : adc ebx, edi ; jmp rax
0x00000000000a45ec : adc ecx, dword ptr [rax + 0xffffffffffffff83] ; in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000126edd : adc ecx, dword ptr [rax + 0xffffffffffffff83] ; ret
0x00000000000a41ec : adc ecx, dword ptr [rax + 0xffffffffffffff83] ; ret -0x74fc
0x0000000000111d3a : adc ecx, dword ptr [rax + 0xffffffffffffff83] ; ret 0x4801
0x0000000000031903 : adc ecx, dword ptr [rax + 0xffffffffffffff83] ; ret 0x4901
0x0000000000049adb : adc ecx, dword ptr [rax + 0xffffffffffffff83] ; ret 0x4c10
0x00000000000e9fea : adc ecx, dword ptr [rax + 0xffffffffffffff89] ; ret
0x000000000007d20c : adc ecx, dword ptr [rax + 0xffffffffffffff89] ; ret -0x74b8
0x000000000003def0 : adc ecx, dword ptr [rax + 0xffffffffffffff8d] ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x000000000002bd34 : adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x00000000000a68f1 : adc ecx, dword ptr [rcx + 0xffffffffffffff83] ; ret 0x4104
0x000000000004bebe : adc ecx, dword ptr [rcx + rax + 0xffffffffffffffe2] ; call qword ptr [r11 + rax*8]
0x0000000000061ca6 : adc ecx, dword ptr [rcx + rax + 0xfffffffffffffff2] ; call qword ptr [r11 + rax*8]
0x00000000000b7c7b : adc ecx, dword ptr [rdi] ; scasd eax, dword ptr es:[rdi] ; ret -0x76bf
0x000000000009a934 : adc ecx, dword ptr [rdx + 5] ; mov rax, rdi ; ret
0x000000000009a954 : adc ecx, dword ptr [rdx + 6] ; mov rax, rdi ; ret
0x000000000009a974 : adc ecx, dword ptr [rdx + 7] ; mov rax, rdi ; ret
0x000000000009a7be : adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x0000000000176dbe : adc esi, dword ptr [rbp + 0xffffffff9fffe599] ; mov dh, -0x39 ; ret -0x18e1
0x00000000000a6110 : adc esi, dword ptr [rbp + rcx + 0xffffffffffffff89] ; ret -0x3615
0x000000000007cd61 : adc esi, esi ; ret 0xf02
0x00000000001a9dec : adc esp, ecx ; hlt ; jmp qword ptr [rdx]
0x000000000013fc12 : adc qword ptr [r8], rax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x000000000018d4a8 : adc r15b, al ; call rsp
0x000000000013c770 : adc r8b, byte ptr [r8] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x00000000001b043c : adc r8b, byte ptr [rdx] ; add al, dl ; xchg esi, esi ; jmp qword ptr [rdi]
0x000000000011cc69 : adc r8d, dword ptr [rbx + rax*4] ; ret
0x0000000000038595 : adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000008d233 : adc sil, r15b ; ret
0x00000000001a5bd3 : add ah, ah ; imul eax, dword ptr [rcx], 0xf4634800 ; jmp qword ptr [rcx]
0x00000000001b5bd3 : add ah, ah ; imul eax, dword ptr [rdx], 0xf79a9800 ; jmp qword ptr [rcx]
0x0000000000189a97 : add ah, ah ; in eax, dx ; jmp rsp
0x000000000018b957 : add ah, ah ; jb 0x18b94e ; jmp rsp
0x000000000018aed7 : add ah, ah ; jmp rsp
0x000000000018dc8f : add ah, ah ; mov al, -8 ; jmp rsp
0x00000000001959f3 : add ah, ah ; or dword ptr [rax], eax ; add byte ptr [rax], ch ; mov ebp, ebp ; call qword ptr [rax]
0x00000000001b60d3 : add ah, ah ; outsb dx, byte ptr [rsi] ; add al, byte ptr [rax] ; test al, 4 ; sti ; jmp qword ptr [rdx]
0x00000000001a60d3 : add ah, ah ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; call 0x221a5550
0x000000000018e8c7 : add ah, ah ; push rbp ; cli ; call rsp
0x00000000001ab4d3 : add ah, ah ; ret 1
0x000000000018beaf : add ah, ah ; xlatb ; hlt ; jmp rsp
0x00000000001999d3 : add ah, al ; add byte ptr [r8], al ; cwde ; in eax, dx ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001936b3 : add ah, al ; add byte ptr [rax], r8b ; pop rax ; add ebx, ebp ; jmp rax
0x000000000018e57f : add ah, al ; add dl, bh ; jmp rsp
0x000000000018e847 : add ah, al ; cli ; jmp rsp
0x000000000018e7b7 : add ah, al ; cmp bh, dl ; jmp rsp
0x0000000000189157 : add ah, al ; fldl2e ; call rsp
0x0000000000188e97 : add ah, al ; jno 0x188e85 ; jmp rsp
0x00000000001ad4b3 : add ah, al ; loop 0x1ad4b8 ; add byte ptr [rax + 0xfffffffffffffffa], bh ; cmc ; jmp rsp
0x00000000001ad3b3 : add ah, al ; loope 0x1ad3b8 ; add al, bh ; cli ; cmc ; call qword ptr [rax]
0x00000000001893ff : add ah, al ; or al, -0x15 ; call rsp
0x000000000019d9b3 : add ah, al ; out 0, eax ; add al, cl ; mov dh, -0x12 ; call qword ptr [rax]
0x000000000019e1b3 : add ah, al ; out dx, eax ; add byte ptr [rax], al ; mov byte ptr [rdx], bl ; out dx, eax ; call qword ptr [rax]
0x000000000018e29f : add ah, al ; popfq ; stc ; call rsp
0x000000000018aae7 : add ah, al ; ret -0x11
0x000000000018a30f : add ah, al ; ret -0x12
0x000000000018ece7 : add ah, al ; ret -6
0x000000000018e3d7 : add ah, al ; ret -7
0x000000000019efb3 : add ah, al ; std ; add byte ptr [rax], al ; js 0x19f001 ; sti ; call qword ptr [rax]
0x00000000001a37eb : add ah, bh ; add dword ptr [r8], r8d ; nop ; xchg edx, esi ; jmp qword ptr [rcx]
0x00000000001a56eb : add ah, bh ; add dword ptr fs:[rax], eax ; ret -0x19
0x00000000000a275e : add ah, bh ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000a2781 : add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000001a12eb : add ah, bh ; and byte ptr [rcx], al ; add byte ptr [rax], dh ; ret
0x00000000001a5beb : add ah, bh ; imul eax, dword ptr [rcx], 0xf4636000 ; jmp qword ptr [rcx]
0x00000000000a2838 : add ah, bh ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000a273d : add ah, bh ; inc dword ptr [rbx] ; pop rbx ; ret
0x00000000001ab4eb : add ah, bh ; ret 1
0x00000000001abceb : add ah, bh ; retf 1 ; push rax ; fdivrp st(5) ; call qword ptr [rax]
0x00000000001a78eb : add ah, bh ; xchg byte ptr [rcx], al ; add al, al ; fdivr st(4), st(0) ; jmp qword ptr [rcx]
0x00000000001a89eb : add ah, bh ; xchg eax, edi ; add dword ptr [rax], eax ; shr byte ptr [rdx], 1 ; cmc ; jmp qword ptr [rcx]
0x00000000001b39cb : add ah, bl ; add r8b, byte ptr [r8] ; adc byte ptr [rcx + 0xfffffffffffffff7], cl ; jmp qword ptr [rax]
0x00000000001a8bcb : add ah, bl ; cdq ; add dword ptr [rax], eax ; loopne 0x1a8bfe ; cmc ; jmp qword ptr [rcx]
0x00000000001ad3cb : add ah, bl ; loope 0x1ad3d0 ; add al, dh ; cli ; cmc ; call qword ptr [rax]
0x00000000001ad2cb : add ah, bl ; loopne 0x1ad2d0 ; add byte ptr [rax], dl ; cli ; cmc ; call qword ptr [rax]
0x00000000001a5acb : add ah, bl ; push 0x61500001 ; hlt ; jmp qword ptr [rax]
0x00000000001a49cb : add ah, bl ; push rdi ; add dword ptr [rax], eax ; ret -0x19
0x000000000019edcb : add ah, bl ; sti ; add byte ptr [rax], al ; lock cwde ; out dx, eax ; jmp rdi
0x0000000000187ca8 : add ah, byte ptr [rbx + 0xfffffffffffffffc] ; call qword ptr [rdx + 0x22fffc62]
0x000000000019f1ff : add ah, byte ptr [rdi + 0xa] ; ret
0x000000000009a7bb : add ah, byte ptr [rsi + 0xf] ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x0000000000193adb : add ah, ch ; add byte ptr [rax], al ; cmp byte ptr [rdx], -6 ; jmp qword ptr [rcx]
0x000000000001946f : add ah, ch ; call qword ptr [rdi]
0x00000000001a8adb : add ah, ch ; cwde ; add dword ptr [rax], eax ; lock sub esi, ebp ; jmp qword ptr [rcx]
0x00000000001a5fdb : add ah, ch ; insd dword ptr es:[rdi], dx ; add dword ptr [rax], eax ; mov al, 0x6c ; hlt ; jmp qword ptr [rcx]
0x000000000019acdb : add ah, ch ; mov edx, 0x10d00000 ; out dx, al ; jmp qword ptr [rcx]
0x00000000001a82db : add ah, ch ; nop ; add dword ptr [rax], eax ; loopne 0x1a82ed ; cmc ; jmp qword ptr [rcx]
0x000000000019b9eb : add ah, ch ; ret
0x000000000019b4db : add ah, ch ; ret 0
0x00000000001b0adb : add ah, ch ; sbb byte ptr [rdx], al ; add al, dl ; mov cl, -0xa ; jmp qword ptr [rcx]
0x00000000001a8ddb : add ah, ch ; wait ; add dword ptr [rax], eax ; shr byte ptr [rdi], 1 ; cmc ; jmp qword ptr [rcx]
0x00000000001a60bb : add ah, cl ; outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; sal byte ptr [rbx + 0xfffffffffffffff4], 1 ; jmp qword ptr [rcx]
0x00000000001b61bb : add ah, cl ; outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; lock add edi, ebx ; jmp qword ptr [rdx]
0x00000000001b4abb : add ah, cl ; pop rax ; add al, byte ptr [rax] ; sar byte ptr [rdx + 0xfffffffffffffff7], 1 ; call qword ptr [rdx]
0x000000000018ddaf : add ah, cl ; rep clc ; call rsp
0x000000000019b4bb : add ah, cl ; ret 0
0x00000000001ab4bb : add ah, cl ; ret 1
0x00000000001a0fbb : add ah, cl ; sbb eax, 0x40f00001 ; int1 ; call rsi
0x00000000001a72e3 : add ah, dh ; add byte ptr [rcx], 0 ; fmul st(0) ; hlt ; jmp qword ptr [rdx]
0x00000000000194ff : add ah, dh ; call qword ptr [rdi]
0x00000000001a8be3 : add ah, dh ; cdq ; add dword ptr [rax], eax ; clc ; sub al, -0xb ; jmp qword ptr [rcx]
0x00000000001aeef3 : add ah, dh ; clc ; add dword ptr [rax], eax ; ret
0x00000000001a2fe3 : add ah, dh ; cmp eax, 0xfbd80001 ; int1 ; jmp qword ptr [rcx]
0x0000000000195ee3 : add ah, dh ; insb byte ptr es:[rdi], dx ; add byte ptr [rax], al ; call -0x1ae6b381
0x000000000018f0a7 : add ah, dh ; iretd ; std ; jmp rsp
0x000000000018968f : add ah, dh ; jmp 0x189693
0x00000000001a91e3 : add ah, dh ; lahf ; add dword ptr [rax], eax ; call 0x221a8725
0x000000000018a0b7 : add ah, dh ; lahf ; out dx, al ; jmp rsp
0x00000000001ad2e3 : add ah, dh ; loopne 0x1ad2e8 ; add byte ptr [rax], cl ; cli ; cmc ; call qword ptr [rax]
0x00000000001a5ce3 : add ah, dh ; push 1 ; add byte ptr [rax + 0x64], bl ; hlt ; jmp qword ptr [rcx]
0x0000000000189aef : add ah, dh ; push rsi ; in eax, dx ; jmp qword ptr [rbx + rax*8]
0x0000000000189437 : add ah, dl ; adc ebp, ebx ; call rsp
0x000000000018c93f : add ah, dl ; add edi, esi ; jmp rsp
0x00000000001ab760 : add ah, dl ; cmc ; jmp qword ptr [rsi]
0x000000000018a41f : add ah, dl ; in al, dx ; out dx, al ; call rsp
0x00000000001a62c3 : add ah, dl ; jo 0x1a62c8 ; add al, bl ; js 0x1a62bf ; jmp qword ptr [rcx]
0x000000000019aec3 : add ah, dl ; mov esp, 0x18580000 ; out dx, al ; call qword ptr [rcx]
0x000000000019e0c3 : add ah, dl ; out dx, al ; add byte ptr [rax], al ; test al, -4 ; stc ; call qword ptr [rax]
0x00000000001b43c3 : add ah, dl ; push rcx ; add al, byte ptr [rax] ; call -0x27e4c4ce
0x00000000001ab5c3 : add ah, dl ; ret
0x00000000001ac5c3 : add ah, dl ; rol dword ptr [rcx], cl ; add al, bl ; in eax, -0xb ; call qword ptr [rbx]
0x00000000001b0ac3 : add ah, dl ; sbb byte ptr [rdx], al ; add al, cl ; mov cl, -0xa ; call qword ptr [rcx]
0x000000000019e0f4 : add al, -0x11 ; add byte ptr [rax], al ; pop rax ; clc ; out dx, al ; call qword ptr [rax]
0x00000000000e4fc7 : add al, -0x15 ; ret 0xf66
0x0000000000028eec : add al, -0x17 ; mov esp, 0x89fffffc ; ret -0x1d7d
0x00000000000af9b8 : add al, -0x18 ; ret 0x4f8
0x00000000000384ed : add al, -0x22 ; lea r9, qword ptr [rdx] ; jmp 0x38540
0x0000000000039c7d : add al, -0x22 ; lea r9, qword ptr [rdx] ; jmp 0x39cd0
0x000000000002d17b : add al, -0x28 ; test rax, rax ; je 0x2d184 ; call rax
0x00000000000376a7 : add al, -0x29 ; xor eax, eax ; ret
0x00000000000bd7a3 : add al, -0x30 ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000c8316 : add al, -0x32 ; jmp 0xc82dd
0x000000000018e438 : add al, -0x35 ; stc ; call rsp
0x00000000001ab5f4 : add al, -0x3c ; add dword ptr [rax], eax ; clc ; ret
0x00000000000a4423 : add al, -0x3d ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000018e80c : add al, -0x3e ; add al, byte ptr [rax] ; movsb byte ptr es:[rdi], byte ptr [rsi] ; cli ; call qword ptr [rdx + rax*8 + 2]
0x0000000000121ee9 : add al, -0x3e ; jmp rax
0x00000000000222e8 : add al, -0x3f ; ljmp 0xfe6830c, -0x76bf ; ret -0x187d
0x0000000000022441 : add al, -0x3f ; ljmp 0xfe6830c, -0x76bf ; ret -0x7cbf
0x000000000018eca0 : add al, -0x41 ; cli ; jmp rsp
0x00000000000a2709 : add al, -0x42 ; add rsi, rax ; jmp rsi
0x000000000012f2d3 : add al, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000030068 : add al, -0x48 ; ret
0x000000000002f931 : add al, -0x4e ; mov eax, dword ptr [rdi + rax] ; ret
0x00000000000dc90b : add al, -0x58 ; add dword ptr [rbx + rcx*4 + 0xfffffffffffffff6], esi ; ret 0x7408
0x0000000000030722 : add al, -0x5e ; add rdx, rax ; jmp rdx
0x00000000001a84f4 : add al, -0x6d ; add dword ptr [rax], eax ; sub byte ptr [rdi], bl ; cmc ; jmp qword ptr [rdx]
0x000000000004de55 : add al, -0x70 ; add rax, r12 ; jmp rax
0x000000000005f6f2 : add al, -0x70 ; add rax, r13 ; jmp rax
0x00000000001ab185 : add al, -0x72 ; add ecx, dword ptr [rdi + 0x14b0302] ; ret
0x0000000000189f88 : add al, -0x72 ; out dx, al ; jmp rsp
0x00000000000d8662 : add al, -0x73 ; add dword ptr [r8 + 0xffffffffffffff83], ecx ; ret
0x000000000010d369 : add al, -0x73 ; je 0x10d39e ; ror byte ptr [rax + 0xffffffffffffff83], 1 ; ret 0xf01
0x00000000000a56d7 : add al, -0x75 ; adc byte ptr [rbp + 0xfffffffff3f275d2], al ; ret
0x000000000009a814 : add al, -0x75 ; add dword ptr [rcx + 0xfffffffff8894802], ecx ; ret
0x000000000006de7b : add al, -0x75 ; cmp byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x107d
0x000000000006dfb1 : add al, -0x75 ; cmp byte ptr [rax + 0xffffffffffffff89], cl ; ret 0x778d
0x00000000000a41f0 : add al, -0x75 ; or al, byte ptr [rbp + 0xfffffffff3f175c9] ; ret
0x00000000000538d0 : add al, -0x75 ; or byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x7afc
0x0000000000097497 : add al, -0x77 ; cld ; mov rax, rdi ; ret
0x0000000000037461 : add al, -0x77 ; enter 0xf44, 0x45 ; ret -0x72b8
0x0000000000048d3a : add al, -0x77 ; ret
0x00000000000e58b3 : add al, -0x77 ; ret -0x1115
0x000000000015d806 : add al, -0x78 ; add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x000000000009a82b : add al, -0x78 ; add al, 0x48 ; mov eax, edi ; ret
0x00000000000b8f25 : add al, -0x79 ; add rax, rdi ; jmp rax
0x0000000000127da6 : add al, -0x79 ; add rdi, rax ; jmp rdi
0x00000000001a77f4 : add al, -0x7a ; add dword ptr [rax], eax ; sub dl, bl ; hlt ; call qword ptr [rax]
0x000000000004732e : add al, -0x7a ; add r8, rsi ; cmp ecx, 0x2f ; jmp r8
0x0000000000054b17 : add al, -0x7a ; add rsi, rax ; jmp rsi
0x00000000000a44ae : add al, -0x7b ; ror byte ptr [rcx + 0xfffffffff3f37510], cl ; ret
0x0000000000034e6b : add al, -0x7d ; add rax, rbx ; jmp rax
0x0000000000028561 : add al, -0x7d ; cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4806
0x0000000000074274 : add al, -0x7d ; loopne 0x74279 ; ret
0x0000000000071f12 : add al, -0x7d ; out 1, al ; mov eax, esi ; ret
0x000000000011cc6b : add al, -0x7d ; ret
0x00000000000d1c7f : add al, -0x7d ; ret 0x4101
0x00000000000374b3 : add al, -0x7d ; rol byte ptr [rcx], -9 ; ret 0
0x000000000009743a : add al, -0x7e ; add r10, rax ; jmp r10
0x000000000002ddee : add al, -0x7e ; add r8, rdx ; jmp r8
0x0000000000022aee : add al, -0x7e ; add rdx, rax ; jmp rdx
0x000000000008fb67 : add al, -0x7e ; sub eax, ecx ; ret
0x00000000000d5150 : add al, -0x7f ; add rcx, rax ; jmp rcx
0x000000000013a0eb : add al, -0x7f ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000013b9c3 : add al, -0x7f ; sub eax, edx ; ret
0x000000000006d3ac : add al, -0x80 ; add rax, r8 ; jmp rax
0x00000000001b1140 : add al, -0xa ; jmp rbx
0x0000000000037721 : add al, -0xa ; ret 0x7402
0x000000000008d2d9 : add al, -0xa ; ret 0x7408
0x000000000014dfd3 : add al, -0xd ; movq qword ptr [rdi], mm1 ; ret
0x000000000005e32b : add al, -0xd ; ret
0x00000000001a3211 : add al, -0xe ; jmp rdx
0x0000000000071e0a : add al, -1 ; or dh, byte ptr [rbp + 0x3f] ; ret
0x0000000000071f04 : add al, -1 ; or dh, byte ptr [rbp + 0x43] ; mov eax, esi ; ret
0x0000000000072ccf : add al, -1 ; or dh, byte ptr [rbp + 0x60] ; pop rbx ; ret
0x000000000007115f : add al, -1 ; or dh, byte ptr [rbp + 0x63] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000187915 : add al, -4 ; jmp qword ptr [rax]
0x0000000000187935 : add al, -4 ; jmp rax
0x00000000001b60d9 : add al, -5 ; jmp qword ptr [rdx]
0x000000000018d3e1 : add al, -8 ; jmp rsp
0x00000000000704b5 : add al, 0 ; add bl, dh ; ret
0x000000000002733a : add al, 0 ; add byte ptr [rax + 0x29], cl ; ret -0x74b7
0x000000000005ae0f : add al, 0 ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x00000000001389e1 : add al, 0 ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x000000000013d509 : add al, 0 ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x00000000001147d8 : add al, 0 ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4104
0x00000000001389bd : add al, 0 ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000012713d : add al, 0 ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x0000000000048eb8 : add al, 0 ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret 0x2948
0x00000000000f693c : add al, 0 ; add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x0000000000120cff : add al, 0 ; add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rax]
0x00000000000a3bb3 : add al, 0 ; add byte ptr [rax], al ; ret
0x0000000000127e17 : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000005d8af : add al, 0 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000111b16 : add al, 0 ; add byte ptr [rcx + rcx*4 + 0xfffffffffffffffa], cl ; mov rdi, r12 ; call rax
0x00000000000658d3 : add al, 0 ; add byte ptr [rdi], cl ; ret
0x0000000000042db9 : add al, 0 ; add byte ptr [rdi], cl ; ret -0x37ff
0x00000000001b86d9 : add al, 0 ; add byte ptr [rdx + 2], bl ; add byte ptr [rax], al ; ret
0x00000000001b8351 : add al, 0 ; add byte ptr [rdx + 4], dl ; add byte ptr [rax], al ; ret
0x0000000000102de9 : add al, 0 ; add byte ptr [rdx], al ; call rax
0x00000000000c1696 : add al, 0 ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x0000000000097604 : add al, 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000097564 : add al, 0 ; mov rax, rdi ; ret
0x0000000000109629 : add al, 0 ; ret
0x0000000000046ec5 : add al, 0x10 ; add bl, dh ; ret
0x0000000000126a80 : add al, 0x10 ; mov byte ptr [rdi + 7], al ; ret
0x00000000000a27bd : add al, 0x12 ; pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000000b13b2 : add al, 0x16 ; add rsp, 0x18 ; ret
0x00000000000fe24b : add al, 0x16 ; ret
0x00000000000988f1 : add al, 0x17 ; movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000008905a : add al, 0x17 ; sub eax, ecx ; ret
0x000000000012dbea : add al, 0x24 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x000000000010ad3d : add al, 0x24 ; add byte ptr [rax + 0xffffffff89480000], al ; ret 0x3875
0x00000000001349b5 : add al, 0x24 ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000125c25 : add al, 0x24 ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f16d8 : add al, 0x24 ; add rsp, 0x18 ; ret
0x00000000000fe114 : add al, 0x24 ; add rsp, 0x38 ; ret
0x00000000000fe175 : add al, 0x24 ; add rsp, 0x40 ; ret
0x00000000001210f9 : add al, 0x24 ; call qword ptr [r11]
0x00000000000278c3 : add al, 0x24 ; call qword ptr [rbx]
0x00000000000235b6 : add al, 0x24 ; call rbx
0x00000000000a4263 : add al, 0x24 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000226ea : add al, 0x25 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000fb003 : add al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x0000000000021ee1 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000036be1 : add al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x0000000000118aef : add al, 0x2b ; pop rbx ; pop rbp ; ret
0x00000000000a1969 : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a197b : add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x000000000008b53e : add al, 0x31 ; ret
0x0000000000114431 : add al, 0x31 ; ror byte ptr [rax + 0xffffffffffffff83], -0x3c ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000008b43a : add al, 0x37 ; ret
0x000000000000af40 : add al, 0x38 ; add byte ptr [rax], al ; adc al, byte ptr [rax] ; or al, 0 ; push rax ; ret
0x0000000000075d7f : add al, 0x3a ; ret
0x000000000018d768 : add al, 0x3f ; clc ; jmp rsp
0x00000000000a241d : add al, 0x41 ; pop rsp ; ret
0x000000000018aaf4 : add al, 0x45 ; add dword ptr [rax], eax ; xchg eax, esp ; ret
0x0000000000122dbb : add al, 0x48 ; add esp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x00000000000e4e54 : add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000097615 : add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x0000000000097625 : add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009ff0b : add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; ret
0x00000000000975c5 : add al, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x0000000000118e1e : add al, 0x48 ; lea eax, dword ptr [rdi + rsi + 8] ; ret
0x000000000015d809 : add al, 0x48 ; lea eax, dword ptr [rdx + 4] ; ret
0x000000000015d81b : add al, 0x48 ; lea eax, dword ptr [rdx + 5] ; ret
0x00000000000752e3 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000078358 : add al, 0x48 ; mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x000000000007523e : add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000014dc6a : add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000078d8c : add al, 0x48 ; mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000078f42 : add al, 0x48 ; mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x00000000000750d4 : add al, 0x48 ; mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000097585 : add al, 0x48 ; mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x0000000000097525 : add al, 0x48 ; mov eax, edi ; ret
0x0000000000089814 : add al, 0x48 ; xor eax, eax ; ret
0x0000000000021f5a : add al, 0x49 ; lea edi, dword ptr [rsi + rdx] ; call rax
0x0000000000108654 : add al, 0x50 ; shr ax, 0xe ; and eax, 1 ; ret
0x0000000000189b18 : add al, 0x58 ; in eax, dx ; call rsp
0x000000000015d817 : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x000000000009a84c : add al, 0x66 ; mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x00000000001a62f4 : add al, 0x71 ; add dword ptr [rax], eax ; or byte ptr [rcx + 0xfffffffffffffff4], bh ; jmp qword ptr [rcx]
0x00000000001ad82c : add al, 0x71 ; cmc ; jmp qword ptr [rdx]
0x000000000002f8fd : add al, 0x72 ; or bl, dh ; ret
0x00000000000dc909 : add al, 0x74 ; add al, -0x58 ; add dword ptr [rbx + rcx*4 + 0xfffffffffffffff6], esi ; ret 0x7408
0x0000000000080d79 : add al, 0x74 ; cmp al, -0x77 ; ret -0x4b75
0x00000000001a146c : add al, 0x74 ; int1 ; jmp qword ptr [rdx]
0x00000000000d2b45 : add al, 0x74 ; pop rax ; cmp al, 0x11 ; je 0xd2b50 ; xor eax, eax ; ret
0x00000000000d3434 : add al, 0x75 ; cmpsb byte ptr [rsi], byte ptr es:[rdi] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d29eb : add al, 0x75 ; jb 0xd29e5 ; ret 0x7408
0x000000000002bd32 : add al, 0x77 ; adc ecx, dword ptr [rcx + 0x29d231fb] ; ret
0x0000000000084cc2 : add al, 0x77 ; or dword ptr [rcx + 0xffffffffffffff83], ecx ; ret
0x00000000000f0992 : add al, 0x77 ; or esp, dword ptr [rsi + 0xffffffffffffff89] ; push rsi ; xor ax, ax ; ret
0x000000000002fde0 : add al, 0x78 ; and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002fe00 : add al, 0x78 ; and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002fd40 : add al, 0x78 ; and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002fdc0 : add al, 0x78 ; and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002fce0 : add al, 0x78 ; and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002fd80 : add al, 0x78 ; and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002fd20 : add al, 0x78 ; and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002fd60 : add al, 0x78 ; and ax, 0x8000 ; movzx eax, ax ; ret
0x000000000002fe80 : add al, 0x78 ; and eax, 1 ; ret
0x000000000002fd00 : add al, 0x78 ; and eax, 2 ; movzx eax, ax ; ret
0x000000000002fda0 : add al, 0x78 ; and eax, 4 ; movzx eax, ax ; ret
0x000000000002fcc0 : add al, 0x78 ; and eax, 8 ; movzx eax, ax ; ret
0x00000000001a6df4 : add al, 0x7c ; add dword ptr [rax], eax ; js 0x1a6db3 ; hlt ; jmp qword ptr [rbx]
0x00000000000d6fce : add al, 0x7f ; fistp qword ptr [rcx] ; ret -0x3e77
0x000000000018d470 : add al, 0xf ; clc ; call rsp
0x000000000002fce5 : add al, 0xf ; mov bh, -0x40 ; ret
0x0000000000098701 : add al, 0xf ; mov dh, 0x46 ; dec dword ptr [rax + 0xffffffffffffff83] ; ret
0x00000000001381fd : add al, 0xf ; movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x000000000013dc95 : add al, 0xf ; sub rax, rdx ; ret
0x00000000001343ac : add al, 0xf ; test bl, byte ptr [rcx + 0xffffffff83000000] ; ret -0x7c80
0x000000000009e32b : add al, 0xf ; test ecx, dword ptr [rsi + 8] ; add byte ptr [rax], al ; ret
0x00000000000a3735 : add al, 0xf ; test esi, dword ptr [rcx + rax] ; add byte ptr [rax], al ; ret
0x00000000000dd599 : add al, 0xf ; xchg dword ptr [rax + 0xffffffff8900000c], esi ; ret -0x72b8
0x00000000000b019a : add al, 0xf ; xchg eax, ebp ; ret -0x3817
0x00000000000afff6 : add al, 0xf ; xchg eax, ebp ; ret -0x77d
0x00000000000e086e : add al, 0xf ; xchg eax, ebp ; ret 0x2041
0x00000000001119dd : add al, 0xf ; xchg eax, esi ; ret
0x00000000001154cb : add al, 1 ; add byte ptr [rax], al ; cmove eax, edx ; ret
0x00000000000a3768 : add al, 1 ; add byte ptr [rax], al ; ret
0x000000000005e2ca : add al, 1 ; ret
0x000000000005e34a : add al, 1 ; xor eax, eax ; ret
0x0000000000161ef7 : add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000004b7 : add al, 4 ; ret 0x6080
0x0000000000054ff1 : add al, 6 ; add dword ptr [rax + 0xffffffffffffff83], ecx ; ret 0xf01
0x000000000009e478 : add al, 7 ; add byte ptr [rax], al ; ret
0x0000000000087a2d : add al, 7 ; cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x000000000002f934 : add al, 7 ; ret
0x0000000000073b53 : add al, 8 ; add byte ptr [rax], al ; ret
0x0000000000098a5f : add al, 8 ; movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000001a611f : add al, ah ; adc al, -7 ; call qword ptr [rax]
0x00000000001abaff : add al, ah ; cmpsd dword ptr [rsi], dword ptr es:[rdi] ; sti ; jmp qword ptr [rsi]
0x00000000001ac5af : add al, ah ; in eax, -0xb ; call qword ptr [rax]
0x00000000001a398f : add al, ah ; mov dh, dl ; call qword ptr [rcx]
0x00000000001a82df : add al, ah ; or esi, ebp ; jmp qword ptr [rcx]
0x00000000001b118f : add al, ah ; push rcx ; sti ; call rsi
0x0000000000198a8f : add al, ah ; ret -0x13
0x000000000000c417 : add al, ah ; ret 0xc
0x000000000019d89f : add al, ah ; sahf ; out dx, al ; jmp qword ptr [rcx]
0x00000000001ab51f : add al, ah ; sal ch, cl ; jmp qword ptr [rsi]
0x00000000001a8bcf : add al, ah ; sub al, -0xb ; jmp qword ptr [rcx]
0x00000000001a8f5f : add al, ah ; xor dh, ch ; jmp qword ptr [rcx]
0x000000000018f20f : add al, al ; add ecx, ebp ; call rax
0x00000000001a2f6f : add al, al ; cli ; int1 ; jmp qword ptr [rcx]
0x00000000001a8d1f : add al, al ; cmc ; jmp qword ptr [rcx]
0x00000000001a78ef : add al, al ; fdivr st(4), st(0) ; jmp qword ptr [rcx]
0x00000000001a100f : add al, al ; int1 ; call qword ptr [rdx]
0x00000000001791ff : add al, al ; jl 0x1791ff ; jmp rax
0x00000000001a08bf : add al, al ; or cl, dh ; jmp rcx
0x00000000001a381f : add al, al ; xchg edx, esi ; jmp qword ptr [rcx]
0x00000000001ad3b7 : add al, bh ; cli ; cmc ; call qword ptr [rax]
0x00000000001ac817 : add al, bh ; out -0xb, al ; call qword ptr [rax]
0x00000000001ab5f7 : add al, bh ; ret
0x00000000001ab537 : add al, bh ; sal ch, cl ; jmp qword ptr [rsi]
0x00000000001a8be7 : add al, bh ; sub al, -0xb ; jmp qword ptr [rcx]
0x00000000001af4a7 : add al, bh ; sub dh, dh ; jmp qword ptr [rcx]
0x00000000001a93b7 : add al, bl ; cmc ; jmp rax
0x00000000001a3ee7 : add al, bl ; fcompi st(2) ; call qword ptr [rdx]
0x00000000001ac5c7 : add al, bl ; in eax, -0xb ; call qword ptr [rbx]
0x00000000001a62c7 : add al, bl ; js 0x1a62bf ; jmp qword ptr [rcx]
0x000000000009e77b : add al, bl ; nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000001a2fe7 : add al, bl ; sti ; int1 ; jmp qword ptr [rcx]
0x00000000001a88a7 : add al, bl ; sub ch, dh ; call qword ptr [rax]
0x00000000001a3837 : add al, bl ; xchg edx, esi ; jmp qword ptr [rcx]
0x0000000000140b12 : add al, byte ptr [r8] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x0000000000087991 : add al, byte ptr [rax + rax*8 + 0xffffffffff481274] ; ret 0x2288
0x000000000018d8f6 : add al, byte ptr [rax] ; adc al, 0x5e ; clc ; jmp rsp
0x000000000018da9e : add al, byte ptr [rax] ; adc bh, byte ptr [rbp + 0xfffffffffffffff8] ; call rsp
0x00000000001b39ce : add al, byte ptr [rax] ; adc byte ptr [rcx + 0xfffffffffffffff7], cl ; jmp qword ptr [rax]
0x000000000018d4a6 : add al, byte ptr [rax] ; adc r15b, al ; call rsp
0x000000000018e436 : add al, byte ptr [rax] ; add al, -0x35 ; stc ; call rsp
0x000000000018ec9e : add al, byte ptr [rax] ; add al, -0x41 ; cli ; jmp rsp
0x00000000001b113e : add al, byte ptr [rax] ; add al, -0xa ; jmp rbx
0x000000000018d766 : add al, byte ptr [rax] ; add al, 0x3f ; clc ; jmp rsp
0x000000000018d46e : add al, byte ptr [rax] ; add al, 0xf ; clc ; call rsp
0x0000000000080255 : add al, byte ptr [rax] ; add al, ch ; ret
0x0000000000117c7f : add al, byte ptr [rax] ; add bl, ch ; or eax, 0xb535b10f ; ret
0x000000000002fe37 : add al, byte ptr [rax] ; add bl, dh ; ret
0x0000000000028e14 : add al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000fb006 : add al, byte ptr [rax] ; add byte ptr [rax + 0x5f], bl ; call rax
0x0000000000034776 : add al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x0000000000138b81 : add al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x000000000013b781 : add al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x00000000000f378a : add al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x3c01
0x00000000001148f8 : add al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4104
0x0000000000138b5d : add al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x00000000000c5236 : add al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0xf01
0x0000000000086452 : add al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff89], cl ; fisttp word ptr [rcx + rcx*4 + 0xfffffffffffffffa] ; call rax
0x00000000000b4927 : add al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x000000000008c4fe : add al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x3fcf
0x00000000000e7781 : add al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret 0x4c6
0x00000000000d8a96 : add al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff8b], cl ; or byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x1d7d
0x0000000000042a77 : add al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffffc7], cl ; ret
0x000000000008c833 : add al, byte ptr [rax] ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000011be50 : add al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x000000000012530f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x0000000000128bdf : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x000000000012832f : add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x0000000000133bd2 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000012b8cd : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000000f6dac : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00000000000f6b1f : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00000000000f69eb : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x00000000000f6963 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x000000000012a461 : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rax ; call qword ptr [r10]
0x000000000012dbec : add al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x00000000000fd3b5 : add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000a3b93 : add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000bda67 : add al, byte ptr [rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000095ff6 : add al, byte ptr [rax] ; add byte ptr [rbp + 0xffffffffffffff89], cl ; ret -0x76b4
0x0000000000072fcf : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000381b9 : add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000164704 : add al, byte ptr [rax] ; add byte ptr [rbx + 0xffffffff840f12f9], al ; ret 2
0x0000000000030f23 : add al, byte ptr [rax] ; add byte ptr [rbx + 0xffffffff850f05f8], al ; ret -6
0x000000000018d386 : add al, byte ptr [rax] ; add eax, edi ; jmp rsp
0x000000000018e7e6 : add al, byte ptr [rax] ; and al, 0x3d ; cli ; call rsp
0x000000000018de8e : add al, byte ptr [rax] ; and al, 2 ; stc ; call rsp
0x00000000001af9be : add al, byte ptr [rax] ; and byte ptr [rax + 0xfffffffffffffff6], bl ; call qword ptr [rdi]
0x000000000018d5e6 : add al, byte ptr [rax] ; and edi, r8d ; call rsp
0x00000000001b1276 : add al, byte ptr [rax] ; call -0x1ce4f6bd
0x00000000001b0346 : add al, byte ptr [rax] ; call -0x1ce5062f
0x00000000001b43c6 : add al, byte ptr [rax] ; call -0x27e4c4ce
0x00000000001b4f36 : add al, byte ptr [rax] ; call 0x131b46c5
0x00000000001b27c6 : add al, byte ptr [rax] ; call 0x181b1ecd
0x00000000001af4a6 : add al, byte ptr [rax] ; clc ; sub dh, dh ; jmp qword ptr [rcx]
0x000000000018e67e : add al, byte ptr [rax] ; cmp esp, dword ptr [rcx] ; cli ; call rsp
0x000000000018dc8e : add al, byte ptr [rax] ; in al, -0x50 ; clc ; jmp rsp
0x000000000018e8c6 : add al, byte ptr [rax] ; in al, 0x55 ; cli ; call rsp
0x000000000018da66 : add al, byte ptr [rax] ; je 0x18dadf ; clc ; jmp rsp
0x00000000001b4d5e : add al, byte ptr [rax] ; jg 0x1b4d5a ; call qword ptr [rdx]
0x00000000001b67ee : add al, byte ptr [rax] ; jmp rax
0x00000000001b1fde : add al, byte ptr [rax] ; jrcxz 0x1b1fd9 ; call qword ptr [rdi]
0x00000000000975e5 : add al, byte ptr [rax] ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000001b61be : add al, byte ptr [rax] ; lock add edi, ebx ; jmp qword ptr [rdx]
0x00000000001b118e : add al, byte ptr [rax] ; loopne 0x1b11e3 ; sti ; call rsi
0x000000000018e44e : add al, byte ptr [rax] ; mov ah, -0x31 ; stc ; call rsp
0x000000000018e306 : add al, byte ptr [rax] ; mov ah, -0x59 ; stc ; jmp rsp
0x000000000018e566 : add al, byte ptr [rax] ; mov ah, -4 ; stc ; call rsp
0x000000000018d59e : add al, byte ptr [rax] ; mov ah, 0x20 ; clc ; call rsp
0x000000000018e756 : add al, byte ptr [rax] ; mov ah, 0x33 ; cli ; jmp rsp
0x000000000018e85e : add al, byte ptr [rax] ; mov ah, 0x4f ; cli ; jmp rsp
0x000000000018ea1e : add al, byte ptr [rax] ; mov ah, 0x69 ; cli ; jmp rsp
0x000000000018d3de : add al, byte ptr [rax] ; mov ah, 4 ; clc ; jmp rsp
0x0000000000097545 : add al, byte ptr [rax] ; mov rax, rdi ; ret
0x000000000018eb26 : add al, byte ptr [rax] ; movsb byte ptr es:[rdi], byte ptr [rsi] ; cdq ; cli ; jmp rsp
0x000000000018e80e : add al, byte ptr [rax] ; movsb byte ptr es:[rdi], byte ptr [rsi] ; cli ; call qword ptr [rdx + rax*8 + 2]
0x000000000018e9b6 : add al, byte ptr [rax] ; movsb byte ptr es:[rdi], byte ptr [rsi] ; cli ; jmp rsp
0x000000000018df46 : add al, byte ptr [rax] ; movsb byte ptr es:[rdi], byte ptr [rsi] ; xor ecx, edi ; call rsp
0x0000000000160c0b : add al, byte ptr [rax] ; movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x00000000001b612e : add al, byte ptr [rax] ; nop ; ret -9
0x0000000000111d53 : add al, byte ptr [rax] ; pop r12 ; ret
0x00000000001b3186 : add al, byte ptr [rax] ; pop rax ; and edi, esi ; call qword ptr [rdx]
0x00000000001b0c16 : add al, byte ptr [rax] ; pop rax ; mov bl, -0xa ; call qword ptr [rax]
0x0000000000074057 : add al, byte ptr [rax] ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x00000000000f8b92 : add al, byte ptr [rax] ; pop rbx ; ret
0x00000000001b724e : add al, byte ptr [rax] ; push rax ; div bh ; call rdx
0x000000000018f15e : add al, byte ptr [rax] ; push rsp ; fdivr st(5) ; jmp rsp
0x000000000018e6d6 : add al, byte ptr [rax] ; push rsp ; sub edx, edi ; call rsp
0x00000000001b66ae : add al, byte ptr [rax] ; rcr ch, -9 ; call qword ptr [rdi]
0x000000000018e3de : add al, byte ptr [rax] ; ret
0x000000000018d9d6 : add al, byte ptr [rax] ; ret -0x793
0x00000000001b0ede : add al, byte ptr [rax] ; ret -0xa
0x000000000018cf4e : add al, byte ptr [rax] ; retf -0x895 ; call rsp
0x00000000001b393e : add al, byte ptr [rax] ; rol byte ptr [rsi + 0xfffffffffffffff7], 1 ; jmp qword ptr [rax]
0x00000000001b5e5e : add al, byte ptr [rax] ; rol byte ptr [rsi], -5 ; jmp qword ptr [rdx]
0x00000000001b71fe : add al, byte ptr [rax] ; sal ah, -9 ; call rcx
0x00000000001b4abe : add al, byte ptr [rax] ; sar byte ptr [rdx + 0xfffffffffffffff7], 1 ; call qword ptr [rdx]
0x00000000001b0e46 : add al, byte ptr [rax] ; scasb al, byte ptr es:[rdi] ; ret -0xa
0x00000000001b5f26 : add al, byte ptr [rax] ; sub byte ptr [rsi], al ; sti ; jmp qword ptr [rdx]
0x00000000001b60d6 : add al, byte ptr [rax] ; test al, 4 ; sti ; jmp qword ptr [rdx]
0x000000000018ea6e : add al, byte ptr [rax] ; test ch, byte ptr [rbx + 0xfffffffffffffffa] ; jmp rsp
0x000000000018d656 : add al, byte ptr [rax] ; test ch, byte ptr [rbx] ; clc ; jmp rsp
0x000000000018df5e : add al, byte ptr [rax] ; test dh, byte ptr [rbx] ; stc ; jmp rsp
0x000000000018ebc6 : add al, byte ptr [rax] ; xchg eax, esp ; mov cl, -6 ; call rsp
0x00000000001b0dfe : add al, byte ptr [rax] ; xlatb ; ret -0xa
0x000000000018def6 : add al, byte ptr [rax] ; xor al, 0x12 ; stc ; jmp rsp
0x000000000018e0a6 : add al, byte ptr [rax] ; xor al, 0x65 ; stc ; call rsp
0x000000000018e0b6 : add al, byte ptr [rax] ; xor al, 0x66 ; stc ; jmp rsp
0x000000000018cc1e : add al, byte ptr [rax] ; xor bh, dh ; jmp rsp
0x000000000018cc6e : add al, byte ptr [rax] ; xor dh, bh ; call rsp
0x000000000019c65d : add al, byte ptr [rbx] ; add al, byte ptr [rcx] ; ret
0x0000000000108d0e : add al, byte ptr [rcx + 0x39] ; ret
0x000000000011e22e : add al, byte ptr [rcx + 0x5c] ; sub eax, 1 ; pop r13 ; ret
0x0000000000198830 : add al, byte ptr [rcx + 0xa] ; ret
0x0000000000104cff : add al, byte ptr [rcx + 0xffffffffffffff89] ; call -0x3caaa3b4
0x0000000000105832 : add al, byte ptr [rcx + 0xffffffffffffffff] ; push rbp ; sub byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x0000000000115522 : add al, byte ptr [rcx] ; add byte ptr [rax], al ; ret
0x000000000019c65f : add al, byte ptr [rcx] ; ret
0x0000000000037452 : add al, byte ptr [rdi + rcx + 0x45] ; ret -0x76bc
0x00000000001af4a5 : add al, byte ptr [rdx] ; add al, bh ; sub dh, dh ; jmp qword ptr [rcx]
0x000000000018cc6d : add al, byte ptr [rdx] ; add byte ptr [rdx + rsi + 0xfffffffffffffff7], ah ; call rsp
0x00000000001187e2 : add al, byte ptr [rdx] ; cmp rcx, rax ; sbb eax, eax ; ret
0x0000000000197075 : add al, byte ptr [rdx] ; pushfq ; ret
0x000000000019d595 : add al, byte ptr [rdx] ; ret
0x000000000009e57a : add al, byte ptr [rsi] ; add byte ptr [rax], al ; ret
0x000000000018d3dd : add al, byte ptr cs:[rax] ; mov ah, 4 ; clc ; jmp rsp
0x000000000018d655 : add al, byte ptr ds:[rax] ; test ch, byte ptr [rbx] ; clc ; jmp rsp
0x00000000000b4926 : add al, byte ptr es:[rax] ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x00000000001b27c7 : add al, ch ; add bh, dh ; call qword ptr [rdi]
0x0000000000025495 : add al, ch ; add eax, 0xe9fffff4 ; ret
0x00000000001a0807 : add al, ch ; cld ; jmp qword ptr [rbx]
0x00000000001a91e7 : add al, ch ; cmp ch, dh ; jmp qword ptr [rcx]
0x00000000001ac597 : add al, ch ; in eax, -0xb ; call qword ptr [rax]
0x000000000016617d : add al, ch ; in eax, dx ; xchg eax, edx ; jmp 0x166182
0x00000000001a60d7 : add al, ch ; jae 0x1a60cf ; jmp qword ptr [rcx]
0x000000000019cf97 : add al, ch ; js 0x19cf89 ; jmp qword ptr [rcx]
0x00000000001b4f37 : add al, ch ; mov bh, dh ; call qword ptr [rdx]
0x00000000001a3917 : add al, ch ; mov edx, esi ; jmp qword ptr [rdi]
0x0000000000121526 : add al, ch ; movsb byte ptr es:[rdi], byte ptr [rsi] ; ret
0x00000000000c1c35 : add al, ch ; movsd dword ptr es:[rdi], dword ptr [rsi] ; mov eax, 0x8948fffb ; ret
0x00000000001ac7e7 : add al, ch ; out -0xb, al ; call qword ptr [rax]
0x000000000004896b : add al, ch ; out dx, eax ; ret
0x000000000004d15c : add al, ch ; outsb dx, byte ptr [rsi] ; ret
0x0000000000190257 : add al, ch ; pop rax ; std ; jmp qword ptr [rdi]
0x000000000009391c : add al, ch ; pop rsi ; mov ebx, 0x8948fff8 ; ret
0x0000000000053e5c : add al, ch ; pop rsi ; ret
0x0000000000123fb4 : add al, ch ; push rsi ; mov ah, -0x11 ; dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x76b7
0x0000000000080257 : add al, ch ; ret
0x0000000000081ee8 : add al, ch ; ret -0x25
0x000000000012a088 : add al, ch ; ret -0x27
0x00000000000aac28 : add al, ch ; ret -0x7b1
0x0000000000117508 : add al, ch ; ret -0xb9d
0x0000000000110738 : add al, ch ; ret -0xf14
0x00000000001170a8 : add al, ch ; ret -0xf7d
0x00000000000e0c68 : add al, ch ; ret 0x15
0x0000000000061368 : add al, ch ; ret 0x439
0x0000000000031e18 : add al, ch ; ret 0xd6e
0x00000000000f31a4 : add al, ch ; ret 0xfff2
0x00000000001ab747 : add al, ch ; sal ebp, cl ; jmp qword ptr [rsi]
0x00000000000f8b31 : add al, ch ; sbb dword ptr [rax], ebp ; stc ; dec dword ptr [rax + 0x39] ; ret
0x000000000010c8fc : add al, ch ; scasb al, byte ptr es:[rdi] ; ret
0x0000000000028f29 : add al, ch ; shr dword ptr [rax + rax], -0x77 ; ret -0x1d7d
0x00000000001037f1 : add al, ch ; stc ; ret
0x00000000001280d1 : add al, ch ; stc ; test dh, al ; dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x72b8
0x000000000008b89f : add al, ch ; stosd dword ptr es:[rdi], eax ; ret
0x00000000000e562f : add al, ch ; stosd dword ptr es:[rdi], eax ; ret 0
0x00000000001a8a07 : add al, ch ; sub dh, ch ; jmp qword ptr [rcx]
0x00000000000b3dc4 : add al, ch ; test byte ptr [rsi], -4 ; dec dword ptr [rax + 0x39] ; ret
0x00000000001b0347 : add al, ch ; test dh, dh ; jmp rdx
0x0000000000117e51 : add al, ch ; test eax, 0x8900006a ; ret -0x74b8
0x000000000008b8bf : add al, ch ; wait ; ret
0x0000000000194e37 : add al, ch ; xchg eax, ebx ; in al, dx ; jmp qword ptr [rcx]
0x0000000000195ee7 : add al, ch ; xchg eax, edx ; in eax, dx ; jmp rsp
0x00000000001201c8 : add al, ch ; xchg eax, edx ; ret 0
0x00000000000c1c66 : add al, ch ; xchg eax, esp ; mov eax, 0x8948fffb ; ret
0x00000000001b6957 : add al, cl ; fcomi st(7) ; jmp qword ptr [rcx]
0x000000000019e157 : add al, cl ; fdivr st(1) ; call qword ptr [rax]
0x00000000001a5ff7 : add al, cl ; insb byte ptr es:[rdi], dx ; hlt ; jmp qword ptr [rcx]
0x00000000001b0ac7 : add al, cl ; mov cl, -0xa ; call qword ptr [rcx]
0x000000000019d9b7 : add al, cl ; mov dh, -0x12 ; call qword ptr [rax]
0x0000000000195677 : add al, cl ; out dx, eax ; in al, dx ; call qword ptr [rax]
0x00000000001901b7 : add al, cl ; ret -0x17
0x00000000001ab507 : add al, cl ; sal ch, cl ; jmp qword ptr [rsi]
0x000000000019a177 : add al, cl ; stc ; in eax, dx ; call qword ptr [rax]
0x00000000001a8bb7 : add al, cl ; sub al, -0xb ; jmp qword ptr [rcx]
0x00000000001a8f47 : add al, cl ; xor dh, ch ; jmp qword ptr [rcx]
0x00000000001b61bf : add al, dh ; add edi, ebx ; jmp qword ptr [rdx]
0x00000000001ad3cf : add al, dh ; cli ; cmc ; call qword ptr [rax]
0x00000000001ad01f : add al, dh ; cmc ; cmc ; call qword ptr [rcx]
0x000000000019edcf : add al, dh ; cwde ; out dx, eax ; jmp rdi
0x000000000019cd8f : add al, dh ; insb byte ptr es:[rdi], dx ; out dx, al ; call qword ptr [rsi]
0x00000000001a0fbf : add al, dh ; int1 ; call rsi
0x00000000001a108f : add al, dh ; jl 0x1a1084 ; call qword ptr [rax]
0x00000000001ac82f : add al, dh ; out -0xb, al ; call qword ptr [rax]
0x0000000000004cd7 : add al, dh ; ret
0x00000000001a2fff : add al, dh ; sti ; int1 ; jmp qword ptr [rcx]
0x00000000001a8adf : add al, dh ; sub esi, ebp ; jmp qword ptr [rcx]
0x000000000019acdf : add al, dl ; adc dh, ch ; jmp qword ptr [rcx]
0x00000000001a320f : add al, dl ; add al, -0xe ; jmp rdx
0x00000000001a60bf : add al, dl ; jae 0x1a60b7 ; jmp qword ptr [rcx]
0x00000000001b4abf : add al, dl ; jp 0x1b4aba ; call qword ptr [rdx]
0x00000000001b0adf : add al, dl ; mov cl, -0xa ; jmp qword ptr [rcx]
0x00000000001ab72f : add al, dl ; sal ebp, cl ; jmp qword ptr [rsi]
0x00000000001a89ef : add al, dl ; sub dh, ch ; jmp qword ptr [rcx]
0x00000000001a460f : add al, dl ; sub esi, ebx ; jmp rdx
0x00000000001b043f : add al, dl ; xchg esi, esi ; jmp qword ptr [rdi]
0x0000000000187911 : add bh, ah ; inc dword ptr [rax + 4] ; cld ; jmp qword ptr [rax]
0x0000000000187931 : add bh, ah ; inc dword ptr [rax] ; add al, -4 ; jmp rax
0x0000000000166bef : add bh, bh ; adc ecx, dword ptr [rax + 0xffffffffffffff83] ; ret
0x00000000001b75f7 : add bh, bh ; inc dword ptr [rcx] ; or ebp, edx ; add dword ptr [rbx], eax ; ret
0x000000000018a8a7 : add bh, bh ; out dx, eax ; call rsp
0x00000000000b0d1a : add bh, bh ; ret
0x000000000007b03d : add bh, bh ; xchg eax, ecx ; add byte ptr [rax], 0 ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x48
0x0000000000187698 : add bh, bl ; sti ; jmp rax
0x00000000000ec813 : add bh, byte ptr [rax + 0xffffffffffffffff] ; ret
0x0000000000039e44 : add bh, byte ptr [rax + 1] ; ret
0x0000000000164ad2 : add bh, byte ptr [rcx] ; enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000018a549 : add bh, ch ; call rsp
0x000000000018de91 : add bh, cl ; call rsp
0x00000000001b27c9 : add bh, dh ; call qword ptr [rdi]
0x00000000000f16af : add bh, dh ; fisub dword ptr [rcx + rcx*4 + 0x10] ; or eax, -1 ; ret
0x00000000000c42fd : add bh, dh ; ret
0x0000000000036507 : add bh, dh ; shl byte ptr [rcx], cl ; ret 0xf66
0x0000000000189f1f : add bh, dl ; mov esi, ebp ; jmp rsp
0x00000000001b0dff : add bh, dl ; ret -0xa
0x00000000001791a0 : add bl, ah ; int1 ; call qword ptr [rax]
0x00000000001895e7 : add bl, al ; jmp 0x1895eb
0x00000000000a38b0 : add bl, al ; lea rax, qword ptr [rip + 0xbccb7] ; ret
0x00000000000a4474 : add bl, al ; lea rax, qword ptr [rip + 0xc0673] ; ret
0x000000000008cb24 : add bl, al ; lea rax, qword ptr [rip + 0xd6853] ; ret
0x00000000000d179e : add bl, al ; mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x0000000000115518 : add bl, al ; mov eax, 0x100 ; nop ; ret
0x00000000000c423c : add bl, al ; mov eax, 0xffffffff ; ret
0x00000000000986b1 : add bl, al ; mov r10, r8 ; jmp 0x986a9
0x00000000000c318c : add bl, al ; nop ; mov eax, 0xfffa ; ret
0x00000000000f12bd : add bl, al ; nop ; xor eax, eax ; ret
0x0000000000124969 : add bl, al ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x0000000000136bca : add bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000015b43e : add bl, al ; ret
0x00000000001284ae : add bl, al ; xor eax, eax ; ret
0x00000000001ad3a0 : add bl, bh ; cmc ; call qword ptr [rax]
0x000000000017ac17 : add bl, bh ; inc ebx ; add dh, bh ; jmp rdi
0x00000000000368a8 : add bl, bl ; insb byte ptr es:[rdi], dx ; and al, -0x18 ; ret
0x00000000000c700b : add bl, byte ptr [r11 + 0x5d] ; ret
0x00000000001ab385 : add bl, byte ptr [rbp + 0xa] ; ret
0x00000000000c700c : add bl, byte ptr [rbx + 0x5d] ; ret
0x00000000000c7fd2 : add bl, byte ptr [rcx + 0xffffffff83f9f741] ; ret -0x72ff
0x000000000018a547 : add bl, ch ; add bh, ch ; call rsp
0x0000000000117deb : add bl, ch ; or eax, 0x4b35b10f ; ret 0x2a
0x0000000000117c81 : add bl, ch ; or eax, 0xb535b10f ; ret
0x0000000000117d3f : add bl, ch ; or eax, 0xf735b10f ; ret 0x2a
0x0000000000021874 : add bl, ch ; or ecx, dword ptr [rax + 0xffffffffffffffff] ; ret -0x6ac7
0x0000000000046ef4 : add bl, ch ; ret
0x00000000000450eb : add bl, ch ; ret -0x6f9a
0x0000000000026535 : add bl, ch ; ret -0x74b8
0x00000000000badc6 : add bl, ch ; ret 0x1f0f
0x0000000000134bb9 : add bl, ch ; ror dword ptr [rdi], 0x1f ; add bl, sil ; ret
0x000000000009eb2f : add bl, dh ; movq qword ptr [rdi + 0xffffffffffffffff], mm0 ; ret
0x000000000009eb3f : add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x0000000000021c02 : add bl, dh ; ret
0x0000000000080d44 : add bl, dl ; loopne 0x80ccd ; rol byte ptr [rcx + 0xf], -0x6c ; ret
0x0000000000098666 : add bl, sil ; ret
0x000000000018a568 : add bpl, r15b ; call rsp
0x00000000000be62e : add byte ptr [r13 + 0xffffffffffffff89], 0x64 ; xchg eax, ebp ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4801
0x00000000000c3327 : add byte ptr [r13 + rbp + 0xffffffffffffffb8], sil ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000005b728 : add byte ptr [r8 + 0xffffffffffffff83], r9b ; ret
0x000000000011b333 : add byte ptr [r8 + 0xffffffffffffff83], r9b ; ret 0x3108
0x0000000000029e19 : add byte ptr [r8 + 0xffffffffffffff83], r9b ; ret 0x4901
0x0000000000193b0d : add byte ptr [r8], al ; and byte ptr [rdx], dh ; jmp 0x193b13
0x00000000001999d5 : add byte ptr [r8], al ; cwde ; in eax, dx ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000193d55 : add byte ptr [r8], al ; sub byte ptr [rbx + 0xffffffffffffffeb], cl ; jmp qword ptr [rsi]
0x0000000000194195 : add byte ptr [r8], r8b ; cmp byte ptr [rdi + 0xffffffffffffffeb], dl ; jmp qword ptr [rbx]
0x000000000019417d : add byte ptr [r8], r8b ; xor byte ptr [rdi + 0xffffffffffffffeb], dl ; call qword ptr [rdi]
0x00000000000e4352 : add byte ptr [r9], r15b ; ret -0x78f1
0x000000000011551e : add byte ptr [rax + 0x102b8c3], dl ; add byte ptr [rax], al ; ret
0x000000000019e187 : add byte ptr [rax + 0x12], bl ; cli ; call qword ptr [rax]
0x000000000019ae97 : add byte ptr [rax + 0x17], ch ; out dx, al ; call qword ptr [rdi]
0x000000000019aec7 : add byte ptr [rax + 0x18], bl ; out dx, al ; call qword ptr [rcx]
0x000000000003649b : add byte ptr [rax + 0x1fe8c17f], al ; ret
0x00000000000c324f : add byte ptr [rax + 0x20], bh ; ret
0x000000000019b347 : add byte ptr [rax + 0x22], ch ; out dx, al ; jmp qword ptr [rax]
0x000000000017ae5f : add byte ptr [rax + 0x23fff5a3], al ; movsd dword ptr es:[rdi], dword ptr [rsi] ; cmc ; jmp qword ptr [rbx]
0x00000000001a882f : add byte ptr [rax + 0x28], dh ; cmc ; jmp qword ptr [rcx]
0x0000000000028e04 : add byte ptr [rax + 0x29], cl ; ret
0x000000000007e175 : add byte ptr [rax + 0x29], cl ; ret -0x72b7
0x000000000002733c : add byte ptr [rax + 0x29], cl ; ret -0x74b7
0x0000000000051592 : add byte ptr [rax + 0x29], cl ; ret -0x7cb7
0x00000000000d4d02 : add byte ptr [rax + 0x29], cl ; ret 0x148
0x00000000000b6295 : add byte ptr [rax + 0x29], cl ; ret 0x2948
0x00000000001a8a7f : add byte ptr [rax + 0x2b], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001a8a97 : add byte ptr [rax + 0x2b], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a8a67 : add byte ptr [rax + 0x2b], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a8b57 : add byte ptr [rax + 0x2c], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a8b3f : add byte ptr [rax + 0x2c], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001a8cd7 : add byte ptr [rax + 0x2e], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a8e57 : add byte ptr [rax + 0x30], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a8e27 : add byte ptr [rax + 0x30], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a9157 : add byte ptr [rax + 0x38], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a916f : add byte ptr [rax + 0x38], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001a9247 : add byte ptr [rax + 0x39], cl ; cmc ; jmp rbx
0x000000000010ce73 : add byte ptr [rax + 0x39], cl ; enter 0x577, -0x17 ; ret -0x684
0x0000000000077bf9 : add byte ptr [rax + 0x39], cl ; fmul dword ptr [rax + 0xf] ; ret
0x000000000002d13a : add byte ptr [rax + 0x39], cl ; out dx, eax ; je 0x2d156 ; call 0x893b0
0x000000000002740b : add byte ptr [rax + 0x39], cl ; ret
0x0000000000108ea0 : add byte ptr [rax + 0x39], cl ; ret -0x258b
0x00000000000e6082 : add byte ptr [rax + 0x39], cl ; ret -0x79f1
0x00000000000795ff : add byte ptr [rax + 0x39], cl ; ret -0x7af1
0x000000000007ef4c : add byte ptr [rax + 0x39], cl ; ret -0x7bf1
0x000000000002c1b4 : add byte ptr [rax + 0x39], cl ; ret 0x7773
0x000000000007e5fe : add byte ptr [rax + 0x39], cl ; ret 0xb76
0x0000000000080c67 : add byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], cl ; xchg eax, ebp ; ret -0x7cb8
0x00000000000c329f : add byte ptr [rax + 0x40], bh ; ret
0x000000000018717d : add byte ptr [rax + 0x43], dl ; pop rcx ; rep clc ; ret 0x6e1f
0x000000000019efb7 : add byte ptr [rax + 0x47], bh ; sti ; call qword ptr [rax]
0x000000000018728f : add byte ptr [rax + 0x50fffb0f], al ; adc bl, bh ; jmp qword ptr [rax]
0x00000000001941f7 : add byte ptr [rax + 0x58], ch ; jmp 0x1941fb
0x000000000001f575 : add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x000000000018fb37 : add byte ptr [rax + 0x5f], bh ; std ; jmp qword ptr [rdx]
0x00000000000ec05f : add byte ptr [rax + 0x5f], bh ; syscall ; ret
0x00000000000fb008 : add byte ptr [rax + 0x5f], bl ; call rax
0x00000000001a5acf : add byte ptr [rax + 0x61], dl ; hlt ; jmp qword ptr [rax]
0x00000000001a5bef : add byte ptr [rax + 0x63], ah ; hlt ; jmp qword ptr [rcx]
0x00000000000841f4 : add byte ptr [rax + 0x63], cl ; adc al, -0x48 ; add rax, rdx ; jmp rax
0x0000000000034bff : add byte ptr [rax + 0x63], cl ; adc al, -0x49 ; add rdx, rdi ; jmp rdx
0x00000000000c38a2 : add byte ptr [rax + 0x63], cl ; adc al, -0x68 ; add rax, rdx ; jmp rax
0x000000000006dee2 : add byte ptr [rax + 0x63], cl ; adc al, -0x6f ; add rcx, rdx ; jmp rcx
0x00000000000b5fa7 : add byte ptr [rax + 0x63], cl ; adc al, -0x70 ; add rax, rdx ; jmp rax
0x00000000000a2706 : add byte ptr [rax + 0x63], cl ; add al, -0x42 ; add rsi, rax ; jmp rsi
0x000000000004de52 : add byte ptr [rax + 0x63], cl ; add al, -0x70 ; add rax, r12 ; jmp rax
0x000000000005f6ef : add byte ptr [rax + 0x63], cl ; add al, -0x70 ; add rax, r13 ; jmp rax
0x00000000000c7132 : add byte ptr [rax + 0x63], cl ; add al, -0x79 ; add rax, rdi ; jmp rax
0x0000000000127da3 : add byte ptr [rax + 0x63], cl ; add al, -0x79 ; add rdi, rax ; jmp rdi
0x0000000000064cea : add byte ptr [rax + 0x63], cl ; add al, -0x7a ; add rsi, rax ; jmp rsi
0x0000000000034e68 : add byte ptr [rax + 0x63], cl ; add al, -0x7d ; add rax, rbx ; jmp rax
0x000000000005ebcf : add byte ptr [rax + 0x63], cl ; add al, -0x7e ; add rdx, rax ; jmp rdx
0x00000000001a5bd7 : add byte ptr [rax + 0x63], cl ; hlt ; jmp qword ptr [rcx]
0x00000000000aa184 : add byte ptr [rax + 0x63], cl ; imul al ; ret
0x000000000006ddd2 : add byte ptr [rax + 0x63], cl ; or al, -0x72 ; add rsi, rcx ; jmp rsi
0x0000000000034b97 : add byte ptr [rax + 0x63], cl ; ret
0x00000000000c9864 : add byte ptr [rax + 0x63], cl ; ret -0x49f1
0x00000000000449f6 : add byte ptr [rax + 0x63], cl ; ret -0x72b8
0x00000000000d6ff6 : add byte ptr [rax + 0x63], cl ; ret -0x74b8
0x0000000000021052 : add byte ptr [rax + 0x63], cl ; ret -0x76b4
0x00000000000d296f : add byte ptr [rax + 0x63], cl ; ret -0x76bf
0x0000000000131637 : add byte ptr [rax + 0x63], cl ; ret 0x14c
0x000000000005ecca : add byte ptr [rax + 0x63], cl ; ret 0x3948
0x000000000013dad3 : add byte ptr [rax + 0x63], cl ; ret 0xf66
0x0000000000047ded : add byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x00000000001a5ce7 : add byte ptr [rax + 0x64], bl ; hlt ; jmp qword ptr [rcx]
0x00000000001a5cff : add byte ptr [rax + 0x64], dh ; hlt ; jmp qword ptr [rdi]
0x00000000000c29ef : add byte ptr [rax + 0x66], bh ; syscall ; ret
0x00000000001a5dff : add byte ptr [rax + 0x66], dl ; hlt ; jmp qword ptr [rcx]
0x00000000000c2a0f : add byte ptr [rax + 0x68], bh ; syscall ; ret
0x00000000000c29ff : add byte ptr [rax + 0x6b], bh ; syscall ; ret
0x00000000000c2a1f : add byte ptr [rax + 0x6c], bh ; syscall ; ret
0x00000000001a5faf : add byte ptr [rax + 0x6c], dl ; hlt ; jmp qword ptr [rcx]
0x00000000000c29df : add byte ptr [rax + 0x6e], bh ; syscall ; ret
0x00000000000c2c1f : add byte ptr [rax + 0x6f], bh ; syscall ; ret
0x00000000001b4837 : add byte ptr [rax + 0x74], bl ; idiv edi ; ret 0
0x000000000008798f : add byte ptr [rax + 0x74c08402], cl ; adc cl, byte ptr [rax + 0xffffffffffffffff] ; ret 0x2288
0x00000000000470a7 : add byte ptr [rax + 0x752fff78], al ; xor cl, byte ptr [rax + 0xffffffffffffff89] ; ret -0x72b8
0x00000000001a6267 : add byte ptr [rax + 0x78], bh ; hlt ; jmp qword ptr [rcx]
0x000000000009f07f : add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000000c3187 : add byte ptr [rax + 0x7e], bh ; ret
0x00000000000c30da : add byte ptr [rax + 0x7f], bh ; ret
0x00000000001a8177 : add byte ptr [rax + 0xa], ch ; cmc ; call rsp
0x00000000001a8267 : add byte ptr [rax + 0xb], ch ; cmc ; jmp qword ptr [rcx]
0x00000000000fb47f : add byte ptr [rax + 0xe4], bh ; syscall ; ret
0x0000000000191428 : add byte ptr [rax + 0xe], dl ; adc byte ptr [rbx + 0xa4c0202], al ; ret
0x000000000002fd84 : add byte ptr [rax + 0xf], al ; mov bh, -0x40 ; ret
0x000000000007b3b3 : add byte ptr [rax + 0xf], al ; mov dh, -0x3b ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008b3a5 : add byte ptr [rax + 0xf], cl ; mov ebp, 0xf80148c0 ; ret
0x00000000000b3864 : add byte ptr [rax + 0xf], cl ; ret -0x72b8
0x000000000004fe54 : add byte ptr [rax + 0xf], cl ; ret -0x76b8
0x000000000008d0f2 : add byte ptr [rax + 0xf], cl ; ret -0x7cb8
0x000000000011ad82 : add byte ptr [rax + 0xf], cl ; ret -0x7f
0x0000000000079cb2 : add byte ptr [rax + 0xf], cl ; ret 0x294d
0x0000000000087497 : add byte ptr [rax + 0xf], cl ; ret 0x4b80
0x00000000000c319f : add byte ptr [rax + 0xfc17], bh ; ret
0x000000000015f3c7 : add byte ptr [rax + 0xffffffff83480138], al ; fdivr st(7) ; ret
0x00000000000303dc : add byte ptr [rax + 0xffffffff840f003f], al ; ret 0
0x0000000000070f8f : add byte ptr [rax + 0xffffffff89480000], al ; ret 0x2d75
0x000000000006f4d1 : add byte ptr [rax + 0xffffffff89480000], al ; ret 0x3675
0x000000000010ad3f : add byte ptr [rax + 0xffffffff89480000], al ; ret 0x3875
0x00000000000f422f : add byte ptr [rax + 0xffffffff89480000], al ; ret 0x5e9
0x00000000000f403a : add byte ptr [rax + 0xffffffff89480038], al ; ret
0x00000000000c4fc8 : add byte ptr [rax + 0xffffffff940f7bfa], al ; ret -0x49f1
0x00000000001885e0 : add byte ptr [rax + 0xffffffffaf90fffc], dh ; cld ; jmp qword ptr [rax]
0x00000000000364fa : add byte ptr [rax + 0xffffffffc06e0f66], al ; ret
0x00000000000f39d6 : add byte ptr [rax + 0xffffffffc0834810], cl ; add dword ptr [rax + 0xffffffffffffff83], ecx ; ret
0x00000000000366fe : add byte ptr [rax + 0xffffffffc0d70f66], dl ; and eax, 8 ; ret
0x00000000000367a5 : add byte ptr [rax + 0xffffffffc0ffffff], al ; shr eax, 0x1f ; ret
0x00000000000e77c3 : add byte ptr [rax + 0xffffffffe7748080], -0x77 ; ret -0x74b7
0x0000000000031c4e : add byte ptr [rax + 0xffffffffe8748080], -0x77 ; ret -0x74b4
0x000000000011300c : add byte ptr [rax + 0xffffffffe9748080], -0x77 ; ret -0x76b4
0x0000000000126eed : add byte ptr [rax + 0xffffffffe9748080], -0x77 ; ret 0x48bf
0x0000000000135312 : add byte ptr [rax + 0xfffffffff6000001], al ; ret
0x00000000000b212c : add byte ptr [rax + 0xffffffffffffff81], cl ; cli ; ret 0x10
0x0000000000085610 : add byte ptr [rax + 0xffffffffffffff81], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000031e11 : add byte ptr [rax + 0xffffffffffffff81], cl ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xd6e
0x000000000007496d : add byte ptr [rax + 0xffffffffffffff81], cl ; ret
0x0000000000030144 : add byte ptr [rax + 0xffffffffffffff81], cl ; ret 0x200
0x000000000014b7fb : add byte ptr [rax + 0xffffffffffffff81], cl ; ret 0x80
0x000000000008377c : add byte ptr [rax + 0xffffffffffffff83], cl ; call qword ptr [rax]
0x000000000002fb43 : add byte ptr [rax + 0xffffffffffffff83], cl ; clc ; dec dword ptr [rax + 0xffffffffffffff89] ; ret
0x0000000000081771 : add byte ptr [rax + 0xffffffffffffff83], cl ; clc ; dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x7bf1
0x00000000000609ce : add byte ptr [rax + 0xffffffffffffff83], cl ; clc ; dec dword ptr [rcx + 0xffffffffffffff89] ; ret -0x74b4
0x000000000004ba8f : add byte ptr [rax + 0xffffffffffffff83], cl ; clc ; dec dword ptr [rcx + 0xffffffffffffff89] ; ret -0x7af1
0x000000000004e280 : add byte ptr [rax + 0xffffffffffffff83], cl ; clc ; dec dword ptr [rcx + 0xffffffffffffff89] ; ret -0x7bf1
0x0000000000116f0f : add byte ptr [rax + 0xffffffffffffff83], cl ; in al, dx ; xor byte ptr [rcx], -0x40 ; pop rbx ; ret
0x0000000000166346 : add byte ptr [rax + 0xffffffffffffff83], cl ; inc dword ptr [rcx] ; ja 0x166350 ; ret
0x0000000000023217 : add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x00000000001382a3 : add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x0000000000058edf : add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f8
0x00000000001187ff : add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14ff
0x000000000013a263 : add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x000000000008bde2 : add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16ff
0x0000000000117a80 : add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x17ff
0x0000000000025314 : add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x77ff
0x00000000000a7e67 : add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x7cff
0x0000000000042d3f : add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x7fff
0x00000000000755cc : add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0xcff
0x0000000000080e5f : add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x110
0x000000000011b334 : add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x3108
0x00000000000a1e9f : add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x3a01
0x00000000000f3673 : add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x3c01
0x00000000000268a1 : add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4101
0x00000000001147da : add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4104
0x0000000000070524 : add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4401
0x00000000000235ce : add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4801
0x00000000000e7c85 : add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4802
0x0000000000068917 : add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4804
0x0000000000039097 : add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4808
0x00000000001666bf : add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4810
0x00000000000fcc8a : add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4814
0x0000000000097b5f : add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4840
0x0000000000029e1a : add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4901
0x00000000000b4b8f : add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4909
0x000000000013827f : add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000002921f : add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4c01
0x00000000000686af : add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4c04
0x000000000007e11c : add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4d07
0x000000000008ca2f : add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x6620
0x000000000008c9bf : add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x7e20
0x0000000000054aa7 : add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0xf01
0x000000000009899f : add byte ptr [rax + 0xffffffffffffff83], cl ; rol byte ptr [rax + 0x48], -0x7d ; ret 0x4840
0x000000000002bc56 : add byte ptr [rax + 0xffffffffffffff83], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000010262f : add byte ptr [rax + 0xffffffffffffff83], cl ; rol byte ptr [rcx], -0x3a ; jmp qword ptr [rax]
0x000000000002d23f : add byte ptr [rax + 0xffffffffffffff83], cl ; rol byte ptr [rcx], -0x7d ; ret -0x7cff
0x000000000004735f : add byte ptr [rax + 0xffffffffffffff83], cl ; rol byte ptr [rcx], 0x39 ; ret -0x4781
0x00000000000aa147 : add byte ptr [rax + 0xffffffffffffff83], cl ; ror byte ptr [rax], -0x7d ; ret 0x4801
0x0000000000096a68 : add byte ptr [rax + 0xffffffffffffff83], cl ; stc ; dec dword ptr [rcx + 0xffffffffffffff89] ; ret -0x7bf1
0x0000000000075afa : add byte ptr [rax + 0xffffffffffffff85], cl ; push qword ptr [rsi + rsi*4 + 0xfffffffffffffff6] ; ret 0x7508
0x000000000011df05 : add byte ptr [rax + 0xffffffffffffff85], cl ; ror byte ptr [rax + 0xf], cl ; ret -0x74b4
0x000000000009b023 : add byte ptr [rax + 0xffffffffffffff85], cl ; ror byte ptr [rdi], -0x7b ; ret
0x00000000000659fa : add byte ptr [rax + 0xffffffffffffff85], cl ; ror byte ptr [rdi], -0x7c ; ret
0x00000000000deaef : add byte ptr [rax + 0xffffffffffffff85], cl ; ror byte ptr [rdi], -0x7c ; ret 0
0x000000000012c573 : add byte ptr [rax + 0xffffffffffffff85], cl ; sal byte ptr [rbp + 0xffffffffffffffe7], cl ; pop rbx ; ret
0x00000000000e2a74 : add byte ptr [rax + 0xffffffffffffff88], al ; mov ah, 0x24 ; ret 0
0x00000000001210f6 : add byte ptr [rax + 0xffffffffffffff89], cl ; add al, 0x24 ; call qword ptr [r11]
0x000000000008b720 : add byte ptr [rax + 0xffffffffffffff89], cl ; add eax, 0x336548 ; ret
0x000000000008745e : add byte ptr [rax + 0xffffffffffffff89], cl ; and al, 8 ; call qword ptr [rdx]
0x000000000010cc4f : add byte ptr [rax + 0xffffffffffffff89], cl ; clc ; add rsp, 8 ; ret
0x000000000003c98f : add byte ptr [rax + 0xffffffffffffff89], cl ; clc ; cqo ; idiv rsi ; ret
0x0000000000078648 : add byte ptr [rax + 0xffffffffffffff89], cl ; clc ; jmp 0x78610
0x00000000000f3f08 : add byte ptr [rax + 0xffffffffffffff89], cl ; clc ; mov byte ptr [r9 + 0xffffffffffffffff], 0 ; ret
0x0000000000109aaf : add byte ptr [rax + 0xffffffffffffff89], cl ; clc ; pop rbx ; ret
0x000000000007d50f : add byte ptr [rax + 0xffffffffffffff89], cl ; clc ; ret
0x000000000010aaf1 : add byte ptr [rax + 0xffffffffffffff89], cl ; dec byte ptr [rax + 0xffffffffffffff89] ; fucompi st(0) ; ret
0x0000000000039aac : add byte ptr [rax + 0xffffffffffffff89], cl ; dec byte ptr [rax + 0xffffffffffffff89] ; ret -0x76b8
0x00000000000a56a7 : add byte ptr [rax + 0xffffffffffffff89], cl ; enter 0x31c3, -0x40 ; nop ; ret
0x000000000007a9d7 : add byte ptr [rax + 0xffffffffffffff89], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000005dafe : add byte ptr [rax + 0xffffffffffffff89], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000083751 : add byte ptr [rax + 0xffffffffffffff89], cl ; fcomp dword ptr [rbx + 0xffffffffffffffc3] ; xor eax, eax ; pop rbx ; ret
0x000000000007a433 : add byte ptr [rax + 0xffffffffffffff89], cl ; fild word ptr [rbp + 0x4f0f48c9] ; ret -0x76b8
0x000000000007e5ce : add byte ptr [rax + 0xffffffffffffff89], cl ; fimul dword ptr [rax + 0x29] ; ret -0x7cb8
0x0000000000055be4 : add byte ptr [rax + 0xffffffffffffff89], cl ; fimul dword ptr [rcx + 0xffffffffffffff89] ; ret -0x74bc
0x00000000000e47c0 : add byte ptr [rax + 0xffffffffffffff89], cl ; fimul word ptr [rax + 0xffffffffffffff8b] ; or cl, byte ptr [rax + 0xffffffffffffff89] ; ret 0x11e8
0x00000000000754a6 : add byte ptr [rax + 0xffffffffffffff89], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x00000000000752ab : add byte ptr [rax + 0xffffffffffffff89], cl ; fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x00000000000c8ec7 : add byte ptr [rax + 0xffffffffffffff89], cl ; fisttp qword ptr [rax + 0xffffffffffffff83] ; ret
0x00000000000d96b7 : add byte ptr [rax + 0xffffffffffffff89], cl ; fisttp qword ptr [rax + 0xffffffffffffff89] ; ret
0x00000000001367a1 : add byte ptr [rax + 0xffffffffffffff89], cl ; fisttp word ptr [rax + 0xffffffffffffff8b] ; and al, 0x10 ; call rax
0x00000000001216a9 : add byte ptr [rax + 0xffffffffffffff89], cl ; fisttp word ptr [rax + 0xffffffffffffff8b] ; and al, 8 ; call rcx
0x0000000000086454 : add byte ptr [rax + 0xffffffffffffff89], cl ; fisttp word ptr [rcx + rcx*4 + 0xfffffffffffffffa] ; call rax
0x000000000004e0e4 : add byte ptr [rax + 0xffffffffffffff89], cl ; fucompi st(0) ; ret
0x00000000001147eb : add byte ptr [rax + 0xffffffffffffff89], cl ; inc byte ptr [rbx + 0x394101c0] ; ret -0x268b
0x00000000000815f7 : add byte ptr [rax + 0xffffffffffffff89], cl ; iretd ; mov qword ptr [rsp + 0x10], rcx ; call qword ptr [rax]
0x000000000007153f : add byte ptr [rax + 0xffffffffffffff89], cl ; jmp 0x48f59e8f
0x00000000000b7cf3 : add byte ptr [rax + 0xffffffffffffff89], cl ; jmp 0x49ce0643
0x00000000000b8168 : add byte ptr [rax + 0xffffffffffffff89], cl ; jmp 0x49ce0ab8
0x00000000000794e3 : add byte ptr [rax + 0xffffffffffffff89], cl ; mov edx, 0x140 ; pop rbx ; ret
0x0000000000086fcb : add byte ptr [rax + 0xffffffffffffff89], cl ; out dx, al ; mov rdi, rbx ; call rax
0x0000000000120d02 : add byte ptr [rax + 0xffffffffffffff89], cl ; out dx, eax ; call qword ptr [rax]
0x0000000000122418 : add byte ptr [rax + 0xffffffffffffff89], cl ; out dx, eax ; call qword ptr [rbx]
0x00000000000f6dbb : add byte ptr [rax + 0xffffffffffffff89], cl ; out dx, eax ; call rbx
0x00000000001082c6 : add byte ptr [rax + 0xffffffffffffff89], cl ; push rbp ; nop ; mov rdx, r14 ; call rax
0x000000000012efb2 : add byte ptr [rax + 0xffffffffffffff89], cl ; push rdi ; sbb bl, dh ; ret
0x0000000000083869 : add byte ptr [rax + 0xffffffffffffff89], cl ; rcr byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000263f3 : add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x00000000000e3075 : add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x17
0x00000000000be422 : add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x1917
0x00000000000bd0e8 : add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x24cf
0x00000000000f45cb : add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x3015
0x00000000000fd463 : add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x3eb8
0x000000000008c500 : add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x3fcf
0x00000000000c020e : add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x4517
0x000000000005a87d : add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x4518
0x000000000006095d : add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x47b8
0x000000000004881e : add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x48
0x00000000000f9f05 : add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x4917
0x00000000000f31ba : add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x7015
0x00000000000b5aff : add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x72b8
0x0000000000070328 : add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x74b8
0x000000000002e96f : add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x74bf
0x00000000000503cd : add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x76b4
0x000000000005ebac : add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x76b8
0x00000000000eb1e6 : add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x77bb
0x0000000000033ebf : add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x7cb8
0x00000000000d2709 : add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x817
0x00000000000934eb : add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x8b8
0x00000000000873a2 : add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0xcf
0x000000000011c694 : add byte ptr [rax + 0xffffffffffffff89], cl ; ret 0x1be
0x00000000000a7e2f : add byte ptr [rax + 0xffffffffffffff89], cl ; ret 0x2944
0x0000000000048eba : add byte ptr [rax + 0xffffffffffffff89], cl ; ret 0x2948
0x00000000001067f4 : add byte ptr [rax + 0xffffffffffffff89], cl ; ret 0x2b49
0x0000000000070f92 : add byte ptr [rax + 0xffffffffffffff89], cl ; ret 0x2d75
0x000000000007eea5 : add byte ptr [rax + 0xffffffffffffff89], cl ; ret 0x2fe9
0x000000000006f4d4 : add byte ptr [rax + 0xffffffffffffff89], cl ; ret 0x3675
0x000000000010ad42 : add byte ptr [rax + 0xffffffffffffff89], cl ; ret 0x3875
0x000000000006f7ec : add byte ptr [rax + 0xffffffffffffff89], cl ; ret 0x38b
0x0000000000046f54 : add byte ptr [rax + 0xffffffffffffff89], cl ; ret 0x3dbe
0x00000000000e7783 : add byte ptr [rax + 0xffffffffffffff89], cl ; ret 0x4c6
0x00000000000f4232 : add byte ptr [rax + 0xffffffffffffff89], cl ; ret 0x5e9
0x00000000000c6019 : add byte ptr [rax + 0xffffffffffffff89], cl ; ret 0x775
0x0000000000101242 : add byte ptr [rax + 0xffffffffffffff89], cl ; ret 0xb9
0x000000000004764a : add byte ptr [rax + 0xffffffffffffff89], cl ; ret 0xde8
0x00000000000573f9 : add byte ptr [rax + 0xffffffffffffff89], cl ; ror byte ptr [rax + 0xffffffffffffff83], 1 ; ret
0x000000000002ac99 : add byte ptr [rax + 0xffffffffffffff89], cl ; ror dword ptr [rax + 0xffffffffffffff89], 1 ; fimul word ptr [rax + 0xffffffffffffff89] ; ret -0x76b8
0x0000000000097862 : add byte ptr [rax + 0xffffffffffffff89], cl ; stc ; mov qword ptr [rdx], rcx ; ret
0x000000000004ddde : add byte ptr [rax + 0xffffffffffffff89], cl ; test ebx, dword ptr [rax + 0xffffffffe9fffffa] ; ret
0x00000000001283fc : add byte ptr [rax + 0xffffffffffffff89], cl ; xor cl, byte ptr [rax + 0xffffffffffffff89] ; jp 0x12840c ; ret
0x0000000000128414 : add byte ptr [rax + 0xffffffffffffff89], cl ; xor cl, byte ptr [rax + 0xffffffffffffff89] ; jp 0x128424 ; ret
0x0000000000128c5c : add byte ptr [rax + 0xffffffffffffff89], cl ; xor cl, byte ptr [rax + 0xffffffffffffff89] ; jp 0x128c6c ; ret
0x0000000000128c74 : add byte ptr [rax + 0xffffffffffffff89], cl ; xor cl, byte ptr [rax + 0xffffffffffffff89] ; jp 0x128c84 ; ret
0x0000000000128ca4 : add byte ptr [rax + 0xffffffffffffff89], cl ; xor cl, byte ptr [rax + 0xffffffffffffff89] ; jp 0x128cb4 ; ret
0x000000000010d147 : add byte ptr [rax + 0xffffffffffffff89], cl ; xor eax, eax ; ret
0x00000000000e30c7 : add byte ptr [rax + 0xffffffffffffff8b], cl ; adc byte ptr [r8 + 0x39], cl ; ret
0x000000000007e73f : add byte ptr [rax + 0xffffffffffffff8b], cl ; adc byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4801
0x0000000000121ee6 : add byte ptr [rax + 0xffffffffffffff8b], cl ; add al, -0x3e ; jmp rax
0x00000000000e607f : add byte ptr [rax + 0xffffffffffffff8b], cl ; add byte ptr [rax + 0x39], cl ; ret -0x79f1
0x0000000000048851 : add byte ptr [rax + 0xffffffffffffff8b], cl ; add byte ptr [rbx + 0xffffffffffffff8b], bl ; pop rax ; ret
0x00000000000b3c87 : add byte ptr [rax + 0xffffffffffffff8b], cl ; add cl, byte ptr [rax + 0xffffffffffffff83] ; ret 0x4808
0x000000000013468f : add byte ptr [rax + 0xffffffffffffff8b], cl ; add eax, 0x288469 ; jmp rax
0x00000000001361b0 : add byte ptr [rax + 0xffffffffffffff8b], cl ; add eax, 0x28a6d8 ; call qword ptr [rax]
0x00000000001346f0 : add byte ptr [rax + 0xffffffffffffff8b], cl ; add eax, 0x28c198 ; call qword ptr [rax]
0x000000000007d4df : add byte ptr [rax + 0xffffffffffffff8b], cl ; add eax, 0x342cb9 ; ret
0x000000000002c0df : add byte ptr [rax + 0xffffffffffffff8b], cl ; add eax, 0x3949d9 ; ret
0x000000000002375f : add byte ptr [rax + 0xffffffffffffff8b], cl ; add eax, 0x3a14e1 ; ret
0x000000000002374f : add byte ptr [rax + 0xffffffffffffff8b], cl ; add eax, 0x3a1501 ; ret
0x0000000000076c70 : add byte ptr [rax + 0xffffffffffffff8b], cl ; cmp byte ptr [r8 + 0xffffffffffffff89], cl ; ret 0x348
0x00000000000236e8 : add byte ptr [rax + 0xffffffffffffff8b], cl ; jnp 0x23705 ; call rax
0x0000000000076006 : add byte ptr [rax + 0xffffffffffffff8b], cl ; js 0x7604b ; jmp 0x75fd0
0x00000000000f8f7f : add byte ptr [rax + 0xffffffffffffff8b], cl ; or al, 0 ; add byte ptr [rax], al ; ret
0x00000000000d8a98 : add byte ptr [rax + 0xffffffffffffff8b], cl ; or byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x1d7d
0x0000000000136ce6 : add byte ptr [rax + 0xffffffffffffff8b], cl ; or byte ptr [rax], 1 ; add byte ptr [rax], al ; jmp rax
0x00000000000f8f77 : add byte ptr [rax + 0xffffffffffffff8b], cl ; pop rax ; ret
0x0000000000080b87 : add byte ptr [rax + 0xffffffffffffff8b], cl ; push rax ; or dh, dh ; ret 0x7404
0x00000000001451df : add byte ptr [rax + 0xffffffffffffff8b], cl ; push rsi ; clc ; mov qword ptr [rdi + 0xfffffffffffffff8], rdx ; ret
0x00000000000fd74e : add byte ptr [rax + 0xffffffffffffff8b], cl ; sbb byte ptr [rsi + 0xffffffffffffff83], spl ; add byte ptr [rcx], al ; ret
0x0000000000066129 : add byte ptr [rax + 0xffffffffffffff8b], cl ; xor eax, 0x358e2f ; call rax
0x0000000000064841 : add byte ptr [rax + 0xffffffffffffff8b], cl ; xor eax, 0x35a717 ; call rax
0x000000000005f3c5 : add byte ptr [rax + 0xffffffffffffff8b], cl ; xor eax, 0x35fb93 ; call rax
0x0000000000056053 : add byte ptr [rax + 0xffffffffffffff8b], cl ; xor eax, 0x368f05 ; call rax
0x000000000004f081 : add byte ptr [rax + 0xffffffffffffff8b], cl ; xor eax, 0x36fed7 ; call rax
0x0000000000049f3d : add byte ptr [rax + 0xffffffffffffff8b], cl ; xor eax, 0x37501b ; call rax
0x000000000019d56f : add byte ptr [rax + 0xffffffffffffff8b], dl ; cld ; call qword ptr [rdx]
0x00000000000c8313 : add byte ptr [rax + 0xffffffffffffff8d], cl ; add al, -0x32 ; jmp 0xc82dd
0x0000000000021faf : add byte ptr [rax + 0xffffffffffffff8d], cl ; add eax, 0x15b18c ; ret
0x0000000000021fbf : add byte ptr [rax + 0xffffffffffffff8d], cl ; add eax, 0x15d163 ; ret
0x00000000000fa1de : add byte ptr [rax + 0xffffffffffffff8d], cl ; add eax, 0x2c85d2 ; ret
0x00000000000fa01e : add byte ptr [rax + 0xffffffffffffff8d], cl ; add eax, 0x2c8792 ; ret
0x000000000007f0fa : add byte ptr [rax + 0xffffffffffffff8d], cl ; add eax, 0x34065e ; ret
0x0000000000022fc2 : add byte ptr [rax + 0xffffffffffffff8d], cl ; and qword ptr [rax + 0xffffffffffffff89], rcx ; ret -0x76b8
0x00000000000a418f : add byte ptr [rax + 0xffffffffffffff8d], cl ; clc ; ret
0x00000000000a419f : add byte ptr [rax + 0xffffffffffffff8d], cl ; cld ; ret
0x0000000000112d9f : add byte ptr [rax + 0xffffffffffffff8d], cl ; cmp eax, 0x2b11d9 ; call rax
0x00000000000a417f : add byte ptr [rax + 0xffffffffffffff8d], cl ; hlt ; ret
0x00000000000840ef : add byte ptr [rax + 0xffffffffffffff8d], cl ; lock add rsp, 8 ; ret
0x000000000003b97c : add byte ptr [rax + 0xffffffffffffff8d], cl ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000f60df : add byte ptr [rax + 0xffffffffffffff8d], cl ; push rbx ; or byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x00000000000463e3 : add byte ptr [rax + 0xffffffffffffff8d], cl ; xor eax, 0x195 ; call rax
0x0000000000070448 : add byte ptr [rax + 0xffffffffffffff8d], cl ; xor eax, 0x30 ; call rax
0x000000000007d118 : add byte ptr [rax + 0xffffffffffffff8d], cl ; xor eax, 0xffffe480 ; call rax
0x000000000007cd18 : add byte ptr [rax + 0xffffffffffffff8d], cl ; xor eax, 0xffffe880 ; call rax
0x000000000007ba68 : add byte ptr [rax + 0xffffffffffffff8d], cl ; xor eax, 0xfffffb30 ; call rax
0x00000000000707a4 : add byte ptr [rax + 0xffffffffffffff8d], cl ; xor eax, 0xfffffcd4 ; call rax
0x000000000007b800 : add byte ptr [rax + 0xffffffffffffff8d], cl ; xor eax, 0xfffffd98 ; call rax
0x0000000000195e27 : add byte ptr [rax + 0xffffffffffffff92], bl ; in eax, dx ; jmp qword ptr [rax]
0x000000000019658f : add byte ptr [rax + 0xffffffffffffff95], ah ; in eax, dx ; jmp rsi
0x00000000001ab16f : add byte ptr [rax + 0xffffffffffffff97], dl ; cmc ; call rsp
0x00000000001a1127 : add byte ptr [rax + 0xffffffffffffff9b], ch ; int1 ; call qword ptr [rax]
0x000000000018dc2f : add byte ptr [rax + 0xffffffffffffffa1], ch ; clc ; jmp rsp
0x00000000001a685f : add byte ptr [rax + 0xffffffffffffffaa], dl ; hlt ; call qword ptr [rbx]
0x00000000001a694f : add byte ptr [rax + 0xffffffffffffffad], dh ; hlt ; jmp qword ptr [rdi]
0x00000000001983af : add byte ptr [rax + 0xffffffffffffffb7], dh ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019da37 : add byte ptr [rax + 0xffffffffffffffb8], cl ; out dx, al ; jmp qword ptr [rdx]
0x000000000003e8d4 : add byte ptr [rax + 0xffffffffffffffb8], cl ; ret -1
0x00000000001a6df7 : add byte ptr [rax + 0xffffffffffffffb9], bh ; hlt ; jmp qword ptr [rbx]
0x00000000001984ef : add byte ptr [rax + 0xffffffffffffffba], al ; in eax, dx ; jmp qword ptr [rax]
0x00000000000b5e34 : add byte ptr [rax + 0xffffffffffffffba], cl ; ret
0x00000000001a6f1f : add byte ptr [rax + 0xffffffffffffffbb], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001a6f07 : add byte ptr [rax + 0xffffffffffffffbb], cl ; hlt ; jmp qword ptr [rcx]
0x0000000000198667 : add byte ptr [rax + 0xffffffffffffffbc], bh ; in eax, dx ; jmp qword ptr [rdx]
0x000000000018ec87 : add byte ptr [rax + 0xffffffffffffffbe], ah ; cli ; call rsp
0x00000000001a702f : add byte ptr [rax + 0xffffffffffffffbe], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001a7047 : add byte ptr [rax + 0xffffffffffffffbe], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001a7017 : add byte ptr [rax + 0xffffffffffffffbe], cl ; hlt ; jmp qword ptr [rcx]
0x00000000000bf82f : add byte ptr [rax + 0xffffffffffffffc1], cl ; ret -0x14ef
0x000000000002c0ad : add byte ptr [rax + 0xffffffffffffffc1], cl ; ret 0x4811
0x00000000001a13af : add byte ptr [rax + 0xffffffffffffffc5], ah ; int1 ; call qword ptr [rdx]
0x00000000001a176f : add byte ptr [rax + 0xffffffffffffffc7], ah ; int1 ; call qword ptr [rsi]
0x00000000001a1787 : add byte ptr [rax + 0xffffffffffffffc7], ch ; int1 ; call qword ptr [rbx]
0x000000000003fbc5 : add byte ptr [rax + 0xffffffffffffffc7], cl ; ret
0x0000000000070de6 : add byte ptr [rax + 0xffffffffffffffc7], cl ; ret -1
0x00000000000b2074 : add byte ptr [rax + 0xffffffffffffffc7], cl ; ret 0
0x00000000000b1fc4 : add byte ptr [rax + 0xffffffffffffffc7], cl ; ret 0x400
0x00000000000a3b9f : add byte ptr [rax + 0xffffffffffffffc7], cl ; rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x00000000000a3b7f : add byte ptr [rax + 0xffffffffffffffc7], cl ; rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x00000000000a3bdf : add byte ptr [rax + 0xffffffffffffffc7], cl ; rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000a3b8f : add byte ptr [rax + 0xffffffffffffffc7], cl ; rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x00000000000a3bcf : add byte ptr [rax + 0xffffffffffffffc7], cl ; rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000001a179f : add byte ptr [rax + 0xffffffffffffffc7], dh ; int1 ; call qword ptr [rbx]
0x00000000001a735f : add byte ptr [rax + 0xffffffffffffffca], al ; hlt ; jmp qword ptr [rcx]
0x00000000001ab4a7 : add byte ptr [rax + 0xffffffffffffffd2], ch ; cmc ; jmp qword ptr [rsi]
0x00000000001ab48f : add byte ptr [rax + 0xffffffffffffffd2], dl ; cmc ; jmp qword ptr [rsi]
0x00000000001ab57f : add byte ptr [rax + 0xffffffffffffffd3], al ; cmc ; jmp qword ptr [rsi]
0x00000000001ab597 : add byte ptr [rax + 0xffffffffffffffd3], bl ; cmc ; jmp qword ptr [rsi]
0x0000000000037841 : add byte ptr [rax + 0xffffffffffffffd3], cl ; loopne 0x3788e ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000001ab5af : add byte ptr [rax + 0xffffffffffffffd3], dh ; cmc ; jmp qword ptr [rsi]
0x00000000001ab7bf : add byte ptr [rax + 0xffffffffffffffd4], ah ; cmc ; jmp qword ptr [rsi]
0x00000000001ab7d7 : add byte ptr [rax + 0xffffffffffffffd4], bh ; cmc ; jmp qword ptr [rsi]
0x00000000001ab7a7 : add byte ptr [rax + 0xffffffffffffffd4], cl ; cmc ; jmp qword ptr [rsi]
0x000000000000ec7f : add byte ptr [rax + 0xffffffffffffffd7], dl ; adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000001a7967 : add byte ptr [rax + 0xffffffffffffffdd], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001abd07 : add byte ptr [rax + 0xffffffffffffffde], cl ; cmc ; call qword ptr [rax]
0x00000000001abcef : add byte ptr [rax + 0xffffffffffffffde], dl ; cmc ; call qword ptr [rax]
0x00000000001ac22f : add byte ptr [rax + 0xffffffffffffffe1], al ; cmc ; call qword ptr [rcx]
0x00000000001ac37f : add byte ptr [rax + 0xffffffffffffffe3], ah ; cmc ; call qword ptr [rax]
0x00000000001ac397 : add byte ptr [rax + 0xffffffffffffffe3], bl ; cmc ; jmp rbx
0x00000000001a2aaf : add byte ptr [rax + 0xffffffffffffffe5], dh ; int1 ; jmp rsi
0x000000000019f0a7 : add byte ptr [rax + 0xffffffffffffffe6], bh ; out dx, eax ; jmp qword ptr [rbx]
0x000000000019de3f : add byte ptr [rax + 0xffffffffffffffe9], dl ; out dx, al ; call qword ptr [rax]
0x00000000001a2b47 : add byte ptr [rax + 0xffffffffffffffea], cl ; int1 ; jmp qword ptr [rcx]
0x00000000001a2c17 : add byte ptr [rax + 0xffffffffffffffec], cl ; int1 ; jmp qword ptr [rcx]
0x00000000001aca7f : add byte ptr [rax + 0xffffffffffffffed], al ; cmc ; call qword ptr [rax]
0x000000000019f850 : add byte ptr [rax + 0xfffffffffffffff0], bl ; jmp rsi
0x0000000000179108 : add byte ptr [rax + 0xfffffffffffffff1], ch ; jmp qword ptr [rax + 0x10fff149]
0x0000000000179320 : add byte ptr [rax + 0xfffffffffffffff2], cl ; call qword ptr [rax]
0x0000000000179398 : add byte ptr [rax + 0xfffffffffffffff2], dl ; jmp qword ptr [rax]
0x000000000019e0f7 : add byte ptr [rax + 0xfffffffffffffff8], bl ; out dx, al ; call qword ptr [rax]
0x000000000019e10f : add byte ptr [rax + 0xfffffffffffffff8], dl ; out dx, al ; jmp qword ptr [rsi]
0x00000000001ad4b7 : add byte ptr [rax + 0xfffffffffffffffa], bh ; cmc ; jmp rsp
0x0000000000133bba : add byte ptr [rax + 0xffffffffffffffff], bh ; pop rbx ; pop rbp ; ret
0x000000000003577d : add byte ptr [rax + 0xffffffffffffffff], bh ; pop rbx ; ret
0x0000000000036d1d : add byte ptr [rax + 0xffffffffffffffff], bh ; ret
0x000000000007d88e : add byte ptr [rax + 0xffffffffffffffff], dil ; ret
0x000000000002bfcf : add byte ptr [rax + 1], bh ; ret
0x00000000001936b7 : add byte ptr [rax + 1], bl ; jmp 0x1936bb
0x000000000008c835 : add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000003e0fe : add byte ptr [rax + 1], cl ; ret
0x00000000000dfd59 : add byte ptr [rax + 1], cl ; ret -0x72b4
0x00000000000b1127 : add byte ptr [rax + 1], cl ; ret -0x72b8
0x000000000009693f : add byte ptr [rax + 1], cl ; ret -0x7cb8
0x00000000000a618f : add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000000668f : add byte ptr [rax + 1], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000001a5263 : add byte ptr [rax + 1], dh ; add byte ptr [rax], cl ; div ebx ; jmp qword ptr [rax]
0x00000000001a9243 : add byte ptr [rax + 1], dl ; add byte ptr [rax + 0x39], cl ; cmc ; jmp rbx
0x000000000012215f : add byte ptr [rax + 2], bh ; ret
0x0000000000046eef : add byte ptr [rax + 3], bh ; jmp 0x46eba
0x000000000000e09f : add byte ptr [rax + 5], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001b5d8f : add byte ptr [rax + 7], ah ; sti ; jmp qword ptr [rdx]
0x00000000001895df : add byte ptr [rax + rax*2 + 0xffffffffa18cffeb], ah ; add byte ptr [rax], al ; ret
0x00000000001a320b : add byte ptr [rax + rax*2], bl ; add dword ptr [rax], eax ; rol byte ptr [rdx + rsi*8], 1 ; jmp rdx
0x00000000001b71fb : add byte ptr [rax + rax*4], cl ; add al, byte ptr [rax] ; sal ah, -9 ; call rcx
0x00000000001ad01b : add byte ptr [rax + rax*4], cl ; add dword ptr [rax], eax ; lock cmc ; cmc ; call qword ptr [rcx]
0x00000000000c1057 : add byte ptr [rax + rax*8 + 0xffffffff83480b74], al ; ret
0x00000000000318ff : add byte ptr [rax + rax*8 + 0xffffffff83481374], al ; ret 0x4901
0x000000000009e6fc : add byte ptr [rax + rax], 0 ; ret
0x00000000001ab8f7 : add byte ptr [rax + rax], al ; add ah, bh ; ret 1
0x000000000019b9e7 : add byte ptr [rax + rax], al ; add ah, ch ; ret
0x000000000019b8c7 : add byte ptr [rax + rax], al ; add ah, cl ; ret 0
0x00000000001aeeef : add byte ptr [rax + rax], al ; add ah, dh ; clc ; add dword ptr [rax], eax ; ret
0x000000000005d8ae : add byte ptr [rax + rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000658d2 : add byte ptr [rax + rax], al ; add byte ptr [rdi], cl ; ret
0x000000000019b43f : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; push rsp ; ret 0
0x000000000018f20b : add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; rol byte ptr [rcx], -0x17 ; call rax
0x0000000000081e01 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000081fc1 : add byte ptr [rax + rax], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000006f3d : add byte ptr [rax + rax], cl ; nop ; ret
0x00000000000048fd : add byte ptr [rax + rax], cl ; nop ; ret 3
0x000000000000af45 : add byte ptr [rax + rax], cl ; push rax ; ret
0x000000000000414d : add byte ptr [rax + rax], cl ; ret 0xf
0x00000000001ab4e7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; ret 1
0x00000000001ab5d7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; ret
0x000000000019b4d7 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; ret 0
0x00000000001ab457 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr es:[rdi], dx ; ret 1
0x00000000001ab58f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr es:[rdi], byte ptr [rsi] ; ret
0x00000000001ab547 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rsp ; ret
0x00000000001ab43f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; ret 1
0x00000000001ab487 : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; ret 1
0x00000000001ab52f : add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret
0x00000000001a1a9b : add byte ptr [rax + rbp + 0xffffffffd0800001], ch ; int1 ; call rsi
0x00000000000a4145 : add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi + 0xfffffffffffffff0] ; ret
0x000000000019da33 : add byte ptr [rax + rbp*8], al ; add byte ptr [rax + 0xffffffffffffffb8], cl ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a0a83 : add byte ptr [rax + rbx + 0x16280001], dl ; int1 ; jmp qword ptr [rcx]
0x0000000000189b17 : add byte ptr [rax + rbx*2], al ; in eax, dx ; call rsp
0x00000000001a8a7b : add byte ptr [rax + rbx*4 + 0x2b600001], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a8a93 : add byte ptr [rax + rbx*4 + 0x2b780001], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001a8a33 : add byte ptr [rax + rbx*4 + 1], al ; add byte ptr [rax], bl ; sub esi, ebp ; jmp qword ptr [rcx]
0x00000000001a8a4b : add byte ptr [rax + rbx*4 + 1], bl ; add byte ptr [rax], dh ; sub esi, ebp ; jmp qword ptr [rcx]
0x00000000001a8a63 : add byte ptr [rax + rbx*4 + 1], dh ; add byte ptr [rax + 0x2b], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a8a1b : add byte ptr [rax + rbx*4], ch ; add dword ptr [rax], eax ; add byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a8a03 : add byte ptr [rax + rbx*4], dl ; add dword ptr [rax], eax ; call 0x221a7f37
0x00000000001aca7b : add byte ptr [rax + rbx*8 + 0xffffffffed400001], cl ; cmc ; call qword ptr [rax]
0x000000000018f15f : add byte ptr [rax + rbx*8 + 0xfffffffffffffffd], dl ; jmp rsp
0x00000000001aca33 : add byte ptr [rax + rbx*8 + 1], al ; add byte ptr [rax], ch ; in eax, dx ; cmc ; call qword ptr [rdi]
0x00000000001909fb : add byte ptr [rax + rbx], cl ; add byte ptr [rax], al ; xor ch, -0x17 ; call qword ptr [rbx]
0x00000000001007dd : add byte ptr [rax + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x00000000000c480a : add byte ptr [rax + rcx + 0xf], dh ; mov dh, 0x42 ; add cl, byte ptr [rax + 0xffffffffffffff83] ; ret -0x7cff
0x00000000000f495d : add byte ptr [rax + rcx + 0xfffffffffffffff7], dh ; ret -0x3f9
0x0000000000047646 : add byte ptr [rax + rcx*2 + 0xffffffffffffff8b], ah ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret 0xde8
0x00000000001896c7 : add byte ptr [rax + rcx*2 + 0xffffffffffffffeb], ah ; call rsp
0x000000000018a82f : add byte ptr [rax + rcx*2 + 0xffffffffffffffef], dh ; jmp rsp
0x00000000001a7a0b : add byte ptr [rax + rcx*4], bl ; add dword ptr [rax], eax ; rcr ch, -0xc ; call rbx
0x00000000001a2aab : add byte ptr [rax + rdi + 0xffffffffe5700001], bh ; int1 ; jmp rsi
0x00000000001a6a83 : add byte ptr [rax + rdi*2 + 0xffffffffaeb80001], dl ; hlt ; jmp qword ptr [rcx]
0x000000000019ea7b : add byte ptr [rax + rdi*8 + 0xffffffff8c900000], cl ; out dx, eax ; jmp qword ptr [rax]
0x000000000019eaab : add byte ptr [rax + rdi*8 + 0xffffffff8ca00000], bh ; out dx, eax ; jmp qword ptr [rdx]
0x00000000001a8293 : add byte ptr [rax + rdx*4 + 0xb980001], ah ; cmc ; jmp qword ptr [rcx]
0x00000000001a82ab : add byte ptr [rax + rdx*4 + 0xbb00001], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a8263 : add byte ptr [rax + rdx*4 + 1], dh ; add byte ptr [rax + 0xb], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a821b : add byte ptr [rax + rdx*4], ch ; add dword ptr [rax], eax ; and byte ptr [rbx], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a8203 : add byte ptr [rax + rdx*4], dl ; add dword ptr [rax], eax ; or byte ptr [rbx], cl ; cmc ; jmp qword ptr [rcx]
0x0000000000190253 : add byte ptr [rax + rdx], ah ; add al, ch ; pop rax ; std ; jmp qword ptr [rdi]
0x000000000018cc1f : add byte ptr [rax + rsi + 0xfffffffffffffff7], ah ; jmp rsp
0x00000000001a6293 : add byte ptr [rax + rsi*2 + 0x78a80001], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001a6263 : add byte ptr [rax + rsi*2 + 1], dh ; add byte ptr [rax + 0x78], bh ; hlt ; jmp qword ptr [rcx]
0x000000000018a1c7 : add byte ptr [rax + rsi*4 + 0xffffffffffffffee], ah ; call rsp
0x000000000019e283 : add byte ptr [rax + rsi*8 + 0x46380000], dl ; out dx, eax ; jmp qword ptr [rsi]
0x00000000001ab6fb : add byte ptr [rax*8 + 0xffffffffd3a00001], cl ; cmc ; jmp qword ptr [rsi]
0x00000000001ab72b : add byte ptr [rax*8 + 0xffffffffd3d00001], bh ; cmc ; jmp qword ptr [rsi]
0x0000000000085614 : add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000031e15 : add byte ptr [rax], 0 ; add al, ch ; ret 0xd6e
0x000000000010c8f9 : add byte ptr [rax], 0 ; add al, ch ; scasb al, byte ptr es:[rdi] ; ret
0x00000000000c9cf5 : add byte ptr [rax], 0 ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000aa181 : add byte ptr [rax], 0 ; add byte ptr [rax + 0x63], cl ; imul al ; ret
0x00000000000dd0f2 : add byte ptr [rax], 0 ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x000000000007b040 : add byte ptr [rax], 0 ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x48
0x00000000000dfd56 : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret -0x72b4
0x00000000000d77e4 : add byte ptr [rax], 0 ; add byte ptr [rax + 1], cl ; ret -0x72b8
0x0000000000166beb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000012f2eb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000014dfdb : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000f8f73 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000f774b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000714b3 : add byte ptr [rax], 0 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000009ea3b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; ret
0x00000000000edf8b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x000000000009463b : add byte ptr [rax], 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000000e1ce5 : add byte ptr [rax], 0 ; add byte ptr [rbx + 0x3978244c], cl ; ret 0x1472
0x00000000000e0226 : add byte ptr [rax], 0 ; add byte ptr [rbx + 0xffffffff840f0ff8], al ; ret 0x16
0x0000000000060676 : add byte ptr [rax], 0 ; add byte ptr [rcx + 1], cl ; ret 0x3145
0x0000000000160f11 : add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret -0x7cf1
0x0000000000031e9d : add byte ptr [rax], 0 ; add cl, ch ; ret
0x0000000000197265 : add byte ptr [rax], 0 ; cwde ; movsd dword ptr es:[rdi], dword ptr [rsi] ; in eax, dx ; jmp rbx
0x0000000000036a4f : add byte ptr [rax], 0 ; ret
0x00000000001a9213 : add byte ptr [rax], ah ; add dword ptr [rax], eax ; sbb byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a308f : add byte ptr [rax], ah ; cld ; int1 ; jmp qword ptr [rcx]
0x00000000001b201f : add byte ptr [rax], ah ; in al, -0xa ; jmp rdx
0x00000000001a5f7f : add byte ptr [rax], ah ; insb byte ptr es:[rdi], dx ; hlt ; jmp qword ptr [rcx]
0x000000000002fdc4 : add byte ptr [rax], ah ; movzx eax, ax ; ret
0x00000000001a821f : add byte ptr [rax], ah ; or esi, ebp ; jmp qword ptr [rcx]
0x0000000000008c4f : add byte ptr [rax], ah ; ret
0x0000000000007ddf : add byte ptr [rax], ah ; ret 0xc
0x000000000000594f : add byte ptr [rax], ah ; ret 0xe
0x00000000001872dc : add byte ptr [rax], ah ; sti ; push rax ; and bl, bh ; jmp rax
0x00000000001a8b0f : add byte ptr [rax], ah ; sub al, -0xb ; jmp qword ptr [rcx]
0x0000000000193b0f : add byte ptr [rax], ah ; xor ch, bl ; call rdx
0x000000000019c96f : add byte ptr [rax], ah ; xor dh, ch ; call qword ptr [rsi]
0x000000000019e002 : add byte ptr [rax], al ; adc al, -0x12 ; add byte ptr [rax], al ; sbb bh, dh ; out dx, al ; call qword ptr [rcx]
0x00000000001abd02 : add byte ptr [rax], al ; adc al, -0x35 ; add dword ptr [rax], eax ; fdivrp st(5) ; call qword ptr [rax]
0x00000000001a8d02 : add byte ptr [rax], al ; adc al, -0x65 ; add dword ptr [rax], eax ; test al, 0x2e ; cmc ; jmp qword ptr [rcx]
0x00000000001a8a02 : add byte ptr [rax], al ; adc al, -0x68 ; add dword ptr [rax], eax ; call 0x221a7f37
0x00000000001a8202 : add byte ptr [rax], al ; adc al, -0x70 ; add dword ptr [rax], eax ; or byte ptr [rbx], cl ; cmc ; jmp qword ptr [rcx]
0x000000000019f102 : add byte ptr [rax], al ; adc al, -1 ; add byte ptr [rax], al ; cmp byte ptr [rax + rsi*8], dl ; jmp rbx
0x00000000001ab4e6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cld ; ret 1
0x00000000001ab5d6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; ret
0x000000000019b4d6 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; ret 0
0x00000000001ab456 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr es:[rdi], dx ; ret 1
0x00000000001ab58e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr es:[rdi], byte ptr [rsi] ; ret
0x00000000001ab546 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; ret
0x00000000001ab43e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; push rsp ; ret 1
0x00000000001ab486 : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pushfq ; ret 1
0x00000000001ab52e : add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret
0x00000000001a0802 : add byte ptr [rax], al ; adc al, 0x16 ; add dword ptr [rax], eax ; call 0x241a044f
0x00000000000007b8 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; add byte ptr [rbx + 1], al ; ret 0x102
0x00000000000048fa : add byte ptr [rax], al ; adc al, byte ptr [rax] ; or al, 0 ; nop ; ret 3
0x000000000000af42 : add byte ptr [rax], al ; adc al, byte ptr [rax] ; or al, 0 ; push rax ; ret
0x0000000000190252 : add byte ptr [rax], al ; adc byte ptr fs:[rax], al ; add al, ch ; pop rax ; std ; jmp qword ptr [rdi]
0x000000000019a26e : add byte ptr [rax], al ; adc dh, bh ; in eax, dx ; jmp rax
0x00000000001b043a : add byte ptr [rax], al ; adc r8b, byte ptr [rdx] ; add al, dl ; xchg esi, esi ; jmp qword ptr [rdi]
0x00000000001ab4d1 : add byte ptr [rax], al ; add ah, ah ; ret 1
0x00000000001a56e9 : add byte ptr [rax], al ; add ah, bh ; add dword ptr fs:[rax], eax ; ret -0x19
0x00000000001a12e9 : add byte ptr [rax], al ; add ah, bh ; and byte ptr [rcx], al ; add byte ptr [rax], dh ; ret
0x00000000001ab4e9 : add byte ptr [rax], al ; add ah, bh ; ret 1
0x00000000001a49c9 : add byte ptr [rax], al ; add ah, bl ; push rdi ; add dword ptr [rax], eax ; ret -0x19
0x000000000001946d : add byte ptr [rax], al ; add ah, ch ; call qword ptr [rdi]
0x000000000019b9e9 : add byte ptr [rax], al ; add ah, ch ; ret
0x000000000019b4d9 : add byte ptr [rax], al ; add ah, ch ; ret 0
0x000000000019b4b9 : add byte ptr [rax], al ; add ah, cl ; ret 0
0x00000000001ab4b9 : add byte ptr [rax], al ; add ah, cl ; ret 1
0x00000000000194fd : add byte ptr [rax], al ; add ah, dh ; call qword ptr [rdi]
0x00000000001aeef1 : add byte ptr [rax], al ; add ah, dh ; clc ; add dword ptr [rax], eax ; ret
0x00000000001ab5c1 : add byte ptr [rax], al ; add ah, dl ; ret
0x000000000019e0f2 : add byte ptr [rax], al ; add al, -0x11 ; add byte ptr [rax], al ; pop rax ; clc ; out dx, al ; call qword ptr [rax]
0x00000000001ab5f2 : add byte ptr [rax], al ; add al, -0x3c ; add dword ptr [rax], eax ; clc ; ret
0x00000000001a84f2 : add byte ptr [rax], al ; add al, -0x6d ; add dword ptr [rax], eax ; sub byte ptr [rdi], bl ; cmc ; jmp qword ptr [rdx]
0x0000000000189f86 : add byte ptr [rax], al ; add al, -0x72 ; out dx, al ; jmp rsp
0x00000000001a77f2 : add byte ptr [rax], al ; add al, -0x7a ; add dword ptr [rax], eax ; sub dl, bl ; hlt ; call qword ptr [rax]
0x0000000000189b16 : add byte ptr [rax], al ; add al, 0x58 ; in eax, dx ; call rsp
0x00000000001a62f2 : add byte ptr [rax], al ; add al, 0x71 ; add dword ptr [rax], eax ; or byte ptr [rcx + 0xfffffffffffffff4], bh ; jmp qword ptr [rcx]
0x00000000001a6df2 : add byte ptr [rax], al ; add al, 0x7c ; add dword ptr [rax], eax ; js 0x1a6db3 ; hlt ; jmp qword ptr [rbx]
0x000000000018f20d : add byte ptr [rax], al ; add al, al ; add ecx, ebp ; call rax
0x00000000001791fd : add byte ptr [rax], al ; add al, al ; jl 0x1791ff ; jmp rax
0x0000000000105830 : add byte ptr [rax], al ; add al, byte ptr [rcx + 0xffffffffffffffff] ; push rbp ; sub byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x0000000000048969 : add byte ptr [rax], al ; add al, ch ; out dx, eax ; ret
0x0000000000085615 : add byte ptr [rax], al ; add al, ch ; ret
0x0000000000081ee6 : add byte ptr [rax], al ; add al, ch ; ret -0x25
0x0000000000061366 : add byte ptr [rax], al ; add al, ch ; ret 0x439
0x0000000000031e16 : add byte ptr [rax], al ; add al, ch ; ret 0xd6e
0x000000000010c8fa : add byte ptr [rax], al ; add al, ch ; scasb al, byte ptr es:[rdi] ; ret
0x00000000000e562d : add byte ptr [rax], al ; add al, ch ; stosd dword ptr es:[rdi], eax ; ret 0
0x0000000000117e4f : add byte ptr [rax], al ; add al, ch ; test eax, 0x8900006a ; ret -0x74b8
0x000000000008b8bd : add byte ptr [rax], al ; add al, ch ; wait ; ret
0x00000000001201c6 : add byte ptr [rax], al ; add al, ch ; xchg eax, edx ; ret 0
0x0000000000166bed : add byte ptr [rax], al ; add bh, bh ; adc ecx, dword ptr [rax + 0xffffffffffffff83] ; ret
0x00000000000d29c7 : add byte ptr [rax], al ; add bh, dh ; ret
0x0000000000036505 : add byte ptr [rax], al ; add bh, dh ; shl byte ptr [rcx], cl ; ret 0xf66
0x00000000000c423a : add byte ptr [rax], al ; add bl, al ; mov eax, 0xffffffff ; ret
0x0000000000128d6b : add byte ptr [rax], al ; add bl, al ; nop ; xor eax, eax ; ret
0x00000000001284ac : add byte ptr [rax], al ; add bl, al ; xor eax, eax ; ret
0x00000000000368a6 : add byte ptr [rax], al ; add bl, bl ; insb byte ptr es:[rdi], dx ; and al, -0x18 ; ret
0x0000000000046ef2 : add byte ptr [rax], al ; add bl, ch ; ret
0x00000000000450e9 : add byte ptr [rax], al ; add bl, ch ; ret -0x6f9a
0x0000000000026533 : add byte ptr [rax], al ; add bl, ch ; ret -0x74b8
0x00000000000badc4 : add byte ptr [rax], al ; add bl, ch ; ret 0x1f0f
0x000000000009eb2d : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi + 0xffffffffffffffff], mm0 ; ret
0x000000000009eb3d : add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x000000000002dce5 : add byte ptr [rax], al ; add bl, dh ; ret
0x0000000000096833 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x000000000007e173 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret -0x72b7
0x0000000000051590 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret -0x7cb7
0x00000000000d4d00 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x148
0x00000000000b6293 : add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x2948
0x000000000010ce71 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; enter 0x577, -0x17 ; ret -0x684
0x0000000000077bf7 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; fmul dword ptr [rax + 0xf] ; ret
0x0000000000027409 : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000795fd : add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret -0x7af1
0x000000000018717b : add byte ptr [rax], al ; add byte ptr [rax + 0x43], dl ; pop rcx ; rep clc ; ret 0x6e1f
0x00000000000aa182 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; imul al ; ret
0x00000000000db771 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret -0x72b8
0x00000000000dc687 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret -0x74b8
0x0000000000021050 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret -0x76b4
0x00000000000d296d : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret -0x76bf
0x0000000000131635 : add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret 0x14c
0x000000000009f07d : add byte ptr [rax], al ; add byte ptr [rax + 0x78d4837], cl ; ret
0x00000000000c30d8 : add byte ptr [rax], al ; add byte ptr [rax + 0x7f], bh ; ret
0x000000000007a5e1 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret -0x76b8
0x0000000000136102 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret -0x7cb8
0x000000000011ad80 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret -0x7f
0x0000000000079cb0 : add byte ptr [rax], al ; add byte ptr [rax + 0xf], cl ; ret 0x294d
0x00000000000c319d : add byte ptr [rax], al ; add byte ptr [rax + 0xfc17], bh ; ret
0x00000000000303da : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffff840f003f], al ; ret 0
0x00000000000c51f6 : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffff940f7bfa], al ; ret -0x49f1
0x00000000000364f8 : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffc06e0f66], al ; ret
0x000000000014cff4 : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff81], cl ; ret 0x80
0x000000000002ea9d : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x0000000000139dcd : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x0000000000058edd : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f8
0x000000000013b921 : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x0000000000042d3d : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x7fff
0x0000000000080e5d : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x110
0x00000000000a1e9d : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x3a01
0x00000000000269cd : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4101
0x0000000000070522 : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4401
0x00000000000235cc : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4801
0x0000000000043a5d : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4808
0x00000000001666bd : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4810
0x00000000000fcc88 : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4814
0x00000000000b4b8d : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4909
0x0000000000139da3 : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000002921d : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4c01
0x000000000008ca2d : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x6620
0x000000000008c9bd : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x7e20
0x000000000009899d : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; rol byte ptr [rax + 0x48], -0x7d ; ret 0x4840
0x000000000002d23d : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; rol byte ptr [rcx], -0x7d ; ret -0x7cff
0x000000000004735d : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; rol byte ptr [rcx], 0x39 ; ret -0x4781
0x00000000000659f8 : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff85], cl ; ror byte ptr [rdi], -0x7c ; ret
0x000000000012c571 : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff85], cl ; sal byte ptr [rbp + 0xffffffffffffffe7], cl ; pop rbx ; ret
0x00000000000e2a72 : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff88], al ; mov ah, 0x24 ; ret 0
0x00000000001210f4 : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; add al, 0x24 ; call qword ptr [r11]
0x0000000000078646 : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; clc ; jmp 0x78610
0x000000000007d50d : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; clc ; ret
0x000000000007e5cc : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; fimul dword ptr [rax + 0x29] ; ret -0x7cb8
0x00000000000d96b5 : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; fisttp qword ptr [rax + 0xffffffffffffff89] ; ret
0x000000000004e0e2 : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; fucompi st(0) ; ret
0x0000000000086fc9 : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; out dx, al ; mov rdi, rbx ; call rax
0x0000000000120d00 : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; out dx, eax ; call qword ptr [rax]
0x0000000000122416 : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; out dx, eax ; call qword ptr [rbx]
0x00000000000f6db9 : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; out dx, eax ; call rbx
0x000000000012efb0 : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; push rdi ; sbb bl, dh ; ret
0x0000000000040006 : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x00000000000bd0e6 : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x24cf
0x000000000005a87b : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x4518
0x000000000007b041 : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x48
0x00000000000b5afd : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x72b8
0x0000000000070326 : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x74b8
0x00000000000cd773 : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x76b4
0x00000000000cfe4d : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x7cb8
0x00000000000d2707 : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x817
0x00000000000a7e2d : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret 0x2944
0x000000000007e73d : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff8b], cl ; adc byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4801
0x0000000000076004 : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff8b], cl ; js 0x7604b ; jmp 0x75fd0
0x00000000000f8f75 : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff8b], cl ; pop rax ; ret
0x0000000000080b85 : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff8b], cl ; push rax ; or dh, dh ; ret 0x7404
0x00000000000a418d : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff8d], cl ; clc ; ret
0x00000000000a419d : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff8d], cl ; cld ; ret
0x00000000000a417d : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff8d], cl ; hlt ; ret
0x00000000000bf82d : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffffc1], cl ; ret -0x14ef
0x000000000002c0ab : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffffc1], cl ; ret 0x4811
0x00000000000f1e6d : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffffc7], cl ; ret
0x000000000003577b : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffffff], bh ; pop rbx ; ret
0x0000000000036d1b : add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffffff], bh ; ret
0x000000000002bfcd : add byte ptr [rax], al ; add byte ptr [rax + 1], bh ; ret
0x00000000000a2ad0 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; clc ; add rax, rcx ; ret
0x000000000003e0fc : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x00000000000dfd57 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret -0x72b4
0x00000000000d77e5 : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret -0x72b8
0x000000000009693d : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret -0x7cb8
0x00000000000a618d : add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret 0x1a75
0x000000000012215d : add byte ptr [rax], al ; add byte ptr [rax + 2], bh ; ret
0x0000000000046eed : add byte ptr [rax], al ; add byte ptr [rax + 3], bh ; jmp 0x46eba
0x00000000000c1055 : add byte ptr [rax], al ; add byte ptr [rax + rax*8 + 0xffffffff83480b74], al ; ret
0x00000000000318fd : add byte ptr [rax], al ; add byte ptr [rax + rax*8 + 0xffffffff83481374], al ; ret 0x4901
0x00000000001ab8f5 : add byte ptr [rax], al ; add byte ptr [rax + rax], al ; add ah, bh ; ret 1
0x000000000019b9e5 : add byte ptr [rax], al ; add byte ptr [rax + rax], al ; add ah, ch ; ret
0x000000000019b8c5 : add byte ptr [rax], al ; add byte ptr [rax + rax], al ; add ah, cl ; ret 0
0x000000000019b43d : add byte ptr [rax], al ; add byte ptr [rax + rax], bl ; add byte ptr [rax], al ; push rsp ; ret 0
0x00000000001ab4e5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; cld ; ret 1
0x00000000001ab5d5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; ret
0x000000000019b4d5 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; in al, dx ; ret 0
0x00000000001ab455 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; insb byte ptr es:[rdi], dx ; ret 1
0x00000000001ab58d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; movsb byte ptr es:[rdi], byte ptr [rsi] ; ret
0x00000000001ab545 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pop rsp ; ret
0x00000000001ab43d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; push rsp ; ret 1
0x00000000001ab485 : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; pushfq ; ret 1
0x00000000001ab52d : add byte ptr [rax], al ; add byte ptr [rax + rax], dl ; add byte ptr [rax], al ; ret
0x00000000000a4143 : add byte ptr [rax], al ; add byte ptr [rax + rbp*2 + 0x48], dh ; lea eax, dword ptr [rdi + 0xfffffffffffffff0] ; ret
0x00000000001007db : add byte ptr [rax], al ; add byte ptr [rax + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x000000000001c0f5 : add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x00000000001ab4e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; cld ; ret 1
0x00000000001ab5d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; ret
0x000000000019b4d4 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; in al, dx ; ret 0
0x00000000001ab454 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; insb byte ptr es:[rdi], dx ; ret 1
0x00000000001ab58c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; movsb byte ptr es:[rdi], byte ptr [rsi] ; ret
0x00000000001ab544 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pop rsp ; ret
0x00000000001ab43c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; push rsp ; ret 1
0x00000000001ab484 : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; pushfq ; ret 1
0x00000000001ab52c : add byte ptr [rax], al ; add byte ptr [rax], al ; adc al, 0 ; add byte ptr [rax], al ; ret
0x000000000001946b : add byte ptr [rax], al ; add byte ptr [rax], al ; add ah, ch ; call qword ptr [rdi]
0x00000000000194fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add ah, dh ; call qword ptr [rdi]
0x00000000000d9913 : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000008b8bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; wait ; ret
0x000000000009eb3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; movq qword ptr [rdi], mm0 ; ret
0x0000000000071e1b : add byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000795fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret -0x7af1
0x00000000000d296b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret -0x76bf
0x000000000002ea9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x0000000000058edb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f8
0x0000000000042d3b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x7fff
0x0000000000080e5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x110
0x00000000000a1e9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x3a01
0x00000000000269cb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4101
0x0000000000043a5b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4808
0x00000000001666bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4810
0x00000000000b4b8b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4909
0x000000000008ca2b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x6620
0x000000000008c9bb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x7e20
0x000000000007d50b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; clc ; ret
0x00000000000e31fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x000000000005a879 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x4518
0x00000000000b5afb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x72b8
0x00000000000dfedb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x74b8
0x00000000000cfe4b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x7cb8
0x00000000000a418b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff8d], cl ; clc ; ret
0x00000000000a419b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff8d], cl ; cld ; ret
0x00000000000a417b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff8d], cl ; hlt ; ret
0x000000000013303b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret
0x000000000001c0f3 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x0000000000019469 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add ah, ch ; call qword ptr [rdi]
0x00000000000194f9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add ah, dh ; call qword ptr [rdi]
0x00000000000d9911 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add al, ch ; ret
0x000000000001c0f1 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], ah ; ret
0x0000000000177dbc : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret -3
0x00000000001b9abc : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x0000000000019481 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, bl ; call qword ptr [rdi]
0x0000000000006692 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000000194e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rdi]
0x00000000000194fa : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; hlt ; call qword ptr [rdi]
0x000000000001946a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; in al, dx ; call qword ptr [rdi]
0x000000000000d052 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rsi]
0x000000000017955b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr fs:[rax]
0x000000000018696a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; rep clc ; ret 0x6e1f
0x0000000000004052 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000177dbe : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret -3
0x0000000000009782 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x10
0x000000000000a30a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x0000000000018612 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x17de
0x000000000000b8e2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1a
0x0000000000007292 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x21
0x000000000000e86a : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x23
0x000000000016fda2 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000000548 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x0000000000005b52 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2f
0x0000000000170292 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x0000000000007232 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3a
0x0000000000010a72 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x51
0x00000000001b9682 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001b9abe : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x00000000001b8f62 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x00000000000a18fb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x00000000001ab8f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, bh ; ret 1
0x000000000019b9e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, ch ; ret
0x000000000019b8c4 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, cl ; ret 0
0x0000000000047f9b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; ret -0x7cf1
0x0000000000084b0b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbp + 0xffffffffffffff89], cl ; ret
0x000000000006eeab : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000fa44b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0xffffffffffffff83], dl ; call qword ptr [rcx]
0x00000000000489b9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0xffffffffffffff8b], bl ; pop rax ; ret
0x000000000007f4eb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xffffffffffffff83], cl ; ret 0x4908
0x000000000013825b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xffffffffffffff83], cl ; ret 0x7f10
0x0000000000087dcb : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xffffffffffffff83], cl ; ret 0xf10
0x000000000018696b : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xfffffffffffffff3], bl ; clc ; ret 0x6e1f
0x00000000000a20db : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x00000000000bdfb9 : add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rsi + 0xffffffffffffff90], ah ; mov eax, dword ptr [rdi] ; ret
0x0000000000019483 : add byte ptr [rax], al ; add byte ptr [rax], al ; add dh, bl ; call qword ptr [rdi]
0x00000000000a3b5c : add byte ptr [rax], al ; add byte ptr [rax], al ; add rax, 3 ; ret
0x00000000000bd6bc : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000f4619 : add byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000012f6b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; call 0x12b970
0x000000000012066e : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rax]
0x0000000000166bec : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x00000000000194e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rdi]
0x0000000000171dcc : add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000170f7c : add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x000000000001939c : add byte ptr [rax], al ; add byte ptr [rax], al ; cwde ; ret 0x3b
0x00000000000368a5 : add byte ptr [rax], al ; add byte ptr [rax], al ; fld xword ptr [rsp + 0xffffffffffffffe8] ; ret
0x00000000000194fc : add byte ptr [rax], al ; add byte ptr [rax], al ; hlt ; call qword ptr [rdi]
0x000000000001946c : add byte ptr [rax], al ; add byte ptr [rax], al ; in al, dx ; call qword ptr [rdi]
0x00000000000687b1 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp 0x64aa1
0x000000000000d054 : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rsi]
0x000000000017955d : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr fs:[rax]
0x000000000004ed2a : add byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x000000000016332c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000016333c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000016334c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000016335c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000016336c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a417c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xfffffffffffffff4] ; ret
0x00000000000a418c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xfffffffffffffff8] ; ret
0x00000000000a419c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xfffffffffffffffc] ; ret
0x00000000001632ac : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000001632bc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000001632cc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000001632dc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000001632ec : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000001632fc : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000016330c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000016331c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000016329c : add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x00000000001b8888 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov ah, 5 ; add byte ptr [rax], al ; ret
0x000000000015b44c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x00000000000376f4 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x000000000009f07c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000009da7c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000009ea4c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x000000000009e74c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000015b48c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000015b4ac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000015b47c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x000000000009ea6c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 0xffffffffffffffff], edx ; ret
0x00000000000e51cc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x000000000009ea8c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009ea7c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x00000000000c319c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x000000000007d48c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000002bfcc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000012215c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, 2 ; ret
0x000000000012f2ec : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x000000000010d1bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov eax, edi ; bswap eax ; ret
0x000000000010c9db : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0x10c9a6
0x000000000014dfdc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000015b4bc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000009eaac : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 0xffffffffffffffff], rdx ; ret
0x000000000012f688 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x000000000009eabc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x0000000000121aea : add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000f8f74 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x000000000007d4fc : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000009877c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000078645 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; jmp 0x78610
0x000000000007d50c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000120bf6 : add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call qword ptr [rax]
0x000000000015b45c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x000000000009ea5c : add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x000000000009eb2c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi + 0xffffffffffffffff], xmm0 ; ret
0x000000000009eb3c : add byte ptr [rax], al ; add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000014e12c : add byte ptr [rax], al ; add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000bdfba : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; mov eax, dword ptr [rdi] ; ret
0x0000000000019384 : add byte ptr [rax], al ; add byte ptr [rax], al ; nop ; ret 0x3b
0x00000000000193b4 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rax ; ret
0x00000000000fd407 : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000489ba : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000006eeac : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002ca8a : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000018696c : add byte ptr [rax], al ; add byte ptr [rax], al ; pop rcx ; rep clc ; ret 0x6e1f
0x000000000018717a : add byte ptr [rax], al ; add byte ptr [rax], al ; push rax ; pop r9 ; rep clc ; ret 0x6e1f
0x0000000000004054 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000177dc0 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret -3
0x000000000000ed5c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0
0x0000000000009784 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x10
0x000000000000a30c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x0000000000018614 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x17de
0x000000000000b8e4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1a
0x0000000000170d9c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x0000000000171534 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x0000000000007294 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x21
0x000000000000e86c : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x23
0x000000000016fda4 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x000000000000054a : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2800
0x0000000000005b54 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x2f
0x0000000000170294 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x33
0x0000000000007234 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3a
0x0000000000010a74 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x51
0x0000000000009554 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001b9ac0 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 2
0x000000000000ec84 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x00000000001b8f64 : add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x000000000019b43c : add byte ptr [rax], al ; add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; ret 0
0x00000000000a18fc : add byte ptr [rax], al ; add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x00000000000488c2 : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000046dec : add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009463c : add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x00000000000a18fd : add byte ptr [rax], al ; add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x00000000001ab8f6 : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, bh ; ret 1
0x000000000019b9e6 : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, ch ; ret
0x000000000019b8c6 : add byte ptr [rax], al ; add byte ptr [rax], r8b ; add ah, cl ; ret 0
0x0000000000079520 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret -0x7cf1
0x00000000000b8e50 : add byte ptr [rax], al ; add byte ptr [rbp + 0x31], al ; ror byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x0000000000047f9d : add byte ptr [rax], al ; add byte ptr [rbp + 0x39], cl ; ret -0x7cf1
0x00000000000d1bdd : add byte ptr [rax], al ; add byte ptr [rbp + 0xffffffff83480143], cl ; ret
0x00000000000652cd : add byte ptr [rax], al ; add byte ptr [rbp + 0xffffffff83489b04], cl ; ret 0x4104
0x00000000000f8ccc : add byte ptr [rax], al ; add byte ptr [rbp + 0xffffffffc2450fd2], al ; ret
0x000000000005e325 : add byte ptr [rax], al ; add byte ptr [rbp + 0xfffffffff30474c9], al ; ret
0x0000000000084b0d : add byte ptr [rax], al ; add byte ptr [rbp + 0xffffffffffffff89], cl ; ret
0x00000000000960a6 : add byte ptr [rax], al ; add byte ptr [rbp + 0xffffffffffffff8d], cl ; dec dword ptr [r13 + 0xffffffffffffff89] ; ret
0x000000000012f5f4 : add byte ptr [rax], al ; add byte ptr [rbp + 7], dh ; ret
0x0000000000125de6 : add byte ptr [rax], al ; add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x48 ; ret
0x00000000000a4c07 : add byte ptr [rax], al ; add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x28 ; call rbx
0x00000000000a277c : add byte ptr [rax], al ; add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x00000000000e1ce6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x3978244c], cl ; ret 0x1472
0x000000000010b8c6 : add byte ptr [rax], al ; add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000014d8bd : add byte ptr [rax], al ; add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x0000000000037fd0 : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000002c1ed : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000001f50f : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000007afdd : add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; xor eax, eax ; pop r12 ; ret
0x000000000004f014 : add byte ptr [rax], al ; add byte ptr [rbx + 0x7501046a], al ; ret
0x00000000000a610b : add byte ptr [rax], al ; add byte ptr [rbx + 0xd7413f8], al ; mov edx, eax ; jmp 0xa60e0
0x00000000000a894b : add byte ptr [rax], al ; add byte ptr [rbx + 0xd7413f8], al ; mov edx, eax ; jmp 0xa8920
0x00000000000aaffb : add byte ptr [rax], al ; add byte ptr [rbx + 0xd7413f8], al ; mov edx, eax ; jmp 0xaafd0
0x000000000011486d : add byte ptr [rax], al ; add byte ptr [rbx + 0xffffffff834801c0], al ; ret 0x3904
0x00000000000d1aad : add byte ptr [rax], al ; add byte ptr [rbx + 0xffffffff834801c5], al ; ret
0x00000000000bae85 : add byte ptr [rax], al ; add byte ptr [rbx + 0xffffffff83480473], cl ; ret
0x00000000000e0227 : add byte ptr [rax], al ; add byte ptr [rbx + 0xffffffff840f0ff8], al ; ret 0x16
0x0000000000020560 : add byte ptr [rax], al ; add byte ptr [rbx + 0xffffffff8900b87d], al ; ret
0x00000000000b7c76 : add byte ptr [rax], al ; add byte ptr [rbx + 0xffffffffaf0f13e8], al ; ret -0x76bf
0x00000000000602f0 : add byte ptr [rax], al ; add byte ptr [rbx + 0xffffffffffee94bd], al ; call qword ptr [rax]
0x000000000005ffdc : add byte ptr [rax], al ; add byte ptr [rbx + 0xffffffffffeee8bd], al ; call qword ptr [rax]
0x00000000000cd2f6 : add byte ptr [rax], al ; add byte ptr [rbx + 0xffffffffffff60bd], al ; jmp qword ptr [rdx]
0x00000000000fa44d : add byte ptr [rax], al ; add byte ptr [rbx + 0xffffffffffffff83], dl ; call qword ptr [rcx]
0x0000000000070ad2 : add byte ptr [rax], al ; add byte ptr [rbx + 0xffffffffffffff89], bl ; call -0x3c9cb3c7
0x00000000000489bb : add byte ptr [rax], al ; add byte ptr [rbx + 0xffffffffffffff8b], bl ; pop rax ; ret
0x0000000000163048 : add byte ptr [rax], al ; add byte ptr [rbx + rax + 0xfffffffffffffff7], bh ; fadd st(3) ; ret
0x0000000000130c40 : add byte ptr [rax], al ; add byte ptr [rbx + rcx*4 + 0x4d], al ; mov byte ptr [rax + 1], cl ; ret
0x00000000000430f6 : add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; ret
0x000000000015b4ad : add byte ptr [rax], al ; add byte ptr [rcx + 0x3518911], cl ; ret
0x00000000001150e5 : add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret -0x7bf1
0x00000000000493fc : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x00000000000f544f : add byte ptr [rax], al ; add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x000000000015b48d : add byte ptr [rax], al ; add byte ptr [rcx + 0x4518811], cl ; ret
0x000000000009ea8d : add byte ptr [rax], al ; add byte ptr [rcx + 0x4578817], cl ; ret
0x0000000000074652 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; ret
0x000000000005392f : add byte ptr [rax], al ; add byte ptr [rcx + 0x5d], al ; ret
0x0000000000053861 : add byte ptr [rax], al ; add byte ptr [rcx + 0x5e], al ; ret
0x00000000000e1c8a : add byte ptr [rax], al ; add byte ptr [rcx + 0xf], al ; mov dh, 4 ; or byte ptr [rcx], bh ; ret 0x1472
0x00000000000e51cd : add byte ptr [rax], al ; add byte ptr [rcx + 0xffffffffc0310477], cl ; ret
0x000000000004574f : add byte ptr [rax], al ; add byte ptr [rcx + 0xffffffffffffff83], al ; ret
0x0000000000095f87 : add byte ptr [rax], al ; add byte ptr [rcx + 0xffffffffffffff83], cl ; ret
0x000000000007f4ed : add byte ptr [rax], al ; add byte ptr [rcx + 0xffffffffffffff83], cl ; ret 0x4908
0x00000000000d4db8 : add byte ptr [rax], al ; add byte ptr [rcx + 0xffffffffffffff83], cl ; ret 0x4c01
0x000000000013825d : add byte ptr [rax], al ; add byte ptr [rcx + 0xffffffffffffff83], cl ; ret 0x7f10
0x0000000000087dcd : add byte ptr [rax], al ; add byte ptr [rcx + 0xffffffffffffff83], cl ; ret 0xf10
0x000000000002105b : add byte ptr [rax], al ; add byte ptr [rcx + 0xffffffffffffff89], cl ; ret
0x000000000008c121 : add byte ptr [rax], al ; add byte ptr [rcx + 0xffffffffffffff89], cl ; ret -0x72b8
0x00000000000627b5 : add byte ptr [rax], al ; add byte ptr [rcx + 0xffffffffffffff89], cl ; ret -0x74b4
0x000000000004b7ec : add byte ptr [rax], al ; add byte ptr [rcx + 0xffffffffffffff89], cl ; ret -0x74bc
0x000000000003ffba : add byte ptr [rax], al ; add byte ptr [rcx + 0xffffffffffffff89], cl ; ret -0x76b4
0x00000000000e434d : add byte ptr [rax], al ; add byte ptr [rcx + 0xffffffffffffff8b], al ; add byte ptr [r9], r15b ; ret -0x78f1
0x00000000000e347d : add byte ptr [rax], al ; add byte ptr [rcx + 0xffffffffffffff8b], cl ; cmp byte ptr [r8 + 0xffffffffffffff89], r9b ; ret -0x76b8
0x00000000001061ce : add byte ptr [rax], al ; add byte ptr [rcx + 0xffffffffffffff8b], cl ; cmp byte ptr [rax + 0xffffffffffffff89], r9b ; ret 0x2b49
0x0000000000047864 : add byte ptr [rax], al ; add byte ptr [rcx + 0xffffffffffffff8b], cl ; ret
0x000000000004601a : add byte ptr [rax], al ; add byte ptr [rcx + 0xffffffffffffff8d], cl ; cmp al, -0x11 ; call 0x92310
0x000000000018696d : add byte ptr [rax], al ; add byte ptr [rcx + 0xfffffffffffffff3], bl ; clc ; ret 0x6e1f
0x000000000008cb50 : add byte ptr [rax], al ; add byte ptr [rcx + 0xfffffffffffffff7], cl ; ret 1
0x000000000008cb76 : add byte ptr [rax], al ; add byte ptr [rcx + 0xfffffffffffffff7], cl ; ret 2
0x00000000000a20dd : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret
0x0000000000060677 : add byte ptr [rax], al ; add byte ptr [rcx + 1], cl ; ret 0x3145
0x000000000007931e : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0xffffffffffffffc2], al ; jmp 0x792bb
0x00000000000f6b2f : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0xffffffffffffffe7], cl ; call rbx
0x00000000000a5431 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0xffffffffffffffe9], cl ; mov rdi, rbp ; call rbx
0x00000000000a4e36 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0xffffffffffffffea], cl ; mov rdi, rbp ; call rbx
0x0000000000120bf7 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0xffffffffffffffef], cl ; call qword ptr [rax]
0x00000000000f7385 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0xffffffffffffffef], cl ; call rbx
0x00000000000771de : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0xfffffffffffffff2], cl ; mov rdi, rbx ; call rax
0x00000000001065be : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0xfffffffffffffff7], cl ; call 0x1028b0
0x00000000000f6973 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0xfffffffffffffff7], cl ; call rbx
0x0000000000075902 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0xffffffffffffffff], cl ; call 0x71b80
0x00000000001209ef : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0xffffffffffffffff], cl ; call qword ptr [rax]
0x00000000000f6964 : add byte ptr [rax], al ; add byte ptr [rcx + rcx*4 + 0xffffffffffffffff], cl ; call rbx
0x000000000004869c : add byte ptr [rax], al ; add byte ptr [rcx], al ; ret -0x2817
0x00000000000d1973 : add byte ptr [rax], al ; add byte ptr [rcx], al ; setg dl ; jmp 0xd18fe
0x00000000000fdb17 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret
0x00000000000e2b80 : add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret -0x70f1
0x000000000008b8a7 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret
0x00000000000b9cfe : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret -0x72bf
0x00000000000b9c64 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret -0x76bc
0x00000000000cf65a : add byte ptr [rax], al ; add byte ptr [rcx], ch ; ret -0x7af1
0x00000000000b85c7 : add byte ptr [rax], al ; add byte ptr [rcx], ch ; rol byte ptr [rcx + 0x29], 1 ; ret
0x00000000000f1cdf : add byte ptr [rax], al ; add byte ptr [rcx], ch ; sal bl, 1 ; ret
0x00000000000a6131 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0xa60e0
0x00000000000a8971 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0xa8920
0x00000000000ab021 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0xaafd0
0x000000000003c4aa : add byte ptr [rax], al ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000089564 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ret
0x0000000000026116 : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x000000000013753d : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax + 0xffffffffffffff83], -0x3c ; ret
0x00000000000c1b9b : add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rcx + 0xffffffffffffff81], cl ; ret 0x2d0
0x00000000000a3872 : add byte ptr [rax], al ; add byte ptr [rdi + 2], bh ; neg eax ; ret
0x00000000001650f2 : add byte ptr [rax], al ; add byte ptr [rdi + 9], bh ; neg eax ; ret
0x00000000001b6129 : add byte ptr [rax], al ; add byte ptr [rdi + rbp*2], bh ; add al, byte ptr [rax] ; nop ; ret -9
0x000000000014e0bd : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000014e12d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x0000000000027971 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x48 ; dec dword ptr [rcx + 0xffffffffffffff83] ; ret
0x00000000000279bb : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax + 0xffffffffffffff83] ; ret 0x4101
0x000000000006e10d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, -0xa ; ret 0xf04
0x000000000008ca6d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000000a26d5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; popfq ; ret -0x157f
0x00000000000d840f : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret -0x36cf
0x0000000000133db4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret -0x3c77
0x0000000000047b41 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret -0x72b8
0x00000000000cc7ee : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret -0x7b17
0x000000000010ba1d : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret -0x7cb8
0x00000000000481f5 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret 0x2ce9
0x00000000000b9b5c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; scasd eax, dword ptr es:[rdi] ; ret -0x72bc
0x00000000000ce64c : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000000e3a30 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret -0x1d3f
0x00000000000c5bc4 : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret -0x2d7c
0x00000000000c667a : add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x45e9
0x0000000000160f12 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret -0x7cf1
0x000000000008c982 : add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret -0x3f7b
0x00000000000bdfbb : add byte ptr [rax], al ; add byte ptr [rsi + 0xffffffffffffff90], ah ; mov eax, dword ptr [rdi] ; ret
0x00000000000f693d : add byte ptr [rax], al ; add byte ptr [rsi + 1], bh ; call rbx
0x00000000000e51a7 : add byte ptr [rax], al ; add byte ptr [rsp + rax + 0xfffffffffffffff3], dh ; ret
0x00000000001ab651 : add byte ptr [rax], al ; add byte ptr [rsp + rax*8 + 1], ah ; add al, bh ; ret
0x00000000001ab5f1 : add byte ptr [rax], al ; add byte ptr [rsp + rax*8], al ; add dword ptr [rax], eax ; clc ; ret
0x00000000001ab621 : add byte ptr [rax], al ; add byte ptr [rsp + rax*8], dh ; add dword ptr [rax], eax ; clc ; ret
0x0000000000193d52 : add byte ptr [rax], al ; add byte ptr fs:[r8], al ; sub byte ptr [rbx + 0xffffffffffffffeb], cl ; jmp qword ptr [rsi]
0x0000000000195852 : add byte ptr [rax], al ; add byte ptr fs:[rax], al ; test al, -0x75 ; in eax, dx ; call qword ptr [rdx]
0x000000000005981f : add byte ptr [rax], al ; add cl, ch ; jmp rax
0x000000000002c2c2 : add byte ptr [rax], al ; add cl, ch ; ret
0x000000000006111d : add byte ptr [rax], al ; add cl, ch ; ret -0x14
0x00000000000b8b3f : add byte ptr [rax], al ; add cl, ch ; ret -0xd
0x00000000001044cd : add byte ptr [rax], al ; add cl, ch ; ret -3
0x0000000000019485 : add byte ptr [rax], al ; add dh, bl ; call qword ptr [rdi]
0x0000000000082a84 : add byte ptr [rax], al ; add dh, dh ; ret
0x0000000000136640 : add byte ptr [rax], al ; add dh, dh ; ret 0x7402
0x0000000000164561 : add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x0000000000073b24 : add byte ptr [rax], al ; add dh, dh ; ret 0x7508
0x00000000000ec36d : add byte ptr [rax], al ; add dh, dh ; ret 0x7540
0x00000000000e04ef : add byte ptr [rax], al ; add dh, dh ; ret 0xf10
0x0000000000099000 : add byte ptr [rax], al ; add dh, dh ; ret 0xf20
0x0000000000099009 : add byte ptr [rax], al ; add dh, dh ; ret 0xf40
0x00000000000d1974 : add byte ptr [rax], al ; add dword ptr [rdi], ecx ; lahf ; ret -0x7d15
0x00000000000d5ba4 : add byte ptr [rax], al ; add dword ptr [rdi], ecx ; lahf ; ret 0xee9
0x0000000000026f77 : add byte ptr [rax], al ; add qword ptr [rdi], 1 ; jmp 0x26f42
0x00000000001b733a : add byte ptr [rax], al ; add qword ptr [rdx], -0x50d6000 ; call rcx
0x00000000000a3b5e : add byte ptr [rax], al ; add rax, 3 ; ret
0x000000000008c834 : add byte ptr [rax], al ; add rax, rdi ; add rax, rcx ; ret
0x0000000000125311 : add byte ptr [rax], al ; add rdi, 0x10 ; jmp rcx
0x0000000000128be1 : add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x0000000000128331 : add byte ptr [rax], al ; add rdi, 0x68 ; jmp rcx
0x0000000000124754 : add byte ptr [rax], al ; add rdi, 0xc8 ; jmp rcx
0x00000000000bd6be : add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000bd6e6 : add byte ptr [rax], al ; add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000003724a : add byte ptr [rax], al ; add rsp, 0x108 ; ret
0x0000000000036c68 : add byte ptr [rax], al ; add rsp, 0x148 ; ret
0x000000000012e154 : add byte ptr [rax], al ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000e51ee : add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000000fc6c0 : add byte ptr [rax], al ; add rsp, 0x20 ; mov eax, ebx ; pop rbx ; ret
0x0000000000036a2a : add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x000000000010d13b : add byte ptr [rax], al ; add rsp, 0x28 ; ret
0x00000000000ec889 : add byte ptr [rax], al ; add rsp, 0x70 ; pop rbx ; ret
0x0000000000036f36 : add byte ptr [rax], al ; add rsp, 0xd0 ; ret
0x0000000000047651 : add byte ptr [rax], al ; add rsp, 0xd8 ; ret
0x000000000008b7aa : add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x00000000000237b7 : add byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000036422 : add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000019dc12 : add byte ptr [rax], al ; and al, -0x16 ; add byte ptr [rax], al ; cmp bh, dl ; out dx, al ; jmp rdx
0x00000000001ac812 : add byte ptr [rax], al ; and al, -0x2a ; add dword ptr [rax], eax ; clc ; out -0xb, al ; call qword ptr [rax]
0x00000000001ac612 : add byte ptr [rax], al ; and al, -0x2c ; add dword ptr [rax], eax ; or dh, ah ; cmc ; call qword ptr [rax]
0x00000000001a9212 : add byte ptr [rax], al ; and al, -0x60 ; add dword ptr [rax], eax ; sbb byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001b0c12 : add byte ptr [rax], al ; and al, 0x1a ; add al, byte ptr [rax] ; pop rax ; mov bl, -0xa ; call qword ptr [rax]
0x0000000000197b32 : add byte ptr [rax], al ; and al, 0x2b ; add byte ptr [rax], al ; test al, -0x54 ; in eax, dx ; call qword ptr [rcx]
0x00000000001a1e12 : add byte ptr [rax], al ; and al, 0x2c ; add dword ptr [rax], eax ; sub dl, dl ; int1 ; jmp qword ptr [rbx]
0x00000000001a2c12 : add byte ptr [rax], al ; and al, 0x3a ; add dword ptr [rax], eax ; in al, dx ; int1 ; jmp qword ptr [rcx]
0x00000000001895c6 : add byte ptr [rax], al ; and al, 0x3f ; jmp 0x1895cb
0x00000000001a3912 : add byte ptr [rax], al ; and al, 0x47 ; add dword ptr [rax], eax ; call 0x281a2ba6
0x00000000001a5b12 : add byte ptr [rax], al ; and al, 0x69 ; add dword ptr [rax], eax ; test al, 0x61 ; hlt ; jmp qword ptr [rbx]
0x00000000001a6c12 : add byte ptr [rax], al ; and al, 0x7a ; add dword ptr [rax], eax ; test al, -0x4e ; hlt ; jmp qword ptr [rcx]
0x0000000000006f3a : add byte ptr [rax], al ; and al, byte ptr [rax] ; or al, 0 ; nop ; ret
0x000000000000414a : add byte ptr [rax], al ; and al, byte ptr [rax] ; or al, 0 ; ret 0xf
0x000000000019c96e : add byte ptr [rax], al ; and byte ptr [rax], dh ; out dx, al ; call qword ptr [rsi]
0x000000000017ae5e : add byte ptr [rax], al ; and byte ptr [rbx + 0xffffffffa523fff5], -0xb ; jmp qword ptr [rbx]
0x0000000000193b0e : add byte ptr [rax], al ; and byte ptr [rdx], dh ; jmp 0x193b13
0x00000000000fb16f : add byte ptr [rax], al ; and eax, 0xfffff000 ; or eax, edi ; ret
0x000000000003009b : add byte ptr [rax], al ; and eax, esi ; ret
0x0000000000189556 : add byte ptr [rax], al ; and edi, dword ptr [rdx] ; jmp 0x18955b
0x000000000008ca6e : add byte ptr [rax], al ; bsf eax, eax ; add rax, rdi ; ret
0x00000000000898b7 : add byte ptr [rax], al ; bsf rax, rdx ; ret
0x000000000008b3a4 : add byte ptr [rax], al ; bsr rax, rax ; add rax, rdi ; ret
0x0000000000195ee6 : add byte ptr [rax], al ; call -0x1ae6b381
0x000000000012f6b6 : add byte ptr [rax], al ; call 0x12b970
0x00000000001201c7 : add byte ptr [rax], al ; call 0x12c460
0x00000000001915c6 : add byte ptr [rax], al ; call 0x1319001b
0x00000000000b1fbe : add byte ptr [rax], al ; call 0x1374b0
0x00000000000f3117 : add byte ptr [rax], al ; call 0x1f410
0x0000000000194e36 : add byte ptr [rax], al ; call 0x22193ad0
0x000000000019cf96 : add byte ptr [rax], al ; call 0x2219be15
0x0000000000193076 : add byte ptr [rax], al ; call 0x23191b1d
0x0000000000190256 : add byte ptr [rax], al ; call 0x2818ffb5
0x00000000000efaf8 : add byte ptr [rax], al ; call 0xebd70
0x00000000000e562e : add byte ptr [rax], al ; call 0xf18e0
0x0000000000120670 : add byte ptr [rax], al ; call qword ptr [rax]
0x0000000000166bee : add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000016f262 : add byte ptr [rax], al ; call qword ptr [rcx]
0x00000000000194e6 : add byte ptr [rax], al ; call qword ptr [rdi]
0x0000000000021ee5 : add byte ptr [rax], al ; call rax
0x00000000000f6943 : add byte ptr [rax], al ; call rbx
0x0000000000171dce : add byte ptr [rax], al ; call rdi
0x0000000000031daf : add byte ptr [rax], al ; call rdx
0x0000000000170f7e : add byte ptr [rax], al ; call rsp
0x00000000001a37ea : add byte ptr [rax], al ; cld ; add dword ptr [r8], r8d ; nop ; xchg edx, esi ; jmp qword ptr [rcx]
0x00000000001a56ea : add byte ptr [rax], al ; cld ; add dword ptr fs:[rax], eax ; ret -0x19
0x00000000001a12ea : add byte ptr [rax], al ; cld ; and byte ptr [rcx], al ; add byte ptr [rax], dh ; ret
0x00000000001a5bea : add byte ptr [rax], al ; cld ; imul eax, dword ptr [rcx], 0xf4636000 ; jmp qword ptr [rcx]
0x00000000001ab4ea : add byte ptr [rax], al ; cld ; ret 1
0x00000000001abcea : add byte ptr [rax], al ; cld ; retf 1 ; push rax ; fdivrp st(5) ; call qword ptr [rax]
0x00000000001a78ea : add byte ptr [rax], al ; cld ; xchg byte ptr [rcx], al ; add al, al ; fdivr st(4), st(0) ; jmp qword ptr [rcx]
0x00000000001a89ea : add byte ptr [rax], al ; cld ; xchg eax, edi ; add dword ptr [rax], eax ; shr byte ptr [rdx], 1 ; cmc ; jmp qword ptr [rcx]
0x00000000001a8c8f : add byte ptr [rax], al ; cmc ; jmp qword ptr [rcx]
0x00000000001154af : add byte ptr [rax], al ; cmove eax, edx ; ret
0x000000000019cd2a : add byte ptr [rax], al ; cmp al, -0x25 ; add byte ptr [rax], al ; xor byte ptr [rdx + 0xffffffffffffffee], ch ; call qword ptr [rdi]
0x00000000001ac82a : add byte ptr [rax], al ; cmp al, -0x2a ; add dword ptr [rax], eax ; lock out -0xb, al ; call qword ptr [rax]
0x00000000001ab72a : add byte ptr [rax], al ; cmp al, -0x3b ; add dword ptr [rax], eax ; rcl bl ; cmc ; jmp qword ptr [rsi]
0x000000000019b42a : add byte ptr [rax], al ; cmp al, -0x3e ; add byte ptr [rax], al ; mov al, 0x27 ; out dx, al ; call qword ptr [rsi]
0x00000000001a922a : add byte ptr [rax], al ; cmp al, -0x60 ; add dword ptr [rax], eax ; xor byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a882a : add byte ptr [rax], al ; cmp al, -0x6a ; add dword ptr [rax], eax ; jo 0x1a885a ; cmc ; jmp qword ptr [rcx]
0x00000000001b612a : add byte ptr [rax], al ; cmp al, 0x6f ; add al, byte ptr [rax] ; nop ; ret -9
0x000000000019dc16 : add byte ptr [rax], al ; cmp bh, dl ; out dx, al ; jmp rdx
0x000000000019f106 : add byte ptr [rax], al ; cmp byte ptr [rax + rsi*8], dl ; jmp rbx
0x000000000015f3c6 : add byte ptr [rax], al ; cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x0000000000194196 : add byte ptr [rax], al ; cmp byte ptr [rdi + 0xffffffffffffffeb], dl ; jmp qword ptr [rbx]
0x0000000000193ade : add byte ptr [rax], al ; cmp byte ptr [rdx], -6 ; jmp qword ptr [rcx]
0x0000000000191976 : add byte ptr [rax], al ; cmp byte ptr [rsi + 0xffffffffffffffea], dl ; jmp qword ptr [rcx]
0x000000000019e286 : add byte ptr [rax], al ; cmp byte ptr [rsi + 0xffffffffffffffef], al ; jmp qword ptr [rsi]
0x0000000000077647 : add byte ptr [rax], al ; cmp eax, -1 ; jne 0x77650 ; pop rbx ; ret
0x00000000000a610c : add byte ptr [rax], al ; cmp eax, 0x13 ; je 0xa6120 ; mov edx, eax ; jmp 0xa60e0
0x00000000000a894c : add byte ptr [rax], al ; cmp eax, 0x13 ; je 0xa8960 ; mov edx, eax ; jmp 0xa8920
0x00000000000aaffc : add byte ptr [rax], al ; cmp eax, 0x13 ; je 0xab010 ; mov edx, eax ; jmp 0xaafd0
0x00000000000c1e40 : add byte ptr [rax], al ; cmp eax, 0xfffff001 ; jae 0xc1e4a ; ret
0x00000000001a91ff : add byte ptr [rax], al ; cmp ebp, esi ; jmp qword ptr [rcx]
0x00000000000bac3e : add byte ptr [rax], al ; cmp esi, 1 ; je 0xbac50 ; xor eax, eax ; ret
0x00000000001a8b3a : add byte ptr [rax], al ; cqo ; add dword ptr [rax], eax ; push rax ; sub al, -0xb ; jmp qword ptr [rcx]
0x00000000001a8a32 : add byte ptr [rax], al ; cwde ; add dword ptr [rax], eax ; sbb byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001999d6 : add byte ptr [rax], al ; cwde ; in eax, dx ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000197266 : add byte ptr [rax], al ; cwde ; movsd dword ptr es:[rdi], dword ptr [rsi] ; in eax, dx ; jmp rbx
0x000000000001939e : add byte ptr [rax], al ; cwde ; ret 0x3b
0x00000000001aca32 : add byte ptr [rax], al ; fadd dword ptr [rcx] ; add byte ptr [rax], ch ; in eax, dx ; cmc ; call qword ptr [rdi]
0x00000000001919c6 : add byte ptr [rax], al ; fcom dword ptr [rsi + 0xffffffffffffffea] ; jmp qword ptr [rdi]
0x00000000001a8bca : add byte ptr [rax], al ; fcomp qword ptr [rcx + 0x2ce00001] ; cmc ; jmp qword ptr [rcx]
0x000000000019edca : add byte ptr [rax], al ; fdiv st(3), st(0) ; add byte ptr [rax], al ; lock cwde ; out dx, eax ; jmp rdi
0x00000000001b1cff : add byte ptr [rax], al ; fdivr st(6), st(0) ; jmp qword ptr [rbx]
0x00000000001b798a : add byte ptr [rax], al ; fld dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x00000000000368a7 : add byte ptr [rax], al ; fld xword ptr [rsp + 0xffffffffffffffe8] ; ret
0x00000000000369de : add byte ptr [rax], al ; fstp st(1) ; add rsp, 0x20 ; pop rbx ; ret
0x00000000001a5aca : add byte ptr [rax], al ; fsubr qword ptr [rax + 1] ; add byte ptr [rax + 0x61], dl ; hlt ; jmp qword ptr [rax]
0x00000000001ad2ca : add byte ptr [rax], al ; fsubr st(0), st(0) ; add dword ptr [rax], eax ; adc dl, bh ; cmc ; call qword ptr [rax]
0x00000000001ad3ca : add byte ptr [rax], al ; fsubr st(1), st(0) ; add dword ptr [rax], eax ; lock cli ; cmc ; call qword ptr [rax]
0x00000000001a72e2 : add byte ptr [rax], al ; hlt ; add byte ptr [rcx], 0 ; fmul st(0) ; hlt ; jmp qword ptr [rdx]
0x00000000000194fe : add byte ptr [rax], al ; hlt ; call qword ptr [rdi]
0x00000000001a8be2 : add byte ptr [rax], al ; hlt ; cdq ; add dword ptr [rax], eax ; clc ; sub al, -0xb ; jmp qword ptr [rcx]
0x00000000001aeef2 : add byte ptr [rax], al ; hlt ; clc ; add dword ptr [rax], eax ; ret
0x00000000001a2fe2 : add byte ptr [rax], al ; hlt ; cmp eax, 0xfbd80001 ; int1 ; jmp qword ptr [rcx]
0x0000000000195ee2 : add byte ptr [rax], al ; hlt ; insb byte ptr es:[rdi], dx ; add byte ptr [rax], al ; call -0x1ae6b381
0x000000000018f0a6 : add byte ptr [rax], al ; hlt ; iretd ; std ; jmp rsp
0x000000000018968e : add byte ptr [rax], al ; hlt ; jmp 0x189693
0x00000000001a91e2 : add byte ptr [rax], al ; hlt ; lahf ; add dword ptr [rax], eax ; call 0x221a8725
0x000000000018a0b6 : add byte ptr [rax], al ; hlt ; lahf ; out dx, al ; jmp rsp
0x00000000001ad2e2 : add byte ptr [rax], al ; hlt ; loopne 0x1ad2e8 ; add byte ptr [rax], cl ; cli ; cmc ; call qword ptr [rax]
0x00000000001a5ce2 : add byte ptr [rax], al ; hlt ; push 1 ; add byte ptr [rax + 0x64], bl ; hlt ; jmp qword ptr [rcx]
0x0000000000189aee : add byte ptr [rax], al ; hlt ; push rsi ; in eax, dx ; jmp qword ptr [rbx + rax*8]
0x00000000001ad750 : add byte ptr [rax], al ; idiv bh ; ret 3
0x00000000001ab7d2 : add byte ptr [rax], al ; in al, -0x3b ; add dword ptr [rax], eax ; js 0x1ab7ae ; cmc ; jmp qword ptr [rsi]
0x00000000001ab4d2 : add byte ptr [rax], al ; in al, -0x3e ; add dword ptr [rax], eax ; cwde ; sal ch, cl ; jmp qword ptr [rsi]
0x00000000001a8cd2 : add byte ptr [rax], al ; in al, -0x66 ; add dword ptr [rax], eax ; js 0x1a8d08 ; cmc ; jmp qword ptr [rcx]
0x00000000001a78d2 : add byte ptr [rax], al ; in al, -0x7a ; add dword ptr [rax], eax ; test al, -0x24 ; hlt ; jmp qword ptr [rcx]
0x00000000001916d2 : add byte ptr [rax], al ; in al, 0x24 ; add byte ptr [rax], al ; sbb byte ptr [rdx + 0xffffffffffffffea], dl ; call qword ptr [rcx]
0x0000000000189a96 : add byte ptr [rax], al ; in al, 0x4d ; in eax, dx ; jmp rsp
0x00000000001a5bd2 : add byte ptr [rax], al ; in al, 0x69 ; add dword ptr [rax], eax ; movsxd rsi, esp ; jmp qword ptr [rcx]
0x00000000001b60d2 : add byte ptr [rax], al ; in al, 0x6e ; add al, byte ptr [rax] ; test al, 4 ; sti ; jmp qword ptr [rdx]
0x00000000001a60d2 : add byte ptr [rax], al ; in al, 0x6e ; add dword ptr [rax], eax ; call 0x221a5550
0x0000000000193ada : add byte ptr [rax], al ; in al, dx ; add byte ptr [rax], al ; cmp byte ptr [rdx], -6 ; jmp qword ptr [rcx]
0x000000000001946e : add byte ptr [rax], al ; in al, dx ; call qword ptr [rdi]
0x00000000001a8ada : add byte ptr [rax], al ; in al, dx ; cwde ; add dword ptr [rax], eax ; lock sub esi, ebp ; jmp qword ptr [rcx]
0x00000000001a5fda : add byte ptr [rax], al ; in al, dx ; insd dword ptr es:[rdi], dx ; add dword ptr [rax], eax ; mov al, 0x6c ; hlt ; jmp qword ptr [rcx]
0x000000000019acda : add byte ptr [rax], al ; in al, dx ; mov edx, 0x10d00000 ; out dx, al ; jmp qword ptr [rcx]
0x00000000001a82da : add byte ptr [rax], al ; in al, dx ; nop ; add dword ptr [rax], eax ; loopne 0x1a82ed ; cmc ; jmp qword ptr [rcx]
0x000000000019b9ea : add byte ptr [rax], al ; in al, dx ; ret
0x000000000019b4da : add byte ptr [rax], al ; in al, dx ; ret 0
0x00000000001b0ada : add byte ptr [rax], al ; in al, dx ; sbb byte ptr [rdx], al ; add al, dl ; mov cl, -0xa ; jmp qword ptr [rcx]
0x00000000001a8dda : add byte ptr [rax], al ; in al, dx ; wait ; add dword ptr [rax], eax ; shr byte ptr [rdi], 1 ; cmc ; jmp qword ptr [rcx]
0x00000000001a735a : add byte ptr [rax], al ; insb byte ptr es:[rdi], dx ; add dword ptr [rcx], 0xf4ca4000 ; jmp qword ptr [rcx]
0x00000000001a305a : add byte ptr [rax], al ; insb byte ptr es:[rdi], dx ; add dword ptr ds:[rax], eax ; lock sti ; int1 ; jmp qword ptr [rcx]
0x0000000000198a5a : add byte ptr [rax], al ; insb byte ptr es:[rdi], dx ; cwde ; add byte ptr [rax], al ; nop ; ret -0x13
0x00000000001b5e5a : add byte ptr [rax], al ; insb byte ptr es:[rdi], dx ; insb byte ptr es:[rdi], dx ; add al, byte ptr [rax] ; rol byte ptr [rsi], -5 ; jmp qword ptr [rdx]
0x00000000001a685a : add byte ptr [rax], al ; insb byte ptr es:[rdi], dx ; jbe 0x1a6860 ; add byte ptr [rax + 0xffffffffffffffaa], dl ; hlt ; call qword ptr [rbx]
0x00000000001b4d5a : add byte ptr [rax], al ; insb byte ptr es:[rdi], dx ; pop rbx ; add al, byte ptr [rax] ; jg 0x1b4d5a ; call qword ptr [rdx]
0x00000000001a8f5a : add byte ptr [rax], al ; insb byte ptr es:[rdi], dx ; popfq ; add dword ptr [rax], eax ; loopne 0x1a8f94 ; cmc ; jmp qword ptr [rcx]
0x00000000001ab45a : add byte ptr [rax], al ; insb byte ptr es:[rdi], dx ; ret 1
0x00000000001a875a : add byte ptr [rax], al ; insb byte ptr es:[rdi], dx ; xchg eax, ebp ; add dword ptr [rax], eax ; mov al, 0x27 ; cmc ; jmp qword ptr [rcx]
0x0000000000177b5e : add byte ptr [rax], al ; insd dword ptr es:[rdi], dx ; sar bh, 1 ; jmp qword ptr [rdi]
0x00000000001b6952 : add byte ptr [rax], al ; ja 0x1b6959 ; add al, cl ; fcomi st(7) ; jmp qword ptr [rcx]
0x00000000001007dc : add byte ptr [rax], al ; je 0x1007e8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000125de7 : add byte ptr [rax], al ; je 0x125df0 ; add rsp, 0x48 ; ret
0x00000000001897ae : add byte ptr [rax], al ; je 0x189788 ; jmp 0x1897b3
0x0000000000197262 : add byte ptr [rax], al ; je 0x1971e6 ; add byte ptr [rax], al ; cwde ; movsd dword ptr es:[rdi], dword ptr [rsi] ; in eax, dx ; jmp rbx
0x0000000000198662 : add byte ptr [rax], al ; je 0x1985fa ; add byte ptr [rax], al ; js 0x198626 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a3162 : add byte ptr [rax], al ; je 0x1a31a5 ; add dword ptr [rax], eax ; add sil, dl ; call rdi
0x00000000001a60ef : add byte ptr [rax], al ; je 0x1a60e7 ; jmp qword ptr [rcx]
0x00000000001a6262 : add byte ptr [rax], al ; je 0x1a62d6 ; add dword ptr [rax], eax ; js 0x1a62e2 ; hlt ; jmp qword ptr [rcx]
0x00000000001a8a62 : add byte ptr [rax], al ; je 0x1a89fe ; add dword ptr [rax], eax ; sub rsi, rbp ; jmp qword ptr [rcx]
0x00000000001a8d62 : add byte ptr [rax], al ; je 0x1a8d01 ; add dword ptr [rax], eax ; cmp byte ptr [rdi], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a9362 : add byte ptr [rax], al ; je 0x1a9307 ; add dword ptr [rax], eax ; cmp byte ptr [rcx + 0xfffffffffffffff5], al ; jmp rdi
0x00000000001ab562 : add byte ptr [rax], al ; je 0x1ab529 ; add dword ptr [rax], eax ; sub bl, dl ; cmc ; jmp qword ptr [rsi]
0x000000000008543a : add byte ptr [rax], al ; je 0x85440 ; ret
0x0000000000087096 : add byte ptr [rax], al ; je 0x870a0 ; ret
0x0000000000094b82 : add byte ptr [rax], al ; je 0x94b90 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a4144 : add byte ptr [rax], al ; je 0xa41b0 ; lea rax, qword ptr [rdi + 0xfffffffffffffff0] ; ret
0x00000000001650f3 : add byte ptr [rax], al ; jg 0x165100 ; neg eax ; ret
0x00000000000a3873 : add byte ptr [rax], al ; jg 0xa3879 ; neg eax ; ret
0x0000000000163049 : add byte ptr [rax], al ; jl 0x163050 ; neg eax ; ret
0x000000000019a26a : add byte ptr [rax], al ; jl 0x19a21e ; add byte ptr [rax], al ; adc dh, bh ; in eax, dx ; jmp rax
0x000000000019c96a : add byte ptr [rax], al ; jl 0x19c945 ; add byte ptr [rax], al ; and byte ptr [rax], dh ; out dx, al ; call qword ptr [rsi]
0x000000000019d56a : add byte ptr [rax], al ; jl 0x19d551 ; add byte ptr [rax], al ; push rax ; mov edi, esp ; call qword ptr [rdx]
0x00000000001a2f6a : add byte ptr [rax], al ; jl 0x1a2fab ; add dword ptr [rax], eax ; sar dl, -0xf ; jmp qword ptr [rcx]
0x00000000001a916a : add byte ptr [rax], al ; jl 0x1a910d ; add dword ptr [rax], eax ; jo 0x1a91aa ; cmc ; jmp qword ptr [rcx]
0x00000000001ab16a : add byte ptr [rax], al ; jl 0x1ab12d ; add dword ptr [rax], eax ; push rax ; xchg eax, edi ; cmc ; call rsp
0x000000000010f1f3 : add byte ptr [rax], al ; jmp 0x10f204
0x0000000000117c80 : add byte ptr [rax], al ; jmp 0x117c91
0x0000000000117cea : add byte ptr [rax], al ; jmp 0x117cfa
0x00000000001896c6 : add byte ptr [rax], al ; jmp 0x1896cb
0x0000000000193e0f : add byte ptr [rax], al ; jmp 0x193e13
0x0000000000026534 : add byte ptr [rax], al ; jmp 0x264fa
0x0000000000046ef3 : add byte ptr [rax], al ; jmp 0x46eba
0x000000000004e042 : add byte ptr [rax], al ; jmp 0x4a263
0x00000000000687b3 : add byte ptr [rax], al ; jmp 0x64aa1
0x0000000000083593 : add byte ptr [rax], al ; jmp 0x835a4
0x000000000009813c : add byte ptr [rax], al ; jmp 0x98103
0x00000000000badc5 : add byte ptr [rax], al ; jmp 0xbad8b
0x00000000000c5a39 : add byte ptr [rax], al ; jmp 0xc4dd0
0x00000000000d544d : add byte ptr [rax], al ; jmp 0xd50b6
0x00000000000f4924 : add byte ptr [rax], al ; jmp 0xf4934
0x000000000000d056 : add byte ptr [rax], al ; jmp qword ptr [rsi]
0x000000000017955f : add byte ptr [rax], al ; jmp qword ptr fs:[rax]
0x0000000000036be5 : add byte ptr [rax], al ; jmp rax
0x000000000012475b : add byte ptr [rax], al ; jmp rcx
0x00000000001107a6 : add byte ptr [rax], al ; jne 0x11076c ; jmp 0x110764
0x000000000012f5f5 : add byte ptr [rax], al ; jne 0x12f600 ; ret
0x000000000012f635 : add byte ptr [rax], al ; jne 0x12f640 ; ret
0x00000000001983ae : add byte ptr [rax], al ; jo 0x198369 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000018fb36 : add byte ptr [rax], al ; js 0x18fb99 ; std ; jmp qword ptr [rdx]
0x0000000000198666 : add byte ptr [rax], al ; js 0x198626 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019efb6 : add byte ptr [rax], al ; js 0x19f001 ; sti ; call qword ptr [rax]
0x000000000019f0a6 : add byte ptr [rax], al ; js 0x19f090 ; out dx, eax ; jmp qword ptr [rbx]
0x00000000001a9152 : add byte ptr [rax], al ; lahf ; add dword ptr [rax], eax ; pop rax ; cmp ch, dh ; jmp qword ptr [rcx]
0x00000000000a4c08 : add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x28] ; call rbx
0x000000000016332e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000016333e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000016334e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000016335e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000016336e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000016328d : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a401b : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xfffffffffffffff0] ; ret
0x00000000000a417e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xfffffffffffffff4] ; ret
0x00000000000a418e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xfffffffffffffff8] ; ret
0x00000000000a419e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xfffffffffffffffc] ; ret
0x00000000001632ae : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 1] ; ret
0x00000000001632be : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 2] ; ret
0x00000000001632ce : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000001632de : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000001632ee : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 5] ; ret
0x00000000001632fe : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000016323a : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000016330e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000016331e : add byte ptr [rax], al ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000016329e : add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x0000000000021fae : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x15b18c] ; ret
0x0000000000021fbe : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x15d163] ; ret
0x000000000007f0f9 : add byte ptr [rax], al ; lea rax, qword ptr [rip + 0x34065e] ; ret
0x00000000000c8312 : add byte ptr [rax], al ; lea rax, qword ptr [rsi + rcx*8] ; jmp 0xc82dd
0x000000000004601b : add byte ptr [rax], al ; lea rdi, qword ptr [r15 + rbp*8] ; call 0x92310
0x0000000000112d9e : add byte ptr [rax], al ; lea rdi, qword ptr [rip + 0x2b11d9] ; call rax
0x00000000000463e2 : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x195] ; call rax
0x0000000000070447 : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0x30] ; call rax
0x000000000007d117 : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0xffffffffffffe480] ; call rax
0x000000000007cd17 : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0xffffffffffffe880] ; call rax
0x000000000007ba67 : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0xfffffffffffffb30] ; call rax
0x00000000000707a3 : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0xfffffffffffffcd4] ; call rax
0x000000000007b7ff : add byte ptr [rax], al ; lea rsi, qword ptr [rip + 0xfffffffffffffd98] ; call rax
0x000000000019edce : add byte ptr [rax], al ; lock cwde ; out dx, eax ; jmp rdi
0x000000000019cd8e : add byte ptr [rax], al ; lock insb byte ptr es:[rdi], dx ; out dx, al ; call qword ptr [rsi]
0x00000000001a3a9a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; add qword ptr [rax], rax ; mov sil, dl ; call qword ptr [rdx]
0x00000000001a179a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; and eax, 0xc7700001 ; int1 ; call qword ptr [rbx]
0x00000000001ad39a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; loope 0x1ad3a0 ; add byte ptr [rax], al ; sti ; cmc ; call qword ptr [rax]
0x000000000019d89a : add byte ptr [rax], al ; lodsb al, byte ptr [rsi] ; out 0, al ; add al, ah ; sahf ; out dx, al ; jmp qword ptr [rcx]
0x000000000019d89e : add byte ptr [rax], al ; loopne 0x19d840 ; out dx, al ; jmp qword ptr [rcx]
0x000000000019b4a2 : add byte ptr [rax], al ; mov ah, -0x3e ; add byte ptr [rax], al ; sub byte ptr [rax], ch ; out dx, al ; call qword ptr [rdx]
0x00000000001a8ca2 : add byte ptr [rax], al ; mov ah, -0x66 ; add dword ptr [rax], eax ; sbb byte ptr [rsi], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a89a2 : add byte ptr [rax], al ; mov ah, -0x69 ; add dword ptr [rax], eax ; test al, 0x2a ; cmc ; jmp qword ptr [rcx]
0x00000000001a88a2 : add byte ptr [rax], al ; mov ah, -0x6a ; add dword ptr [rax], eax ; fsubr dword ptr [rax] ; cmc ; call qword ptr [rax]
0x0000000000189f36 : add byte ptr [rax], al ; mov ah, -0x76 ; out dx, al ; call rsp
0x000000000019f0a2 : add byte ptr [rax], al ; mov ah, -2 ; add byte ptr [rax], al ; js 0x19f090 ; out dx, eax ; jmp qword ptr [rbx]
0x00000000001a30a2 : add byte ptr [rax], al ; mov ah, 0x3e ; add dword ptr [rax], eax ; cmp ah, bh ; int1 ; jmp qword ptr [rcx]
0x00000000001a37a2 : add byte ptr [rax], al ; mov ah, 0x45 ; add dword ptr [rax], eax ; xchg rdx, rsi ; jmp qword ptr [rcx]
0x00000000001af4a2 : add byte ptr [rax], al ; mov ah, 2 ; add al, byte ptr [rax] ; clc ; sub dh, dh ; jmp qword ptr [rcx]
0x00000000001b888a : add byte ptr [rax], al ; mov ah, 5 ; add byte ptr [rax], al ; ret
0x000000000018a1c6 : add byte ptr [rax], al ; mov al, -0x12 ; call rsp
0x000000000019eeae : add byte ptr [rax], al ; mov al, -0x64 ; out dx, eax ; call qword ptr [rdi]
0x000000000019b42e : add byte ptr [rax], al ; mov al, 0x27 ; out dx, al ; call qword ptr [rsi]
0x000000000015d7ae : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x000000000015947e : add byte ptr [rax], al ; mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x00000000001a6d2f : add byte ptr [rax], al ; mov bh, -0xc ; call rdi
0x000000000015b44e : add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x000000000009750e : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x00000000000376f6 : add byte ptr [rax], al ; mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x000000000009f07e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000009da7e : add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000009ea4e : add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x000000000011ae16 : add byte ptr [rax], al ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000019e1b6 : add byte ptr [rax], al ; mov byte ptr [rdx], bl ; out dx, eax ; call qword ptr [rax]
0x00000000001b0c7f : add byte ptr [rax], al ; mov ch, -0xa ; call qword ptr [rdi]
0x0000000000177e3e : add byte ptr [rax], al ; mov dh, 0xb ; add byte ptr [rax], al ; ret -3
0x000000000009e74e : add byte ptr [rax], al ; mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x0000000000020bee : add byte ptr [rax], al ; mov dword ptr [r9 + rcx*4], esi ; inc dword ptr [rdi + 4] ; ret
0x00000000001a8a7a : add byte ptr [rax], al ; mov dword ptr [rax + 0x2b600001], ds ; cmc ; jmp qword ptr [rcx]
0x00000000001a5f7a : add byte ptr [rax], al ; mov dword ptr [rbp + 1], gs ; add byte ptr [rax], ah ; insb byte ptr es:[rdi], dx ; hlt ; jmp qword ptr [rcx]
0x000000000015b48e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000015b4ae : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000015b49e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x000000000015b47e : add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x00000000001a797a : add byte ptr [rax], al ; mov dword ptr [rdi + 0xffffffffdd800001], es ; hlt ; jmp qword ptr [rcx]
0x000000000009ea6e : add byte ptr [rax], al ; mov dword ptr [rdi + 0xffffffffffffffff], edx ; ret
0x00000000000e51ce : add byte ptr [rax], al ; mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x000000000019417a : add byte ptr [rax], al ; mov dword ptr [rdi], cs ; add byte ptr [rax], dh ; push rdi ; jmp 0x194183
0x000000000009754e : add byte ptr [rax], al ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x000000000009ea8e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009ea9e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x000000000009ea7e : add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x000000000019f97a : add byte ptr [rax], al ; mov dword ptr [rdi], es ; add dword ptr [rax], eax ; rcr byte ptr [rbp + 0xfffffffffffffff0] ; call qword ptr [rax]
0x0000000000054365 : add byte ptr [rax], al ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000039d94 : add byte ptr [rax], al ; mov dword ptr [rdx], ecx ; ret
0x0000000000121a8e : add byte ptr [rax], al ; mov dword ptr [rsi], 0xa ; ret
0x0000000000121ace : add byte ptr [rax], al ; mov dword ptr [rsi], 0xc ; ret
0x0000000000121abe : add byte ptr [rax], al ; mov dword ptr [rsi], 8 ; ret
0x00000000000e5a14 : add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000fb386 : add byte ptr [rax], al ; mov dword ptr fs:[rsi], 0x16 ; ret
0x000000000009da8e : add byte ptr [rax], al ; mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000000c324e : add byte ptr [rax], al ; mov eax, 0x20 ; ret
0x00000000000ec05e : add byte ptr [rax], al ; mov eax, 0x5f ; syscall ; ret
0x00000000000c29ee : add byte ptr [rax], al ; mov eax, 0x66 ; syscall ; ret
0x00000000000c2a0e : add byte ptr [rax], al ; mov eax, 0x68 ; syscall ; ret
0x00000000000c29fe : add byte ptr [rax], al ; mov eax, 0x6b ; syscall ; ret
0x00000000000c2a1e : add byte ptr [rax], al ; mov eax, 0x6c ; syscall ; ret
0x00000000000c2c1e : add byte ptr [rax], al ; mov eax, 0x6f ; syscall ; ret
0x00000000000c30d9 : add byte ptr [rax], al ; mov eax, 0x7f ; ret
0x00000000000fb47e : add byte ptr [rax], al ; mov eax, 0xe4 ; syscall ; ret
0x00000000000c319e : add byte ptr [rax], al ; mov eax, 0xfc17 ; ret
0x0000000000133bb9 : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000003577c : add byte ptr [rax], al ; mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000036d1c : add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x000000000002bfce : add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000012215e : add byte ptr [rax], al ; mov eax, 2 ; ret
0x0000000000046eee : add byte ptr [rax], al ; mov eax, 3 ; jmp 0x46eba
0x00000000001aca7a : add byte ptr [rax], al ; mov eax, ds ; add dword ptr [rax], eax ; in eax, dx ; cmc ; call qword ptr [rax]
0x0000000000160b9e : add byte ptr [rax], al ; mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000007d22e : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x00000000001219fc : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x000000000012f2ee : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 0x28] ; ret
0x00000000000e51be : add byte ptr [rax], al ; mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000073b7e : add byte ptr [rax], al ; mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x000000000007604e : add byte ptr [rax], al ; mov eax, dword ptr [rdx] ; ret
0x0000000000037c5e : add byte ptr [rax], al ; mov eax, dword ptr [rip + 0x38742a] ; ret
0x00000000000f5450 : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000086a3a : add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000010d1be : add byte ptr [rax], al ; mov eax, edi ; bswap eax ; ret
0x0000000000022c3a : add byte ptr [rax], al ; mov eax, edi ; ret
0x0000000000104bbe : add byte ptr [rax], al ; mov eax, edi ; sub eax, esi ; ret
0x0000000000100dd3 : add byte ptr [rax], al ; mov eax, edx ; add rsp, 8 ; ret
0x00000000000493fd : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005e4e9 : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000005e82e : add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x000000000010a140 : add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000000c29d8 : add byte ptr [rax], al ; mov eax, esi ; ret
0x00000000001ab57a : add byte ptr [rax], al ; mov ebx, es ; add dword ptr [rax], eax ; sal ebp, cl ; jmp qword ptr [rsi]
0x000000000009dabe : add byte ptr [rax], al ; mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000010c9dd : add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0x10c9a6
0x000000000014d8be : add byte ptr [rax], al ; mov edx, dword ptr [rsi + 0xfffffffffffffffc] ; mov dword ptr [rdi + 0xfffffffffffffffc], edx ; ret
0x000000000009daae : add byte ptr [rax], al ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000716ec : add byte ptr [rax], al ; mov edx, eax ; jmp 0x716aa
0x0000000000072157 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x72118
0x000000000007273c : add byte ptr [rax], al ; mov edx, eax ; jmp 0x72701
0x00000000000728a8 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x72863
0x0000000000072b97 : add byte ptr [rax], al ; mov edx, eax ; jmp 0x72b58
0x000000000007931f : add byte ptr [rax], al ; mov edx, r8d ; jmp 0x792bb
0x00000000000f693e : add byte ptr [rax], al ; mov esi, 1 ; call rbx
0x000000000019c7aa : add byte ptr [rax], al ; mov esp, 0x300000d5 ; and ebp, esi ; jmp rcx
0x00000000001a5faa : add byte ptr [rax], al ; mov esp, 0x5000016d ; insb byte ptr es:[rdi], dx ; hlt ; jmp qword ptr [rcx]
0x00000000001983aa : add byte ptr [rax], al ; mov esp, 0x70000091 ; mov bh, -0x13 ; jmp qword ptr [rdx]
0x00000000001a2aaa : add byte ptr [rax], al ; mov esp, 0x70000138 ; in eax, -0xf ; jmp rsi
0x00000000001ab5aa : add byte ptr [rax], al ; mov esp, 0x700001c3 ; sal ebp, cl ; jmp qword ptr [rsi]
0x000000000019eaaa : add byte ptr [rax], al ; mov esp, 0xa00000f8 ; mov edi, gs ; jmp qword ptr [rdx]
0x000000000019eeaa : add byte ptr [rax], al ; mov esp, 0xb00000fc ; pushfq ; out dx, eax ; call qword ptr [rdi]
0x00000000001a82aa : add byte ptr [rax], al ; mov esp, 0xb0000190 ; or esi, ebp ; jmp qword ptr [rcx]
0x00000000001ac5aa : add byte ptr [rax], al ; mov esp, 0xe00001d3 ; in eax, -0xb ; call qword ptr [rax]
0x00000000001082c5 : add byte ptr [rax], al ; mov qword ptr [rbp + 0xffffffffffffff90], rdx ; mov rdx, r14 ; call rax
0x000000000015b4ce : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000015b4ee : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000015b4fe : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000015b50e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000015b51e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000015b52e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000015b53e : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000015b4de : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x000000000015b4be : add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000009eaae : add byte ptr [rax], al ; mov qword ptr [rdi + 0xffffffffffffffff], rdx ; ret
0x000000000012f68a : add byte ptr [rax], al ; mov qword ptr [rdi + 8], rax ; ret
0x000000000009eace : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000009eaee : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009eafe : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000009eb0e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009eb1e : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000009eade : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x000000000009eabe : add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000007296c : add byte ptr [rax], al ; mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000001283fb : add byte ptr [rax], al ; mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x0000000000121a3c : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000003d383 : add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x00000000000e50ec : add byte ptr [rax], al ; mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x0000000000121a0c : add byte ptr [rax], al ; mov qword ptr [rsi + 8], rax ; ret
0x000000000007e198 : add byte ptr [rax], al ; mov qword ptr [rsi], rax ; mov rax, r8 ; ret
0x000000000010d146 : add byte ptr [rax], al ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00000000001210f5 : add byte ptr [rax], al ; mov qword ptr [rsp], rax ; call qword ptr [r11]
0x000000000003014a : add byte ptr [rax], al ; mov qword ptr fs:[rax], rdx ; ret
0x000000000012b8cf : add byte ptr [rax], al ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x00000000000badbf : add byte ptr [rax], al ; mov r11d, 1 ; jmp 0xbad8b
0x0000000000036c84 : add byte ptr [rax], al ; mov rax, -1 ; ret
0x00000000000a3b7e : add byte ptr [rax], al ; mov rax, 1 ; ret
0x00000000000a3b8e : add byte ptr [rax], al ; mov rax, 2 ; ret
0x00000000000a3b9e : add byte ptr [rax], al ; mov rax, 3 ; ret
0x00000000000a3bae : add byte ptr [rax], al ; mov rax, 4 ; ret
0x00000000000a3bbe : add byte ptr [rax], al ; mov rax, 5 ; ret
0x00000000000a3bce : add byte ptr [rax], al ; mov rax, 6 ; ret
0x00000000000a3bde : add byte ptr [rax], al ; mov rax, 7 ; ret
0x000000000007bdc9 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x0000000000077660 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x000000000007c315 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x00000000000f8f76 : add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x58] ; ret
0x0000000000048850 : add byte ptr [rax], al ; mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000bdebe : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000000717ee : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007d4fe : add byte ptr [rax], al ; mov rax, qword ptr [rdi + 0x68] ; ret
0x00000000001361af : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x28a6d8] ; call qword ptr [rax]
0x00000000001346ef : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x28c198] ; call qword ptr [rax]
0x000000000007d4de : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x342cb9] ; ret
0x000000000002375e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3a14e1] ; ret
0x000000000002374e : add byte ptr [rax], al ; mov rax, qword ptr [rip + 0x3a1501] ; ret
0x00000000001158a6 : add byte ptr [rax], al ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007a9d6 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005dafd : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000003cb18 : add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x000000000003570c : add byte ptr [rax], al ; mov rax, rcx ; pop rbx ; ret
0x0000000000035716 : add byte ptr [rax], al ; mov rax, rcx ; ret
0x000000000010cc4e : add byte ptr [rax], al ; mov rax, rdi ; add rsp, 8 ; ret
0x0000000000078647 : add byte ptr [rax], al ; mov rax, rdi ; jmp 0x78610
0x000000000007d50e : add byte ptr [rax], al ; mov rax, rdi ; ret
0x0000000000134816 : add byte ptr [rax], al ; mov rax, rdx ; add rsp, 8 ; ret
0x0000000000083868 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006f843 : add byte ptr [rax], al ; mov rax, rdx ; pop rbx ; ret
0x00000000000a5432 : add byte ptr [rax], al ; mov rcx, r13 ; mov rdi, rbp ; call rbx
0x0000000000076005 : add byte ptr [rax], al ; mov rdi, qword ptr [rax + 0x40] ; jmp 0x75fd0
0x00000000000236e7 : add byte ptr [rax], al ; mov rdi, qword ptr [rbx + 0x18] ; call rax
0x00000000000f6b30 : add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x0000000000120bf8 : add byte ptr [rax], al ; mov rdi, r13 ; call qword ptr [rax]
0x00000000000f7386 : add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00000000001065bf : add byte ptr [rax], al ; mov rdi, r14 ; call 0x1028b0
0x00000000000f6974 : add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000075903 : add byte ptr [rax], al ; mov rdi, r15 ; call 0x71b80
0x00000000001209f0 : add byte ptr [rax], al ; mov rdi, r15 ; call qword ptr [rax]
0x00000000000f6965 : add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x000000000012a2a4 : add byte ptr [rax], al ; mov rdi, rax ; call qword ptr [r10]
0x0000000000120d01 : add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rax]
0x0000000000122417 : add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x00000000000f6dba : add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x000000000006e3bd : add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x000000000006da42 : add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000086453 : add byte ptr [rax], al ; mov rdi, rbx ; mov rdx, r15 ; call rax
0x000000000012dbee : add byte ptr [rax], al ; mov rdi, rsp ; call rdx
0x000000000009daee : add byte ptr [rax], al ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000861b0 : add byte ptr [rax], al ; mov rdx, r12 ; mov rdi, r15 ; call rax
0x00000000000a4e37 : add byte ptr [rax], al ; mov rdx, r13 ; mov rdi, rbp ; call rbx
0x00000000000771df : add byte ptr [rax], al ; mov rdx, r14 ; mov rdi, rbx ; call rax
0x0000000000111b17 : add byte ptr [rax], al ; mov rdx, r15 ; mov rdi, r12 ; call rax
0x0000000000066128 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x358e2f] ; call rax
0x0000000000064840 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x35a717] ; call rax
0x000000000005f3c4 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x35fb93] ; call rax
0x0000000000056052 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x368f05] ; call rax
0x000000000004f080 : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x36fed7] ; call rax
0x0000000000049f3c : add byte ptr [rax], al ; mov rsi, qword ptr [rip + 0x37501b] ; call rax
0x0000000000085fa0 : add byte ptr [rax], al ; mov rsi, r12 ; mov rdi, rbx ; call rax
0x0000000000085d32 : add byte ptr [rax], al ; mov rsi, r14 ; call rax
0x0000000000086fca : add byte ptr [rax], al ; mov rsi, rbp ; mov rdi, rbx ; call rax
0x000000000015b46e : add byte ptr [rax], al ; mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000015b45e : add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x000000000009ea5e : add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x00000000000975ce : add byte ptr [rax], al ; mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009752e : add byte ptr [rax], al ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x000000000003d3cd : add byte ptr [rax], al ; mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x000000000003d414 : add byte ptr [rax], al ; mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x000000000009eb2e : add byte ptr [rax], al ; movdqu xmmword ptr [rdi + 0xffffffffffffffff], xmm0 ; ret
0x000000000009eb3e : add byte ptr [rax], al ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000194192 : add byte ptr [rax], al ; movsb byte ptr es:[rdi], byte ptr [rsi] ; add byte ptr [r8], r8b ; cmp byte ptr [rdi + 0xffffffffffffffeb], dl ; jmp qword ptr [rbx]
0x00000000001a8a92 : add byte ptr [rax], al ; movsb byte ptr es:[rdi], byte ptr [rsi] ; cwde ; add dword ptr [rax], eax ; js 0x1a8ac5 ; cmc ; jmp qword ptr [rcx]
0x000000000019cf92 : add byte ptr [rax], al ; movsb byte ptr es:[rdi], byte ptr [rsi] ; fld qword ptr [rax] ; add al, ch ; js 0x19cf89 ; jmp qword ptr [rcx]
0x000000000019ae92 : add byte ptr [rax], al ; movsb byte ptr es:[rdi], byte ptr [rsi] ; mov esp, 0x17680000 ; out dx, al ; call qword ptr [rdi]
0x00000000001a8292 : add byte ptr [rax], al ; movsb byte ptr es:[rdi], byte ptr [rsi] ; nop ; add dword ptr [rax], eax ; cwde ; or esi, ebp ; jmp qword ptr [rcx]
0x000000000019b9a2 : add byte ptr [rax], al ; movsb byte ptr es:[rdi], byte ptr [rsi] ; ret
0x00000000001ac392 : add byte ptr [rax], al ; movsb byte ptr es:[rdi], byte ptr [rsi] ; rol dword ptr [rcx], 1 ; add byte ptr [rax + 0xffffffffffffffe3], bl ; cmc ; jmp rbx
0x00000000001ac592 : add byte ptr [rax], al ; movsb byte ptr es:[rdi], byte ptr [rsi] ; rol dword ptr [rcx], cl ; add al, ch ; in eax, -0xb ; call qword ptr [rax]
0x00000000001aa0a2 : add byte ptr [rax], al ; movsb byte ptr es:[rdi], byte ptr [rsi] ; stosb byte ptr es:[rdi], al ; add dword ptr [rax], eax ; ret
0x000000000006dd06 : add byte ptr [rax], al ; movsxd rax, dword ptr [r8 + rax*4] ; add rax, r8 ; jmp rax
0x000000000014da4e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi + 0xffffffffffffffff] ; mov byte ptr [rdi + 0xffffffffffffffff], dl ; ret
0x000000000014e12e : add byte ptr [rax], al ; movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000014e0be : add byte ptr [rax], al ; movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000019f0be : add byte ptr [rax], al ; nop ; in al, dx ; out dx, eax ; call rsp
0x0000000000196c0e : add byte ptr [rax], al ; nop ; lahf ; in eax, dx ; call rbx
0x00000000000bdfbc : add byte ptr [rax], al ; nop ; mov eax, dword ptr [rdi] ; ret
0x000000000010d1cd : add byte ptr [rax], al ; nop ; mov eax, edi ; ror ax, 8 ; ret
0x000000000019ea7e : add byte ptr [rax], al ; nop ; mov edi, gs ; jmp qword ptr [rax]
0x00000000001903de : add byte ptr [rax], al ; nop ; push rdi ; std ; jmp qword ptr [rax]
0x000000000011551d : add byte ptr [rax], al ; nop ; ret
0x0000000000198a5e : add byte ptr [rax], al ; nop ; ret -0x13
0x0000000000019386 : add byte ptr [rax], al ; nop ; ret 0x3b
0x00000000001abafa : add byte ptr [rax], al ; or al, -0x37 ; add dword ptr [rax], eax ; loopne 0x1abaa9 ; sti ; jmp qword ptr [rsi]
0x00000000001a91fa : add byte ptr [rax], al ; or al, -0x60 ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a7dfa : add byte ptr [rax], al ; or al, -0x74 ; add dword ptr [rax], eax ; cmp ah, -0xc ; jmp rax
0x00000000001b71fa : add byte ptr [rax], al ; or al, -0x80 ; add al, byte ptr [rax] ; sal ah, -9 ; call rcx
0x00000000001ad01a : add byte ptr [rax], al ; or al, -0x80 ; add dword ptr [rax], eax ; lock cmc ; cmc ; call qword ptr [rcx]
0x00000000001909fa : add byte ptr [rax], al ; or al, 0x18 ; add byte ptr [rax], al ; xor ch, -0x17 ; call qword ptr [rbx]
0x00000000001a2ffa : add byte ptr [rax], al ; or al, 0x3e ; add dword ptr [rax], eax ; lock sti ; int1 ; jmp qword ptr [rcx]
0x00000000001a5cfa : add byte ptr [rax], al ; or al, 0x6b ; add dword ptr [rax], eax ; jo 0x1a5d66 ; hlt ; jmp qword ptr [rdi]
0x00000000001a5dfa : add byte ptr [rax], al ; or al, 0x6c ; add dword ptr [rax], eax ; push rax ; hlt ; jmp qword ptr [rcx]
0x0000000000191736 : add byte ptr [rax], al ; or byte ptr [rbx + 0xffffffffffffffea], dl ; call qword ptr [rbx]
0x00000000000f1596 : add byte ptr [rax], al ; or byte ptr [rip + 0xffffffff80000000], 0x39 ; ret -0x618b
0x000000000018fb32 : add byte ptr [rax], al ; or dword ptr [rax], r8d ; add byte ptr [rax + 0x5f], bh ; std ; jmp qword ptr [rdx]
0x0000000000036f79 : add byte ptr [rax], al ; or eax, -1 ; ret
0x000000000007b2ae : add byte ptr [rax], al ; or eax, 0x20 ; jmp 0x7b277
0x0000000000074653 : add byte ptr [rax], al ; pop r12 ; ret
0x0000000000053930 : add byte ptr [rax], al ; pop r13 ; ret
0x0000000000053862 : add byte ptr [rax], al ; pop r14 ; ret
0x000000000019e186 : add byte ptr [rax], al ; pop rax ; adc bh, dl ; call qword ptr [rax]
0x00000000001936b6 : add byte ptr [rax], al ; pop rax ; add ebx, ebp ; jmp rax
0x000000000019e0f6 : add byte ptr [rax], al ; pop rax ; clc ; out dx, al ; call qword ptr [rax]
0x00000000000fb007 : add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00000000000193b6 : add byte ptr [rax], al ; pop rax ; ret
0x000000000019aec6 : add byte ptr [rax], al ; pop rax ; sbb dh, ch ; call qword ptr [rcx]
0x0000000000195e26 : add byte ptr [rax], al ; pop rax ; xchg eax, edx ; in eax, dx ; jmp qword ptr [rax]
0x0000000000191296 : add byte ptr [rax], al ; pop rax ; xor ebp, edx ; call qword ptr [rcx]
0x00000000001b4f32 : add byte ptr [rax], al ; pop rbp ; add al, byte ptr [rax] ; call 0x131b46c5
0x00000000000a246a : add byte ptr [rax], al ; pop rbp ; lea rax, qword ptr [r9 + 1] ; pop r12 ; ret
0x00000000000fd3b7 : add byte ptr [rax], al ; pop rbp ; ret
0x00000000000a277d : add byte ptr [rax], al ; pop rbx ; and eax, 0x3fc00 ; ret
0x00000000000489bc : add byte ptr [rax], al ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x0000000000070ad3 : add byte ptr [rax], al ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x00000000000700ef : add byte ptr [rax], al ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000010b8c7 : add byte ptr [rax], al ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000712c5 : add byte ptr [rax], al ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x00000000000f146d : add byte ptr [rax], al ; pop rbx ; pop rbp ; mov eax, r9d ; pop r12 ; ret
0x000000000001fef1 : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000002199a : add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000001f510 : add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x000000000007afde : add byte ptr [rax], al ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x000000000002ca8c : add byte ptr [rax], al ; pop rbx ; ret
0x000000000018696e : add byte ptr [rax], al ; pop rcx ; rep clc ; ret 0x6e1f
0x0000000000189c4e : add byte ptr [rax], al ; pop rdi ; pop rsp ; out dx, al ; jmp rsp
0x0000000000194e32 : add byte ptr [rax], al ; pop rsp ; add byte ptr [rax], al ; call 0x22193ad0
0x00000000001b724a : add byte ptr [rax], al ; pop rsp ; add byte ptr [rdx], 0 ; push rax ; div bh ; call rdx
0x00000000001a3a4a : add byte ptr [rax], al ; pop rsp ; add qword ptr [rax], rax ; push rax ; mov dh, dl ; call qword ptr [rdi]
0x00000000001a8a4a : add byte ptr [rax], al ; pop rsp ; cwde ; add dword ptr [rax], eax ; xor byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a694a : add byte ptr [rax], al ; pop rsp ; ja 0x1a6950 ; add byte ptr [rax + 0xffffffffffffffad], dh ; hlt ; jmp qword ptr [rdi]
0x000000000019b95a : add byte ptr [rax], al ; pop rsp ; ret
0x00000000001a844a : add byte ptr [rax], al ; pop rsp ; xchg eax, edx ; add dword ptr [rax], eax ; sbb byte ptr [rsi], -0xb ; jmp qword ptr [rsi]
0x000000000019e10e : add byte ptr [rax], al ; push rax ; clc ; out dx, al ; jmp qword ptr [rsi]
0x000000000019d56e : add byte ptr [rax], al ; push rax ; mov edi, esp ; call qword ptr [rdx]
0x000000000018717c : add byte ptr [rax], al ; push rax ; pop r9 ; rep clc ; ret 0x6e1f
0x000000000012f69e : add byte ptr [rax], al ; push rbx ; call 0x12b940
0x00000000001b0342 : add byte ptr [rax], al ; push rsp ; adc dword ptr [rdx], eax ; add al, ch ; test dh, dh ; jmp rdx
0x00000000001a7342 : add byte ptr [rax], al ; push rsp ; add dword ptr [rcx], 0xf4ca2800 ; jmp qword ptr [rcx]
0x00000000001a2b42 : add byte ptr [rax], al ; push rsp ; cmp dword ptr [rcx], eax ; add byte ptr [rax + 0xffffffffffffffea], cl ; int1 ; jmp qword ptr [rcx]
0x00000000001a7042 : add byte ptr [rax], al ; push rsp ; jle 0x1a7048 ; add byte ptr [rax + 0xffffffffffffffbe], bh ; hlt ; jmp qword ptr [rcx]
0x0000000000198e42 : add byte ptr [rax], al ; push rsp ; pushfq ; add byte ptr [rax], al ; sub dl, dl ; in eax, dx ; call rcx
0x000000000018a316 : add byte ptr [rax], al ; push rsp ; ret
0x000000000019b442 : add byte ptr [rax], al ; push rsp ; ret 0
0x00000000001ab442 : add byte ptr [rax], al ; push rsp ; ret 1
0x00000000001ac842 : add byte ptr [rax], al ; push rsp ; salc ; add dword ptr [rax], eax ; call 0x111abe33
0x00000000001a8842 : add byte ptr [rax], al ; push rsp ; xchg eax, esi ; add dword ptr [rax], eax ; mov byte ptr [rax], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a8e52 : add byte ptr [rax], al ; pushfq ; add dword ptr [rax], eax ; js 0x1a8e8a ; cmc ; jmp qword ptr [rcx]
0x00000000001a308a : add byte ptr [rax], al ; pushfq ; add dword ptr ds:[rax], eax ; and ah, bh ; int1 ; jmp qword ptr [rcx]
0x000000000019cd8a : add byte ptr [rax], al ; pushfq ; fild dword ptr [rax] ; add al, dh ; insb byte ptr es:[rdi], dx ; out dx, al ; call qword ptr [rsi]
0x00000000001b5b8a : add byte ptr [rax], al ; pushfq ; imul eax, dword ptr [rdx], 0xf79a4000 ; call qword ptr [rdx]
0x00000000001ab48a : add byte ptr [rax], al ; pushfq ; ret 1
0x00000000001a898a : add byte ptr [rax], al ; pushfq ; xchg eax, edi ; add dword ptr [rax], eax ; nop ; sub dh, ch ; jmp qword ptr [rcx]
0x000000000019acde : add byte ptr [rax], al ; rcl byte ptr [rax] ; out dx, al ; jmp qword ptr [rcx]
0x0000000000083a56 : add byte ptr [rax], al ; rep ret ; mov rsi, qword ptr [rsp] ; jmp rax
0x0000000000000977 : add byte ptr [rax], al ; ret
0x000000000018a2fe : add byte ptr [rax], al ; ret -0x12
0x0000000000177dc2 : add byte ptr [rax], al ; ret -3
0x000000000000ed5e : add byte ptr [rax], al ; ret 0
0x0000000000009786 : add byte ptr [rax], al ; ret 0x10
0x000000000016f366 : add byte ptr [rax], al ; ret 0x12
0x000000000000a30e : add byte ptr [rax], al ; ret 0x16
0x0000000000018616 : add byte ptr [rax], al ; ret 0x17de
0x000000000000b8e6 : add byte ptr [rax], al ; ret 0x1a
0x0000000000170d9e : add byte ptr [rax], al ; ret 0x1d4
0x0000000000171536 : add byte ptr [rax], al ; ret 0x1d5
0x0000000000007296 : add byte ptr [rax], al ; ret 0x21
0x000000000000e86e : add byte ptr [rax], al ; ret 0x23
0x000000000016fda6 : add byte ptr [rax], al ; ret 0x24
0x000000000000054c : add byte ptr [rax], al ; ret 0x2800
0x0000000000005b56 : add byte ptr [rax], al ; ret 0x2f
0x0000000000170296 : add byte ptr [rax], al ; ret 0x33
0x0000000000007236 : add byte ptr [rax], al ; ret 0x3a
0x0000000000000886 : add byte ptr [rax], al ; ret 0x440c
0x0000000000010a76 : add byte ptr [rax], al ; ret 0x51
0x000000000016eb66 : add byte ptr [rax], al ; ret 0xc
0x000000000000b757 : add byte ptr [rax], al ; ret 0xe
0x000000000016ef66 : add byte ptr [rax], al ; ret 0xf
0x0000000000000e1e : add byte ptr [rax], al ; ret 1
0x000000000000100e : add byte ptr [rax], al ; ret 2
0x000000000000ec86 : add byte ptr [rax], al ; ret 3
0x0000000000172762 : add byte ptr [rax], al ; ret 4
0x000000000016e38e : add byte ptr [rax], al ; ret 5
0x0000000000172b62 : add byte ptr [rax], al ; ret 6
0x00000000000018ea : add byte ptr [rax], al ; ret 7
0x0000000000172f62 : add byte ptr [rax], al ; ret 8
0x000000000016e766 : add byte ptr [rax], al ; ret 9
0x000000000017275e : add byte ptr [rax], al ; rol byte ptr [rax + rax], 0 ; ret 4
0x000000000018f20e : add byte ptr [rax], al ; rol byte ptr [rcx], -0x17 ; call rax
0x00000000001b7cde : add byte ptr [rax], al ; rol byte ptr [rdx], cl ; add byte ptr [rax], al ; ret 6
0x00000000001a903a : add byte ptr [rax], al ; sahf ; add dword ptr [rax], eax ; loopne 0x1a9077 ; cmc ; jmp qword ptr [rax]
0x0000000000190b1e : add byte ptr [rax], al ; sal ch, -0x17 ; call qword ptr [rcx]
0x000000000019e10a : add byte ptr [rax], al ; sbb al, -0x11 ; add byte ptr [rax], al ; push rax ; clc ; out dx, al ; jmp qword ptr [rsi]
0x000000000019cc0a : add byte ptr [rax], al ; sbb al, -0x26 ; add byte ptr [rax], al ; xor byte ptr [rdx + 0xffffffffffffffee], ah ; jmp qword ptr [rsi]
0x00000000001a8e0a : add byte ptr [rax], al ; sbb al, -0x64 ; add dword ptr [rax], eax ; xor byte ptr [rax], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001a7a0a : add byte ptr [rax], al ; sbb al, -0x78 ; add dword ptr [rax], eax ; rcr ch, -0xc ; call rbx
0x000000000019b43e : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; push rsp ; ret 0
0x000000000018f20a : add byte ptr [rax], al ; sbb al, 0 ; add byte ptr [rax], al ; rol byte ptr [rcx], -0x17 ; call rax
0x00000000001a320a : add byte ptr [rax], al ; sbb al, 0x40 ; add dword ptr [rax], eax ; rol byte ptr [rdx + rsi*8], 1 ; jmp rdx
0x0000000000193b0a : add byte ptr [rax], al ; sbb al, 0x49 ; add byte ptr [rax], al ; and byte ptr [rdx], dh ; jmp 0x193b13
0x00000000001ac22a : add byte ptr [rax], al ; sbb al, 0x72 ; add dword ptr [rax], eax ; loope 0x1ac228 ; call qword ptr [rcx]
0x0000000000196c0a : add byte ptr [rax], al ; sbb al, 0x7a ; add byte ptr [rax], al ; nop ; lahf ; in eax, dx ; call rbx
0x000000000019e006 : add byte ptr [rax], al ; sbb bh, dh ; out dx, al ; call qword ptr [rcx]
0x000000000003744e : add byte ptr [rax], al ; sbb byte ptr [rax + 0x450f4402], ch ; ret -0x76bc
0x000000000019c64e : add byte ptr [rax], al ; sbb byte ptr [rax], -0x12 ; call qword ptr [rbx]
0x0000000000191b56 : add byte ptr [rax], al ; sbb byte ptr [rdx + 0xffffffffffffffea], bl ; jmp qword ptr [rcx]
0x00000000001916d6 : add byte ptr [rax], al ; sbb byte ptr [rdx + 0xffffffffffffffea], dl ; call qword ptr [rcx]
0x00000000001a0f32 : add byte ptr [rax], al ; sbb eax, 0x3ff80001 ; int1 ; jmp qword ptr [rcx]
0x0000000000188d1e : add byte ptr [rax], al ; shr ecx, 1 ; call rsp
0x00000000001ad39f : add byte ptr [rax], al ; sti ; cmc ; call qword ptr [rax]
0x0000000000189b7e : add byte ptr [rax], al ; stosb byte ptr es:[rdi], al ; pop rbp ; in eax, dx ; call rsp
0x00000000001ab51a : add byte ptr [rax], al ; sub al, -0x3d ; add dword ptr [rax], eax ; loopne 0x1ab4f4 ; cmc ; jmp qword ptr [rsi]
0x00000000001a8d1a : add byte ptr [rax], al ; sub al, -0x65 ; add dword ptr [rax], eax ; shr byte ptr [rsi], -0xb ; jmp qword ptr [rcx]
0x00000000001a8a1a : add byte ptr [rax], al ; sub al, -0x68 ; add dword ptr [rax], eax ; add byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a821a : add byte ptr [rax], al ; sub al, -0x70 ; add dword ptr [rax], eax ; and byte ptr [rbx], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a791a : add byte ptr [rax], al ; sub al, -0x79 ; add dword ptr [rax], eax ; and ch, bl ; hlt ; jmp qword ptr [rcx]
0x0000000000190b1a : add byte ptr [rax], al ; sub al, 0x19 ; add byte ptr [rax], al ; sal ch, -0x17 ; call qword ptr [rcx]
0x00000000001a0f1a : add byte ptr [rax], al ; sub al, 0x1d ; add dword ptr [rax], eax ; loopne 0x1a0f61 ; int1 ; jmp qword ptr [rcx]
0x00000000001a611a : add byte ptr [rax], al ; sub al, 0x6f ; add dword ptr [rax], eax ; loopne 0x1a6136 ; stc ; call qword ptr [rax]
0x000000000019f91a : add byte ptr [rax], al ; sub al, 7 ; add dword ptr [rax], eax ; rcr byte ptr [rbp + 0xfffffffffffffff0] ; call qword ptr [rax]
0x000000000019b4a6 : add byte ptr [rax], al ; sub byte ptr [rax], ch ; out dx, al ; call qword ptr [rdx]
0x0000000000193d56 : add byte ptr [rax], al ; sub byte ptr [rbx + 0xffffffffffffffeb], cl ; jmp qword ptr [rsi]
0x0000000000198e46 : add byte ptr [rax], al ; sub dl, dl ; in eax, dx ; call rcx
0x000000000016195c : add byte ptr [rax], al ; sub eax, ecx ; ret
0x000000000003678d : add byte ptr [rax], al ; sub eax, edx ; sar eax, 0x10 ; ret
0x000000000010496a : add byte ptr [rax], al ; sub ecx, eax ; mov eax, ecx ; ret
0x00000000001a8a1f : add byte ptr [rax], al ; sub esi, ebp ; jmp qword ptr [rcx]
0x000000000007ca96 : add byte ptr [rax], al ; sub r8, rcx ; lea eax, dword ptr [r8 + 0xffffffffffffffff] ; ret
0x00000000001049fe : add byte ptr [rax], al ; sub r8d, eax ; mov eax, r8d ; ret
0x0000000000089271 : add byte ptr [rax], al ; sub rax, rdx ; ret
0x0000000000116f0e : add byte ptr [rax], al ; sub rsp, -0x80 ; xor eax, eax ; pop rbx ; ret
0x00000000000cc2eb : add byte ptr [rax], al ; syscall ; neg eax ; ret
0x0000000000108cf5 : add byte ptr [rax], al ; syscall ; pop rdx ; pop rsi ; ret
0x00000000000c29e3 : add byte ptr [rax], al ; syscall ; ret
0x00000000001b1272 : add byte ptr [rax], al ; test ah, byte ptr [rax] ; add al, byte ptr [rax] ; call -0x1ce4f6bd
0x0000000000191972 : add byte ptr [rax], al ; test ah, byte ptr [rdi] ; add byte ptr [rax], al ; cmp byte ptr [rsi + 0xffffffffffffffea], dl ; jmp qword ptr [rcx]
0x0000000000197b36 : add byte ptr [rax], al ; test al, -0x54 ; in eax, dx ; call qword ptr [rcx]
0x0000000000195856 : add byte ptr [rax], al ; test al, -0x75 ; in eax, dx ; call qword ptr [rdx]
0x000000000019e0c6 : add byte ptr [rax], al ; test al, -4 ; stc ; call qword ptr [rax]
0x00000000001a3772 : add byte ptr [rax], al ; test al, byte ptr [rbp + 1] ; add byte ptr [rax], ch ; xchg edx, esi ; jmp qword ptr [rax]
0x00000000001ab772 : add byte ptr [rax], al ; test al, ch ; add dword ptr [rax], eax ; sbb ah, dl ; cmc ; jmp qword ptr [rsi]
0x0000000000193072 : add byte ptr [rax], al ; test bh, byte ptr [rsi] ; add byte ptr [rax], al ; call 0x23191b1d
0x00000000001a3072 : add byte ptr [rax], al ; test bh, byte ptr [rsi] ; add dword ptr [rax], eax ; or ah, bh ; int1 ; jmp qword ptr [rcx]
0x000000000019a172 : add byte ptr [rax], al ; test ch, byte ptr [rdi + 0xfffffffff9c80000] ; in eax, dx ; call qword ptr [rax]
0x00000000001a8172 : add byte ptr [rax], al ; test cl, byte ptr [rdi + 0xa680001] ; cmc ; call rsp
0x00000000001a8872 : add byte ptr [rax], al ; test dl, byte ptr [rsi + 0x28b80001] ; cmc ; jmp qword ptr [rcx]
0x00000000000a906c : add byte ptr [rax], al ; test ebp, ebp ; mov rbx, r15 ; setne dl ; jmp 0xa9087
0x00000000000f8ccd : add byte ptr [rax], al ; test edx, edx ; cmovne eax, edx ; ret
0x000000000012c572 : add byte ptr [rax], al ; test rdx, rdx ; jne 0x12c560 ; pop rbx ; ret
0x00000000001ad4b2 : add byte ptr [rax], al ; vpshufb xmm7, xmm15, xmmword ptr [rax + 0xfffffffffffffffa] ; cmc ; jmp rsp
0x00000000001a5782 : add byte ptr [rax], al ; xchg eax, esp ; add dword ptr gs:[rax], eax ; call -0x1ce5b46d
0x00000000001a1782 : add byte ptr [rax], al ; xchg eax, esp ; and eax, 0xc7680001 ; int1 ; call qword ptr [rbx]
0x0000000000188f96 : add byte ptr [rax], al ; xchg eax, esp ; jne 0x188f85 ; jmp rsp
0x00000000001a9182 : add byte ptr [rax], al ; xchg eax, esp ; lahf ; add dword ptr [rax], eax ; mov byte ptr [rax], bh ; cmc ; jmp qword ptr [rcx]
0x000000000019e282 : add byte ptr [rax], al ; xchg eax, esp ; lock add byte ptr [rax], al ; cmp byte ptr [rsi + 0xffffffffffffffef], al ; jmp qword ptr [rsi]
0x00000000001ad382 : add byte ptr [rax], al ; xchg eax, esp ; loope 0x1ad388 ; add byte ptr [rax], cl ; sti ; cmc ; call qword ptr [rax]
0x0000000000189f9e : add byte ptr [rax], al ; xchg eax, esp ; nop ; out dx, al ; jmp rsp
0x000000000019e182 : add byte ptr [rax], al ; xchg eax, esp ; out dx, eax ; add byte ptr [rax], al ; pop rax ; adc bh, dl ; call qword ptr [rax]
0x0000000000189ade : add byte ptr [rax], al ; xchg eax, esp ; push rsi ; in eax, dx ; push rsp ; ret 0
0x0000000000189f1e : add byte ptr [rax], al ; xlatb ; mov esi, ebp ; jmp rsp
0x000000000018983e : add byte ptr [rax], al ; xor al, -0x1a ; jmp 0x189843
0x00000000001abc22 : add byte ptr [rax], al ; xor al, -0x36 ; add dword ptr [rax], eax ; or dl, bl ; cmc ; call qword ptr [rax]
0x00000000001ab622 : add byte ptr [rax], al ; xor al, -0x3c ; add dword ptr [rax], eax ; clc ; ret
0x00000000001a8e22 : add byte ptr [rax], al ; xor al, -0x64 ; add dword ptr [rax], eax ; xor bpl, sil ; jmp qword ptr [rcx]
0x0000000000195e22 : add byte ptr [rax], al ; xor al, 0x6c ; add byte ptr [rax], al ; pop rax ; xchg eax, edx ; in eax, dx ; jmp qword ptr [rax]
0x00000000001b5f22 : add byte ptr [rax], al ; xor al, 0x6d ; add al, byte ptr [rax] ; sub byte ptr [rsi], al ; sti ; jmp qword ptr [rdx]
0x00000000001a6322 : add byte ptr [rax], al ; xor al, 0x71 ; add dword ptr [rax], eax ; cmp byte ptr [rcx + 0xfffffffffffffff4], bh ; jmp qword ptr [rcx]
0x00000000000e5b04 : add byte ptr [rax], al ; xor al, al ; ret
0x000000000019b4de : add byte ptr [rax], al ; xor byte ptr [rax], ch ; out dx, al ; call qword ptr [rdx]
0x000000000019c7ae : add byte ptr [rax], al ; xor byte ptr [rbx], ah ; out dx, al ; jmp rcx
0x00000000000f135a : add byte ptr [rax], al ; xor byte ptr [rcx], -0x40 ; ret
0x000000000019417e : add byte ptr [rax], al ; xor byte ptr [rdi + 0xffffffffffffffeb], dl ; call qword ptr [rdi]
0x000000000019cc0e : add byte ptr [rax], al ; xor byte ptr [rdx + 0xffffffffffffffee], ah ; jmp qword ptr [rsi]
0x000000000019cd2e : add byte ptr [rax], al ; xor byte ptr [rdx + 0xffffffffffffffee], ch ; call qword ptr [rdi]
0x00000000001909fe : add byte ptr [rax], al ; xor ch, -0x17 ; call qword ptr [rbx]
0x00000000000a18fe : add byte ptr [rax], al ; xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x0000000000084e5c : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x18 ; ret
0x000000000013753e : add byte ptr [rax], al ; xor eax, eax ; add rsp, 0x48 ; ret
0x00000000000840fe : add byte ptr [rax], al ; xor eax, eax ; add rsp, 8 ; ret
0x000000000012220e : add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x00000000001221c7 : add byte ptr [rax], al ; xor eax, eax ; pop rbp ; jmp rcx
0x000000000003c4ab : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001360cf : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000003c04a : add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000000385d6 : add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000003d0bb : add byte ptr [rax], al ; xor eax, edx ; ret
0x00000000000a6132 : add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0xa60e0
0x00000000000a8972 : add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0xa8920
0x00000000000ab022 : add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0xaafd0
0x000000000008b701 : add byte ptr [rax], al ; xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x00000000000f68b0 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r12 ; call rbx
0x00000000000f68d5 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000000f68f9 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000000f6919 : add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000000f688b : add byte ptr [rax], al ; xor esi, esi ; mov rdi, rbp ; call rbx
0x000000000008ca1d : add byte ptr [rax], al ; xor rax, rax ; ret
0x000000000019f107 : add byte ptr [rax], bh ; adc al, -0x10 ; jmp rbx
0x00000000001a922b : add byte ptr [rax], bh ; add dword ptr [rax], eax ; xor byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a30a7 : add byte ptr [rax], bh ; cld ; int1 ; jmp qword ptr [rcx]
0x00000000001a9367 : add byte ptr [rax], bh ; cmc ; jmp rdi
0x00000000001a5f97 : add byte ptr [rax], bh ; insb byte ptr es:[rdi], dx ; hlt ; jmp qword ptr [rcx]
0x00000000001a6327 : add byte ptr [rax], bh ; jns 0x1a631f ; jmp qword ptr [rcx]
0x000000000019e287 : add byte ptr [rax], bh ; out dx, eax ; jmp qword ptr [rsi]
0x0000000000194197 : add byte ptr [rax], bh ; push rdi ; jmp 0x19419b
0x00000000001b0ef7 : add byte ptr [rax], bh ; ret -0xa
0x00000000001a8b27 : add byte ptr [rax], bh ; sub al, -0xb ; jmp qword ptr [rcx]
0x000000000019d5a7 : add byte ptr [rax], bh ; xchg eax, ebp ; out dx, al ; call qword ptr [rdx]
0x000000000019dc17 : add byte ptr [rax], bh ; xlatb ; out dx, al ; jmp rdx
0x00000000001a8ca7 : add byte ptr [rax], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a9217 : add byte ptr [rax], bl ; cmp ebp, esi ; jmp qword ptr [rcx]
0x00000000001972d7 : add byte ptr [rax], bl ; cmpsb byte ptr [rsi], byte ptr es:[rdi] ; in eax, dx ; call rcx
0x000000000019e007 : add byte ptr [rax], bl ; imul esi ; call qword ptr [rcx]
0x00000000001a8a37 : add byte ptr [rax], bl ; sub esi, ebp ; jmp qword ptr [rcx]
0x0000000000195587 : add byte ptr [rax], bl ; wait ; in al, dx ; call rdx
0x00000000001aca37 : add byte ptr [rax], ch ; in eax, dx ; cmc ; call qword ptr [rdi]
0x00000000001a6ca7 : add byte ptr [rax], ch ; mov ch, -0xc ; call rdi
0x00000000001959f7 : add byte ptr [rax], ch ; mov ebp, ebp ; call qword ptr [rax]
0x00000000001ab3e7 : add byte ptr [rax], ch ; ret
0x00000000001a1e17 : add byte ptr [rax], ch ; sal cl, cl ; jmp qword ptr [rbx]
0x00000000001ab567 : add byte ptr [rax], ch ; sal ebp, cl ; jmp qword ptr [rsi]
0x0000000000198e47 : add byte ptr [rax], ch ; shr ch, cl ; call rcx
0x000000000019b4a7 : add byte ptr [rax], ch ; sub dh, ch ; call qword ptr [rdx]
0x00000000001a3777 : add byte ptr [rax], ch ; xchg edx, esi ; jmp qword ptr [rax]
0x00000000001a91fb : add byte ptr [rax], cl ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a3077 : add byte ptr [rax], cl ; cld ; int1 ; jmp qword ptr [rcx]
0x000000000018791c : add byte ptr [rax], cl ; cld ; jmp rax
0x00000000001ad2e7 : add byte ptr [rax], cl ; cli ; cmc ; call qword ptr [rax]
0x00000000001a5267 : add byte ptr [rax], cl ; div ebx ; jmp qword ptr [rax]
0x00000000001a5f67 : add byte ptr [rax], cl ; insb byte ptr es:[rdi], dx ; hlt ; jmp qword ptr [rcx]
0x00000000001a62f7 : add byte ptr [rax], cl ; jns 0x1a62ef ; jmp qword ptr [rcx]
0x000000000002fd24 : add byte ptr [rax], cl ; movzx eax, ax ; ret
0x00000000001a8207 : add byte ptr [rax], cl ; or esi, ebp ; jmp qword ptr [rcx]
0x00000000001ac617 : add byte ptr [rax], cl ; out -0xb, al ; call qword ptr [rax]
0x0000000000198aa7 : add byte ptr [rax], cl ; ret
0x00000000001ad387 : add byte ptr [rax], cl ; sti ; cmc ; call qword ptr [rax]
0x000000000019c7af : add byte ptr [rax], dh ; and ebp, esi ; jmp rcx
0x00000000001a922f : add byte ptr [rax], dh ; cmp ebp, esi ; jmp qword ptr [rcx]
0x00000000000a18ff : add byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi], ch ; ret
0x000000000019cd2f : add byte ptr [rax], dh ; push -0x12 ; call qword ptr [rdi]
0x000000000019417f : add byte ptr [rax], dh ; push rdi ; jmp 0x194183
0x00000000001a12ef : add byte ptr [rax], dh ; ret
0x000000000019b4df : add byte ptr [rax], dh ; sub dh, ch ; call qword ptr [rdx]
0x00000000001a8a4f : add byte ptr [rax], dh ; sub esi, ebp ; jmp qword ptr [rcx]
0x00000000001a378f : add byte ptr [rax], dh ; xchg edx, esi ; jmp qword ptr [rcx]
0x00000000001a8e0f : add byte ptr [rax], dh ; xor ch, dh ; jmp qword ptr [rcx]
0x000000000000977f : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x10
0x000000000000a307 : add byte ptr [rax], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x16
0x00000000000f3115 : add byte ptr [rax], dl ; add byte ptr [rax], al ; call 0x1f410
0x000000000005dc45 : add byte ptr [rax], dl ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000005dc53 : add byte ptr [rax], dl ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x00000000001ad2cf : add byte ptr [rax], dl ; cli ; cmc ; call qword ptr [rax]
0x000000000002fe04 : add byte ptr [rax], dl ; movzx eax, ax ; ret
0x00000000001b2c0f : add byte ptr [rax], dl ; or dh, bh ; call qword ptr [rsi]
0x00000000001ac64f : add byte ptr [rax], dl ; out -0xb, al ; call qword ptr [rax]
0x000000000000e547 : add byte ptr [rax], dl ; ret
0x00000000000098c7 : add byte ptr [rax], dl ; ret 0xf
0x00000000001ab54f : add byte ptr [rax], dl ; sal ebp, cl ; jmp qword ptr [rsi]
0x00000000001ab8f8 : add byte ptr [rax], r8b ; add ah, bh ; ret 1
0x000000000019b9e8 : add byte ptr [rax], r8b ; add ah, ch ; ret
0x000000000019b8c8 : add byte ptr [rax], r8b ; add ah, cl ; ret 0
0x00000000001aeef0 : add byte ptr [rax], r8b ; add ah, dh ; clc ; add dword ptr [rax], eax ; ret
0x00000000001b6128 : add byte ptr [rax], r8b ; add byte ptr [rdi + rbp*2], bh ; add al, byte ptr [rax] ; nop ; ret -9
0x000000000011ae15 : add byte ptr [rax], r8b ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000009754d : add byte ptr [rax], r8b ; mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x00000000000c324d : add byte ptr [rax], r8b ; mov eax, 0x20 ; ret
0x00000000000751b5 : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000869dd : add byte ptr [rax], r8b ; mov eax, 0xffffffff ; ret
0x00000000000c4235 : add byte ptr [rax], r8b ; mov eax, 1 ; ret
0x000000000012c57d : add byte ptr [rax], r8b ; mov eax, 2 ; ret
0x000000000007604d : add byte ptr [rax], r8b ; mov eax, dword ptr [rdx] ; ret
0x00000000000714bd : add byte ptr [rax], r8b ; mov eax, edi ; ret
0x0000000000104bbd : add byte ptr [rax], r8b ; mov eax, edi ; sub eax, esi ; ret
0x000000000009daad : add byte ptr [rax], r8b ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x000000000010d145 : add byte ptr [rax], r8b ; mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00000000000bdebd : add byte ptr [rax], r8b ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000000470d5 : add byte ptr [rax], r8b ; mov rax, rbx ; pop rbx ; ret
0x0000000000035715 : add byte ptr [rax], r8b ; mov rax, rcx ; ret
0x00000000000922b5 : add byte ptr [rax], r8b ; mov rax, rdi ; ret
0x000000000009daed : add byte ptr [rax], r8b ; mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000009752d : add byte ptr [rax], r8b ; mov word ptr [rdi], si ; mov rax, rdi ; ret
0x000000000007b2ad : add byte ptr [rax], r8b ; or eax, 0x20 ; jmp 0x7b277
0x00000000001936b5 : add byte ptr [rax], r8b ; pop rax ; add ebx, ebp ; jmp rax
0x00000000000d331d : add byte ptr [rax], r8b ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000470cd : add byte ptr [rax], r8b ; pop rbx ; ret
0x000000000012f69d : add byte ptr [rax], r8b ; push rbx ; call 0x12b940
0x00000000000a1dad : add byte ptr [rax], r8b ; ret
0x00000000001049fd : add byte ptr [rax], r8b ; sub r8d, eax ; mov eax, r8d ; ret
0x00000000000e3e4d : add byte ptr [rax], r8b ; xor eax, eax ; add rsp, 8 ; ret
0x00000000000d301d : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000488ed : add byte ptr [rax], r8b ; xor eax, eax ; pop rbx ; ret
0x00000000000385d5 : add byte ptr [rax], r8b ; xor eax, eax ; ret
0x00000000000a387d : add byte ptr [rax], r8b ; xor rax, rax ; ret
0x0000000000136e77 : add byte ptr [rbp + 0x1e], dh ; add rsp, 0x48 ; ret
0x0000000000134ad7 : add byte ptr [rbp + 0x23], dh ; mov eax, edx ; add rsp, 8 ; ret
0x0000000000136d49 : add byte ptr [rbp + 0x24], dh ; xor eax, eax ; add rsp, 0x58 ; ret
0x0000000000079522 : add byte ptr [rbp + 0x31], al ; dec dword ptr [rax + 0x39] ; ret -0x7cf1
0x00000000000b8e52 : add byte ptr [rbp + 0x31], al ; ror byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x000000000004798e : add byte ptr [rbp + 0x39], cl ; ret -0x7cf1
0x000000000008b77e : add byte ptr [rbp + 0x480d75c0], al ; add esp, 8 ; ret
0x000000000005dbde : add byte ptr [rbp + 0x480d75c0], al ; mov eax, ebx ; pop rbx ; ret
0x00000000000a246b : add byte ptr [rbp + 0x49], bl ; lea eax, dword ptr [rcx + 1] ; pop r12 ; ret
0x00000000000539f5 : add byte ptr [rbp + 0x5c], dh ; mov eax, edx ; pop rbx ; ret
0x0000000000118d67 : add byte ptr [rbp + 0x63], cl ; ret
0x00000000001a5783 : add byte ptr [rbp + 0x6e80001], dl ; hlt ; jmp rdx
0x0000000000195793 : add byte ptr [rbp + 0x7bb80000], ah ; in eax, dx ; jmp rcx
0x0000000000136e03 : add byte ptr [rbp + 0xa], dh ; xor eax, eax ; add rsp, 0x58 ; ret
0x0000000000038c7f : add byte ptr [rbp + 0xf], cl ; lodsd eax, dword ptr [rsi] ; ret
0x0000000000038b6f : add byte ptr [rbp + 0xf], cl ; movsd dword ptr es:[rdi], dword ptr [rsi] ; ret
0x00000000000d1bdf : add byte ptr [rbp + 0xffffffff83480143], cl ; ret
0x0000000000064c7f : add byte ptr [rbp + 0xffffffff83488004], cl ; ret 0x4104
0x00000000000652cf : add byte ptr [rbp + 0xffffffff83489b04], cl ; ret 0x4104
0x00000000001887f8 : add byte ptr [rbp + 0xffffffffac90fffc], ch ; cld ; jmp qword ptr [rax]
0x00000000000f8cce : add byte ptr [rbp + 0xffffffffc2450fd2], al ; ret
0x00000000001a1783 : add byte ptr [rbp + 0xffffffffc7680001], dl ; int1 ; call qword ptr [rbx]
0x00000000001a179b : add byte ptr [rbp + 0xffffffffc7700001], ch ; int1 ; call qword ptr [rbx]
0x000000000005e327 : add byte ptr [rbp + 0xfffffffff30474c9], al ; ret
0x0000000000036bc5 : add byte ptr [rbp + 0xfffffffff30675c0], al ; ret
0x0000000000084765 : add byte ptr [rbp + 0xfffffffff30678c0], al ; ret
0x00000000000a906d : add byte ptr [rbp + 0xfffffffffb894ced], al ; setne dl ; jmp 0xa9087
0x000000000012f6eb : add byte ptr [rbp + 0xffffffffffffff85], al ; div byte ptr [rbp + 0xf] ; call 0x12b940
0x00000000000a6890 : add byte ptr [rbp + 0xffffffffffffff85], al ; in al, 0x4d ; mov ebp, esi ; setne dl ; jmp 0xa68a8
0x00000000000ab740 : add byte ptr [rbp + 0xffffffffffffff85], al ; in al, 0x4d ; mov ebp, esi ; setne dl ; jmp 0xab758
0x00000000000be62f : add byte ptr [rbp + 0xffffffffffffff89], 0x64 ; xchg eax, ebp ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4801
0x0000000000047410 : add byte ptr [rbp + 0xffffffffffffff89], cl ; ret
0x0000000000095ff8 : add byte ptr [rbp + 0xffffffffffffff89], cl ; ret -0x76b4
0x0000000000049627 : add byte ptr [rbp + 0xffffffffffffff89], cl ; ret 0xf41
0x00000000000960a8 : add byte ptr [rbp + 0xffffffffffffff8d], cl ; dec dword ptr [r13 + 0xffffffffffffff89] ; ret
0x00000000001107a7 : add byte ptr [rbp + 0xffffffffffffffc2], dh ; jmp 0x110764
0x0000000000178128 : add byte ptr [rbp + 0xffffffffffffffee], ch ; jmp rax
0x0000000000179580 : add byte ptr [rbp + 0xfffffffffffffff2], ah ; jmp qword ptr [rax]
0x0000000000179460 : add byte ptr [rbp + 0xfffffffffffffff2], dl ; jmp qword ptr [rax]
0x000000000018cee7 : add byte ptr [rbp + 0xfffffffffffffff7], dl ; call rsp
0x0000000000187dd4 : add byte ptr [rbp + 0xfffffffffffffffc], ah ; call qword ptr [rax + 0x20fffc64]
0x0000000000188550 : add byte ptr [rbp + 0xfffffffffffffffc], bl ; jmp qword ptr [rax]
0x00000000001a176b : add byte ptr [rbp + 1], bh ; add byte ptr [rax + 0xffffffffffffffc7], ah ; int1 ; call qword ptr [rsi]
0x00000000000487fa : add byte ptr [rbp + 3], dh ; pop rbx ; ret
0x0000000000106a5d : add byte ptr [rbp + 7], dh ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012f5f6 : add byte ptr [rbp + 7], dh ; ret
0x0000000000125de8 : add byte ptr [rbp + rax + 0x48], dh ; add esp, 0x48 ; ret
0x00000000001ab773 : add byte ptr [rbp + rax*8 + 0xffffffffd4180001], al ; cmc ; jmp qword ptr [rsi]
0x00000000001ab78b : add byte ptr [rbp + rax*8 + 0xffffffffd4300001], bl ; cmc ; jmp qword ptr [rsi]
0x00000000001ab7a3 : add byte ptr [rbp + rax*8 + 0xffffffffd4480001], dh ; cmc ; jmp qword ptr [rsi]
0x00000000001ab743 : add byte ptr [rbp + rax*8 + 1], dl ; add al, ch ; sal ebp, cl ; jmp qword ptr [rsi]
0x00000000000c3328 : add byte ptr [rbp + rbp + 0xffffffffffffffb8], dh ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000018d697 : add byte ptr [rbp + rbp + 0xfffffffffffffff8], dl ; jmp rsp
0x00000000001a5f7b : add byte ptr [rbp + rbp*2 + 0x6c200001], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001a5f93 : add byte ptr [rbp + rbp*2 + 0x6c380001], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001a5fab : add byte ptr [rbp + rbp*2 + 0x6c500001], bh ; hlt ; jmp qword ptr [rcx]
0x0000000000188e4f : add byte ptr [rbp + rbp*2 + 0xffffffffffffffea], ah ; call rsp
0x00000000001a5f63 : add byte ptr [rbp + rbp*2 + 1], dh ; add byte ptr [rax], cl ; insb byte ptr es:[rdi], dx ; hlt ; jmp qword ptr [rcx]
0x00000000001b4f33 : add byte ptr [rbp + rbx*2 + 2], al ; add al, ch ; mov bh, dh ; call qword ptr [rdx]
0x00000000001a8f5b : add byte ptr [rbp + rbx*4 + 1], ch ; add al, ah ; xor dh, ch ; jmp qword ptr [rcx]
0x00000000001a8f43 : add byte ptr [rbp + rbx*4 + 1], dl ; add al, cl ; xor dh, ch ; jmp qword ptr [rcx]
0x000000000019cf93 : add byte ptr [rbp + rbx*8 + 0x78e80000], ah ; out dx, al ; jmp qword ptr [rcx]
0x00000000000a4c09 : add byte ptr [rbp + rcx*4 + 0x4c], cl ; and al, 0x28 ; call rbx
0x00000000000d5707 : add byte ptr [rbp + rcx*4 + 0x65], cl ; or byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x0000000000117e12 : add byte ptr [rbp + rcx*4 + 0xd], cl ; ret 0x2a
0x0000000000117dfa : add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x2a
0x00000000000fffce : add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x2c2c
0x00000000000c090e : add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x3019
0x00000000001a2f6b : add byte ptr [rbp + rdi + 1], bh ; add al, al ; cli ; int1 ; jmp qword ptr [rcx]
0x00000000001a6f7b : add byte ptr [rbp + rdi*2 + 0xffffffffbc200001], cl ; hlt ; jmp qword ptr [rcx]
0x000000000018b087 : add byte ptr [rbp + rdi*4 + 0xfffffffffffffff0], dh ; call rsp
0x000000000019c7ab : add byte ptr [rbp + rdx*8 + 0x23300000], bh ; out dx, al ; jmp rcx
0x000000000019658b : add byte ptr [rbp + rdx], bh ; add byte ptr [rax + 0xffffffffffffff95], ah ; in eax, dx ; jmp rsi
0x000000000018da67 : add byte ptr [rbp + rsi*2 + 0xfffffffffffffff8], dh ; jmp rsp
0x00000000001b5f23 : add byte ptr [rbp*2 + 0x6280002], dh ; sti ; jmp qword ptr [rdx]
0x0000000000010a6f : add byte ptr [rbp], dl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x51
0x000000000013a0e9 : add byte ptr [rbx + 0x148b8104], cl ; xchg eax, ecx ; sub eax, edx ; ret
0x0000000000073b7f : add byte ptr [rbx + 0x2002507], cl ; add byte ptr [rax], al ; ret
0x00000000000a277e : add byte ptr [rbx + 0x25], bl ; add ah, bh ; add eax, dword ptr [rax] ; ret
0x0000000000077648 : add byte ptr [rbx + 0x275fff8], al ; pop rbx ; ret
0x00000000000fd45d : add byte ptr [rbx + 0x2c553c0d], cl ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x3eb8
0x000000000007d565 : add byte ptr [rbx + 0x34445705], al ; add byte ptr [rcx], al ; ret
0x0000000000032126 : add byte ptr [rbx + 0x392f430d], cl ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x0000000000031d58 : add byte ptr [rbx + 0x3933113d], cl ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x00000000000d4c03 : add byte ptr [rbx + 0x394104c0], al ; ret 0x697e
0x00000000000e1ce8 : add byte ptr [rbx + 0x3978244c], cl ; ret 0x1472
0x000000000018d737 : add byte ptr [rbx + 0x3c], ch ; clc ; jmp rsp
0x00000000001a0f1b : add byte ptr [rbx + 0x3fe00001], ch ; int1 ; jmp qword ptr [rcx]
0x00000000000c2bb0 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000010b8c8 : add byte ptr [rbx + 0x41], bl ; pop rsp ; pop r13 ; pop rbp ; ret
0x000000000009dabf : add byte ptr [rbx + 0x477880e], cl ; mov dword ptr [rdi], ecx ; ret
0x000000000015d7ef : add byte ptr [rbx + 0x48028901], cl ; lea eax, dword ptr [rdx + 3] ; ret
0x0000000000160b9f : add byte ptr [rbx + 0x48028901], cl ; mov eax, edi ; ret
0x0000000000037075 : add byte ptr [rbx + 0x48082444], cl ; add esp, 0x18 ; ret
0x00000000000c1833 : add byte ptr [rbx + 0x480c2444], cl ; add esp, 0x28 ; ret
0x000000000009fedf : add byte ptr [rbx + 0x48178916], cl ; lea eax, dword ptr [rdi + 4] ; ret
0x00000000000700f0 : add byte ptr [rbx + 0x48], bl ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000014d8bf : add byte ptr [rbx + 0x5789fc56], cl ; cld ; ret
0x00000000000712c6 : add byte ptr [rbx + 0x5d], bl ; mov eax, edx ; pop r12 ; ret
0x00000000000f146e : add byte ptr [rbx + 0x5d], bl ; mov eax, r9d ; pop r12 ; ret
0x00000000000247fd : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fef2 : add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000002199b : add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000001f511 : add byte ptr [rbx + 0x5d], bl ; ret
0x000000000007afdf : add byte ptr [rbx + 0x5d], bl ; xor eax, eax ; pop r12 ; ret
0x000000000007427f : add byte ptr [rbx + 0x5e8c107], cl ; and eax, 1 ; ret
0x000000000012455e : add byte ptr [rbx + 0x634801ea], al ; ret -0x2d7b
0x000000000009e1a9 : add byte ptr [rbx + 0x63], cl ; or al, -0x7d ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000e51bf : add byte ptr [rbx + 0x6890447], cl ; xor eax, eax ; ret
0x000000000004f016 : add byte ptr [rbx + 0x7501046a], al ; ret
0x0000000000073b4f : add byte ptr [rbx + 0x8042507], cl ; add byte ptr [rax], al ; ret
0x00000000000bac3f : add byte ptr [rbx + 0xb7401fe], al ; xor eax, eax ; ret
0x00000000000a610d : add byte ptr [rbx + 0xd7413f8], al ; mov edx, eax ; jmp 0xa60e0
0x00000000000a894d : add byte ptr [rbx + 0xd7413f8], al ; mov edx, eax ; jmp 0xa8920
0x00000000000aaffd : add byte ptr [rbx + 0xd7413f8], al ; mov edx, eax ; jmp 0xaafd0
0x000000000019d358 : add byte ptr [rbx + 0xe], cl ; adc byte ptr [rbx + 0xa440202], al ; ret
0x00000000001afe28 : add byte ptr [rbx + 0xe], dl ; adc byte ptr [rbx + 0x1990302], al ; ret
0x00000000000227cf : add byte ptr [rbx + 0xffffffff834801c0], al ; ret -0x39ff
0x000000000011486f : add byte ptr [rbx + 0xffffffff834801c0], al ; ret 0x3904
0x00000000000caf47 : add byte ptr [rbx + 0xffffffff834801c0], al ; ret 0x4408
0x000000000007ac6f : add byte ptr [rbx + 0xffffffff834801c1], al ; ret -0x39ff
0x00000000000d1aaf : add byte ptr [rbx + 0xffffffff834801c5], al ; ret
0x00000000000bae87 : add byte ptr [rbx + 0xffffffff83480473], cl ; ret
0x0000000000116510 : add byte ptr [rbx + 0xffffffff8348247c], cl ; call qword ptr [rax]
0x00000000000e0229 : add byte ptr [rbx + 0xffffffff840f0ff8], al ; ret 0x16
0x0000000000164706 : add byte ptr [rbx + 0xffffffff840f12f9], al ; ret 2
0x00000000000ee183 : add byte ptr [rbx + 0xffffffff840f3043], cl ; ret
0x000000000004db64 : add byte ptr [rbx + 0xffffffff850f01c0], al ; ret -4
0x00000000000769e0 : add byte ptr [rbx + 0xffffffff850f01f8], al ; ret
0x0000000000030f25 : add byte ptr [rbx + 0xffffffff850f05f8], al ; ret -6
0x00000000000ef70a : add byte ptr [rbx + 0xffffffff8530247c], cl ; dec dword ptr [rdi] ; xchg eax, esp ; ret 0x7c83
0x0000000000021dff : add byte ptr [rbx + 0xffffffff85d23100], cl ; ror byte ptr [rdi], -0x6c ; ret -0x72b8
0x0000000000020562 : add byte ptr [rbx + 0xffffffff8900b87d], al ; ret
0x00000000000fb21a : add byte ptr [rbx + 0xffffffff8914244c], cl ; ret
0x00000000000221fc : add byte ptr [rbx + 0xffffffff89410fe7], al ; ret 0xb8
0x000000000011a200 : add byte ptr [rbx + 0xffffffff8e0f06fb], al ; ret 1
0x000000000019d5a3 : add byte ptr [rbx + 0xffffffff95380000], dh ; out dx, al ; call qword ptr [rdx]
0x0000000000195583 : add byte ptr [rbx + 0xffffffff9b180000], dl ; in al, dx ; call rdx
0x00000000000f0739 : add byte ptr [rbx + 0xffffffff9ee83c7b], cl ; ret
0x00000000000b7c78 : add byte ptr [rbx + 0xffffffffaf0f13e8], al ; ret -0x76bf
0x000000000011ce46 : add byte ptr [rbx + 0xffffffffc0851840], cl ; jne 0x11ce50 ; ret
0x00000000000775c7 : add byte ptr [rbx + 0xffffffffc4834802], cl ; sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000002e9ff : add byte ptr [rbx + 0xffffffffc78301c0], al ; add dword ptr [rax + 0xffffffffffffff83], ecx ; ret -0x7cf0
0x00000000000e6414 : add byte ptr [rbx + 0xffffffffe844247c], cl ; ret 0x66
0x00000000000602f2 : add byte ptr [rbx + 0xffffffffffee94bd], al ; call qword ptr [rax]
0x000000000005ffde : add byte ptr [rbx + 0xffffffffffeee8bd], al ; call qword ptr [rax]
0x00000000000cd2f8 : add byte ptr [rbx + 0xffffffffffff60bd], al ; jmp qword ptr [rdx]
0x0000000000081078 : add byte ptr [rbx + 0xffffffffffffff83], cl ; cmp al, 8 ; add dword ptr [rax + 0x39], ecx ; ret
0x0000000000080f8f : add byte ptr [rbx + 0xffffffffffffff83], cl ; sub al, 8 ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000000fa44f : add byte ptr [rbx + 0xffffffffffffff83], dl ; call qword ptr [rcx]
0x000000000011d507 : add byte ptr [rbx + 0xffffffffffffff89], al ; scasd eax, dword ptr es:[rdi] ; or bl, ch ; ret 0x4890
0x0000000000070ad4 : add byte ptr [rbx + 0xffffffffffffff89], bl ; call -0x3c9cb3c7
0x0000000000048854 : add byte ptr [rbx + 0xffffffffffffff8b], bl ; pop rax ; ret
0x0000000000047ebf : add byte ptr [rbx + 0xffffffffffffff8d], al ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x00000000000a2808 : add byte ptr [rbx + 0xffffffffffffffc3], bl ; mov eax, 0x20 ; pop rbx ; ret
0x00000000000a2801 : add byte ptr [rbx + 0xffffffffffffffc3], bl ; mov eax, 0x30 ; pop rbx ; ret
0x00000000000a27fa : add byte ptr [rbx + 0xffffffffffffffc3], bl ; mov eax, 0x40 ; pop rbx ; ret
0x00000000000a27f3 : add byte ptr [rbx + 0xffffffffffffffc3], bl ; mov eax, 0x60 ; pop rbx ; ret
0x00000000000a27ec : add byte ptr [rbx + 0xffffffffffffffc3], bl ; mov eax, 0x80 ; pop rbx ; ret
0x00000000000a280f : add byte ptr [rbx + 0xffffffffffffffc3], bl ; mov eax, 8 ; pop rbx ; ret
0x000000000002ca8d : add byte ptr [rbx + 0xffffffffffffffc3], bl ; test esi, esi ; je 0x2ca59 ; pop rbx ; ret
0x000000000018aba7 : add byte ptr [rbx + 0xffffffffffffffcc], bh ; out dx, eax ; call rsp
0x0000000000178e58 : add byte ptr [rbx + 0xffffffffffffffef], dl ; inc dword ptr [rax + 0x53] ; out dx, eax ; call qword ptr [rax]
0x0000000000187364 : add byte ptr [rbx + 0xfffffffffffffffb], dl ; jmp rax
0x00000000000007bc : add byte ptr [rbx + 1], al ; ret 0x102
0x000000000000b27f : add byte ptr [rbx + 1], bl ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001b7cdb : add byte ptr [rbx + 2], cl ; add byte ptr [rax], al ; rol byte ptr [rdx], cl ; add byte ptr [rax], al ; ret 6
0x000000000016304a : add byte ptr [rbx + rax + 0xfffffffffffffff7], bh ; fadd st(3) ; ret
0x00000000001ab57b : add byte ptr [rbx + rax*8 + 0xffffffffd3400001], cl ; cmc ; jmp qword ptr [rsi]
0x00000000001ab593 : add byte ptr [rbx + rax*8 + 0xffffffffd3580001], ah ; cmc ; jmp qword ptr [rsi]
0x00000000001ab5ab : add byte ptr [rbx + rax*8 + 0xffffffffd3700001], bh ; cmc ; jmp qword ptr [rsi]
0x000000000018a317 : add byte ptr [rbx + rax*8 + 0xffffffffffffffee], dl ; jmp rsp
0x00000000001ab533 : add byte ptr [rbx + rax*8 + 1], al ; add al, bh ; sal ch, cl ; jmp qword ptr [rsi]
0x00000000001ab54b : add byte ptr [rbx + rax*8 + 1], bl ; add byte ptr [rax], dl ; sal ebp, cl ; jmp qword ptr [rsi]
0x00000000001ab563 : add byte ptr [rbx + rax*8 + 1], dh ; add byte ptr [rax], ch ; sal ebp, cl ; jmp qword ptr [rsi]
0x00000000001ab51b : add byte ptr [rbx + rax*8], ch ; add dword ptr [rax], eax ; loopne 0x1ab4f4 ; cmc ; jmp qword ptr [rsi]
0x00000000001b5d8b : add byte ptr [rbx + rbp*2 + 0x7600002], bl ; sti ; jmp qword ptr [rdx]
0x00000000001a5cfb : add byte ptr [rbx + rbp*2], cl ; add dword ptr [rax], eax ; jo 0x1a5d66 ; hlt ; jmp qword ptr [rdi]
0x0000000000197b33 : add byte ptr [rbx + rbp], ah ; add byte ptr [rax], al ; test al, -0x54 ; in eax, dx ; call qword ptr [rcx]
0x00000000001a8dab : add byte ptr [rbx + rbx*4 + 0x2f800001], bh ; cmc ; call qword ptr [rsi]
0x00000000001a8d1b : add byte ptr [rbx + rbx*4], ch ; add dword ptr [rax], eax ; shr byte ptr [rsi], -0xb ; jmp qword ptr [rcx]
0x00000000001a8d03 : add byte ptr [rbx + rbx*4], dl ; add dword ptr [rax], eax ; test al, 0x2e ; cmc ; jmp qword ptr [rcx]
0x000000000019cd8b : add byte ptr [rbx + rbx*8 + 0x6cf00000], bl ; out dx, al ; call qword ptr [rsi]
0x000000000019cd2b : add byte ptr [rbx + rbx*8], bh ; add byte ptr [rax], al ; xor byte ptr [rdx + 0xffffffffffffffee], ch ; call qword ptr [rdi]
0x0000000000075a92 : add byte ptr [rbx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x0000000000132ac7 : add byte ptr [rbx + rcx*4 + 0x3d], cl ; cdq ; ret
0x0000000000130c42 : add byte ptr [rbx + rcx*4 + 0x4d], al ; mov byte ptr [rax + 1], cl ; ret
0x0000000000039d17 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 0x29], cl ; ret -0x76b4
0x0000000000038587 : add byte ptr [rbx + rcx*4 + 0x57], cl ; or byte ptr [rcx + 1], cl ; ret -0x76b4
0x00000000000dae4f : add byte ptr [rbx + rcx*4 + 0x78], cl ; or byte ptr [rax + 0x63], cl ; ret -0x3eb8
0x000000000018e437 : add byte ptr [rbx + rcx*8], al ; stc ; call rsp
0x00000000001abd03 : add byte ptr [rbx + rcx*8], dl ; add dword ptr [rax], eax ; fdivrp st(5) ; call qword ptr [rax]
0x000000000018bf57 : add byte ptr [rbx + rdi], dh ; cmc ; call rsp
0x00000000001a84f3 : add byte ptr [rbx + rdx*4], al ; add dword ptr [rax], eax ; sub byte ptr [rdi], bl ; cmc ; jmp qword ptr [rdx]
0x00000000001ac5ab : add byte ptr [rbx + rdx*8 + 0xffffffffe5e00001], bh ; cmc ; call qword ptr [rax]
0x00000000001ac593 : add byte ptr [rbx + rdx*8 + 0xffffffffe5e80001], ah ; cmc ; call qword ptr [rax]
0x0000000000189557 : add byte ptr [rbx], ah ; cmp ch, bl ; call rsp
0x000000000019d56b : add byte ptr [rbx], bh ; add byte ptr [rax + 0xffffffffffffff8b], dl ; cld ; call qword ptr [rdx]
0x000000000018e67f : add byte ptr [rbx], bh ; and edx, edi ; call rsp
0x00000000001a8a20 : add byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000054366 : add byte ptr [rcx + 0x1b802], cl ; add byte ptr [rax], al ; ret
0x000000000018d5e7 : add byte ptr [rcx + 0x23], al ; clc ; call rsp
0x00000000000430f8 : add byte ptr [rcx + 0x29], cl ; ret
0x000000000015b4af : add byte ptr [rcx + 0x3518911], cl ; ret
0x00000000001148d2 : add byte ptr [rcx + 0x39], al ; ret
0x00000000001150e7 : add byte ptr [rcx + 0x39], al ; ret -0x7bf1
0x000000000008d416 : add byte ptr [rcx + 0x39], cl ; ror byte ptr [rdi + rcx + 0x47], 1 ; ret -0x76b4
0x00000000000647bc : add byte ptr [rcx + 0x415d5bc8], cl ; pop rsp ; pop r13 ; ret
0x00000000000493fe : add byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; ret
0x00000000000f5451 : add byte ptr [rcx + 0x415d5bd8], cl ; pop rsp ; ret
0x0000000000071582 : add byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x000000000015b48f : add byte ptr [rcx + 0x4518811], cl ; ret
0x000000000009ea8f : add byte ptr [rcx + 0x4578817], cl ; ret
0x000000000007c726 : add byte ptr [rcx + 0x48d231d1], cl ; mov eax, dword ptr [rax + 0x48] ; jmp rax
0x0000000000080d2c : add byte ptr [rcx + 0x548d48cf], cl ; ret
0x00000000000e26c5 : add byte ptr [rcx + 0x5bc03128], cl ; pop rbp ; pop r12 ; ret
0x00000000001345e6 : add byte ptr [rcx + 0x5c], al ; jmp rax
0x0000000000021aa0 : add byte ptr [rcx + 0x5c], al ; ret
0x0000000000053931 : add byte ptr [rcx + 0x5d], al ; ret
0x0000000000053863 : add byte ptr [rcx + 0x5e], al ; ret
0x00000000001438ae : add byte ptr [rcx + 0x63], cl ; adc al, -0x6d ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000006dd07 : add byte ptr [rcx + 0x63], cl ; add al, -0x80 ; add rax, r8 ; jmp rax
0x0000000000160c0c : add byte ptr [rcx + 0x63], cl ; or al, -0x6d ; add rcx, r11 ; jmp rcx
0x000000000009d938 : add byte ptr [rcx + 0x63], cl ; or al, -0x6d ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000c820f : add byte ptr [rcx + 0x63], cl ; ret
0x000000000002fecf : add byte ptr [rcx + 0x7fe083f8], cl ; ret
0x00000000000e1c8c : add byte ptr [rcx + 0xf], al ; mov dh, 4 ; or byte ptr [rcx], bh ; ret 0x1472
0x00000000000cffd5 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret -0x72b9
0x00000000000490d2 : add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret -0x7cb8
0x000000000007e1cd : add byte ptr [rcx + 0xf], al ; xchg eax, esi ; ret -0x7cb8
0x00000000000b28b3 : add byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret -0x76b4
0x00000000001880e8 : add byte ptr [rcx + 0xffffffff8890fffc], cl ; cld ; jmp qword ptr [rax]
0x00000000000b431a : add byte ptr [rcx + 0xffffffff89242444], cl ; ret
0x00000000000e51cf : add byte ptr [rcx + 0xffffffffc0310477], cl ; ret
0x00000000001a13ab : add byte ptr [rcx + 0xffffffffc5600001], bh ; int1 ; call qword ptr [rdx]
0x00000000000c29aa : add byte ptr [rcx + 0xfffffffff3027ed0], cl ; ret
0x000000000009754f : add byte ptr [rcx + 0xfffffffff889480f], cl ; ret
0x00000000001ad39b : add byte ptr [rcx + 0xfffffffffb000001], ch ; cmc ; call qword ptr [rax]
0x00000000001ad383 : add byte ptr [rcx + 0xfffffffffb080001], dl ; cmc ; call qword ptr [rax]
0x00000000000342b5 : add byte ptr [rcx + 0xffffffffffaaaae2], al ; call rcx
0x00000000000eaaa7 : add byte ptr [rcx + 0xffffffffffffff80], al ; jmp qword ptr [rdi]
0x00000000000eaa17 : add byte ptr [rcx + 0xffffffffffffff80], al ; jmp qword ptr [rdx]
0x0000000000066694 : add byte ptr [rcx + 0xffffffffffffff83], al ; in eax, dx ; add dword ptr [rax + 1], ecx ; ret
0x0000000000045751 : add byte ptr [rcx + 0xffffffffffffff83], al ; ret
0x0000000000022917 : add byte ptr [rcx + 0xffffffffffffff83], al ; ret 0x4101
0x00000000000249ce : add byte ptr [rcx + 0xffffffffffffff83], cl ; ret
0x0000000000064fa4 : add byte ptr [rcx + 0xffffffffffffff83], cl ; ret -0x7aff
0x000000000006714d : add byte ptr [rcx + 0xffffffffffffff83], cl ; ret 0x4101
0x00000000000d2c8f : add byte ptr [rcx + 0xffffffffffffff83], cl ; ret 0x4104
0x000000000007f4ef : add byte ptr [rcx + 0xffffffffffffff83], cl ; ret 0x4908
0x00000000000d4dba : add byte ptr [rcx + 0xffffffffffffff83], cl ; ret 0x4c01
0x000000000013825f : add byte ptr [rcx + 0xffffffffffffff83], cl ; ret 0x7f10
0x0000000000087dcf : add byte ptr [rcx + 0xffffffffffffff83], cl ; ret 0xf10
0x0000000000080e9d : add byte ptr [rcx + 0xffffffffffffff83], cl ; sub al, 8 ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000000c711b : add byte ptr [rcx + 0xffffffffffffff89], al ; ret
0x0000000000020bef : add byte ptr [rcx + 0xffffffffffffff89], al ; xor al, -0x77 ; inc dword ptr [rdi + 4] ; ret
0x000000000004bfef : add byte ptr [rcx + 0xffffffffffffff89], cl ; add bl, ch ; ret
0x000000000002105d : add byte ptr [rcx + 0xffffffffffffff89], cl ; ret
0x000000000008c123 : add byte ptr [rcx + 0xffffffffffffff89], cl ; ret -0x72b8
0x00000000000627b7 : add byte ptr [rcx + 0xffffffffffffff89], cl ; ret -0x74b4
0x000000000004b7ee : add byte ptr [rcx + 0xffffffffffffff89], cl ; ret -0x74bc
0x000000000003ffbc : add byte ptr [rcx + 0xffffffffffffff89], cl ; ret -0x76b4
0x0000000000047314 : add byte ptr [rcx + 0xffffffffffffff89], cl ; ret 0x18b9
0x000000000005afa7 : add byte ptr [rcx + 0xffffffffffffff89], cl ; ret 0x32e9
0x0000000000033d05 : add byte ptr [rcx + 0xffffffffffffff89], cl ; ret 0x65e9
0x0000000000035d1b : add byte ptr [rcx + 0xffffffffffffff89], cl ; ret 0xf41
0x00000000000e434f : add byte ptr [rcx + 0xffffffffffffff8b], al ; add byte ptr [r9], r15b ; ret -0x78f1
0x00000000000e347f : add byte ptr [rcx + 0xffffffffffffff8b], cl ; cmp byte ptr [r8 + 0xffffffffffffff89], r9b ; ret -0x76b8
0x00000000001061d0 : add byte ptr [rcx + 0xffffffffffffff8b], cl ; cmp byte ptr [rax + 0xffffffffffffff89], r9b ; ret 0x2b49
0x0000000000131f6f : add byte ptr [rcx + 0xffffffffffffff8b], cl ; push rdi ; or byte ptr [rcx + rcx*4 + 0x2c], cl ; ret -0x74bf
0x00000000001304f7 : add byte ptr [rcx + 0xffffffffffffff8b], cl ; push rsi ; sbb byte ptr [rcx + rcx*4 + 0x24], cl ; ret -0x74bf
0x0000000000047866 : add byte ptr [rcx + 0xffffffffffffff8b], cl ; ret
0x000000000004601c : add byte ptr [rcx + 0xffffffffffffff8d], cl ; cmp al, -0x11 ; call 0x92310
0x0000000000098137 : add byte ptr [rcx + 0xffffffffffffffb8], al ; cmp eax, 0xeb000000 ; ret
0x00000000000badc0 : add byte ptr [rcx + 0xffffffffffffffbb], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xbad8b
0x000000000004506d : add byte ptr [rcx + 0xffffffffffffffbd], al ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x000000000000245f : add byte ptr [rcx + 0xffffffffffffffdd], al ; out -0x57, al ; ret -0x42f9
0x000000000018a0d7 : add byte ptr [rcx + 0xffffffffffffffee], al ; jmp rsp
0x00000000001795f0 : add byte ptr [rcx + 0xfffffffffffffff2], ch ; call qword ptr [rax]
0x00000000001793b8 : add byte ptr [rcx + 0xfffffffffffffff2], dl ; jmp qword ptr [rax]
0x000000000018696f : add byte ptr [rcx + 0xfffffffffffffff3], bl ; clc ; ret 0x6e1f
0x000000000008116c : add byte ptr [rcx + 0xfffffffffffffff6], al ; ret 0xf01
0x000000000008cb52 : add byte ptr [rcx + 0xfffffffffffffff7], cl ; ret 1
0x000000000008cb78 : add byte ptr [rcx + 0xfffffffffffffff7], cl ; ret 2
0x0000000000187bfc : add byte ptr [rcx + 0xfffffffffffffffc], ah ; call qword ptr [rax + 0x20fffc60]
0x00000000000a20df : add byte ptr [rcx + 1], cl ; ret
0x0000000000060679 : add byte ptr [rcx + 1], cl ; ret 0x3145
0x00000000001a9363 : add byte ptr [rcx + 1], dh ; add byte ptr [rax], bh ; cmc ; jmp rdi
0x000000000018a567 : add byte ptr [rcx + 2], cl ; out dx, eax ; call rsp
0x0000000000000881 : add byte ptr [rcx + 4], cl ; or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x0000000000084543 : add byte ptr [rcx + rax + 0xffffffffffffffe8], cl ; jmp rax
0x000000000018d387 : add byte ptr [rcx + rax + 0xfffffffffffffff8], ah ; jmp rsp
0x000000000018c2bf : add byte ptr [rcx + rax*2 + 0xfffffffffffffff6], al ; call rsp
0x00000000001a735b : add byte ptr [rcx + rax*4 + 1], ch ; add byte ptr [rax + 0xffffffffffffffca], al ; hlt ; jmp qword ptr [rcx]
0x000000000019b343 : add byte ptr [rcx + rax*8], dl ; add byte ptr [rax + 0x22], ch ; out dx, al ; jmp qword ptr [rax]
0x00000000000a3d1f : add byte ptr [rcx + rbp + 0xffffffffffffffc0], al ; ret
0x000000000018e6d7 : add byte ptr [rcx + rbp + 0xfffffffffffffffa], dl ; call rsp
0x00000000001a5b13 : add byte ptr [rcx + rbp*2], ah ; add dword ptr [rax], eax ; test al, 0x61 ; hlt ; jmp qword ptr [rbx]
0x000000000018aa6f : add byte ptr [rcx + rbp*4 + 0xffffffffffffffef], dl ; jmp rsp
0x000000000019db83 : add byte ptr [rcx + rbp*8 + 0xffffffffbc880000], dl ; out dx, al ; jmp qword ptr [rax]
0x00000000001a8b53 : add byte ptr [rcx + rbx*4 + 1], ah ; add byte ptr [rax + 0x2c], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a8b3b : add byte ptr [rcx + rbx*4 + 1], cl ; add byte ptr [rax + 0x2c], dl ; cmc ; jmp qword ptr [rcx]
0x0000000000190b1b : add byte ptr [rcx + rbx], ch ; add byte ptr [rax], al ; sal ch, -0x17 ; call qword ptr [rcx]
0x000000000016e75f : add byte ptr [rcx + rcx + 0x9bf0000], bh ; add byte ptr [rax], al ; ret 9
0x000000000010867c : add byte ptr [rcx + rcx + 0xfffffffffffffff3], dh ; ret
0x0000000000193b0b : add byte ptr [rcx + rcx*2], bl ; add byte ptr [rax], al ; and byte ptr [rdx], dh ; jmp 0x193b13
0x00000000000bf360 : add byte ptr [rcx + rcx*4 + 0x10], ah ; add rsp, 0x18 ; ret
0x0000000000092af7 : add byte ptr [rcx + rcx*4 + 0x4f], cl ; cmp bl, dh ; ret
0x00000000000814a7 : add byte ptr [rcx + rcx*4 + 0x74], cl ; and al, 0x28 ; mov rdi, r14 ; call qword ptr [rax]
0x0000000000079320 : add byte ptr [rcx + rcx*4 + 0xffffffffffffffc2], al ; jmp 0x792bb
0x00000000000f1544 : add byte ptr [rcx + rcx*4 + 0xffffffffffffffc8], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000861b1 : add byte ptr [rcx + rcx*4 + 0xffffffffffffffe2], cl ; mov rdi, r15 ; call rax
0x0000000000085fa1 : add byte ptr [rcx + rcx*4 + 0xffffffffffffffe6], cl ; mov rdi, rbx ; call rax
0x00000000000f6b31 : add byte ptr [rcx + rcx*4 + 0xffffffffffffffe7], cl ; call rbx
0x00000000000a5433 : add byte ptr [rcx + rcx*4 + 0xffffffffffffffe9], cl ; mov rdi, rbp ; call rbx
0x00000000000a4e38 : add byte ptr [rcx + rcx*4 + 0xffffffffffffffea], cl ; mov rdi, rbp ; call rbx
0x0000000000120bf9 : add byte ptr [rcx + rcx*4 + 0xffffffffffffffef], cl ; call qword ptr [rax]
0x00000000000f7387 : add byte ptr [rcx + rcx*4 + 0xffffffffffffffef], cl ; call rbx
0x00000000000771e0 : add byte ptr [rcx + rcx*4 + 0xfffffffffffffff2], cl ; mov rdi, rbx ; call rax
0x0000000000085d33 : add byte ptr [rcx + rcx*4 + 0xfffffffffffffff6], cl ; call rax
0x00000000001065c0 : add byte ptr [rcx + rcx*4 + 0xfffffffffffffff7], cl ; call 0x1028b0
0x00000000000f6975 : add byte ptr [rcx + rcx*4 + 0xfffffffffffffff7], cl ; call rbx
0x0000000000023f6c : add byte ptr [rcx + rcx*4 + 0xfffffffffffffff7], cl ; mov rax, qword ptr [rbp + 0xffffffffffffffa0] ; call rax
0x0000000000111b18 : add byte ptr [rcx + rcx*4 + 0xfffffffffffffffa], cl ; mov rdi, r12 ; call rax
0x0000000000070810 : add byte ptr [rcx + rcx*4 + 0xffffffffffffffff], al ; call 0xecae9
0x0000000000075904 : add byte ptr [rcx + rcx*4 + 0xffffffffffffffff], cl ; call 0x71b80
0x00000000001209f1 : add byte ptr [rcx + rcx*4 + 0xffffffffffffffff], cl ; call qword ptr [rax]
0x00000000000f6966 : add byte ptr [rcx + rcx*4 + 0xffffffffffffffff], cl ; call rbx
0x00000000000f44cf : add byte ptr [rcx + rcx*8 + 0xffffffff83487174], al ; ret
0x00000000001abafb : add byte ptr [rcx + rcx*8], cl ; add dword ptr [rax], eax ; loopne 0x1abaa9 ; sti ; jmp qword ptr [rsi]
0x000000000018fb33 : add byte ptr [rcx + rcx], al ; add byte ptr [rax + 0x5f], bh ; std ; jmp qword ptr [rdx]
0x00000000001a2b43 : add byte ptr [rcx + rdi + 1], dl ; add byte ptr [rax + 0xffffffffffffffea], cl ; int1 ; jmp qword ptr [rcx]
0x0000000000086d24 : add byte ptr [rcx + rdi*2 + 0x48], dh ; mov esi, ebx ; mov rdi, r13 ; call rdx
0x00000000001b0343 : add byte ptr [rcx + rdx + 2], dl ; add al, ch ; test dh, dh ; jmp rdx
0x00000000001983ab : add byte ptr [rcx + rdx*4 + 0xffffffffb7700000], bh ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ac393 : add byte ptr [rcx + rdx*8 + 0xffffffffe3580001], ah ; cmc ; jmp rbx
0x00000000001ac37b : add byte ptr [rcx + rdx*8 + 0xffffffffe3600001], cl ; cmc ; call qword ptr [rax]
0x0000000000188d1f : add byte ptr [rcx + rdx*8 + 0xffffffffffffffe9], ah ; call rsp
0x00000000001a62f3 : add byte ptr [rcx + rsi*2], al ; add dword ptr [rax], eax ; or byte ptr [rcx + 0xfffffffffffffff4], bh ; jmp qword ptr [rcx]
0x00000000001a6323 : add byte ptr [rcx + rsi*2], dh ; add dword ptr [rax], eax ; cmp byte ptr [rcx + 0xfffffffffffffff4], bh ; jmp qword ptr [rcx]
0x0000000000094fa4 : add byte ptr [rcx], 0 ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x76b4
0x000000000013049c : add byte ptr [rcx], 0 ; add byte ptr [rcx], al ; ret -0x76b4
0x0000000000135313 : add byte ptr [rcx], 0 ; add dh, dh ; ret
0x00000000001a72e5 : add byte ptr [rcx], 0 ; fmul st(0) ; hlt ; jmp qword ptr [rdx]
0x00000000001ad01d : add byte ptr [rcx], 0 ; lock cmc ; cmc ; call qword ptr [rcx]
0x00000000001aa426 : add byte ptr [rcx], 0x16 ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret
0x0000000000191016 : add byte ptr [rcx], 0x16 ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret -0x15dd
0x00000000001b4176 : add byte ptr [rcx], 0x16 ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret -0x93d
0x00000000001a993e : add byte ptr [rcx], 0x16 ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret -0xb24
0x00000000001a3d06 : add byte ptr [rcx], 0x16 ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret -0xc52
0x000000000018f1d7 : add byte ptr [rcx], ah ; std ; jmp rsp
0x000000000017b68b : add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000000722f : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x3a
0x000000000008676f : add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; ret
0x000000000002c2c0 : add byte ptr [rcx], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000030099 : add byte ptr [rcx], al ; add byte ptr [rax], al ; and eax, esi ; ret
0x000000000011551b : add byte ptr [rcx], al ; add byte ptr [rax], al ; nop ; ret
0x000000000012ad53 : add byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008c681 : add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x000000000008926f : add byte ptr [rcx], al ; add byte ptr [rax], al ; sub rax, rdx ; ret
0x000000000010e2b0 : add byte ptr [rcx], al ; jmp 0x10e07a
0x000000000010e668 : add byte ptr [rcx], al ; jmp 0x10e44a
0x000000000002fde4 : add byte ptr [rcx], al ; movzx eax, ax ; ret
0x000000000012f2df : add byte ptr [rcx], al ; push rdi ; sub byte ptr [rax + 1], bh ; ret
0x000000000007d56b : add byte ptr [rcx], al ; ret
0x000000000004869e : add byte ptr [rcx], al ; ret -0x2817
0x000000000013049f : add byte ptr [rcx], al ; ret -0x76b4
0x0000000000132e55 : add byte ptr [rcx], al ; ret 0x59e9
0x00000000000d1975 : add byte ptr [rcx], al ; setg dl ; jmp 0xd18fe
0x00000000001a9200 : add byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000000fdb19 : add byte ptr [rcx], bh ; ret
0x00000000000e2b82 : add byte ptr [rcx], bh ; ret -0x70f1
0x00000000000e4353 : add byte ptr [rcx], bh ; ret -0x78f1
0x0000000000081861 : add byte ptr [rcx], bh ; ret 0xa7e
0x00000000000b3165 : add byte ptr [rcx], bh ; ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x000000000008956d : add byte ptr [rcx], ch ; ret
0x00000000000b9d00 : add byte ptr [rcx], ch ; ret -0x72bf
0x00000000000b9c66 : add byte ptr [rcx], ch ; ret -0x76bc
0x00000000000cf65c : add byte ptr [rcx], ch ; ret -0x7af1
0x00000000000b2fb0 : add byte ptr [rcx], ch ; ret 0x428d
0x00000000000b85c9 : add byte ptr [rcx], ch ; rol byte ptr [rcx + 0x29], 1 ; ret
0x00000000000f1ce1 : add byte ptr [rcx], ch ; sal bl, 1 ; ret
0x000000000010d258 : add byte ptr [rcx], cl ; lock bswap eax ; ret
0x000000000018a937 : add byte ptr [rcx], cl ; out dx, eax ; jmp rsp
0x000000000003673c : add byte ptr [rcx], cl ; ret -0x2f77
0x0000000000045c7a : add byte ptr [rcx], cl ; ret -0x7bf1
0x0000000000187a1c : add byte ptr [rcx], dh ; cld ; jmp rax
0x00000000000b359d : add byte ptr [rcx], dh ; dec dword ptr [rax + 0x39] ; ret -0x7bf1
0x000000000007eb7f : add byte ptr [rcx], dh ; dec dword ptr [rax + 0xffffffffffffff89] ; and al, 8 ; call qword ptr [rax]
0x000000000007eb2e : add byte ptr [rcx], dh ; dec dword ptr [rcx + 0xffffffffffffff89] ; salc ; call qword ptr [rax]
0x000000000001fea7 : add byte ptr [rcx], dh ; div byte ptr [rcx] ; shr al, -8 ; ret 0xc
0x0000000000112b05 : add byte ptr [rcx], dh ; fild dword ptr [rcx + 0xffffffffffffff83] ; std ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x00000000000a6133 : add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0xa60e0
0x00000000000a8973 : add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0xa8920
0x00000000000ab023 : add byte ptr [rcx], dh ; in eax, dx ; mov edx, eax ; jmp 0xaafd0
0x000000000012b186 : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000003c4ac : add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000089566 : add byte ptr [rcx], dh ; ret
0x0000000000064f4a : add byte ptr [rcx], dh ; rol byte ptr [rbp + 0xffffffffc09f0fdb], 0x29 ; ret
0x000000000002fedf : add byte ptr [rcx], dh ; rol byte ptr [rbx + 0xffffffff940f80e7], -0x40 ; ret
0x0000000000026118 : add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x000000000003c2eb : add byte ptr [rcx], dh ; ror byte ptr [rax + 0xffffffffffffff83], -0x3c ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000013753f : add byte ptr [rcx], dh ; ror byte ptr [rax + 0xffffffffffffff83], -0x3c ; ret
0x000000000013578a : add byte ptr [rcx], dh ; ror byte ptr [rax + 0xffffffffffffff83], -0x3c ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000a61a7 : add byte ptr [rcx], dh ; ror byte ptr [rax + 1], cl ; ret -0x168c
0x000000000008b702 : add byte ptr [rcx], dh ; ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x00000000001183f2 : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0xffffffff89480c57], 0x3e ; ret
0x00000000000c1b9d : add byte ptr [rcx], dh ; ror byte ptr [rcx + 0xffffffffffffff81], cl ; ret 0x2d0
0x00000000000d2a5f : add byte ptr [rcx], dh ; sal dh, -0x3f ; add dword ptr [rbp + 0xffffffffffffff87], esi ; pop rbx ; ret
0x000000000018ad4f : add byte ptr [rcx], dl ; out dx, eax ; jmp rsp
0x00000000000f319f : add byte ptr [rdi + 0x1000], bh ; call 0x1f410
0x0000000000189c4f : add byte ptr [rdi + 0x5c], bl ; out dx, al ; jmp rsp
0x000000000014b70a : add byte ptr [rdi + 0x63], cl ; or al, -0x75 ; add r9, r11 ; jmp r9
0x000000000019c658 : add byte ptr [rdi + 0xe], cl ; adc byte ptr [rbx + 0x1020302], al ; ret
0x000000000017913c : add byte ptr [rdi + 0xffffffff89d0fff1], -0xf ; jmp qword ptr [rax]
0x00000000000f5d6c : add byte ptr [rdi + 0xffffffff8b49fff2], dl ; jge 0xf5d74 ; call rbx
0x000000000017926c : add byte ptr [rdi + 0xffffffffa070fffc], bl ; cld ; jmp rax
0x0000000000189b27 : add byte ptr [rdi + 0xffffffffecffed58], cl ; ret
0x00000000001954c4 : add byte ptr [rdi + 0xffffffffffffffec], bh ; jmp qword ptr [rdx]
0x0000000000179208 : add byte ptr [rdi + 0xfffffffffffffffc], bh ; jmp qword ptr [rax]
0x00000000000a3874 : add byte ptr [rdi + 2], bh ; neg eax ; ret
0x00000000001650f4 : add byte ptr [rdi + 9], bh ; neg eax ; ret
0x00000000001a3913 : add byte ptr [rdi + rax*2], ah ; add dword ptr [rax], eax ; call 0x281a2ba6
0x00000000001a797b : add byte ptr [rdi + rax*4 + 0xffffffffdd800001], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001a7993 : add byte ptr [rdi + rax*4 + 0xffffffffdd980001], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001a79ab : add byte ptr [rdi + rax*4 + 0xffffffffddb00001], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001a7963 : add byte ptr [rdi + rax*4 + 1], dh ; add byte ptr [rax + 0xffffffffffffffdd], ch ; hlt ; jmp qword ptr [rcx]
0x00000000001a791b : add byte ptr [rdi + rax*4], ch ; add dword ptr [rax], eax ; and ch, bl ; hlt ; jmp qword ptr [rcx]
0x000000000019f91b : add byte ptr [rdi + rax], ch ; add dword ptr [rax], eax ; rcr byte ptr [rbp + 0xfffffffffffffff0] ; call qword ptr [rax]
0x00000000001b612b : add byte ptr [rdi + rbp*2], bh ; add al, byte ptr [rax] ; nop ; ret -9
0x00000000001a611b : add byte ptr [rdi + rbp*2], ch ; add dword ptr [rax], eax ; loopne 0x1a6136 ; stc ; call qword ptr [rax]
0x000000000019a173 : add byte ptr [rdi + rbp*4 + 0xfffffffff9c80000], al ; in eax, dx ; call qword ptr [rax]
0x000000000019e183 : add byte ptr [rdi + rbp*8 + 0x12580000], dl ; cli ; call qword ptr [rax]
0x000000000019e153 : add byte ptr [rdi + rbp*8], ah ; add al, cl ; fdivr st(1) ; call qword ptr [rax]
0x000000000019e0f3 : add byte ptr [rdi + rbp*8], al ; add byte ptr [rax], al ; pop rax ; clc ; out dx, al ; call qword ptr [rax]
0x000000000019e10b : add byte ptr [rdi + rbp*8], bl ; add byte ptr [rax], al ; push rax ; clc ; out dx, al ; jmp qword ptr [rsi]
0x00000000001b118b : add byte ptr [rdi + rbx + 0x51e00002], bl ; sti ; call rsi
0x00000000001a9183 : add byte ptr [rdi + rbx*4 + 0x38880001], dl ; cmc ; jmp qword ptr [rcx]
0x00000000001a919b : add byte ptr [rdi + rbx*4 + 0x38a00001], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a9153 : add byte ptr [rdi + rbx*4 + 1], ah ; add byte ptr [rax + 0x38], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a916b : add byte ptr [rdi + rbx*4 + 1], bh ; add byte ptr [rax + 0x38], dh ; cmc ; jmp qword ptr [rcx]
0x000000000004f65e : add byte ptr [rdi + rcx + 0x44], cl ; jmp -0x3db6fa4d
0x000000000016ef5f : add byte ptr [rdi + rcx + 0xfbf0000], bh ; add byte ptr [rax], al ; ret 0xf
0x00000000000c57fc : add byte ptr [rdi + rcx + 0xffffffffffffff85], bl ; xor ah, -1 ; push rsi ; ret
0x000000000019417b : add byte ptr [rdi + rcx*2 + 0x57300000], cl ; jmp 0x194183
0x0000000000194193 : add byte ptr [rdi + rcx*2 + 0x57380000], ah ; jmp 0x19419b
0x00000000001a8173 : add byte ptr [rdi + rcx*4 + 0xa680001], al ; cmc ; call rsp
0x000000000018d46f : add byte ptr [rdi + rcx], al ; clc ; call rsp
0x000000000002fce4 : add byte ptr [rdi + rcx], al ; mov bh, -0x40 ; ret
0x00000000001ab16b : add byte ptr [rdi + rdi*4 + 1], bh ; add byte ptr [rax + 0xffffffffffffff97], dl ; cmc ; call rsp
0x000000000018ec9f : add byte ptr [rdi + rdi*4], al ; cli ; jmp rsp
0x000000000019f103 : add byte ptr [rdi + rdi*8], dl ; add byte ptr [rax], al ; cmp byte ptr [rax + rsi*8], dl ; jmp rbx
0x00000000001895c7 : add byte ptr [rdi + rdi], ah ; jmp 0x1895cb
0x000000000018d767 : add byte ptr [rdi + rdi], al ; clc ; jmp rsp
0x00000000001a898b : add byte ptr [rdi + rdx*4 + 0x2a900001], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a89a3 : add byte ptr [rdi + rdx*4 + 0x2aa80001], dh ; cmc ; jmp qword ptr [rcx]
0x000000000018b23f : add byte ptr [rdi + rdx*4 + 0xfffffffffffffff1], dh ; call rsp
0x00000000001ac983 : add byte ptr [rdi + rdx*8 + 0xffffffffeac80001], dl ; cmc ; jmp qword ptr [rax]
0x000000000018a3bf : add byte ptr [rdi + rdx*8 + 0xffffffffffffffee], ah ; call rsp
0x000000000019c96b : add byte ptr [rdi + rdx*8], bh ; add byte ptr [rax], ah ; xor dh, ch ; call qword ptr [rsi]
0x000000000018f137 : add byte ptr [rdi + rdx*8], dh ; std ; jmp rsp
0x00000000001a694b : add byte ptr [rdi + rsi*2 + 1], bl ; add byte ptr [rax + 0xffffffffffffffad], dh ; hlt ; jmp qword ptr [rdi]
0x00000000001b6953 : add byte ptr [rdi + rsi*2 + 2], ah ; add al, cl ; fcomi st(7) ; jmp qword ptr [rcx]
0x00000000001a6f03 : add byte ptr [rdi*2 + 0xffffffffbb480001], dl ; hlt ; jmp qword ptr [rcx]
0x00000000001a6f1b : add byte ptr [rdi*2 + 0xffffffffbb600001], ch ; hlt ; jmp qword ptr [rcx]
0x0000000000187878 : add byte ptr [rdi], al ; cld ; jmp rax
0x0000000000188b47 : add byte ptr [rdi], bh ; jno 0x188b34 ; jmp rsp
0x0000000000177b5b : add byte ptr [rdi], bl ; add byte ptr [rax], al ; insd dword ptr es:[rdi], dx ; sar bh, 1 ; jmp qword ptr [rdi]
0x000000000014d086 : add byte ptr [rdi], cl ; cmp dword ptr [rbx + 0xffffffffffffffff], -1 ; dec dword ptr [rax + 0xffffffffffffff81] ; ret 0x80
0x000000000014e0bf : add byte ptr [rdi], cl ; mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x000000000002fe7d : add byte ptr [rdi], cl ; mov bh, 4 ; js 0x2fe06 ; loopne 0x2fe86 ; ret
0x00000000000fe47c : add byte ptr [rdi], cl ; mov bh, 4 ; js 0xfe405 ; loopne 0xfe485 ; ret
0x000000000007be67 : add byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x000000000014e12f : add byte ptr [rdi], cl ; mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x00000000000c516a : add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax + 0xffffffffffffff83], ecx ; ret -0x7bff
0x0000000000027973 : add byte ptr [rdi], cl ; mov dh, 0x48 ; dec dword ptr [rcx + 0xffffffffffffff83] ; ret
0x00000000000279bd : add byte ptr [rdi], cl ; mov dh, 0x4a ; dec dword ptr [rax + 0xffffffffffffff83] ; ret 0x4101
0x0000000000033a80 : add byte ptr [rdi], cl ; mov dh, 0x53 ; add dword ptr [rax + 0xffffffffffffff83], ecx ; ret
0x000000000006e10f : add byte ptr [rdi], cl ; mov dh, 0x53 ; or al, -0xa ; ret 0xf04
0x000000000008906f : add byte ptr [rdi], cl ; mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000160c1f : add byte ptr [rdi], cl ; mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008cbff : add byte ptr [rdi], cl ; mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000097c1f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000097c2f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x0000000000097c0f : add byte ptr [rdi], cl ; mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000945ff : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000008ca8f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000008ca7f : add byte ptr [rdi], cl ; mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x000000000008ca6f : add byte ptr [rdi], cl ; mov esp, 0xf80148c0 ; ret
0x00000000000a26d7 : add byte ptr [rdi], cl ; popfq ; ret -0x157f
0x00000000000364b7 : add byte ptr [rdi], cl ; push rsp ; ret
0x00000000000658d5 : add byte ptr [rdi], cl ; ret
0x00000000000d8411 : add byte ptr [rdi], cl ; ret -0x36cf
0x0000000000042dbb : add byte ptr [rdi], cl ; ret -0x37ff
0x0000000000133db6 : add byte ptr [rdi], cl ; ret -0x3c77
0x0000000000031c6b : add byte ptr [rdi], cl ; ret -0x72b7
0x0000000000047b43 : add byte ptr [rdi], cl ; ret -0x72b8
0x00000000000cc7f0 : add byte ptr [rdi], cl ; ret -0x7b17
0x000000000010ba1f : add byte ptr [rdi], cl ; ret -0x7cb8
0x00000000001154eb : add byte ptr [rdi], cl ; ret -0x7d
0x00000000000481f7 : add byte ptr [rdi], cl ; ret 0x2ce9
0x00000000001154b0 : add byte ptr [rdi], cl ; ret 0xfc3
0x00000000000b9b5e : add byte ptr [rdi], cl ; scasd eax, dword ptr es:[rdi] ; ret -0x72bc
0x00000000000a2542 : add byte ptr [rdi], cl ; scasd eax, dword ptr es:[rdi] ; ret -0x7cbf
0x000000000011ba61 : add byte ptr [rdi], cl ; shr r9b, 1 ; ret -2
0x00000000000a58fe : add byte ptr [rdi], cl ; test ah, byte ptr [rbx] ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x00000000000e61b9 : add byte ptr [rdi], cl ; test al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x7cb8
0x00000000000c5275 : add byte ptr [rdi], cl ; test al, byte ptr [rdi*8 + 0xffffffff8348ffff] ; ret -0x14fe
0x00000000000a5d9e : add byte ptr [rdi], cl ; test dl, byte ptr [rbx] ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x000000000007d5a1 : add byte ptr [rdi], cl ; test ebp, dword ptr [rdx + rax] ; add bl, dh ; ret
0x00000000000704b1 : add byte ptr [rdi], cl ; test esp, dword ptr [rsi + 0xfffffffff3000004] ; ret
0x00000000000ce64e : add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000000e3a32 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret -0x1d3f
0x0000000000113289 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret -0x2ee0
0x00000000000490dc : add byte ptr [rdi], cl ; xchg eax, ebp ; ret -0x7ab3
0x00000000000b2887 : add byte ptr [rdi], cl ; xchg eax, ebp ; ret -0x8b7
0x00000000000b24ff : add byte ptr [rdi], cl ; xchg eax, ebp ; ret 0x3145
0x0000000000058c85 : add byte ptr [rdi], cl ; xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x000000000008933a : add byte ptr [rdi], cl ; xchg eax, esi ; ret 0x144
0x000000000001f4c1 : add byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000000c5bc7 : add byte ptr [rdi], cl ; xchg eax, esp ; ret -0x2d7c
0x00000000000e04ff : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x3d
0x00000000000c667d : add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x45e9
0x00000000000595fc : add byte ptr [rdi], cl ; xchg ebp, eax ; add eax, 0x83480000 ; ret
0x000000000005362c : add byte ptr [rdi], cl ; xchg ebp, esi ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x000000000015d7af : add byte ptr [rdx + 0x48028801], cl ; lea eax, dword ptr [rdx] ; ret
0x000000000015947f : add byte ptr [rdx + 0x48028801], cl ; mov eax, edi ; ret
0x000000000009fe9f : add byte ptr [rdx + 0x48178816], cl ; lea eax, dword ptr [rdi + 1] ; ret
0x000000000007a176 : add byte ptr [rdx + 0x48], bl ; cwde ; ret
0x0000000000064e7b : add byte ptr [rdx + 0x63], cl ; adc al, -0x50 ; add rax, rdx ; jmp rax
0x00000000000e7f68 : add byte ptr [rdx + 0x63], cl ; adc al, -0x68 ; add rax, rdx ; jmp rax
0x000000000003071f : add byte ptr [rdx + 0x63], cl ; add al, -0x5e ; add rdx, rax ; jmp rdx
0x000000000018b217 : add byte ptr [rdx + 0xfffffffffffffff1], al ; jmp rsp
0x0000000000179618 : add byte ptr [rdx + 0xfffffffffffffff2], ch ; jmp qword ptr [rax]
0x00000000001793d8 : add byte ptr [rdx + 0xfffffffffffffff2], dl ; jmp qword ptr [rax]
0x0000000000187384 : add byte ptr [rdx + 0xfffffffffffffffb], ah ; jmp rax
0x0000000000188510 : add byte ptr [rdx + 0xfffffffffffffffc], bh ; jmp qword ptr [rax + 0x20fffc81]
0x0000000000100ddf : add byte ptr [rdx + 0xffffffffffffffff], bh ; mov eax, edx ; ret
0x0000000000100dde : add byte ptr [rdx + 0xffffffffffffffff], dil ; mov eax, edx ; ret
0x00000000001b86db : add byte ptr [rdx + 2], bl ; add byte ptr [rax], al ; ret
0x000000000000e567 : add byte ptr [rdx + 3], ch ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001b8353 : add byte ptr [rdx + 4], dl ; add byte ptr [rax], al ; ret
0x00000000000f57e2 : add byte ptr [rdx + rax + 0x5b], dh ; ret
0x000000000018e82f : add byte ptr [rdx + rax*2 + 0xfffffffffffffffa], al ; inc esp ; ret 2
0x000000000019b4a3 : add byte ptr [rdx + rax*8 + 0x28280000], dh ; out dx, al ; call qword ptr [rdx]
0x00000000001ab48b : add byte ptr [rdx + rax*8 + 0xffffffffd2500001], bl ; cmc ; jmp qword ptr [rsi]
0x00000000001ab4a3 : add byte ptr [rdx + rax*8 + 0xffffffffd2680001], dh ; cmc ; jmp qword ptr [rsi]
0x000000000019b42b : add byte ptr [rdx + rax*8], bh ; add byte ptr [rax], al ; mov al, 0x27 ; out dx, al ; call qword ptr [rsi]
0x000000000018de8f : add byte ptr [rdx + rax], ah ; stc ; call rsp
0x00000000001a5c9b : add byte ptr [rdx + rbp*2 + 0x63d00001], ch ; hlt ; jmp qword ptr [rcx]
0x000000000019dc13 : add byte ptr [rdx + rbp*8], ah ; add byte ptr [rax], al ; cmp bh, dl ; out dx, al ; jmp rdx
0x00000000001a8c8b : add byte ptr [rdx + rbx*4 + 0x2e000001], bl ; cmc ; jmp qword ptr [rcx]
0x00000000001a8ca3 : add byte ptr [rdx + rbx*4 + 0x2e180001], dh ; cmc ; jmp qword ptr [rcx]
0x000000000019cc0b : add byte ptr [rdx + rbx*8], bl ; add byte ptr [rax], al ; xor byte ptr [rdx + 0xffffffffffffffee], ah ; jmp qword ptr [rsi]
0x00000000001b0c13 : add byte ptr [rdx + rbx], ah ; add al, byte ptr [rax] ; pop rax ; mov bl, -0xa ; call qword ptr [rax]
0x0000000000094b83 : add byte ptr [rdx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x000000000018ba5f : add byte ptr [rdx + rcx*4 + 0xfffffffffffffff3], cl ; jmp rsp
0x00000000001abc23 : add byte ptr [rdx + rcx*8], dh ; add dword ptr [rax], eax ; or dl, bl ; cmc ; call qword ptr [rax]
0x00000000001a6ca3 : add byte ptr [rdx + rdi*2 + 0xffffffffb5280001], dh ; hlt ; call rdi
0x00000000001a6c13 : add byte ptr [rdx + rdi*2], ah ; add dword ptr [rax], eax ; test al, -0x4e ; hlt ; jmp qword ptr [rcx]
0x0000000000196c0b : add byte ptr [rdx + rdi*2], bl ; add byte ptr [rax], al ; nop ; lahf ; in eax, dx ; call rbx
0x00000000001a2c13 : add byte ptr [rdx + rdi], ah ; add dword ptr [rax], eax ; in al, dx ; int1 ; jmp qword ptr [rcx]
0x000000000016f35f : add byte ptr [rdx + rdx + 0x12bf0000], bh ; add byte ptr [rax], al ; ret 0x12
0x000000000018d4a7 : add byte ptr [rdx + rdx + 0xfffffffffffffff8], al ; call rsp
0x00000000001b043b : add byte ptr [rdx + rdx + 2], cl ; add al, dl ; xchg esi, esi ; jmp qword ptr [rdi]
0x000000000018def7 : add byte ptr [rdx + rdx], dh ; stc ; jmp rsp
0x000000000018cc6f : add byte ptr [rdx + rsi + 0xfffffffffffffff7], ah ; call rsp
0x00000000001ac22b : add byte ptr [rdx + rsi*2], bl ; add dword ptr [rax], eax ; loope 0x1ac228 ; call qword ptr [rcx]
0x0000000000187910 : add byte ptr [rdx], -4 ; inc dword ptr [rax + 4] ; cld ; jmp qword ptr [rax]
0x00000000001b724d : add byte ptr [rdx], 0 ; push rax ; div bh ; call rdx
0x00000000001b71fd : add byte ptr [rdx], 0 ; sal ah, -9 ; call rcx
0x000000000018df5d : add byte ptr [rdx], 0 ; test dh, byte ptr [rbx] ; stc ; jmp rsp
0x00000000001b86d7 : add byte ptr [rdx], ah ; add al, 0 ; add byte ptr [rdx + 2], bl ; add byte ptr [rax], al ; ret
0x0000000000006f3b : add byte ptr [rdx], ah ; add byte ptr [rax + rax], cl ; nop ; ret
0x000000000000414b : add byte ptr [rdx], ah ; add byte ptr [rax + rax], cl ; ret 0xf
0x0000000000030148 : add byte ptr [rdx], al ; add byte ptr [rax], al ; mov qword ptr fs:[rax], rdx ; ret
0x000000000002fea8 : add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x000000000011c9c6 : add byte ptr [rdx], al ; add rsp, 8 ; ret
0x0000000000102deb : add byte ptr [rdx], al ; call rax
0x000000000002fd44 : add byte ptr [rdx], al ; movzx eax, ax ; ret
0x000000000000258f : add byte ptr [rdx], al ; xchg dh, ch ; ret -0x7753
0x000000000000404f : add byte ptr [rdx], bh ; add eax, 0 ; add byte ptr [rax], al ; ret
0x00000000001872c4 : add byte ptr [rdx], bl ; sti ; call rax
0x00000000000f7a5f : add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000048fb : add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; nop ; ret 3
0x000000000000af43 : add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; push rax ; ret
0x000000000018da9f : add byte ptr [rdx], dl ; jge 0x18da9b ; call rsp
0x00000000000ad7ac : add byte ptr [rip + 0x3d8d4800], cl ; ret 0xd3e
0x000000000006f840 : add byte ptr [rip + 0x48000000], al ; mov eax, edx ; pop rbx ; ret
0x0000000000000450 : add byte ptr [rip + 0xc1c107c], al ; ret 0x4412
0x00000000001aa322 : add byte ptr [rip + 0xe01fa03], 0x20 ; ret
0x00000000000fb170 : add byte ptr [rip + 0xfffffffffffff000], ah ; or eax, edi ; ret
0x00000000000c1e41 : add byte ptr [rip + 0xfffffffffffff001], bh ; jae 0xc1e4a ; ret
0x000000000012b377 : add byte ptr [rsi + 0xe], bh ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x0000000000160f14 : add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret -0x7cf1
0x00000000000fa7a6 : add byte ptr [rsi + 0xf], ah ; ret
0x0000000000097b2c : add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000008c984 : add byte ptr [rsi + 0xf], ah ; xlatb ; ret -0x3f7b
0x0000000000188300 : add byte ptr [rsi + 0xffffffff8590fffc], al ; cld ; jmp qword ptr [rax]
0x000000000019d89b : add byte ptr [rsi + 0xffffffff9ee00000], ch ; out dx, al ; jmp qword ptr [rcx]
0x000000000002373d : add byte ptr [rsi + 0xffffffffffffff90], ah ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007537d : add byte ptr [rsi + 0xffffffffffffff90], ah ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000bdfbd : add byte ptr [rsi + 0xffffffffffffff90], ah ; mov eax, dword ptr [rdi] ; ret
0x0000000000037c4d : add byte ptr [rsi + 0xffffffffffffff90], ah ; mov eax, dword ptr [rip + 0x38744a] ; ret
0x00000000001794a4 : add byte ptr [rsi + 0xfffffffffffffff2], dl ; call qword ptr [rax]
0x0000000000179480 : add byte ptr [rsi + 0xfffffffffffffff2], dl ; jmp qword ptr [rax]
0x00000000000f693f : add byte ptr [rsi + 1], bh ; call rbx
0x00000000000f6b2c : add byte ptr [rsi + 1], bh ; mov rdi, r12 ; call rbx
0x00000000000f69f8 : add byte ptr [rsi + 1], bh ; mov rdi, r13 ; call rbx
0x00000000000f6970 : add byte ptr [rsi + 1], bh ; mov rdi, r14 ; call rbx
0x00000000000f6daa : add byte ptr [rsi + 2], bh ; mov rdi, r12 ; call rbx
0x00000000000f6b1d : add byte ptr [rsi + 2], bh ; mov rdi, r13 ; call rbx
0x00000000000f69e9 : add byte ptr [rsi + 2], bh ; mov rdi, r14 ; call rbx
0x00000000000f6961 : add byte ptr [rsi + 2], bh ; mov rdi, r15 ; call rbx
0x0000000000120cfd : add byte ptr [rsi + 4], bh ; mov rdi, rbp ; call qword ptr [rax]
0x00000000001a3833 : add byte ptr [rsi + rax*2 + 1], al ; add al, bl ; xchg edx, esi ; jmp qword ptr [rcx]
0x00000000001a77f3 : add byte ptr [rsi + rax*4], al ; add dword ptr [rax], eax ; sub dl, bl ; hlt ; call qword ptr [rax]
0x00000000001b8567 : add byte ptr [rsi + rax], ch ; add byte ptr [rdx], al ; add byte ptr [rax], al ; ret
0x000000000018bf7f : add byte ptr [rsi + rbp*2 + 0xfffffffffffffff5], dl ; inc esp ; ret
0x000000000019e093 : add byte ptr [rsi + rbp*8 + 0xffffffffbdd80000], ah ; stc ; call qword ptr [rax]
0x000000000019e003 : add byte ptr [rsi + rbp*8], dl ; add byte ptr [rax], al ; sbb bh, dh ; out dx, al ; call qword ptr [rcx]
0x00000000001a108b : add byte ptr [rsi + rbx + 0x7cf00001], bl ; int1 ; call qword ptr [rax]
0x000000000018d8f7 : add byte ptr [rsi + rbx*2], dl ; clc ; jmp rsp
0x000000000018c5a7 : add byte ptr [rsi + rbx*4 + 0xfffffffffffffff6], dh ; jmp rsp
0x0000000000189f87 : add byte ptr [rsi + rcx*4], al ; out dx, al ; jmp rsp
0x00000000001a3073 : add byte ptr [rsi + rdi + 0xfffffffffc080001], al ; int1 ; jmp qword ptr [rcx]
0x00000000001a308b : add byte ptr [rsi + rdi + 0xfffffffffc200001], bl ; int1 ; jmp qword ptr [rcx]
0x00000000001a30a3 : add byte ptr [rsi + rdi + 0xfffffffffc380001], dh ; int1 ; jmp qword ptr [rcx]
0x00000000001a305b : add byte ptr [rsi + rdi + 1], ch ; add al, dh ; sti ; int1 ; jmp qword ptr [rcx]
0x00000000001a7043 : add byte ptr [rsi + rdi*2 + 1], dl ; add byte ptr [rax + 0xffffffffffffffbe], bh ; hlt ; jmp qword ptr [rcx]
0x000000000019f0a3 : add byte ptr [rsi + rdi*8 + 0xffffffffe6780000], dh ; out dx, eax ; jmp qword ptr [rbx]
0x000000000018d307 : add byte ptr [rsi + rdi*8 + 0xfffffffffffffff7], ah ; call rsp
0x00000000001a2ffb : add byte ptr [rsi + rdi], cl ; add dword ptr [rax], eax ; lock sti ; int1 ; jmp qword ptr [rcx]
0x00000000001b4833 : add byte ptr [rsi + rdx*2 + 2], al ; add byte ptr [rax + 0x74], bl ; idiv edi ; ret 0
0x00000000001a8873 : add byte ptr [rsi + rdx*4 + 0x28b80001], al ; cmc ; jmp qword ptr [rcx]
0x00000000001a88a3 : add byte ptr [rsi + rdx*4 + 0x28d80001], dh ; cmc ; call qword ptr [rax]
0x00000000001a882b : add byte ptr [rsi + rdx*4], bh ; add dword ptr [rax], eax ; jo 0x1a885a ; cmc ; jmp qword ptr [rcx]
0x00000000000e4813 : add byte ptr [rsi + rdx*8 + 0x5b], dh ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000001897af : add byte ptr [rsi + rdx*8 + 0xffffffffffffffeb], dh ; jmp rsp
0x00000000001ac843 : add byte ptr [rsi + rdx*8 + 1], dl ; add al, ch ; out -0xb, al ; call qword ptr [rax]
0x00000000001ac813 : add byte ptr [rsi + rdx*8], ah ; add dword ptr [rax], eax ; clc ; out -0xb, al ; call qword ptr [rax]
0x00000000001ac82b : add byte ptr [rsi + rdx*8], bh ; add dword ptr [rax], eax ; lock out -0xb, al ; call qword ptr [rax]
0x000000000018efc7 : add byte ptr [rsi + rdx*8], dh ; sti ; call rsp
0x00000000001a0803 : add byte ptr [rsi + rdx], dl ; add dword ptr [rax], eax ; call 0x241a044f
0x00000000001a685b : add byte ptr [rsi + rsi*2 + 1], ch ; add byte ptr [rax + 0xffffffffffffffaa], dl ; hlt ; call qword ptr [rbx]
0x000000000019b9cb : add byte ptr [rsi], 0xd ; jmp qword ptr [rdx + 0xffffffffffffffee]
0x00000000001aa42b : add byte ptr [rsi], 0xd ; ret
0x000000000019101b : add byte ptr [rsi], 0xd ; ret -0x15dd
0x00000000001b417b : add byte ptr [rsi], 0xd ; ret -0x93d
0x00000000001a9943 : add byte ptr [rsi], 0xd ; ret -0xb24
0x00000000001a3d0b : add byte ptr [rsi], 0xd ; ret -0xc52
0x000000000018aca7 : add byte ptr [rsi], ah ; shr bh, 1 ; call rsp
0x00000000001a8c90 : add byte ptr [rsi], ch ; cmc ; jmp qword ptr [rcx]
0x000000000000d04f : add byte ptr [rsi], dh ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rsi]
0x000000000018983f : add byte ptr [rsi], dh ; jmp 0x189843
0x000000000018e0b7 : add byte ptr [rsi], dh ; stc ; jmp rsp
0x000000000006111b : add byte ptr [rsi], dl ; add byte ptr [rax], al ; add cl, ch ; ret -0x14
0x0000000000195673 : add byte ptr [rsp + 0xffffffffefc80000], al ; in al, dx ; call qword ptr [rax]
0x00000000000e58b1 : add byte ptr [rsp + rax + 0xffffffffffffff89], dh ; ret -0x1115
0x00000000000e51a9 : add byte ptr [rsp + rax + 0xfffffffffffffff3], dh ; ret
0x0000000000059d6c : add byte ptr [rsp + rax*2 + 0xffffffffffffff8b], ah ; and cl, byte ptr [rax + 0xffffffffffffffc7] ; ret -2
0x00000000001ab683 : add byte ptr [rsp + rax*8 + 0xffffffffc3f80001], dl ; clc ; jmp qword ptr [rsi]
0x00000000001ab69b : add byte ptr [rsp + rax*8 + 0xffffffffd3a00001], ch ; cmc ; jmp qword ptr [rsi]
0x000000000018ecef : add byte ptr [rsp + rax*8 + 0xfffffffffffffffa], al ; jmp rsp
0x00000000001ab653 : add byte ptr [rsp + rax*8 + 1], ah ; add al, bh ; ret
0x00000000001ab5f3 : add byte ptr [rsp + rax*8], al ; add dword ptr [rax], eax ; clc ; ret
0x00000000001ab623 : add byte ptr [rsp + rax*8], dh ; add dword ptr [rax], eax ; clc ; ret
0x000000000018d9cf : add byte ptr [rsp + rbp*2 + 0x57c4fff8], al ; add al, byte ptr [rax] ; ret -0x793
0x0000000000195e9b : add byte ptr [rsp + rbp*2 + 0xffffffff92a00000], ch ; in eax, dx ; call qword ptr [rax]
0x00000000001a5dfb : add byte ptr [rsp + rbp*2], cl ; add dword ptr [rax], eax ; push rax ; hlt ; jmp qword ptr [rcx]
0x0000000000195e23 : add byte ptr [rsp + rbp*2], dh ; add byte ptr [rax], al ; pop rax ; xchg eax, edx ; in eax, dx ; jmp qword ptr [rax]
0x000000000019de3b : add byte ptr [rsp + rbp*8], cl ; add byte ptr [rax + 0xffffffffffffffe9], dl ; out dx, al ; call qword ptr [rax]
0x00000000001a1e13 : add byte ptr [rsp + rbp], ah ; add dword ptr [rax], eax ; sub dl, dl ; int1 ; jmp qword ptr [rbx]
0x0000000000194e33 : add byte ptr [rsp + rbx*2], al ; add al, ch ; xchg eax, ebx ; in al, dx ; jmp qword ptr [rcx]
0x00000000001a8e53 : add byte ptr [rsp + rbx*4 + 1], ah ; add byte ptr [rax + 0x30], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a8e0b : add byte ptr [rsp + rbx*4], bl ; add dword ptr [rax], eax ; xor byte ptr [rax], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001a8e23 : add byte ptr [rsp + rbx*4], dh ; add dword ptr [rax], eax ; xor bpl, sil ; jmp qword ptr [rcx]
0x0000000000198e43 : add byte ptr [rsp + rbx*4], dl ; add byte ptr [rax], ch ; shr ch, cl ; call rcx
0x000000000018ad1f : add byte ptr [rsp + rbx*8 + 0xffffffffffffffef], al ; jmp rsp
0x000000000016eb5f : add byte ptr [rsp + rcx + 0xcbf0000], bh ; add byte ptr [rax], al ; ret 0xc
0x000000000018ba97 : add byte ptr [rsp + rcx*4 + 0xfffffffffffffff3], dh ; call rsp
0x00000000001a7dfb : add byte ptr [rsp + rcx*4], cl ; add dword ptr [rax], eax ; cmp ah, -0xc ; jmp rax
0x00000000001a6ea3 : add byte ptr [rsp + rdi*2 + 0xffffffffba280001], dh ; hlt ; jmp qword ptr [rcx]
0x00000000001a6df3 : add byte ptr [rsp + rdi*2], al ; add dword ptr [rax], eax ; js 0x1a6db3 ; hlt ; jmp qword ptr [rbx]
0x000000000019ae93 : add byte ptr [rsp + rdi*4 + 0x17680000], ah ; out dx, al ; call qword ptr [rdi]
0x000000000019eeab : add byte ptr [rsp + rdi*8 + 0xffffffff9cb00000], bh ; out dx, eax ; call qword ptr [rdi]
0x0000000000187934 : add byte ptr [rsp + rdi*8], al ; jmp rax
0x000000000018a787 : add byte ptr [rsp + rdi], dh ; out dx, eax ; call rsp
0x000000000018c38f : add byte ptr [rsp + rdx*2 + 0xfffffffffffffff6], dh ; jmp rsp
0x0000000000198663 : add byte ptr [rsp + rdx*4], dh ; add byte ptr [rax + 0xffffffffffffffbc], bh ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ac64b : add byte ptr [rsp + rdx*8 + 1], bl ; add byte ptr [rax], dl ; out -0xb, al ; call qword ptr [rax]
0x00000000001ac613 : add byte ptr [rsp + rdx*8], ah ; add dword ptr [rax], eax ; or dh, ah ; cmc ; call qword ptr [rax]
0x000000000018bc6f : add byte ptr [rsp + rdx], ah ; hlt ; call rsp
0x000000000018bcdf : add byte ptr [rsp + rsi + 0xfffffffffffffff4], ah ; jmp rsp
0x0000000000193075 : add byte ptr ds:[rax], al ; call 0x23191b1d
0x00000000000f57e1 : add byte ptr ds:[rdx + rax + 0x5b], dh ; ret
0x00000000000378fa : add byte ptr es:[rax], al ; add byte ptr [rax + 0xffffffffffffffff], bh ; ret
0x0000000000193d54 : add byte ptr fs:[r8], al ; sub byte ptr [rbx + 0xffffffffffffffeb], cl ; jmp qword ptr [rsi]
0x00000000000f8ccb : add byte ptr fs:[rax], al ; add byte ptr [rbp + 0xffffffffc2450fd2], al ; ret
0x00000000000b7c75 : add byte ptr fs:[rax], al ; add byte ptr [rbx + 0xffffffffaf0f13e8], al ; ret -0x76bf
0x0000000000195854 : add byte ptr fs:[rax], al ; test al, -0x75 ; in eax, dx ; call qword ptr [rdx]
0x000000000007afc0 : add byte ptr gs:[rax + 0xffffffffffffff89], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000cf66b : add byte ptr gs:[rax], al ; add byte ptr [rcx], ch ; ret -0x7af1
0x0000000000114063 : add byte ptr gs:[rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000f1543 : add byte ptr gs:[rcx + rcx*4 + 0xffffffffffffffc8], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000539f4 : add byte ptr ss:[rbp + 0x5c], dh ; mov eax, edx ; pop rbx ; ret
0x000000000005dba7 : add byte ptr ss:[rbx + 0x5d], bl ; ret
0x0000000000059d6b : add byte ptr ss:[rsp + rax*2 + 0xffffffffffffff8b], ah ; and cl, byte ptr [rax + 0xffffffffffffffc7] ; ret -2
0x00000000001b8457 : add ch, al ; add eax, 0x29f0000 ; add byte ptr [rax], al ; ret
0x00000000000d3067 : add ch, al ; xchg eax, ebx ; ret
0x000000000018a569 : add ch, bh ; call rsp
0x00000000000c6e12 : add ch, bl ; cmpsb byte ptr [rsi], byte ptr es:[rdi] ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000003698f : add ch, bl ; fpatan ; ret
0x00000000000c6d52 : add ch, bl ; xchg eax, esi ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000001778fc : add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000001778fd : add ch, byte ptr [rbp + rbp*2 + 0x5b] ; ret 0x6f9
0x00000000001107a4 : add ch, byte ptr [rbx] ; add byte ptr [rax], al ; jne 0x11076c ; jmp 0x110764
0x00000000000b2f9a : add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000075eaa : add ch, byte ptr [rcx] ; rol bl, 1 ; mov eax, 0xffffffff ; ret
0x0000000000189eff : add ch, cl ; mov dh, ch ; call rsp
0x000000000005a53a : add ch, cl ; sar dil, cl ; dec dword ptr [rax + 0xffffffffffffff83] ; ret -0x14f8
0x00000000000c56ba : add ch, cl ; xchg eax, edx ; idiv edi ; push rsi ; ret
0x00000000001877c0 : add cl, ah ; sti ; call rax
0x0000000000071f0f : add cl, al ; out dx, al ; add al, -0x7d ; out 1, al ; mov eax, esi ; ret
0x00000000000fab77 : add cl, bl ; ret -0x3527
0x00000000000f8b85 : add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x000000000009a7fc : add cl, byte ptr [r8 + 0xffffffff89480242] ; clc ; ret
0x000000000003e92f : add cl, byte ptr [rax + 0x29] ; ret -0x72b8
0x00000000000a459d : add cl, byte ptr [rax + 0x29] ; ret -0x7515
0x00000000000b0fc1 : add cl, byte ptr [rax + 0x29] ; ret -0x76b8
0x00000000000a4529 : add cl, byte ptr [rax + 0x29] ; ret -0x7ab8
0x00000000000a45b5 : add cl, byte ptr [rax + 0x29] ; ret 0x6fe9
0x00000000001187e3 : add cl, byte ptr [rax + 0x39] ; rcr dword ptr [rcx], -0x40 ; ret
0x0000000000077d1d : add cl, byte ptr [rax + 0x39] ; ret
0x0000000000062029 : add cl, byte ptr [rax + 0x39] ; ret -0x70f1
0x0000000000086136 : add cl, byte ptr [rax + 0x39] ; ret -0x7af1
0x0000000000074b1a : add cl, byte ptr [rax + 0x39] ; ret 0x5877
0x00000000000f8b86 : add cl, byte ptr [rax + 0x39] ; ret 0xf48
0x000000000009a7fd : add cl, byte ptr [rax + 0xffffffff89480242] ; clc ; ret
0x0000000000087983 : add cl, byte ptr [rax + 0xffffffffffffff83] ; ret -0x16f8
0x000000000006d8f9 : add cl, byte ptr [rax + 0xffffffffffffff83] ; ret -0x16fe
0x000000000012efa9 : add cl, byte ptr [rax + 0xffffffffffffff83] ; ret -0x47fc
0x00000000000c42ed : add cl, byte ptr [rax + 0xffffffffffffff83] ; ret -0x7bff
0x000000000001fbeb : add cl, byte ptr [rax + 0xffffffffffffff83] ; ret -0x7cfc
0x00000000000c4810 : add cl, byte ptr [rax + 0xffffffffffffff83] ; ret -0x7cff
0x0000000000027c5b : add cl, byte ptr [rax + 0xffffffffffffff83] ; ret 0x4802
0x0000000000087920 : add cl, byte ptr [rax + 0xffffffffffffff83] ; ret 0x4808
0x00000000000af0ad : add cl, byte ptr [rax + 0xffffffffffffff83] ; ret 0x491e
0x000000000012efd5 : add cl, byte ptr [rax + 0xffffffffffffff83] ; ret 0xf04
0x000000000007d212 : add cl, byte ptr [rax + 0xffffffffffffff85] ; sal byte ptr [rbp + 0xfffffffffffffff0], -0xd ; ret
0x00000000000f45a2 : add cl, byte ptr [rax + 0xffffffffffffff85] ; sal byte ptr [rbx + rcx + 0x48], -0x7d ; ret 0x4808
0x0000000000097477 : add cl, byte ptr [rax + 0xffffffffffffff89] ; clc ; ret
0x0000000000080af1 : add cl, byte ptr [rax + 0xffffffffffffff8d] ; push rsp ; ret
0x0000000000123fcb : add cl, byte ptr [rax + 0xfffffffffffffff7] ; fiadd dword ptr [rbx + 0xffffffff840f03e2] ; ret 1
0x00000000000504f4 : add cl, byte ptr [rax + 1] ; ret -0x7cb8
0x000000000002c677 : add cl, byte ptr [rax + 1] ; ret 0x3b48
0x000000000004982c : add cl, byte ptr [rbp + 0x39] ; ret
0x000000000014df02 : add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x0000000000188194 : add cl, byte ptr [rbx + 0xffffffff8a92fffc] ; cld ; jmp qword ptr [rdx]
0x000000000003e909 : add cl, byte ptr [rcx + 0x29] ; ret
0x00000000000a6fdc : add cl, byte ptr [rcx + 0x39] ; ret
0x0000000000047fb0 : add cl, byte ptr [rcx + 0xffffffffffffff83] ; ret -0x16ff
0x00000000000d88ca : add cl, byte ptr [rcx + 0xffffffffffffff83] ; ret 0x4510
0x00000000000476a9 : add cl, byte ptr [rcx + 0xffffffffffffff83] ; ret 0xf01
0x0000000000125ff2 : add cl, byte ptr [rcx + 0xffffffffffffff89] ; ret -0x3eb8
0x0000000000049588 : add cl, byte ptr [rcx + rcx*4 + 0xffffffffffffffc2] ; jmp 0x495a1
0x000000000002fd04 : add cl, byte ptr [rdi] ; mov bh, -0x40 ; ret
0x00000000000ec8cc : add cl, byte ptr [rdi] ; ret -0x4615
0x0000000000115505 : add cl, byte ptr [rdi] ; ret -0xc3d
0x00000000000ec7bc : add cl, byte ptr [rdi] ; ret 0xfc3
0x00000000000ce5ff : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0x000000000006e2f7 : add cl, byte ptr [rdi] ; xchg eax, ebp ; ret 0x5389
0x000000000013da3b : add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], -0x6c ; ret -0x3f7b
0x00000000000004b0 : add cl, byte ptr [rdx] ; add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x00000000000504f3 : add cl, byte ptr es:[rax + 1] ; ret -0x7cb8
0x00000000000b4e5f : add cl, ch ; int 0xfa
0x000000000010ea01 : add cl, ch ; int 0xfd
0x0000000000059821 : add cl, ch ; jmp rax
0x000000000002c2c4 : add cl, ch ; ret
0x000000000006111f : add cl, ch ; ret -0x14
0x0000000000045f58 : add cl, ch ; ret -0x1f
0x00000000000b8b41 : add cl, ch ; ret -0xd
0x00000000000c3a28 : add cl, ch ; ret -2
0x00000000001044cf : add cl, ch ; ret -3
0x0000000000187818 : add dh, -5 ; call rax
0x000000000017a0b9 : add dh, ah ; call rcx
0x0000000000046ec3 : add dh, al ; add al, 0x10 ; add bl, dh ; ret
0x000000000011ae17 : add dh, al ; add al, byte ptr [rax] ; pop rbx ; ret
0x000000000010e2aa : add dh, al ; add eax, 0x2b567e ; add ecx, ebp ; ret
0x000000000017ac1b : add dh, bh ; jmp rdi
0x0000000000171dc7 : add dh, bh ; xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000019487 : add dh, bl ; call qword ptr [rdi]
0x00000000001897e7 : add dh, bl ; fucomi st(3) ; call rsp
0x000000000014e0b3 : add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000036f97 : add dh, bl ; ret
0x000000000007eb2c : add dh, byte ptr [rax + rax] ; xor edi, edi ; mov r14, rdx ; call qword ptr [rax]
0x00000000000c06fc : add dh, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x76b8
0x00000000000a193b : add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x0000000000127542 : add dh, byte ptr [rbx + rcx + 0xffffffffffffffb8] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000019415d : add dh, byte ptr [rcx + 0xa] ; ret
0x00000000000dc7cd : add dh, byte ptr [rcx] ; imul al ; jnp 0xdc7dc ; sti ; call rcx
0x00000000001963ec : add dh, byte ptr [rdx + 0xffffffffffffffed] ; jmp qword ptr [rdx]
0x0000000000127541 : add dh, byte ptr ds:[rbx + rcx + 0xffffffffffffffb8] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000008267c : add dh, dh ; ret
0x0000000000136642 : add dh, dh ; ret 0x7402
0x000000000008d2c8 : add dh, dh ; ret 0x7404
0x000000000006eeb7 : add dh, dh ; ret 0x7420
0x0000000000163137 : add dh, dh ; ret 0x7501
0x0000000000163144 : add dh, dh ; ret 0x7502
0x0000000000163151 : add dh, dh ; ret 0x7504
0x0000000000073b26 : add dh, dh ; ret 0x7508
0x0000000000163109 : add dh, dh ; ret 0x7510
0x0000000000163116 : add dh, dh ; ret 0x7520
0x00000000000ec34f : add dh, dh ; ret 0x7540
0x00000000000e04f1 : add dh, dh ; ret 0xf10
0x0000000000099002 : add dh, dh ; ret 0xf20
0x000000000004f735 : add dh, dh ; ret 0xf3f
0x000000000009900b : add dh, dh ; ret 0xf40
0x00000000001a3169 : add dh, dl ; call rdi
0x00000000000b0d19 : add dil, r15b ; ret
0x0000000000187930 : add dil, spl ; inc dword ptr [rax] ; add al, -4 ; jmp rax
0x000000000019b74c : add dl, bh ; in eax, dx ; jmp qword ptr [rdx]
0x000000000018e581 : add dl, bh ; jmp rsp
0x00000000001a08d1 : add dl, byte ptr [rax + 0x41100e0a] ; ret
0x00000000001afe39 : add dl, byte ptr [rbp + 0xa] ; ret
0x00000000001b0d3e : add dl, byte ptr [rsi + 0x41380e0a] ; ret
0x00000000001b834f : add dl, ch ; add al, 0 ; add byte ptr [rdx + 4], dl ; add byte ptr [rax], al ; ret
0x0000000000190d3d : add dl, ch ; jmp qword ptr [rdx]
0x000000000019dfac : add dword ptr [r13], 3 ; mov byte ptr [rcx], al ; ret
0x000000000019e244 : add dword ptr [r14], 3 ; mov byte ptr [rcx], al ; ret
0x0000000000047eee : add dword ptr [r8 + 0xffffffffffffff83], ecx ; ret
0x00000000000258f0 : add dword ptr [r8 + 0xffffffffffffff83], r9d ; ret 0x4d02
0x000000000005d3d3 : add dword ptr [r8], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x0000000000109b1f : add dword ptr [r8], eax ; mov rax, rdi ; pop rbx ; ret
0x00000000001a3915 : add dword ptr [r8], r8d ; call 0x281a2ba6
0x000000000018ad1d : add dword ptr [r8], r8d ; fsub st(7), st(0) ; jmp rsp
0x00000000001a37ed : add dword ptr [r8], r8d ; nop ; xchg edx, esi ; jmp qword ptr [rcx]
0x000000000018aaf5 : add dword ptr [r8], r8d ; xchg eax, esp ; ret
0x00000000001a37a5 : add dword ptr [r8], r8d ; xchg rdx, rsi ; jmp qword ptr [rcx]
0x00000000000d2c64 : add dword ptr [r9 + 0x39], r8d ; ret
0x00000000000a246f : add dword ptr [r9 + 0x5c], eax ; ret
0x0000000000028564 : add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4806
0x00000000000d1848 : add dword ptr [rax + 0x1b807], ecx ; add byte ptr [rax], al ; ret
0x000000000015d7b1 : add dword ptr [rax + 0x28d4802], ecx ; ret
0x000000000004fe03 : add dword ptr [rax + 0x29], ecx ; ret -0x76bc
0x0000000000047109 : add dword ptr [rax + 0x39], ecx ; fdiv dword ptr [rbp + 0xfffffffffffffff1] ; pop rbx ; ret
0x00000000000283fe : add dword ptr [rax + 0x39], ecx ; ret
0x00000000000adee5 : add dword ptr [rax + 0x39], ecx ; ret -0x1289
0x000000000003d8df : add dword ptr [rax + 0x39], ecx ; ret -0x148b
0x00000000000af602 : add dword ptr [rax + 0x39], ecx ; ret -0x1789
0x000000000003958d : add dword ptr [rax + 0x39], ecx ; ret -0x76b8
0x0000000000093e3d : add dword ptr [rax + 0x39], ecx ; ret -0x78f1
0x0000000000093ffe : add dword ptr [rax + 0x39], ecx ; ret -0x79f1
0x0000000000098d00 : add dword ptr [rax + 0x39], ecx ; ret -0xf89
0x0000000000097271 : add dword ptr [rax + 0x39], ecx ; ret 0x1a75
0x000000000003827b : add dword ptr [rax + 0x39], ecx ; sal byte ptr [rbp + 0xffffffffffffffef], 1 ; xor eax, eax ; ret
0x0000000000124561 : add dword ptr [rax + 0x63], ecx ; ret -0x2d7b
0x0000000000102c37 : add dword ptr [rax + 0xf], eax ; ret -0x3c0d
0x00000000000a6fd4 : add dword ptr [rax + 0xf], ecx ; ret -0x3eb8
0x00000000000d285d : add dword ptr [rax + 0xffffffff8348160c], ecx ; ret 0x4401
0x00000000000310d3 : add dword ptr [rax + 0xffffffff940f2ffa], eax ; ret -0x49f1
0x000000000009a7d6 : add dword ptr [rax + 0xfffffffff8894802], ecx ; ret
0x00000000001119d9 : add dword ptr [rax + 0xffffffffffffff83], ecx ; cli ; add al, 0xf ; xchg eax, esi ; ret
0x000000000015f3ca : add dword ptr [rax + 0xffffffffffffff83], ecx ; fdivr st(7) ; ret
0x00000000000e58ac : add dword ptr [rax + 0xffffffffffffff83], ecx ; jns 0xe58a9 ; add byte ptr [rsp + rax + 0xffffffffffffff89], dh ; ret -0x1115
0x0000000000098018 : add dword ptr [rax + 0xffffffffffffff83], ecx ; out dx, al ; add dword ptr [rbp + 0xfffffffffffffff1], esi ; xor eax, eax ; ret
0x0000000000022f5a : add dword ptr [rax + 0xffffffffffffff83], ecx ; ret
0x00000000000f054e : add dword ptr [rax + 0xffffffffffffff83], ecx ; ret -0x17ff
0x00000000000227d2 : add dword ptr [rax + 0xffffffffffffff83], ecx ; ret -0x39ff
0x00000000000227b2 : add dword ptr [rax + 0xffffffffffffff83], ecx ; ret -0x77ff
0x000000000006e20b : add dword ptr [rax + 0xffffffffffffff83], ecx ; ret -0x7af8
0x000000000006d80c : add dword ptr [rax + 0xffffffffffffff83], ecx ; ret -0x7afe
0x00000000000c447c : add dword ptr [rax + 0xffffffffffffff83], ecx ; ret -0x7bff
0x000000000002ea05 : add dword ptr [rax + 0xffffffffffffff83], ecx ; ret -0x7cf0
0x00000000000dd9cf : add dword ptr [rax + 0xffffffffffffff83], ecx ; ret -0x7fff
0x0000000000114872 : add dword ptr [rax + 0xffffffffffffff83], ecx ; ret 0x3904
0x0000000000047a1c : add dword ptr [rax + 0xffffffffffffff83], ecx ; ret 0x4101
0x00000000000caf4a : add dword ptr [rax + 0xffffffffffffff83], ecx ; ret 0x4408
0x000000000003aa79 : add dword ptr [rax + 0xffffffffffffff83], ecx ; ret 0x4801
0x000000000009434b : add dword ptr [rax + 0xffffffffffffff83], ecx ; ret 0x4901
0x000000000003afaf : add dword ptr [rax + 0xffffffffffffff83], ecx ; ret 0x4c01
0x00000000000bd679 : add dword ptr [rax + 0xffffffffffffff83], ecx ; ret 0x4c48
0x00000000000258f1 : add dword ptr [rax + 0xffffffffffffff83], ecx ; ret 0x4d02
0x00000000000a7087 : add dword ptr [rax + 0xffffffffffffff83], ecx ; ret 0x7901
0x0000000000054ff3 : add dword ptr [rax + 0xffffffffffffff83], ecx ; ret 0xf01
0x00000000000d4954 : add dword ptr [rax + 0xffffffffffffff83], ecx ; rol byte ptr [rcx], -0x7d ; ret 0x4001
0x00000000000da705 : add dword ptr [rax + 0xffffffffffffff83], r9d ; ret
0x00000000000800a0 : add dword ptr [rax + 0xffffffffffffff85], ecx ; ret -0x7af1
0x0000000000083a2e : add dword ptr [rax + 0xffffffffffffff85], ecx ; ret 0x2c75
0x00000000000831b2 : add dword ptr [rax + 0xffffffffffffff85], ecx ; ret 0x7075
0x0000000000118940 : add dword ptr [rax + 0xffffffffffffff88], eax ; ja 0x118946 ; ret
0x0000000000159412 : add dword ptr [rax + 0xffffffffffffff89], ecx ; add cl, byte ptr [rax + 0xffffffffffffff89] ; clc ; ret
0x000000000009744e : add dword ptr [rax + 0xffffffffffffff89], ecx ; clc ; ret
0x00000000000bad6b : add dword ptr [rax + 0xffffffffffffff89], ecx ; fmul dword ptr [rbx + 0xffffffff83480440] ; ret
0x000000000007bfbb : add dword ptr [rax + 0xffffffffffffff89], ecx ; push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x00000000000742cd : add dword ptr [rax + 0xffffffffffffff89], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x0000000000089411 : add dword ptr [rax + 0xffffffffffffff89], ecx ; ret
0x00000000000c5410 : add dword ptr [rax + 0xffffffffffffff89], ecx ; ret -0x6515
0x00000000000c51a0 : add dword ptr [rax + 0xffffffffffffff89], ecx ; ret -0x6817
0x000000000002c516 : add dword ptr [rax + 0xffffffffffffff89], ecx ; ret 0xf41
0x00000000000f8b82 : add dword ptr [rax + 0xffffffffffffff8d], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x0000000000055e23 : add dword ptr [rax + 1], ecx ; ret
0x000000000005aa1e : add dword ptr [rax + 1], ecx ; ret 0x148
0x0000000000035426 : add dword ptr [rax + 1], ecx ; ror byte ptr [rax + 0xffffffffffffff89], 1 ; ret -0x1d7f
0x00000000000d17c3 : add dword ptr [rax + 1], edi ; ret
0x00000000000004b2 : add dword ptr [rax + rax*4], ecx ; push rbx ; add al, 4 ; ret 0x6080
0x0000000000189015 : add dword ptr [rax], 0xea933e00 ; call rsp
0x00000000000fd754 : add dword ptr [rax], 1 ; ret
0x000000000018ad4e : add dword ptr [rax], eax ; adc al, -0x1f ; out dx, eax ; jmp rsp
0x00000000001a1a9e : add dword ptr [rax], eax ; adc al, -0xf ; call rsi
0x00000000001ab54e : add dword ptr [rax], eax ; adc bl, dl ; cmc ; jmp qword ptr [rsi]
0x00000000001a71ee : add dword ptr [rax], eax ; adc cl, al ; hlt ; jmp qword ptr [rsi]
0x00000000001ac64e : add dword ptr [rax], eax ; adc dh, ah ; cmc ; call qword ptr [rax]
0x00000000001ab4be : add dword ptr [rax], eax ; adc dl, -0xb ; jmp qword ptr [rsi]
0x00000000001ad2ce : add dword ptr [rax], eax ; adc dl, bh ; cmc ; call qword ptr [rax]
0x00000000001ab75e : add dword ptr [rax], eax ; add ah, dl ; cmc ; jmp qword ptr [rsi]
0x0000000000053e5a : add dword ptr [rax], eax ; add al, ch ; pop rsi ; ret
0x00000000000aee25 : add dword ptr [rax], eax ; add al, ch ; ret
0x00000000001037ef : add dword ptr [rax], eax ; add al, ch ; stc ; ret
0x00000000000c42fb : add dword ptr [rax], eax ; add bh, dh ; ret
0x000000000015b43c : add dword ptr [rax], eax ; add bl, al ; ret
0x00000000001ad39e : add dword ptr [rax], eax ; add bl, bh ; cmc ; call qword ptr [rax]
0x0000000000117de9 : add dword ptr [rax], eax ; add bl, ch ; or eax, 0x4b35b10f ; ret 0x2a
0x0000000000117d3d : add dword ptr [rax], eax ; add bl, ch ; or eax, 0xf735b10f ; ret 0x2a
0x000000000006efba : add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000018a566 : add dword ptr [rax], eax ; add bpl, r15b ; call rsp
0x00000000000b1cac : add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000045db8 : add dword ptr [rax], eax ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000d6ff4 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret -0x74b8
0x000000000005ecc8 : add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x3948
0x00000000000c4fc6 : add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffff940f7bfa], al ; ret -0x49f1
0x000000000007496b : add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff81], cl ; ret
0x000000000008377a : add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; call qword ptr [rax]
0x000000000005c145 : add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x0000000000138c51 : add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x000000000013f19f : add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x000000000008bde0 : add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16ff
0x00000000000f3671 : add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x3c01
0x000000000002689f : add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4101
0x000000000010922d : add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4801
0x00000000000e7c83 : add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4802
0x00000000000d4ab0 : add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4804
0x0000000000138cfd : add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000007e11a : add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4d07
0x000000000002bc54 : add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x0000000000096a66 : add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; stc ; dec dword ptr [rcx + 0xffffffffffffff89] ; ret -0x7bf1
0x0000000000075af8 : add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff85], cl ; push qword ptr [rsi + rsi*4 + 0xfffffffffffffff6] ; ret 0x7508
0x00000000000bd4c7 : add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x00000000000e3073 : add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x17
0x000000000002e96d : add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x74bf
0x0000000000094fa5 : add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x76b4
0x00000000000e61bd : add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x7cb8
0x00000000000934e9 : add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x8b8
0x00000000000e30c5 : add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff8b], cl ; adc byte ptr [r8 + 0x39], cl ; ret
0x00000000000d8d0a : add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff8b], cl ; or byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x1d7d
0x00000000000c8311 : add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff8d], cl ; add al, -0x32 ; jmp 0xc82dd
0x00000000000a7d66 : add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffffc7], cl ; ret
0x000000000012ff08 : add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffffc7], cl ; ret -1
0x000000000019f84e : add dword ptr [rax], eax ; add byte ptr [rax + 0xfffffffffffffff0], bl ; jmp rsi
0x0000000000171dca : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000170f7a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rsp
0x0000000000170da2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000170d9a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d4
0x0000000000171532 : add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1d5
0x00000000000f9d1a : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000f330f : add dword ptr [rax], eax ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001201c5 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0x12c460
0x00000000000efaf6 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call 0xebd70
0x00000000000f6941 : add dword ptr [rax], eax ; add byte ptr [rax], al ; call rbx
0x00000000001ad74e : add dword ptr [rax], eax ; add byte ptr [rax], al ; idiv bh ; ret 3
0x00000000001650f1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0x165100 ; neg eax ; ret
0x00000000000a3871 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jg 0xa3879 ; neg eax ; ret
0x0000000000163047 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jl 0x163050 ; neg eax ; ret
0x00000000000badc3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp 0xbad8b
0x000000000004bb6d : add dword ptr [rax], eax ; add byte ptr [rax], al ; jmp rax
0x000000000012f5f3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x12f600 ; ret
0x000000000012f633 : add dword ptr [rax], eax ; add byte ptr [rax], al ; jne 0x12f640 ; ret
0x00000000000a4c06 : add dword ptr [rax], eax ; add byte ptr [rax], al ; lea r9, qword ptr [rsp + 0x28] ; call rbx
0x0000000000039d92 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov dword ptr [rdx], ecx ; ret
0x00000000001248db : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x0000000000086a38 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x0000000000121a3a : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000f6b2e : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00000000000f69fa : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00000000001065bd : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call 0x1028b0
0x00000000000f6972 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x0000000000075901 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r15 ; call 0x71b80
0x00000000001209ee : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, r15 ; call qword ptr [rax]
0x000000000012a2a2 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rax ; call qword ptr [r10]
0x00000000000f6db8 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbp ; call rbx
0x000000000006e3bb : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call r8
0x000000000006da40 : add dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rbx ; call rax
0x0000000000074651 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r12 ; ret
0x000000000005392e : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r13 ; ret
0x0000000000053860 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r14 ; ret
0x0000000000075b8c : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001028ce : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000f9cb3 : add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000002bfd1 : add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000005e33e : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a6130 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0xa60e0
0x00000000000a8970 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0xa8920
0x00000000000ab020 : add dword ptr [rax], eax ; add byte ptr [rax], al ; xor ebp, ebp ; mov edx, eax ; jmp 0xaafd0
0x00000000000da566 : add dword ptr [rax], eax ; add byte ptr [rbp + 0xffffffff83480143], cl ; ret
0x0000000000117df8 : add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x2a
0x00000000000fffcc : add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x2c2c
0x00000000000c090c : add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x3019
0x00000000000712c4 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; mov eax, edx ; pop r12 ; ret
0x00000000000ebfd4 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000021999 : add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000769de : add dword ptr [rax], eax ; add byte ptr [rbx + 0xffffffff850f01f8], al ; ret
0x00000000000f0737 : add dword ptr [rax], eax ; add byte ptr [rbx + 0xffffffff9ee83c7b], cl ; ret
0x00000000000dae4d : add dword ptr [rax], eax ; add byte ptr [rbx + rcx*4 + 0x78], cl ; or byte ptr [rax + 0x63], cl ; ret -0x3eb8
0x00000000001a8a1e : add dword ptr [rax], eax ; add byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000000249cc : add dword ptr [rax], eax ; add byte ptr [rcx + 0xffffffffffffff83], cl ; ret
0x0000000000095324 : add dword ptr [rax], eax ; add byte ptr [rcx + 0xffffffffffffff89], cl ; ret
0x00000000000861af : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 + 0xffffffffffffffe2], cl ; mov rdi, r15 ; call rax
0x0000000000085f9f : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 + 0xffffffffffffffe6], cl ; mov rdi, rbx ; call rax
0x0000000000085d31 : add dword ptr [rax], eax ; add byte ptr [rcx + rcx*4 + 0xfffffffffffffff6], cl ; call rax
0x000000000013049d : add dword ptr [rax], eax ; add byte ptr [rcx], al ; ret -0x76b4
0x00000000001a91fe : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000000b3163 : add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x00000000000b7e2e : add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00000000000e2598 : add dword ptr [rax], eax ; add byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000001154e9 : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret -0x7d
0x00000000001154ae : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; ret 0xfc3
0x00000000000e04fd : add dword ptr [rax], eax ; add byte ptr [rdi], cl ; xchg eax, esp ; ret 0x3d
0x0000000000097b2a : add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000001a8c8e : add dword ptr [rax], eax ; add byte ptr [rsi], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000065d38 : add dword ptr [rax], eax ; add cl, ch ; ret
0x00000000001351ab : add dword ptr [rax], eax ; add cl, ch ; ret -2
0x0000000000135314 : add dword ptr [rax], eax ; add dh, dh ; ret
0x0000000000163135 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7501
0x0000000000163142 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7502
0x000000000016314f : add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x0000000000163107 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x0000000000163114 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x0000000000163121 : add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x00000000000f1784 : add dword ptr [rax], eax ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x00000000000f1281 : add dword ptr [rax], eax ; add rsp, 0x20 ; mov eax, ebx ; pop rbx ; ret
0x0000000000054530 : add dword ptr [rax], eax ; add rsp, 0xd8 ; ret
0x00000000001a3166 : add dword ptr [rax], eax ; add sil, dl ; call rdi
0x00000000001a308e : add dword ptr [rax], eax ; and ah, bh ; int1 ; jmp qword ptr [rcx]
0x000000000018f1d6 : add dword ptr [rax], eax ; and al, -0x1f ; std ; jmp rsp
0x000000000018bc6e : add dword ptr [rax], eax ; and al, 0x14 ; hlt ; call rsp
0x00000000001a821e : add dword ptr [rax], eax ; and byte ptr [rbx], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a791e : add dword ptr [rax], eax ; and ch, bl ; hlt ; jmp qword ptr [rcx]
0x000000000018ab36 : add dword ptr [rax], eax ; call -0x1ae764f9
0x00000000001a5786 : add dword ptr [rax], eax ; call -0x1ce5b46d
0x00000000001ac596 : add dword ptr [rax], eax ; call 0x111abb82
0x00000000001ac7e6 : add dword ptr [rax], eax ; call 0x111abdd3
0x00000000001ac846 : add dword ptr [rax], eax ; call 0x111abe33
0x00000000001ad656 : add dword ptr [rax], eax ; call 0x121acc5b
0x000000000019f6e6 : add dword ptr [rax], eax ; call 0x1719e73e
0x00000000001a5cb6 : add dword ptr [rax], eax ; call 0x221a5120
0x00000000001a60d6 : add dword ptr [rax], eax ; call 0x221a5550
0x00000000001a8a06 : add dword ptr [rax], eax ; call 0x221a7f37
0x00000000001a91e6 : add dword ptr [rax], eax ; call 0x221a8725
0x00000000001a0806 : add dword ptr [rax], eax ; call 0x241a044f
0x00000000001ab746 : add dword ptr [rax], eax ; call 0x271aad20
0x00000000001a3916 : add dword ptr [rax], eax ; call 0x281a2ba6
0x00000000001ad3b6 : add dword ptr [rax], eax ; clc ; cli ; cmc ; call qword ptr [rax]
0x00000000001ac816 : add dword ptr [rax], eax ; clc ; out -0xb, al ; call qword ptr [rax]
0x00000000001ab5f6 : add dword ptr [rax], eax ; clc ; ret
0x00000000001ab536 : add dword ptr [rax], eax ; clc ; sal ch, cl ; jmp qword ptr [rsi]
0x00000000001a8be6 : add dword ptr [rax], eax ; clc ; sub al, -0xb ; jmp qword ptr [rcx]
0x00000000001a7dfe : add dword ptr [rax], eax ; cmp ah, -0xc ; jmp rax
0x00000000001a30a6 : add dword ptr [rax], eax ; cmp ah, bh ; int1 ; jmp qword ptr [rcx]
0x00000000001a6326 : add dword ptr [rax], eax ; cmp byte ptr [rcx + 0xfffffffffffffff4], bh ; jmp qword ptr [rcx]
0x00000000001a9366 : add dword ptr [rax], eax ; cmp byte ptr [rcx + 0xfffffffffffffff5], al ; jmp rdi
0x00000000001a8d66 : add dword ptr [rax], eax ; cmp byte ptr [rdi], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a7936 : add dword ptr [rax], eax ; cmp ch, bl ; hlt ; jmp qword ptr [rcx]
0x00000000001a9246 : add dword ptr [rax], eax ; cmp rbp, rsi ; jmp rbx
0x00000000001a8296 : add dword ptr [rax], eax ; cwde ; or esi, ebp ; jmp qword ptr [rcx]
0x00000000001ab4d6 : add dword ptr [rax], eax ; cwde ; sal ch, cl ; jmp qword ptr [rsi]
0x000000000018a8a6 : add dword ptr [rax], eax ; dec dword ptr [rdx + 0xffffffffffffffef] ; call rsp
0x00000000001a93b6 : add dword ptr [rax], eax ; fadd dword ptr [rdx + 0xfffffffffffffff5] ; jmp rax
0x00000000001a62c6 : add dword ptr [rax], eax ; fdivr dword ptr [rax + 0xfffffffffffffff4] ; jmp qword ptr [rcx]
0x00000000001a2fe6 : add dword ptr [rax], eax ; fdivr st(3) ; int1 ; jmp qword ptr [rcx]
0x00000000001abd06 : add dword ptr [rax], eax ; fdivrp st(5) ; call qword ptr [rax]
0x00000000001a72e6 : add dword ptr [rax], eax ; fmul st(0) ; hlt ; jmp qword ptr [rdx]
0x00000000001ac5c6 : add dword ptr [rax], eax ; fsub st(5) ; cmc ; call qword ptr [rbx]
0x000000000018ad1e : add dword ptr [rax], eax ; fsub st(7), st(0) ; jmp rsp
0x00000000001a88a6 : add dword ptr [rax], eax ; fsubr dword ptr [rax] ; cmc ; call qword ptr [rax]
0x000000000018beae : add dword ptr [rax], eax ; in al, -0x29 ; hlt ; jmp rsp
0x00000000001a2c16 : add dword ptr [rax], eax ; in al, dx ; int1 ; jmp qword ptr [rcx]
0x00000000001aca7e : add dword ptr [rax], eax ; in eax, dx ; cmc ; call qword ptr [rax]
0x000000000018a82e : add dword ptr [rax], eax ; je 0x18a87a ; out dx, eax ; jmp rsp
0x000000000018b23e : add dword ptr [rax], eax ; je 0x18b1d9 ; int1 ; call rsp
0x000000000018b96e : add dword ptr [rax], eax ; jne 0x18b966 ; call rsp
0x000000000018aba6 : add dword ptr [rax], eax ; jnp 0x18ab76 ; out dx, eax ; call rsp
0x00000000001a179e : add dword ptr [rax], eax ; jo 0x1a1769 ; int1 ; call qword ptr [rbx]
0x00000000001a2aae : add dword ptr [rax], eax ; jo 0x1a2a97 ; int1 ; jmp rsi
0x00000000001a5cfe : add dword ptr [rax], eax ; jo 0x1a5d66 ; hlt ; jmp qword ptr [rdi]
0x00000000001a694e : add dword ptr [rax], eax ; jo 0x1a68ff ; hlt ; jmp qword ptr [rdi]
0x00000000001a882e : add dword ptr [rax], eax ; jo 0x1a885a ; cmc ; jmp qword ptr [rcx]
0x00000000001a916e : add dword ptr [rax], eax ; jo 0x1a91aa ; cmc ; jmp qword ptr [rcx]
0x00000000001ab5ae : add dword ptr [rax], eax ; jo 0x1ab585 ; cmc ; jmp qword ptr [rsi]
0x00000000001a6266 : add dword ptr [rax], eax ; js 0x1a62e2 ; hlt ; jmp qword ptr [rcx]
0x00000000001a6df6 : add dword ptr [rax], eax ; js 0x1a6db3 ; hlt ; jmp qword ptr [rbx]
0x00000000001a7046 : add dword ptr [rax], eax ; js 0x1a7008 ; hlt ; jmp qword ptr [rcx]
0x00000000001a8a96 : add dword ptr [rax], eax ; js 0x1a8ac5 ; cmc ; jmp qword ptr [rcx]
0x00000000001a8cd6 : add dword ptr [rax], eax ; js 0x1a8d08 ; cmc ; jmp qword ptr [rcx]
0x00000000001a8e56 : add dword ptr [rax], eax ; js 0x1a8e8a ; cmc ; jmp qword ptr [rcx]
0x00000000001ab7d6 : add dword ptr [rax], eax ; js 0x1ab7ae ; cmc ; jmp qword ptr [rsi]
0x00000000001ad4b6 : add dword ptr [rax], eax ; js 0x1ad4b4 ; cmc ; jmp rsp
0x00000000001ad3ce : add dword ptr [rax], eax ; lock cli ; cmc ; call qword ptr [rax]
0x00000000001ad01e : add dword ptr [rax], eax ; lock cmc ; cmc ; call qword ptr [rcx]
0x00000000001a0fbe : add dword ptr [rax], eax ; lock int1 ; call rsi
0x00000000001a108e : add dword ptr [rax], eax ; lock jl 0x1a1084 ; call qword ptr [rax]
0x00000000001ac82e : add dword ptr [rax], eax ; lock out -0xb, al ; call qword ptr [rax]
0x00000000001a2ffe : add dword ptr [rax], eax ; lock sti ; int1 ; jmp qword ptr [rcx]
0x00000000001a8ade : add dword ptr [rax], eax ; lock sub esi, ebp ; jmp qword ptr [rcx]
0x00000000001ac22e : add dword ptr [rax], eax ; loope 0x1ac228 ; call qword ptr [rcx]
0x00000000001a0f1e : add dword ptr [rax], eax ; loopne 0x1a0f61 ; int1 ; jmp qword ptr [rcx]
0x00000000001a611e : add dword ptr [rax], eax ; loopne 0x1a6136 ; stc ; call qword ptr [rax]
0x00000000001a82de : add dword ptr [rax], eax ; loopne 0x1a82ed ; cmc ; jmp qword ptr [rcx]
0x00000000001a8bce : add dword ptr [rax], eax ; loopne 0x1a8bfe ; cmc ; jmp qword ptr [rcx]
0x00000000001a8f5e : add dword ptr [rax], eax ; loopne 0x1a8f94 ; cmc ; jmp qword ptr [rcx]
0x00000000001a903e : add dword ptr [rax], eax ; loopne 0x1a9077 ; cmc ; jmp qword ptr [rax]
0x00000000001ab51e : add dword ptr [rax], eax ; loopne 0x1ab4f4 ; cmc ; jmp qword ptr [rsi]
0x00000000001abafe : add dword ptr [rax], eax ; loopne 0x1abaa9 ; sti ; jmp qword ptr [rsi]
0x00000000001ac5ae : add dword ptr [rax], eax ; loopne 0x1ac597 ; cmc ; call qword ptr [rax]
0x000000000018bf3e : add dword ptr [rax], eax ; mov ah, 0x2a ; cmc ; jmp rsp
0x000000000018a756 : add dword ptr [rax], eax ; mov ah, 0x36 ; out dx, eax ; call rsp
0x000000000018bd96 : add dword ptr [rax], eax ; mov ah, 0x7d ; hlt ; jmp rsp
0x00000000001a79ae : add dword ptr [rax], eax ; mov al, -0x23 ; hlt ; jmp qword ptr [rcx]
0x00000000001ab4ee : add dword ptr [rax], eax ; mov al, -0x2e ; cmc ; jmp qword ptr [rsi]
0x00000000001a19de : add dword ptr [rax], eax ; mov al, -0x36 ; int1 ; jmp qword ptr [rax]
0x00000000001a875e : add dword ptr [rax], eax ; mov al, 0x27 ; cmc ; jmp qword ptr [rcx]
0x00000000001a5fde : add dword ptr [rax], eax ; mov al, 0x6c ; hlt ; jmp qword ptr [rcx]
0x00000000001a82ae : add dword ptr [rax], eax ; mov al, 0xb ; cmc ; jmp qword ptr [rcx]
0x00000000001ab5c6 : add dword ptr [rax], eax ; mov bl, dl ; cmc ; jmp qword ptr [rsi]
0x00000000001a9186 : add dword ptr [rax], eax ; mov byte ptr [rax], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a8846 : add dword ptr [rax], eax ; mov byte ptr [rax], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a2d36 : add dword ptr [rax], eax ; mov cl, dh ; int1 ; jmp qword ptr [rdx]
0x0000000000097935 : add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x000000000018ba5e : add dword ptr [rax], eax ; mov r14b, bl ; jmp rsp
0x0000000000109b20 : add dword ptr [rax], eax ; mov rax, rdi ; pop rbx ; ret
0x0000000000097861 : add dword ptr [rax], eax ; mov rcx, rdi ; mov qword ptr [rdx], rcx ; ret
0x00000000001a3a9e : add dword ptr [rax], eax ; mov sil, dl ; call qword ptr [rdx]
0x000000000018c98e : add dword ptr [rax], eax ; movsb byte ptr es:[rdi], byte ptr [rsi] ; add esi, edi ; call rsp
0x000000000018c04e : add dword ptr [rax], eax ; movsb byte ptr es:[rdi], byte ptr [rsi] ; ret -0xb
0x000000000018cb1e : add dword ptr [rax], eax ; movsb byte ptr es:[rdi], byte ptr [rsi] ; sub edi, esi ; jmp rsp
0x00000000001a5bd6 : add dword ptr [rax], eax ; movsxd rsi, esp ; jmp qword ptr [rcx]
0x00000000001a944e : add dword ptr [rax], eax ; nop ; cmc ; jmp rax
0x00000000001a898e : add dword ptr [rax], eax ; nop ; sub dh, ch ; jmp qword ptr [rcx]
0x00000000001a37ee : add dword ptr [rax], eax ; nop ; xchg edx, esi ; jmp qword ptr [rcx]
0x00000000001a3076 : add dword ptr [rax], eax ; or ah, bh ; int1 ; jmp qword ptr [rcx]
0x00000000001ad386 : add dword ptr [rax], eax ; or bl, bh ; cmc ; call qword ptr [rax]
0x00000000001a8206 : add dword ptr [rax], eax ; or byte ptr [rbx], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a62f6 : add dword ptr [rax], eax ; or byte ptr [rcx + 0xfffffffffffffff4], bh ; jmp qword ptr [rcx]
0x00000000001ac616 : add dword ptr [rax], eax ; or dh, ah ; cmc ; call qword ptr [rax]
0x00000000001ad2e6 : add dword ptr [rax], eax ; or dl, bh ; cmc ; call qword ptr [rax]
0x00000000001abc26 : add dword ptr [rax], eax ; or dl, bl ; cmc ; call qword ptr [rax]
0x000000000018a936 : add dword ptr [rax], eax ; or dword ptr [rbp + 0xffffffffffffffef], ecx ; jmp rsp
0x0000000000188b9e : add dword ptr [rax], eax ; outsb dx, byte ptr [rsi] ; mov gs, ecx ; call rsp
0x00000000001a9156 : add dword ptr [rax], eax ; pop rax ; cmp ch, dh ; jmp qword ptr [rcx]
0x00000000001a5ce6 : add dword ptr [rax], eax ; pop rax ; hlt ; jmp qword ptr [rcx]
0x00000000001ac396 : add dword ptr [rax], eax ; pop rax ; jrcxz 0x1ac390 ; jmp rbx
0x00000000001ab596 : add dword ptr [rax], eax ; pop rax ; sal ebp, cl ; jmp qword ptr [rsi]
0x00000000001abcee : add dword ptr [rax], eax ; push rax ; fdivrp st(5) ; call qword ptr [rax]
0x00000000001a5dfe : add dword ptr [rax], eax ; push rax ; hlt ; jmp qword ptr [rcx]
0x00000000001a5fae : add dword ptr [rax], eax ; push rax ; insb byte ptr es:[rdi], dx ; hlt ; jmp qword ptr [rcx]
0x00000000001a3a4e : add dword ptr [rax], eax ; push rax ; mov dh, dl ; call qword ptr [rdi]
0x00000000001ab48e : add dword ptr [rax], eax ; push rax ; sal ch, cl ; jmp qword ptr [rsi]
0x00000000001a685e : add dword ptr [rax], eax ; push rax ; stosb byte ptr es:[rdi], al ; hlt ; call qword ptr [rbx]
0x00000000001a8b3e : add dword ptr [rax], eax ; push rax ; sub al, -0xb ; jmp qword ptr [rcx]
0x00000000001ab16e : add dword ptr [rax], eax ; push rax ; xchg eax, edi ; cmc ; call rsp
0x000000000018bf7e : add dword ptr [rax], eax ; push rsp ; outsb dx, byte ptr [rsi] ; cmc ; inc esp ; ret
0x00000000001ab72e : add dword ptr [rax], eax ; rcl bl ; cmc ; jmp qword ptr [rsi]
0x00000000001a78ee : add dword ptr [rax], eax ; rcr ah, -0xc ; jmp qword ptr [rcx]
0x000000000019f91e : add dword ptr [rax], eax ; rcr byte ptr [rbp + 0xfffffffffffffff0] ; call qword ptr [rax]
0x00000000001a7a0e : add dword ptr [rax], eax ; rcr ch, -0xc ; call rbx
0x00000000000877e9 : add dword ptr [rax], eax ; ret
0x00000000001a49ce : add dword ptr [rax], eax ; ret -0x19
0x00000000001ab8fe : add dword ptr [rax], eax ; ret -0x457
0x000000000018c7a6 : add dword ptr [rax], eax ; ret -0x938
0x000000000018b356 : add dword ptr [rax], eax ; ret -0xf
0x00000000001a320e : add dword ptr [rax], eax ; rol byte ptr [rdx + rsi*8], 1 ; jmp rdx
0x00000000001a08be : add dword ptr [rax], eax ; ror byte ptr [rax], -0xf ; jmp rcx
0x00000000001a60be : add dword ptr [rax], eax ; sal byte ptr [rbx + 0xfffffffffffffff4], 1 ; jmp qword ptr [rcx]
0x00000000001ab57e : add dword ptr [rax], eax ; sal ebp, cl ; jmp qword ptr [rsi]
0x00000000001a534e : add dword ptr [rax], eax ; sar al, -0xd ; jmp qword ptr [rdi]
0x00000000001a2f6e : add dword ptr [rax], eax ; sar dl, -0xf ; jmp qword ptr [rcx]
0x00000000001ab776 : add dword ptr [rax], eax ; sbb ah, dl ; cmc ; jmp qword ptr [rsi]
0x00000000001a8a36 : add dword ptr [rax], eax ; sbb byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a9216 : add dword ptr [rax], eax ; sbb byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a844e : add dword ptr [rax], eax ; sbb byte ptr [rsi], -0xb ; jmp qword ptr [rsi]
0x00000000001a8ca6 : add dword ptr [rax], eax ; sbb byte ptr [rsi], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a797e : add dword ptr [rax], eax ; sbb ch, -0xc ; jmp qword ptr [rcx]
0x00000000001a5c9e : add dword ptr [rax], eax ; shl byte ptr [rbx + 0xfffffffffffffff4], 1 ; jmp qword ptr [rcx]
0x000000000018aca6 : add dword ptr [rax], eax ; shr bh, 1 ; call rsp
0x00000000001a8dde : add dword ptr [rax], eax ; shr byte ptr [rdi], 1 ; cmc ; jmp qword ptr [rcx]
0x00000000001a89ee : add dword ptr [rax], eax ; shr byte ptr [rdx], 1 ; cmc ; jmp qword ptr [rcx]
0x00000000001a8d1e : add dword ptr [rax], eax ; shr byte ptr [rsi], -0xb ; jmp qword ptr [rcx]
0x00000000001ab566 : add dword ptr [rax], eax ; sub bl, dl ; cmc ; jmp qword ptr [rsi]
0x00000000001a8dae : add dword ptr [rax], eax ; sub byte ptr [rdi], -0xb ; call qword ptr [rsi]
0x00000000001a84f6 : add dword ptr [rax], eax ; sub byte ptr [rdi], bl ; cmc ; jmp qword ptr [rdx]
0x00000000001a0a86 : add dword ptr [rax], eax ; sub byte ptr [rsi], dl ; int1 ; jmp qword ptr [rcx]
0x00000000001aca36 : add dword ptr [rax], eax ; sub ch, ch ; cmc ; call qword ptr [rdi]
0x00000000001a77f6 : add dword ptr [rax], eax ; sub dl, bl ; hlt ; call qword ptr [rax]
0x00000000001a7346 : add dword ptr [rax], eax ; sub dl, cl ; hlt ; jmp qword ptr [rcx]
0x00000000001a1e16 : add dword ptr [rax], eax ; sub dl, dl ; int1 ; jmp qword ptr [rbx]
0x00000000001a8a66 : add dword ptr [rax], eax ; sub rsi, rbp ; jmp qword ptr [rcx]
0x00000000001a78d6 : add dword ptr [rax], eax ; test al, -0x24 ; hlt ; jmp qword ptr [rcx]
0x00000000001a6c16 : add dword ptr [rax], eax ; test al, -0x4e ; hlt ; jmp qword ptr [rcx]
0x00000000001a89a6 : add dword ptr [rax], eax ; test al, 0x2a ; cmc ; jmp qword ptr [rcx]
0x00000000001a8d06 : add dword ptr [rax], eax ; test al, 0x2e ; cmc ; jmp qword ptr [rcx]
0x00000000001a5b16 : add dword ptr [rax], eax ; test al, 0x61 ; hlt ; jmp qword ptr [rbx]
0x00000000001a6296 : add dword ptr [rax], eax ; test al, 0x78 ; hlt ; jmp qword ptr [rcx]
0x000000000018a506 : add dword ptr [rax], eax ; test bh, ah ; out dx, al ; jmp rsp
0x000000000018ef86 : add dword ptr [rax], eax ; test dl, byte ptr [rdx + 0xfffffffffffffffb] ; call rsp
0x000000000018ac36 : add dword ptr [rax], eax ; xchg eax, ebp ; into ; out dx, eax ; jmp rsp
0x000000000018b2c6 : add dword ptr [rax], eax ; xchg eax, esp ; mov dl, -0xf ; call rsp
0x000000000018b5ee : add dword ptr [rax], eax ; xchg eax, esp ; mov edx, esi ; jmp rsp
0x000000000018aaf6 : add dword ptr [rax], eax ; xchg eax, esp ; ret
0x00000000001a37a6 : add dword ptr [rax], eax ; xchg rdx, rsi ; jmp qword ptr [rcx]
0x000000000018a3be : add dword ptr [rax], eax ; xlatb ; out dx, al ; call rsp
0x00000000001ab78e : add dword ptr [rax], eax ; xor ah, dl ; cmc ; jmp qword ptr [rsi]
0x000000000018f136 : add dword ptr [rax], eax ; xor al, -0x29 ; std ; jmp rsp
0x000000000018efc6 : add dword ptr [rax], eax ; xor al, -0x2a ; sti ; call rsp
0x000000000018bcde : add dword ptr [rax], eax ; xor al, -0xc ; jmp rsp
0x000000000018bf56 : add dword ptr [rax], eax ; xor al, 0x3b ; cmc ; call rsp
0x000000000018a786 : add dword ptr [rax], eax ; xor al, 0x3c ; out dx, eax ; call rsp
0x00000000001a8e26 : add dword ptr [rax], eax ; xor bpl, sil ; jmp qword ptr [rcx]
0x00000000001a8e0e : add dword ptr [rax], eax ; xor byte ptr [rax], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001a8a4e : add dword ptr [rax], eax ; xor byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a922e : add dword ptr [rax], eax ; xor byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000000922a3 : add dword ptr [rax], edi ; ret 0x4788
0x000000000008c325 : add dword ptr [rax], r8d ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16ff
0x00000000000c937b : add dword ptr [rbp + 0x1441204], ecx ; ret 0xc8d
0x0000000000096efb : add dword ptr [rbp + 0x19], eax ; rol byte ptr [rcx + 0xffffffffffffff83], cl ; ret -0x7cfb
0x00000000000d4913 : add dword ptr [rbp + 0x39], eax ; ret -0x71f1
0x00000000000d8e43 : add dword ptr [rbp + 0x39], eax ; ret 0x677e
0x00000000000c9081 : add dword ptr [rbp + 0x75], ebx ; jmp 0xc90ce
0x00000000000376ea : add dword ptr [rbp + 0xb], esi ; xor eax, eax ; nop ; ret
0x0000000000109afc : add dword ptr [rbp + 0xf], eax ; mov dh, 0x42 ; dec dword ptr [rcx + 0xffffffffffffff83] ; ret
0x000000000010ca59 : add dword ptr [rbp + 0xffffffffffffff85], eax ; sal byte ptr [rbp + 0xffffffffffffffe9], -0xd ; ret
0x00000000000d2a64 : add dword ptr [rbp + 0xffffffffffffff87], esi ; pop rbx ; ret
0x000000000007e24f : add dword ptr [rbp + 0xffffffffffffff89], ecx ; ret
0x00000000000382a4 : add dword ptr [rbp + 0xffffffffffffffe1], esi ; mov eax, 1 ; ret
0x0000000000098868 : add dword ptr [rbp + 0xffffffffffffffe5], esi ; mov rax, rbx ; pop rbx ; ret
0x00000000000a3e47 : add dword ptr [rbp + 0xffffffffffffffe6], esi ; mov rax, rbx ; pop rbx ; ret
0x000000000009801c : add dword ptr [rbp + 0xfffffffffffffff1], esi ; xor eax, eax ; ret
0x00000000000b9b1f : add dword ptr [rbp + 1], ecx ; ret
0x000000000014df72 : add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x0000000000096946 : add dword ptr [rbx + 0x294803e0], eax ; ret
0x00000000000026fe : add dword ptr [rbx + 0x2b], 0x821055b8 ; ret 0x617e
0x000000000008185b : add dword ptr [rbx + 0x33d96e05], ecx ; add byte ptr [rcx], bh ; ret 0xa7e
0x0000000000034633 : add dword ptr [rbx + 0xf450afa], eax ; ret -0x7cb8
0x00000000000d40cd : add dword ptr [rbx + 0xffffffff834801c0], eax ; ret 0x4801
0x00000000000d1ae8 : add dword ptr [rbx + 0xffffffff834801c5], eax ; ret
0x000000000002ea02 : add dword ptr [rbx + 0xffffffff834801c7], eax ; ret -0x7cf0
0x0000000000187658 : add dword ptr [rbx + 0xffffffffbb01fffd], edi ; std ; call rax
0x0000000000187598 : add dword ptr [rbx + 0xffffffffbb01fffd], edi ; std ; jmp qword ptr [rcx]
0x000000000018768c : add dword ptr [rbx + 0xffffffffdb58fffd], edi ; sti ; jmp qword ptr [rax]
0x0000000000113931 : add dword ptr [rbx + 0xfffffffffffdfc85], ecx ; dec dword ptr [rax + 0x39] ; ret -0x78f1
0x000000000007dfdf : add dword ptr [rbx + 0xfffffffffffffff3], ebx ; ret
0x00000000000dc90d : add dword ptr [rbx + rcx*4 + 0xfffffffffffffff6], esi ; ret 0x7408
0x00000000001b1eba : add dword ptr [rbx], eax ; ret
0x0000000000128421 : add dword ptr [rcx + 0x1b802], ecx ; add byte ptr [rax], al ; ret
0x00000000000a433f : add dword ptr [rcx + 0x39], eax ; ret
0x00000000000da194 : add dword ptr [rcx + 0x39], eax ; ret -0x2581
0x00000000001147f1 : add dword ptr [rcx + 0x39], eax ; ret -0x268b
0x00000000000da16e : add dword ptr [rcx + 0x39], eax ; ret 0x267e
0x0000000000092e28 : add dword ptr [rcx + 0x39], ecx ; ret
0x000000000012dd8c : add dword ptr [rcx + 0x48], esi ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000a2470 : add dword ptr [rcx + 0x5c], eax ; ret
0x000000000011e233 : add dword ptr [rcx + 0x5d], eax ; ret
0x0000000000098693 : add dword ptr [rcx + 0xf], eax ; mov dh, 0x49 ; dec dword ptr [rcx + 0xffffffffffffff83] ; ret -0x7bff
0x000000000009a816 : add dword ptr [rcx + 0xfffffffff8894802], ecx ; ret
0x00000000000a9853 : add dword ptr [rcx + 0xffffffffffffff83], ecx ; jmp -0x3d721fa4
0x000000000002a965 : add dword ptr [rcx + 0xffffffffffffff83], ecx ; ret
0x0000000000118b5f : add dword ptr [rcx + 0xffffffffffffff83], ecx ; ret 0x4102
0x00000000000a8805 : add dword ptr [rcx + 0xffffffffffffff83], ecx ; ret 0x4104
0x00000000000d94bf : add dword ptr [rcx + 0xffffffffffffff83], ecx ; ret 0x4504
0x00000000000476a6 : add dword ptr [rcx + 0xffffffffffffff88], eax ; add cl, byte ptr [rcx + 0xffffffffffffff83] ; ret 0xf01
0x00000000001248c9 : add dword ptr [rcx + 0xffffffffffffff89], eax ; add byte ptr [rax + 1], bh ; ret
0x000000000005b063 : add dword ptr [rcx + 0xffffffffffffff89], ecx ; ret 0x76e9
0x000000000002a76b : add dword ptr [rcx + 0xffffffffffffff8b], eax ; or ecx, dword ptr [rax + 0xffffffffffffff89] ; ret -0x3777
0x00000000000b2f5d : add dword ptr [rcx + 0xffffffffffffff8d], eax ; push rax ; add eax, dword ptr [rdi + rcx + 0x48] ; ret -0x6c46
0x00000000000479b4 : add dword ptr [rcx + 0xffffffffffffffc6], eax ; jmp qword ptr [r8]
0x0000000000040a1c : add dword ptr [rcx + 1], ecx ; ret
0x0000000000028df5 : add dword ptr [rcx + rcx*4 + 0x55], eax ; add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x000000000011b70a : add dword ptr [rcx + rcx*4 + 0xffffffffffffffa4], ecx ; ret
0x00000000000b3d96 : add dword ptr [rcx + rdi + 0x35], ecx ; ret 0x30e1
0x00000000001a7345 : add dword ptr [rcx], 0xf4ca2800 ; jmp qword ptr [rcx]
0x00000000001a735d : add dword ptr [rcx], 0xf4ca4000 ; jmp qword ptr [rcx]
0x00000000000a407b : add dword ptr [rcx], eax ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xfffffffffffffff0] ; ret
0x0000000000115515 : add dword ptr [rcx], eax ; add byte ptr [rax], al ; ret
0x0000000000065caa : add dword ptr [rcx], ebp ; ret
0x00000000000fda8b : add dword ptr [rcx], edi ; fmul dword ptr [rdi] ; ret
0x00000000000e420b : add dword ptr [rcx], edi ; ret
0x00000000000d83a0 : add dword ptr [rcx], edi ; ret -0x298b
0x0000000000047363 : add dword ptr [rcx], edi ; ret -0x4781
0x00000000000e3ffc : add dword ptr [rcx], edi ; ret -0x73f1
0x00000000000dd26b : add dword ptr [rcx], edi ; ror byte ptr [rdi], 1 ; ret -0x3cc7
0x0000000000066931 : add dword ptr [rcx], esi ; rol byte ptr [rbp + 0xffffffffc09f0fdb], 0x29 ; ret
0x000000000012f2d0 : add dword ptr [rdi + 0x28], 4 ; mov eax, 1 ; ret
0x000000000012f2e0 : add dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x0000000000094d4c : add dword ptr [rdi + 0xffffffffffffffd9], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000016634a : add dword ptr [rdi + 3], esi ; ret
0x0000000000035ad6 : add dword ptr [rdi + rbx*2], edi ; je 0x35aeb ; jmp 0x35a9f
0x0000000000026f7a : add dword ptr [rdi], 1 ; jmp 0x26f42
0x00000000001ab1c1 : add dword ptr [rdi], 3 ; add dword ptr [rdx], r9d ; ret
0x0000000000195764 : add dword ptr [rdi], 3 ; ret
0x0000000000119cb0 : add dword ptr [rdi], ecx ; add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x00000000000d1976 : add dword ptr [rdi], ecx ; lahf ; ret -0x7d15
0x00000000000d5ba6 : add dword ptr [rdi], ecx ; lahf ; ret 0xee9
0x000000000002fde5 : add dword ptr [rdi], ecx ; mov bh, -0x40 ; ret
0x0000000000049c1b : add dword ptr [rdi], ecx ; mov dh, 0x41 ; dec dword ptr [rax + 0xffffffffffffff83] ; ret -0x77ff
0x000000000011b330 : add dword ptr [rdi], ecx ; mov dh, 0x45 ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x3108
0x0000000000098760 : add dword ptr [rdi], ecx ; mov dh, 0x46 ; dec dword ptr [rax + 0xffffffffffffff83] ; ret
0x00000000000b7fbe : add dword ptr [rdi], ecx ; sahf ; ret 0x1fbf
0x000000000015b28e : add dword ptr [rdi], ecx ; test ecx, dword ptr [rbx + 3] ; add byte ptr [rax], al ; ret
0x00000000000c4d1f : add dword ptr [rdi], ecx ; xchg byte ptr [rdi + 0xfffffffff6000000], bh ; ret
0x0000000000112b0b : add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x0000000000047c21 : add dword ptr [rdi], ecx ; xchg eax, esp ; ret -0x7cbf
0x000000000009a7d4 : add dword ptr [rdx + 0x48028801], ecx ; mov eax, edi ; ret
0x000000000005e2c8 : add dword ptr [rdx + 4], 1 ; ret
0x000000000005e348 : add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x00000000000fd49b : add dword ptr [rdx + rax*2], 1 ; ret
0x0000000000192dc6 : add dword ptr [rdx + rbp*8 + 0xffffffffad0d1cff], ecx ; mov ch, dl ; jmp qword ptr [rdx]
0x000000000019143d : add dword ptr [rdx], 0x44 ; ret
0x00000000001a142c : add dword ptr [rdx], 0x4a ; ret
0x000000000019d114 : add dword ptr [rdx], 0x51 ; ret
0x00000000001ab9e5 : add dword ptr [rdx], 0x57 ; ret
0x0000000000194004 : add dword ptr [rdx], 0x63 ; ret
0x000000000019d11d : add dword ptr [rdx], 0x65 ; ret
0x00000000001b7325 : add dword ptr [rdx], 0xf7f9b800 ; call qword ptr [rax]
0x00000000001b733d : add dword ptr [rdx], 0xfaf2a000 ; call rcx
0x0000000000197074 : add dword ptr [rdx], 2 ; pushfq ; ret
0x000000000019d594 : add dword ptr [rdx], 2 ; ret
0x000000000019c65c : add dword ptr [rdx], 3 ; add al, byte ptr [rcx] ; ret
0x000000000018cc1d : add dword ptr [rdx], eax ; add byte ptr [rax + rsi + 0xfffffffffffffff7], ah ; jmp rsp
0x000000000018f418 : add dword ptr [rdx], ecx ; ret
0x00000000001ab1c4 : add dword ptr [rdx], r9d ; ret
0x000000000007d566 : add dword ptr [rip + 0x344457], 1 ; ret
0x00000000000d3ed4 : add dword ptr [rip + 0x438d0000], eax ; add dword ptr [rax + 0xffffffffffffff83], ecx ; ret
0x00000000000abd1e : add dword ptr [rip + 0xffffffffb8480000], eax ; ret -1
0x000000000009a765 : add dword ptr [rsi + 0xf], esp ; adc eax, dword ptr [rdx] ; mov rax, rdi ; ret
0x000000000013dd19 : add dword ptr [rsi + 0xf], esp ; cmp byte ptr [rax], al ; ret 0xf66
0x000000000009a7e7 : add dword ptr [rsi + 0xffffffffffffff89], esp ; add cl, byte ptr [rax + 0xffffffffffffff89] ; clc ; ret
0x000000000019cad0 : add dword ptr [rsi], 2 ; out 0xa, al ; ret
0x000000000019d218 : add dword ptr [rsi], 2 ; ret
0x000000000019e245 : add dword ptr [rsi], 3 ; mov byte ptr [rcx], al ; ret
0x00000000001aa427 : add dword ptr [rsi], edx ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret
0x0000000000191017 : add dword ptr [rsi], edx ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret -0x15dd
0x00000000001b4177 : add dword ptr [rsi], edx ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret -0x93d
0x00000000001a993f : add dword ptr [rsi], edx ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret -0xb24
0x00000000001a3d07 : add dword ptr [rsi], edx ; adc byte ptr [rsi], cl ; add byte ptr [rsi], 0xd ; ret -0xc52
0x0000000000193a14 : add dword ptr [rsi], edx ; jmp 0x193a17
0x000000000019bc5c : add dword ptr [rsi], esp ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a308d : add dword ptr ds:[rax], eax ; and ah, bh ; int1 ; jmp qword ptr [rcx]
0x00000000001a30a5 : add dword ptr ds:[rax], eax ; cmp ah, bh ; int1 ; jmp qword ptr [rcx]
0x00000000001a2ffd : add dword ptr ds:[rax], eax ; lock sti ; int1 ; jmp qword ptr [rcx]
0x00000000001a3075 : add dword ptr ds:[rax], eax ; or ah, bh ; int1 ; jmp qword ptr [rcx]
0x0000000000140c37 : add dword ptr es:[rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000018a82d : add dword ptr es:[rax], eax ; je 0x18a87a ; out dx, eax ; jmp rsp
0x00000000001a56ed : add dword ptr fs:[rax], eax ; ret -0x19
0x00000000001a5785 : add dword ptr gs:[rax], eax ; call -0x1ce5b46d
0x00000000000a7d65 : add dword ptr ss:[rax], eax ; add byte ptr [rax + 0xffffffffffffffc7], cl ; ret
0x000000000007931c : add eax, 0 ; add byte ptr [rax], al ; mov edx, r8d ; jmp 0x792bb
0x0000000000004051 : add eax, 0 ; add byte ptr [rax], al ; ret
0x00000000001183d6 : add eax, 0x10 ; ret
0x0000000000089a66 : add eax, 0x10f35 ; ret
0x00000000000877e6 : add eax, 0x11595 ; ret
0x0000000000021fb2 : add eax, 0x15b18c ; ret
0x0000000000048599 : add eax, 0x15b8 ; add byte ptr [rcx + 0xffffffffffffff8b], cl ; ret
0x0000000000021fc2 : add eax, 0x15d163 ; ret
0x000000000008cb0c : add eax, 0x1f ; ret
0x00000000001928d4 : add eax, 0x2300e44 ; ret
0x0000000000134692 : add eax, 0x288469 ; jmp rax
0x0000000000134642 : add eax, 0x2884b1 ; pop r12 ; jmp rax
0x00000000001345e2 : add eax, 0x288509 ; pop r12 ; jmp rax
0x00000000001361b3 : add eax, 0x28a6d8 ; call qword ptr [rax]
0x00000000001346f3 : add eax, 0x28c198 ; call qword ptr [rax]
0x000000000008b8a6 : add eax, 0x29000000 ; ret
0x00000000000b84c7 : add eax, 0x2907fbc1 ; ret -0x76bc
0x000000000012b992 : add eax, 0x2934f1 ; add rsp, 8 ; ret
0x000000000012b962 : add eax, 0x293589 ; add rsp, 8 ; ret
0x000000000012b902 : add eax, 0x293671 ; add rsp, 8 ; ret
0x000000000012b932 : add eax, 0x2936b1 ; add rsp, 8 ; ret
0x00000000000b8605 : add eax, 0x2941c229 ; ret
0x000000000002a217 : add eax, 0x29480000 ; ret -0x74b7
0x00000000001b8459 : add eax, 0x29f0000 ; add byte ptr [rax], al ; ret
0x000000000011d122 : add eax, 0x2a1ec9 ; mov rax, qword ptr fs:[rax] ; ret
0x000000000012078a : add eax, 0x2a3fb1 ; add rsp, 8 ; ret
0x0000000000120771 : add eax, 0x2a3fca ; test eax, eax ; je 0x120780 ; ret
0x000000000011fb3a : add eax, 0x2a4b61 ; pop rbx ; ret
0x000000000011fb02 : add eax, 0x2a4b99 ; pop rbx ; ret
0x000000000011fa43 : add eax, 0x2a4c58 ; pop rbx ; ret
0x000000000011c9ab : add eax, 0x2a7a20 ; test eax, eax ; je 0x11c9b8 ; ret
0x0000000000112ea2 : add eax, 0x2adb49 ; ret
0x0000000000112d20 : add eax, 0x2adcc3 ; add rsp, 8 ; ret
0x000000000010e2ac : add eax, 0x2b567e ; add ecx, ebp ; ret
0x000000000010d127 : add eax, 0x2b66e4 ; add rsp, 0x28 ; jmp rax
0x00000000000fe0b2 : add eax, 0x2c0da9 ; mov eax, dword ptr [rax + 0x38] ; ret
0x000000000015b314 : add eax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00000000000fa9cf : add eax, 0x2c7e6c ; add rsp, 0x18 ; ret
0x00000000000fa96c : add eax, 0x2c7f0f ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fa438 : add eax, 0x2c83b3 ; add rsp, 8 ; ret
0x00000000000fa3d9 : add eax, 0x2c8432 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fa1e1 : add eax, 0x2c85d2 ; ret
0x00000000000fa021 : add eax, 0x2c8792 ; ret
0x00000000000f9e4e : add eax, 0x2c8965 ; add rsp, 8 ; ret
0x00000000000f31b6 : add eax, 0x2cd765 ; mov rdx, rax ; jmp 0xf314f
0x00000000000f3120 : add eax, 0x2cd7fb ; add rsp, 8 ; ret
0x00000000000f463b : add eax, 0x2cdff0 ; add rsp, 8 ; ret
0x00000000000f45c7 : add eax, 0x2ce064 ; mov rdx, rax ; jmp 0xf45a0
0x00000000000ec7e8 : add eax, 0x2d5cbf ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000019e243 : add eax, 0x3068345 ; mov byte ptr [rcx], al ; ret
0x00000000000b1308 : add eax, 0x310a93 ; add rsp, 0x28 ; ret
0x00000000000b2db0 : add eax, 0x312063 ; add rsp, 8 ; ret
0x000000000008b765 : add eax, 0x336506 ; add rsp, 8 ; ret
0x000000000008b723 : add eax, 0x336548 ; ret
0x00000000000832c0 : add eax, 0x33bc0b ; mov qword ptr [rax], rdi ; ret
0x0000000000081709 : add eax, 0x33d6aa ; xor edi, edi ; call qword ptr [rax]
0x00000000000832d1 : add eax, 0x33e776 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000007f0fd : add eax, 0x34065e ; ret
0x000000000007d4e2 : add eax, 0x342cb9 ; ret
0x000000000007dfda : add eax, 0x343aa0 ; add dword ptr [rbx + 0xfffffffffffffff3], ebx ; ret
0x000000000007d5c6 : add eax, 0x3443f9 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000005dba4 : add eax, 0x363d87 ; pop rbx ; pop rbp ; ret
0x0000000000037ca4 : add eax, 0x3873e7 ; mov eax, edx ; ret
0x0000000000037c61 : add eax, 0x38742a ; ret
0x0000000000037c51 : add eax, 0x38744a ; ret
0x000000000003d1d2 : add eax, 0x387bbf ; add rsp, 8 ; ret
0x000000000002f9fe : add eax, 0x38f3d5 ; mov qword ptr [rax], rdx ; ret
0x000000000002c0e2 : add eax, 0x3949d9 ; ret
0x0000000000021a9c : add eax, 0x39d78f ; pop r12 ; ret
0x000000000001f571 : add eax, 0x3a14da ; pop rax ; pop rbx ; pop rbp ; ret
0x0000000000023762 : add eax, 0x3a14e1 ; ret
0x0000000000023752 : add eax, 0x3a1501 ; ret
0x00000000000223ec : add eax, 0x3a280f ; ret
0x00000000000221a3 : add eax, 0x3a2a58 ; pop rbx ; ret
0x00000000001b8b85 : add eax, 0x3ee0000 ; add byte ptr [rax], al ; ret 5
0x00000000000e5efe : add eax, 0x41000000 ; pop rsp ; ret
0x0000000000109626 : add eax, 0x42045 ; ret
0x00000000000d3ed5 : add eax, 0x438d0000 ; add dword ptr [rax + 0xffffffffffffff83], ecx ; ret
0x00000000001096c6 : add eax, 0x44a75 ; ret
0x000000000006f841 : add eax, 0x48000000 ; mov eax, edx ; pop rbx ; ret
0x000000000015d848 : add eax, 0x48054289 ; lea eax, dword ptr [rdx + 8] ; ret
0x00000000001594f8 : add eax, 0x48054289 ; mov eax, edi ; ret
0x000000000009db46 : add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x0000000000119cb2 : add eax, 0x48c48348 ; pop rbx ; pop rbp ; ret
0x0000000000125dea : add eax, 0x48c48348 ; ret
0x00000000000974aa : add eax, 0x48fb4789 ; mov eax, edi ; ret
0x000000000015d8c9 : add eax, 0x5428948 ; lea rax, qword ptr [rdx + 0xc] ; ret
0x0000000000159539 : add eax, 0x5428948 ; mov rax, rdi ; ret
0x000000000016e389 : add eax, 0x5bd0000 ; add byte ptr [rax], al ; ret 5
0x000000000017295d : add eax, 0x5c00000 ; add byte ptr [rax], al ; ret 5
0x0000000000089463 : add eax, 0x5c415d5b ; ret
0x0000000000054fee : add eax, 0x604c690 ; add dword ptr [rax + 0xffffffffffffff83], ecx ; ret 0xf01
0x00000000000922e3 : add eax, 0x6878 ; ret
0x0000000000187875 : add eax, 0x700fffc ; cld ; jmp rax
0x0000000000187979 : add eax, 0x720fffc ; cld ; call qword ptr [rax]
0x000000000008d8e2 : add eax, 0x79 ; ret
0x000000000009e34e : add eax, 0x82b850f ; add byte ptr [rax], al ; ret
0x00000000000ed5fb : add eax, 0x83480000 ; clc ; dec dword ptr [rax + 0xffffffffffffff89] ; ret
0x0000000000059600 : add eax, 0x83480000 ; ret
0x0000000000138841 : add eax, 0x83480000 ; ret -0x14f0
0x000000000013b441 : add eax, 0x83480000 ; ret -0x16f0
0x00000000001388ed : add eax, 0x83480000 ; ret 0x4910
0x000000000015d84b : add eax, 0x8428d48 ; ret
0x00000000000a7629 : add eax, 0x850f0000 ; ret 0xd
0x000000000013609c : add eax, 0x89480000 ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000001095d3 : add eax, 0x89c78944 ; ret
0x00000000000b2e79 : add eax, 0x89d02944 ; ret
0x000000000009f9f2 : add eax, 0x997850f ; add byte ptr [rax], al ; ret
0x000000000012b956 : add eax, 0xa0 ; add rsp, 8 ; ret
0x000000000012b986 : add eax, 0xa8 ; add rsp, 8 ; ret
0x00000000000922f7 : add eax, 0xb1464 ; ret
0x000000000008b9f3 : add eax, 0xb2258 ; ret
0x000000000008b663 : add eax, 0xb24c8 ; ret
0x00000000000891d3 : add eax, 0xb4818 ; ret
0x00000000000abd1f : add eax, 0xb8480000 ; ret -1
0x00000000000a38b4 : add eax, 0xbccb7 ; ret
0x00000000000a4470 : add eax, 0xbddbb ; ret
0x00000000000e8312 : add eax, 0xbe0f4101 ; ret -0x177d
0x00000000001360ce : add eax, 0xc0310000 ; pop rbx ; pop rbp ; ret
0x0000000000161c4a : add eax, 0xc0310000 ; ret
0x00000000000a4478 : add eax, 0xc0673 ; ret
0x00000000000d40cb : add eax, 0xc0830100 ; add dword ptr [rax + 0xffffffffffffff83], ecx ; ret 0x4801
0x000000000008d286 : add eax, 0xc0ec5 ; ret
0x0000000000000451 : add eax, 0xc1c107c ; ret 0x4412
0x000000000015d8cd : add eax, 0xc428d48 ; ret
0x000000000009f18d : add eax, 0xc478d48 ; ret
0x00000000000328be : add eax, 0xc6834900 ; or byte ptr [rax + 1], cl ; ret
0x00000000000a445c : add eax, 0xc84f ; ret
0x000000000008b346 : add eax, 0xce245 ; ret
0x000000000008d776 : add eax, 0xce995 ; ret
0x00000000000890c6 : add eax, 0xced15 ; ret
0x000000000008d896 : add eax, 0xd0085 ; ret
0x000000000008cb20 : add eax, 0xd40cb ; ret
0x000000000009ffcd : add eax, 0xd478d48 ; ret
0x00000000000a38ac : add eax, 0xd48f ; ret
0x000000000008cb28 : add eax, 0xd6853 ; ret
0x00000000000879d3 : add eax, 0xdb688 ; ret
0x00000000000b8b3e : add eax, 0xe9000000 ; ret -0xd
0x0000000000025497 : add eax, 0xe9fffff4 ; ret
0x00000000000f6ddc : add eax, 0xf6310000 ; mov rdi, r12 ; call rbx
0x00000000000f6e01 : add eax, 0xf6310000 ; mov rdi, r13 ; call rbx
0x00000000000f6f4a : add eax, 0xf6310000 ; mov rdi, r14 ; call rbx
0x00000000000f6fe3 : add eax, 0xf6310000 ; mov rdi, r15 ; call rbx
0x000000000014df63 : add eax, 0xf7f0ff3 ; ret
0x000000000004ba8e : add eax, 0xf8834800 ; dec dword ptr [rcx + 0xffffffffffffff89] ; ret -0x7af1
0x000000000004e27f : add eax, 0xf8834800 ; dec dword ptr [rcx + 0xffffffffffffff89] ; ret -0x7bf1
0x00000000000b306e : add eax, 0xfd02944 ; scasd eax, dword ptr es:[rdi] ; ret
0x000000000010944a : add eax, 0xfff0003d ; dec dword ptr [rax + 0xffffffffffffff89] ; ret 0x1376
0x0000000000093843 : add eax, 0xfffffad8 ; add rsp, 8 ; ret
0x000000000009382c : add eax, 0xfffffaef ; ret
0x000000000008d71b : add eax, 1 ; ret
0x00000000000235b2 : add eax, 2 ; mov dword ptr [rsp], eax ; call rbx
0x00000000000a3b48 : add eax, 2 ; ret
0x00000000000a3b61 : add eax, 3 ; ret
0x0000000000087c36 : add eax, 5 ; ret
0x000000000008d945 : add eax, 6 ; ret
0x0000000000118c50 : add eax, 8 ; ret
0x0000000000089ab2 : add eax, 9 ; ret
0x00000000000226e9 : add eax, dword ptr [0] ; ret
0x000000000004d15a : add eax, dword ptr [rax] ; add al, ch ; outsb dx, byte ptr [rsi] ; ret
0x0000000000028f27 : add eax, dword ptr [rax] ; add al, ch ; shr dword ptr [rax + rax], -0x77 ; ret -0x1d7d
0x0000000000028e02 : add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000251e3 : add eax, dword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x0000000000138ab1 : add eax, dword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x000000000013b5e1 : add eax, dword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x0000000000138a8d : add eax, dword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x0000000000046ef1 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; jmp 0x46eba
0x00000000000f730d : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r12 ; call rbx
0x00000000000f7364 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r13 ; call rbx
0x00000000001065f5 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call 0x1028b0
0x00000000000f73e4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r14 ; call rbx
0x000000000012b6f5 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call qword ptr [rax]
0x00000000000f74e4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, r15 ; call rbx
0x000000000012a541 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, rax ; call qword ptr [r10]
0x00000000000f9097 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x00000000000a3ba3 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001143b4 : add eax, dword ptr [rax] ; add byte ptr [rax], al ; syscall ; ret
0x00000000000d4c01 : add eax, dword ptr [rax] ; add byte ptr [rbx + 0x394104c0], al ; ret 0x697e
0x000000000011650e : add eax, dword ptr [rax] ; add byte ptr [rbx + 0xffffffff8348247c], cl ; call qword ptr [rax]
0x0000000000108d05 : add eax, dword ptr [rax] ; add byte ptr [rcx + 0xffffffffffffff89], al ; ret
0x0000000000132e53 : add eax, dword ptr [rax] ; add byte ptr [rcx], al ; ret 0x59e9
0x00000000000c5168 : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; mov dh, 0x42 ; add dword ptr [rax + 0xffffffffffffff83], ecx ; ret -0x7bff
0x00000000000a2540 : add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; scasd eax, dword ptr es:[rdi] ; ret -0x7cbf
0x00000000000f2f07 : add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x00000000000a2760 : add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000a2783 : add eax, dword ptr [rax] ; ret
0x00000000000b2f75 : add eax, dword ptr [rbp + 0xffffffffffffff85] ; rol byte ptr [rcx + 0xf], cl ; ret -0x8bf
0x0000000000028e0a : add eax, dword ptr [rbx + 0x394807e0] ; ret
0x000000000001fc1d : add eax, dword ptr [rbx + 0xffffffff8348ffc8] ; ret -0x14fc
0x000000000011893d : add eax, dword ptr [rbx + 0xffffffff884001ee] ; ja 0x118946 ; ret
0x00000000000345ae : add eax, dword ptr [rbx + 0xffffffff940f03f8] ; ret 0x70e9
0x00000000000d18f2 : add eax, dword ptr [rbx + 0xffffffff940f06fd] ; ret -0x27d
0x000000000015b2d9 : add eax, dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x000000000018a3bd : add eax, dword ptr [rcx] ; add byte ptr [rdi + rdx*8 + 0xffffffffffffffee], ah ; call rsp
0x00000000000356f8 : add eax, dword ptr [rdi + 0x20] ; pop rbx ; ret
0x000000000019f1da : add eax, dword ptr [rdi + 0xe] ; and byte ptr [rbx + 0xac90204], al ; ret
0x00000000000b2f61 : add eax, dword ptr [rdi + rcx + 0x48] ; ret -0x6c46
0x0000000000137530 : add eax, dword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000136df8 : add eax, dword ptr [rdx + 8] ; add rsp, 0x58 ; ret
0x000000000015b3d9 : add eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x00000000000fe24a : add eax, dword ptr [rsi + rdx] ; ret
0x00000000000a2825 : add eax, eax ; div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000006d3af : add eax, eax ; jmp rax
0x000000000004f2d0 : add eax, eax ; mov eax, r8d ; ret
0x0000000000097d48 : add eax, eax ; ret
0x000000000005f6f5 : add eax, ebp ; jmp rax
0x00000000000e5488 : add eax, ebp ; ret -0x5bf
0x0000000000034e6e : add eax, ebx ; jmp rax
0x0000000000092792 : add eax, ecx ; jmp rax
0x000000000008c83a : add eax, ecx ; ret
0x0000000000097d45 : add eax, edi ; add rax, r8 ; ret
0x000000000008c837 : add eax, edi ; add rax, rcx ; ret
0x00000000000b8f28 : add eax, edi ; jmp rax
0x000000000018d389 : add eax, edi ; jmp rsp
0x000000000008b3ab : add eax, edi ; ret
0x000000000013da4a : add eax, edi ; sub rax, rsi ; ret
0x000000000012290d : add eax, edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000002ddf1 : add eax, edx ; jmp r8
0x0000000000054c4a : add eax, edx ; jmp rax
0x000000000012292e : add eax, edx ; ret
0x00000000000360fd : add eax, edx ; shr rax, 0x3f ; ret
0x00000000000897fe : add eax, edx ; sub rax, rdi ; ret
0x00000000000f2f05 : add eax, esi ; add eax, dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x0000000000047331 : add eax, esi ; cmp ecx, 0x2f ; jmp r8
0x00000000001283bb : add eax, esi ; jmp rax
0x00000000000b2271 : add eax, esi ; ret
0x000000000004de58 : add eax, esp ; jmp rax
0x00000000001066d0 : add ebp, 0x30 ; call 0x102960
0x000000000004f1ff : add ebp, 0x30 ; pop rbx ; mov eax, ebp ; pop rbp ; ret
0x000000000011fd71 : add ebp, dword ptr [rcx] ; ret -0x7d73
0x00000000000b15f5 : add ebp, dword ptr [rcx] ; ret 0x48d
0x000000000003a2ee : add ebp, dword ptr [rsp + 8] ; mov rsi, rbp ; call r12
0x000000000000314a : add ebp, esi ; mov ecx, 0xd4a3e95a ; pop rsp ; ret 0x52c0
0x00000000000c540e : add ebx, 1 ; mov rdx, rax ; jmp 0xc53b0
0x00000000001ac6a6 : add ebx, dword ptr [rbp + rsi*8 + 0xffffffffffffffff] ; sbb al, 0xd ; int1 ; pop rdx ; cmc ; jmp qword ptr [rdx]
0x000000000007c163 : add ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000faf84 : add ebx, dword ptr [rbx + 0x5d] ; ret
0x000000000017a52c : add ebx, dword ptr [rbx + 0xffffffff98a9fff4] ; hlt ; call qword ptr [rdi]
0x00000000000385d1 : add ebx, eax ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x000000000000374a : add ebx, ebp ; in al, -0x12 ; jne 0x372a ; ret 0x975
0x00000000001936b9 : add ebx, ebp ; jmp rax
0x0000000000026f7c : add ebx, ebp ; ret
0x00000000000565a4 : add ebx, ebp ; ret -0x6275
0x00000000000e384b : add ebx, edx ; jmp rbx
0x000000000014e123 : add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000035ad4 : add ecx, 1 ; cmp al, 0x5f ; je 0x35aeb ; jmp 0x35a9f
0x0000000000118c05 : add ecx, 2 ; mov dword ptr [r8], edi ; mov qword ptr [r9], rcx ; ret
0x000000000009a86a : add ecx, dword ptr [r9 + 0xffffffff89480342] ; clc ; ret
0x000000000011661a : add ecx, dword ptr [rax + 0x29] ; fimul dword ptr [rax + 0xffffffffffffff83] ; ret -0x17ff
0x000000000012ad3d : add ecx, dword ptr [rax + 0x29] ; fimul dword ptr [rax + 0xffffffffffffff83] ; ret 0x4812
0x000000000007f474 : add ecx, dword ptr [rax + 0x29] ; ret
0x000000000010511d : add ecx, dword ptr [rax + 0x29] ; ret 0x394c
0x0000000000117a54 : add ecx, dword ptr [rax + 0x29] ; ret 0x7a8d
0x000000000006feea : add ecx, dword ptr [rax + 0xffffffffffffff83] ; ret
0x000000000003aae6 : add ecx, dword ptr [rax + 0xffffffffffffff83] ; ret -0xcff
0x00000000000f861b : add ecx, dword ptr [rax + 0xffffffffffffff85] ; ror byte ptr [rax + 0xf], 0x48 ; ret -0x3eb8
0x00000000000f3e14 : add ecx, dword ptr [rax + 0xffffffffffffff89] ; adc bl, dh ; ret
0x000000000009748a : add ecx, dword ptr [rax + 0xffffffffffffff89] ; clc ; ret
0x0000000000094b69 : add ecx, dword ptr [rax + 0xffffffffffffff89] ; fisttp word ptr [rax + 0x29] ; ret 0x2948
0x00000000000edbe4 : add ecx, dword ptr [rax + 0xffffffffffffff98] ; ret
0x0000000000118dec : add ecx, dword ptr [rax + 0xffffffffffffff98] ; shr rax, 4 ; ret
0x00000000000a2303 : add ecx, dword ptr [rax + 0xffffffffffffffd1] ; call -0x3ce94fa8
0x0000000000087565 : add ecx, dword ptr [rax + 1] ; ret 0x6348
0x00000000000f6b51 : add ecx, dword ptr [rax] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000001035ef : add ecx, dword ptr [rbp + 0xffffffffffffff89] ; ret
0x000000000014de92 : add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x00000000001ab18a : add ecx, dword ptr [rbx + 1] ; ret
0x00000000000472a8 : add ecx, dword ptr [rcx + 0x29] ; ret
0x000000000009dae4 : add ecx, dword ptr [rcx + 0x357890f] ; ret
0x000000000002a979 : add ecx, dword ptr [rcx + 0x39] ; ret
0x000000000009a86b : add ecx, dword ptr [rcx + 0xffffffff89480342] ; clc ; ret
0x00000000000e2979 : add ecx, dword ptr [rcx] ; ret -0x67d
0x00000000001ab187 : add ecx, dword ptr [rdi + 0x14b0302] ; ret
0x0000000000166569 : add ecx, dword ptr [rdi + 0x1f0fffeb] ; add bl, dh ; ret
0x000000000009e310 : add ecx, dword ptr [rdi] ; test ebp, dword ptr [rcx + 8] ; add byte ptr [rax], al ; ret
0x00000000000712fa : add ecx, dword ptr [rdi] ; xchg eax, esp ; ret -0x2509
0x00000000000345b1 : add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x70e9
0x00000000000d5153 : add ecx, eax ; jmp rcx
0x000000000018f211 : add ecx, ebp ; call rax
0x0000000000049718 : add ecx, ebp ; ret
0x00000000001371ed : add ecx, ebx ; call rax
0x000000000014377b : add ecx, ebx ; jmp r9
0x0000000000160c12 : add ecx, ebx ; jmp rcx
0x00000000000fae54 : add ecx, ebx ; ret
0x000000000006dee8 : add ecx, edx ; jmp rcx
0x00000000000a27e4 : add ecx, esi ; jmp rcx
0x00000000001252ed : add edi, 0x10 ; jmp rcx
0x00000000001200e0 : add edi, 0x18 ; xor eax, eax ; pop rbp ; jmp rcx
0x000000000012220a : add edi, 0x23b0 ; xor eax, eax ; jmp rcx
0x00000000001221c3 : add edi, 0x23b0 ; xor eax, eax ; pop rbp ; jmp rcx
0x0000000000128be4 : add edi, 0x58 ; jmp rcx
0x0000000000128334 : add edi, 0x68 ; jmp rcx
0x0000000000124757 : add edi, 0xc8 ; jmp rcx
0x000000000009744c : add edi, 1 ; mov rax, rdi ; ret
0x0000000000097475 : add edi, 2 ; mov rax, rdi ; ret
0x0000000000097488 : add edi, 3 ; mov rax, rdi ; ret
0x0000000000097495 : add edi, 4 ; mov dword ptr [rdi + 0xfffffffffffffffc], eax ; mov rax, rdi ; ret
0x00000000000974a8 : add edi, 5 ; mov dword ptr [rdi + 0xfffffffffffffffb], eax ; mov rax, rdi ; ret
0x00000000000974c2 : add edi, 6 ; mov dword ptr [rdi + 0xfffffffffffffffa], eax ; mov rax, rdi ; ret
0x0000000000196ae4 : add edi, dword ptr [rdx + 0xffffffffffffffed] ; jmp qword ptr [rdx]
0x0000000000127da9 : add edi, eax ; jmp rdi
0x00000000001b61c1 : add edi, ebx ; jmp qword ptr [rdx]
0x0000000000143778 : add edi, edx ; add r9, r11 ; jmp r9
0x0000000000118bd5 : add edi, edx ; mov qword ptr [r9], rdi ; ret
0x000000000018c941 : add edi, esi ; jmp rsp
0x00000000000374b6 : add edi, esi ; ret 0
0x0000000000187975 : add edi, esp ; inc dword ptr [rax + 5] ; cld ; jmp qword ptr [rax]
0x0000000000187871 : add edi, esp ; jmp qword ptr [rax]
0x00000000001878b1 : add edi, esp ; jmp rax
0x00000000000fd98b : add edx, 1 ; mov dword ptr [rax], edx ; ret
0x00000000000fd73c : add edx, 1 ; mov word ptr [rax], dx ; ret
0x0000000000118b61 : add edx, 2 ; mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x0000000000097c48 : add edx, eax ; jl 0x97cb0 ; add rax, rdi ; ret
0x0000000000097c58 : add edx, eax ; jl 0x97cb0 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000097c78 : add edx, eax ; jl 0x97cb0 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000097c98 : add edx, eax ; jl 0x97cb0 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x000000000009743d : add edx, eax ; jmp r10
0x0000000000022af1 : add edx, eax ; jmp rdx
0x00000000000391d2 : add edx, eax ; mov rax, rdx ; pop rbx ; ret
0x0000000000190d85 : add edx, ebp ; jmp qword ptr [rdx]
0x000000000001f6a6 : add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x1f67a
0x00000000000df987 : add edx, ecx ; jmp rdx
0x0000000000034c05 : add edx, edi ; jmp rdx
0x0000000000061ca8 : add edx, esi ; call qword ptr [r11 + rax*8]
0x00000000000a27a4 : add edx, esi ; jmp rdx
0x000000000004bec0 : add edx, esp ; call qword ptr [r11 + rax*8]
0x0000000000063760 : add esi, -1 ; dec dword ptr [rbp + 1] ; loop 0x63751 ; scasb al, byte ptr es:[rdi] ; ret
0x0000000000127355 : add esi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000002177c : add esi, 8 ; jmp 0x2173a
0x00000000000c0574 : add esi, dword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x76b8
0x00000000000a1999 : add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x0000000000118dcd : add esi, dword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000012a606 : add esi, dword ptr [rcx] ; ror byte ptr [rax + 0xffffffffffffff83], -0x3c ; pop rbx ; pop rbp ; ret
0x000000000012aa6e : add esi, dword ptr [rcx] ; ror byte ptr [rax + 0xffffffffffffff83], -0x3c ; sub byte ptr [rbx + 0x5d], bl ; ret
0x0000000000089356 : add esi, dword ptr [rdi + rbx + 0x40] ; movsx edx, dh ; mov eax, edx ; ret
0x0000000000121ed2 : add esi, dword ptr [rsi + 0xb] ; mov eax, 2 ; ret
0x0000000000097933 : add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x0000000000102633 : add esi, eax ; jmp qword ptr [rax]
0x0000000000054b1a : add esi, eax ; jmp rsi
0x000000000012ef73 : add esi, eax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000014e043 : add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000006ddd8 : add esi, ecx ; jmp rsi
0x000000000018c991 : add esi, edi ; call rsp
0x000000000016304c : add esi, edi ; fadd st(3) ; ret
0x00000000000a283b : add esi, edi ; int1 ; pop rbx ; mov eax, eax ; ret
0x0000000000143775 : add esi, edx ; add rdi, rdx ; add r9, r11 ; jmp r9
0x000000000002e2a1 : add esi, edx ; jmp r14
0x000000000008d040 : add esi, esi ; ret
0x00000000000376da : add esi, esi ; ret -0xcfc
0x00000000000f2e2f : add esp, 0x10 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000f9caf : add esp, 0x10 ; mov eax, 1 ; pop rbx ; ret
0x0000000000086844 : add esp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x0000000000112781 : add esp, 0x10 ; mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000122d14 : add esp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x00000000000faa0c : add esp, 0x10 ; mov rax, rbx ; pop rbx ; ret
0x0000000000070c07 : add esp, 0x10 ; pop rbx ; jmp rax
0x00000000000346b1 : add esp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007d29e : add esp, 0x10 ; pop rbx ; ret
0x00000000001227c0 : add esp, 0x10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007d2d1 : add esp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000008c67f : add esp, 0x100 ; ret
0x000000000008926d : add esp, 0x100 ; sub rax, rdx ; ret
0x000000000005dc43 : add esp, 0x1000 ; pop rbx ; ret
0x000000000005dc51 : add esp, 0x1000 ; xor eax, eax ; pop rbx ; ret
0x000000000003724d : add esp, 0x108 ; ret
0x00000000000ed43e : add esp, 0x120 ; pop rbx ; ret
0x00000000000374e3 : add esp, 0x140 ; pop rbx ; ret
0x0000000000036c6b : add esp, 0x148 ; ret
0x00000000000220a9 : add esp, 0x18 ; jmp rax
0x000000000005e1a7 : add esp, 0x18 ; mov eax, edx ; ret
0x00000000000e5bfe : add esp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000cc320 : add esp, 0x18 ; mov rax, rdx ; ret
0x000000000005e1d6 : add esp, 0x18 ; movzx eax, al ; neg eax ; ret
0x000000000012f4d9 : add esp, 0x18 ; movzx eax, al ; ret
0x0000000000087618 : add esp, 0x18 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003d268 : add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003707b : add esp, 0x18 ; ret
0x0000000000120eec : add esp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000eca97 : add esp, 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000f1284 : add esp, 0x20 ; mov eax, ebx ; pop rbx ; ret
0x0000000000049c06 : add esp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x0000000000024290 : add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000369e3 : add esp, 0x20 ; pop rbx ; ret
0x00000000000c03a6 : add esp, 0x20 ; sar eax, 0x1f ; pop rbx ; ret
0x000000000006f1f3 : add esp, 0x20 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000afa61 : add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000220fb : add esp, 0x28 ; jmp rax
0x00000000000fb25a : add esp, 0x28 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000fbf8e : add esp, 0x28 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000b1fd4 : add esp, 0x28 ; mov rax, rdx ; ret
0x000000000012dde5 : add esp, 0x28 ; pop rbx ; movzx eax, al ; pop rbp ; ret
0x0000000000021d49 : add esp, 0x28 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000005db79 : add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000488a2 : add esp, 0x28 ; ret
0x000000000010ba09 : add esp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000c38f1 : add esp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011fa1b : add esp, 0x30 ; pop rbx ; ret
0x0000000000113c51 : add esp, 0x30 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012a8c8 : add esp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000bec5a : add esp, 0x38 ; ret
0x00000000000bf4f2 : add esp, 0x40 ; mov eax, edx ; pop rbx ; ret
0x000000000010dc98 : add esp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000037559 : add esp, 0x40 ; pop rbx ; ret
0x00000000000fe178 : add esp, 0x40 ; ret
0x0000000000126c14 : add esp, 0x40 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f7f98 : add esp, 0x408 ; ret
0x0000000000049959 : add esp, 0x440 ; pop rbx ; ret
0x00000000000edad2 : add esp, 0x48 ; movzx eax, al ; ret
0x00000000000741d8 : add esp, 0x48 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000119cb4 : add esp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000f2ffc : add esp, 0x48 ; ret
0x0000000000120c0e : add esp, 0x58 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f29b4 : add esp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000136d4f : add esp, 0x58 ; ret
0x00000000000f19bf : add esp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000ca3f2 : add esp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001203db : add esp, 0x68 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000012bdac : add esp, 0x68 ; ret
0x00000000000854a7 : add esp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ec2a2 : add esp, 0x70 ; pop rbx ; ret
0x0000000000085566 : add esp, 0x70 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000372fd : add esp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000037382 : add esp, 0x88 ; ret
0x00000000000fc8d2 : add esp, 0x90 ; pop rbx ; ret
0x000000000001f50c : add esp, 0x98 ; pop rbx ; pop rbp ; ret
0x0000000000134480 : add esp, 0x98 ; ret
0x00000000000380cd : add esp, 0xa8 ; ret
0x000000000012a117 : add esp, 0xb8 ; pop rbx ; pop rbp ; ret
0x000000000005e82a : add esp, 0xd0 ; mov eax, edx ; pop rbx ; ret
0x00000000000b21a5 : add esp, 0xd0 ; pop rbx ; ret
0x0000000000036e5e : add esp, 0xd0 ; ret
0x00000000000f7d9e : add esp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000047654 : add esp, 0xd8 ; ret
0x0000000000106bac : add esp, 0xe8 ; pop rbx ; pop rbp ; ret
0x00000000000565a2 : add esp, 1 ; jmp 0x56569
0x0000000000125573 : add esp, 8 ; add eax, 2 ; ret
0x000000000008b7ad : add esp, 8 ; jmp rax
0x0000000000118aeb : add esp, 8 ; lea eax, dword ptr [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x00000000000c7006 : add esp, 8 ; lea rax, qword ptr [rbx + 2] ; pop rbx ; pop rbp ; ret
0x00000000000c6f06 : add esp, 8 ; lea rax, qword ptr [rbx + 8] ; pop rbx ; pop rbp ; ret
0x000000000004f182 : add esp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000005e980 : add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006eca8 : add esp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000000740ec : add esp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000003400b : add esp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000007ed7b : add esp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000085c34 : add esp, 8 ; mov rax, rdx ; ret
0x000000000003c406 : add esp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000012db7c : add esp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000022c25 : add esp, 8 ; movzx eax, al ; neg eax ; ret
0x0000000000046666 : add esp, 8 ; movzx eax, al ; ret
0x000000000011bc9a : add esp, 8 ; movzx eax, ax ; ret
0x00000000000781bd : add esp, 8 ; pop rbx ; mov eax, ebp ; pop rbp ; ret
0x0000000000123589 : add esp, 8 ; pop rbx ; movzx eax, al ; pop rbp ; ret
0x0000000000122929 : add esp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000075110 : add esp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000003cf92 : add esp, 8 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000023741 : add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000022024 : add esp, 8 ; ret
0x00000000001339e1 : add esp, 8 ; sar eax, 0x1f ; ret
0x000000000012f5c4 : add esp, 8 ; shr eax, 0x1f ; ret
0x0000000000074101 : add esp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000013597b : add esp, dword ptr [rsi + 0x39] ; ret -0x7bf1
0x00000000001b0014 : add esp, eax ; cmc ; jmp qword ptr [rdx]
0x00000000001119d8 : add qword ptr [r8 + 0xffffffffffffff83], r9 ; cli ; add al, 0xf ; xchg eax, esi ; ret
0x00000000000dcafc : add qword ptr [r8 + 0xffffffffffffff83], rcx ; ret
0x000000000018f1d5 : add qword ptr [r8], r8 ; and al, -0x1f ; std ; jmp rsp
0x000000000002689e : add qword ptr [rax], r8 ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4101
0x000000000018ad4d : add qword ptr [rax], rax ; adc al, -0x1f ; out dx, eax ; jmp rsp
0x00000000000942bd : add qword ptr [rax], rax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16ff
0x00000000001a3a9d : add qword ptr [rax], rax ; mov sil, dl ; call qword ptr [rdx]
0x00000000001a3a4d : add qword ptr [rax], rax ; push rax ; mov dh, dl ; call qword ptr [rdi]
0x0000000000026f79 : add qword ptr [rdi], 1 ; jmp 0x26f42
0x000000000015b28d : add qword ptr [rdi], rcx ; test ecx, dword ptr [rbx + 3] ; add byte ptr [rax], al ; ret
0x00000000001b733c : add qword ptr [rdx], -0x50d6000 ; call rcx
0x000000000009743c : add r10, rax ; jmp r10
0x000000000014e122 : add r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x00000000000565a1 : add r12, 1 ; jmp 0x56569
0x00000000001066cf : add r13, 0x30 ; call 0x102960
0x000000000002e2a0 : add r14, r10 ; jmp r14
0x000000000014e0b2 : add r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x000000000014e042 : add r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x000000000013d670 : add r8, qword ptr [r8] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x0000000000139b04 : add r8, qword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x000000000002ddf0 : add r8, rdx ; jmp r8
0x0000000000047330 : add r8, rsi ; cmp ecx, 0x2f ; jmp r8
0x00000000001b39cd : add r8b, byte ptr [r8] ; adc byte ptr [rcx + 0xfffffffffffffff7], cl ; jmp qword ptr [rax]
0x0000000000034775 : add r8b, byte ptr [r8] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x00000000000975e4 : add r8b, byte ptr [r8] ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000097544 : add r8b, byte ptr [r8] ; mov rax, rdi ; ret
0x00000000001b393d : add r8b, byte ptr [r8] ; rol byte ptr [rsi + 0xfffffffffffffff7], 1 ; jmp qword ptr [rax]
0x000000000018d765 : add r8b, byte ptr [rax] ; add al, 0x3f ; clc ; jmp rsp
0x00000000001187e1 : add r8b, byte ptr [rdx] ; cmp rcx, rax ; sbb eax, eax ; ret
0x000000000004f2cf : add r8d, eax ; mov eax, r8d ; ret
0x00000000001371ec : add r9, r11 ; call rax
0x000000000014377a : add r9, r11 ; jmp r9
0x0000000000049587 : add r9b, byte ptr [r9 + rcx*4 + 0xffffffffffffffc2] ; jmp 0x495a1
0x0000000000140812 : add rax, -0x7cb80000 ; ret -0x16f0
0x00000000000f6f49 : add rax, -0x9cf0000 ; mov rdi, r14 ; call rbx
0x000000000015b313 : add rax, 0x2c5850f ; add byte ptr [rax], al ; ret
0x00000000000a3b50 : add rax, 1 ; ret
0x00000000000a3b47 : add rax, 2 ; ret
0x00000000000a3b60 : add rax, 3 ; ret
0x00000000000226e8 : add rax, qword ptr [0] ; ret
0x00000000000356f7 : add rax, qword ptr [rdi + 0x20] ; pop rbx ; ret
0x000000000013752f : add rax, qword ptr [rdx + 8] ; add rsp, 0x48 ; ret
0x0000000000136df7 : add rax, qword ptr [rdx + 8] ; add rsp, 0x58 ; ret
0x00000000000226e7 : add rax, qword ptr fs:[0] ; ret
0x000000000004de57 : add rax, r12 ; jmp rax
0x000000000005f6f4 : add rax, r13 ; jmp rax
0x000000000006d3ae : add rax, r8 ; jmp rax
0x0000000000097d47 : add rax, r8 ; ret
0x0000000000097504 : add rax, r9 ; jmp rax
0x0000000000034e6d : add rax, rbx ; jmp rax
0x0000000000092791 : add rax, rcx ; jmp rax
0x000000000008c839 : add rax, rcx ; ret
0x0000000000097d44 : add rax, rdi ; add rax, r8 ; ret
0x000000000008c836 : add rax, rdi ; add rax, rcx ; ret
0x00000000000b8f27 : add rax, rdi ; jmp rax
0x000000000008b3aa : add rax, rdi ; ret
0x000000000013da49 : add rax, rdi ; sub rax, rsi ; ret
0x0000000000054c49 : add rax, rdx ; jmp rax
0x00000000000360fc : add rax, rdx ; shr rax, 0x3f ; ret
0x00000000000897fd : add rax, rdx ; sub rax, rdi ; ret
0x00000000001283ba : add rax, rsi ; jmp rax
0x000000000003a2ed : add rbp, qword ptr [rsp + 8] ; mov rsi, rbp ; call r12
0x00000000000c540d : add rbx, 1 ; mov rdx, rax ; jmp 0xc53b0
0x00000000000e384a : add rbx, r10 ; jmp rbx
0x0000000000035ad3 : add rcx, 1 ; cmp al, 0x5f ; je 0x35aeb ; jmp 0x35a9f
0x000000000002a978 : add rcx, qword ptr [r9 + 0x39] ; ret
0x0000000000160c11 : add rcx, r11 ; jmp rcx
0x00000000000d5152 : add rcx, rax ; jmp rcx
0x000000000006dee7 : add rcx, rdx ; jmp rcx
0x00000000000a27e3 : add rcx, rsi ; jmp rcx
0x00000000001252ec : add rdi, 0x10 ; jmp rcx
0x00000000001200df : add rdi, 0x18 ; xor eax, eax ; pop rbp ; jmp rcx
0x0000000000122209 : add rdi, 0x23b0 ; xor eax, eax ; jmp rcx
0x0000000000128be3 : add rdi, 0x58 ; jmp rcx
0x0000000000128333 : add rdi, 0x68 ; jmp rcx
0x0000000000124756 : add rdi, 0xc8 ; jmp rcx
0x000000000009744b : add rdi, 1 ; mov rax, rdi ; ret
0x0000000000097474 : add rdi, 2 ; mov rax, rdi ; ret
0x0000000000097487 : add rdi, 3 ; mov rax, rdi ; ret
0x0000000000127da8 : add rdi, rax ; jmp rdi
0x0000000000143777 : add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000118bd4 : add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x000000000004bebf : add rdx, r12 ; call qword ptr [r11 + rax*8]
0x0000000000061ca7 : add rdx, r14 ; call qword ptr [r11 + rax*8]
0x00000000000391d1 : add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x0000000000097c47 : add rdx, rax ; jl 0x97cb0 ; add rax, rdi ; ret
0x0000000000022af0 : add rdx, rax ; jmp rdx
0x00000000000df986 : add rdx, rcx ; jmp rdx
0x0000000000034c04 : add rdx, rdi ; jmp rdx
0x00000000000a27a3 : add rdx, rsi ; jmp rdx
0x0000000000127354 : add rsi, 0x38 ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000002177b : add rsi, 8 ; jmp 0x2173a
0x0000000000054b19 : add rsi, rax ; jmp rsi
0x000000000012ef72 : add rsi, rax ; mov qword ptr [rdi + 0x18], rsi ; ret
0x000000000006ddd7 : add rsi, rcx ; jmp rsi
0x0000000000086843 : add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x0000000000122d13 : add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x00000000000faa0b : add rsp, 0x10 ; mov rax, rbx ; pop rbx ; ret
0x0000000000070c06 : add rsp, 0x10 ; pop rbx ; jmp rax
0x00000000000346b0 : add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007d29d : add rsp, 0x10 ; pop rbx ; ret
0x000000000007d2d0 : add rsp, 0x10 ; xor eax, eax ; pop rbx ; ret
0x000000000008c67e : add rsp, 0x100 ; ret
0x000000000005dc42 : add rsp, 0x1000 ; pop rbx ; ret
0x000000000003724c : add rsp, 0x108 ; ret
0x00000000000ed43d : add rsp, 0x120 ; pop rbx ; ret
0x00000000000374e2 : add rsp, 0x140 ; pop rbx ; ret
0x0000000000036c6a : add rsp, 0x148 ; ret
0x00000000000220a8 : add rsp, 0x18 ; jmp rax
0x000000000005e1a6 : add rsp, 0x18 ; mov eax, edx ; ret
0x00000000000e5bfd : add rsp, 0x18 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000cc31f : add rsp, 0x18 ; mov rax, rdx ; ret
0x000000000005e1d5 : add rsp, 0x18 ; movzx eax, al ; neg eax ; ret
0x000000000012f4d8 : add rsp, 0x18 ; movzx eax, al ; ret
0x000000000003d267 : add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000003707a : add rsp, 0x18 ; ret
0x0000000000120eeb : add rsp, 0x18 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000f1283 : add rsp, 0x20 ; mov eax, ebx ; pop rbx ; ret
0x0000000000049c05 : add rsp, 0x20 ; mov rax, rbx ; pop rbx ; ret
0x000000000002428f : add rsp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000369e2 : add rsp, 0x20 ; pop rbx ; ret
0x00000000000c03a5 : add rsp, 0x20 ; sar eax, 0x1f ; pop rbx ; ret
0x00000000000afa60 : add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000220fa : add rsp, 0x28 ; jmp rax
0x00000000000fb259 : add rsp, 0x28 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x00000000000fbf8d : add rsp, 0x28 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x00000000000b1fd3 : add rsp, 0x28 ; mov rax, rdx ; ret
0x000000000012dde4 : add rsp, 0x28 ; pop rbx ; movzx eax, al ; pop rbp ; ret
0x000000000005db78 : add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000488a1 : add rsp, 0x28 ; ret
0x000000000010ba08 : add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000000c38f0 : add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000011fa1a : add rsp, 0x30 ; pop rbx ; ret
0x000000000012a8c7 : add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x00000000000bec59 : add rsp, 0x38 ; ret
0x00000000000bf4f1 : add rsp, 0x40 ; mov eax, edx ; pop rbx ; ret
0x000000000010dc97 : add rsp, 0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000037558 : add rsp, 0x40 ; pop rbx ; ret
0x00000000000fe177 : add rsp, 0x40 ; ret
0x00000000000f7f97 : add rsp, 0x408 ; ret
0x0000000000049958 : add rsp, 0x440 ; pop rbx ; ret
0x00000000000edad1 : add rsp, 0x48 ; movzx eax, al ; ret
0x0000000000119cb3 : add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000f2ffb : add rsp, 0x48 ; ret
0x00000000000f29b3 : add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x0000000000136d4e : add rsp, 0x58 ; ret
0x00000000000f19be : add rsp, 0x60 ; mov rax, rbx ; pop rbx ; ret
0x00000000000ca3f1 : add rsp, 0x60 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012bdab : add rsp, 0x68 ; ret
0x00000000000854a6 : add rsp, 0x70 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ec2a1 : add rsp, 0x70 ; pop rbx ; ret
0x00000000000372fc : add rsp, 0x88 ; pop rbx ; pop rbp ; ret
0x0000000000037381 : add rsp, 0x88 ; ret
0x00000000000fc8d1 : add rsp, 0x90 ; pop rbx ; ret
0x000000000001f50b : add rsp, 0x98 ; pop rbx ; pop rbp ; ret
0x000000000013447f : add rsp, 0x98 ; ret
0x00000000000380cc : add rsp, 0xa8 ; ret
0x000000000012a116 : add rsp, 0xb8 ; pop rbx ; pop rbp ; ret
0x00000000000b21a4 : add rsp, 0xd0 ; pop rbx ; ret
0x0000000000036e5d : add rsp, 0xd0 ; ret
0x00000000000f7d9d : add rsp, 0xd8 ; pop rbx ; pop rbp ; ret
0x0000000000047653 : add rsp, 0xd8 ; ret
0x0000000000106bab : add rsp, 0xe8 ; pop rbx ; pop rbp ; ret
0x0000000000125572 : add rsp, 8 ; add eax, 2 ; ret
0x000000000008b7ac : add rsp, 8 ; jmp rax
0x0000000000118aea : add rsp, 8 ; lea eax, dword ptr [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x000000000004f181 : add rsp, 8 ; mov eax, ebp ; pop rbx ; pop rbp ; ret
0x000000000005e97f : add rsp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000006eca7 : add rsp, 8 ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x00000000000740eb : add rsp, 8 ; mov rax, rbp ; pop rbx ; pop rbp ; ret
0x000000000003400a : add rsp, 8 ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000007ed7a : add rsp, 8 ; mov rax, rdx ; pop rbx ; pop rbp ; ret
0x0000000000085c33 : add rsp, 8 ; mov rax, rdx ; ret
0x000000000003c405 : add rsp, 8 ; mov rax, rsi ; pop rbx ; pop rbp ; ret
0x000000000012db7b : add rsp, 8 ; mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x0000000000022c24 : add rsp, 8 ; movzx eax, al ; neg eax ; ret
0x0000000000046665 : add rsp, 8 ; movzx eax, al ; ret
0x000000000011bc99 : add rsp, 8 ; movzx eax, ax ; ret
0x00000000000781bc : add rsp, 8 ; pop rbx ; mov eax, ebp ; pop rbp ; ret
0x0000000000123588 : add rsp, 8 ; pop rbx ; movzx eax, al ; pop rbp ; ret
0x0000000000122928 : add rsp, 8 ; pop rbx ; pop rbp ; add eax, edx ; ret
0x000000000007510f : add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x0000000000023740 : add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000022023 : add rsp, 8 ; ret
0x00000000001339e0 : add rsp, 8 ; sar eax, 0x1f ; ret
0x000000000012f5c3 : add rsp, 8 ; shr eax, 0x1f ; ret
0x0000000000074100 : add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001a3168 : add sil, dl ; call rdi
0x000000000009233e : add sil, sil ; ret 0x7404
0x00000000000d51fe : add sil, sil ; ret 0x7508
0x00000000000fd753 : add word ptr [rax], 1 ; ret
0x000000000018b23d : add word ptr [rax], ax ; je 0x18b1d9 ; int1 ; call rsp
0x000000000018ef85 : add word ptr [rax], ax ; test dl, byte ptr [rdx + 0xfffffffffffffffb] ; call rsp
0x00000000000fd49a : add word ptr [rdx + rax*2], 1 ; ret
0x0000000000187724 : and ah, ah ; sti ; jmp qword ptr [rax]
0x00000000001a3090 : and ah, bh ; int1 ; jmp qword ptr [rcx]
0x0000000000074969 : and al, -0x10 ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff81], cl ; ret
0x0000000000036a4b : and al, -0x10 ; and eax, 0x8000 ; ret
0x00000000000368c7 : and al, -0x10 ; fld xword ptr [rsp + 0xffffffffffffffe8] ; fstp xword ptr [rdi] ; ret
0x0000000000036981 : and al, -0x10 ; mov dword ptr [rdi], eax ; fld xword ptr [rsp + 0xffffffffffffffe8] ; ret
0x00000000000b1426 : and al, -0x10 ; movsd xmm0, qword ptr [rsp + 0xfffffffffffffff0] ; ret
0x00000000000b142c : and al, -0x10 ; ret
0x0000000000039f38 : and al, -0x14 ; fld xword ptr [rsp + 0xffffffffffffffe8] ; ret
0x000000000002addc : and al, -0x15 ; ret -0x76b8
0x000000000019dc14 : and al, -0x16 ; add byte ptr [rax], al ; cmp bh, dl ; out dx, al ; jmp rdx
0x000000000003682d : and al, -0x18 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x00000000000368cb : and al, -0x18 ; fstp xword ptr [rdi] ; ret
0x000000000010fdc4 : and al, -0x18 ; jmp 0x10fdc9
0x00000000000368ab : and al, -0x18 ; ret
0x00000000001224a8 : and al, -0x18 ; ret -0x1031
0x0000000000044648 : and al, -0x18 ; ret -0xf
0x000000000018f1d8 : and al, -0x1f ; std ; jmp rsp
0x00000000001ac814 : and al, -0x2a ; add dword ptr [rax], eax ; clc ; out -0xb, al ; call qword ptr [rax]
0x00000000001ac614 : and al, -0x2c ; add dword ptr [rax], eax ; or dh, ah ; cmc ; call qword ptr [rax]
0x0000000000047b3f : and al, -0x30 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; ret -0x72b8
0x00000000000021c5 : and al, -0x39 ; jno 0x2212 ; ret 0x1dd4
0x00000000000e2a70 : and al, -0x3f ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff88], al ; mov ah, 0x24 ; ret 0
0x0000000000027407 : and al, -0x50 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000040088 : and al, -0x50 ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x00000000000a416b : and al, -0x58 ; lock jne 0xa4180 ; lea rax, qword ptr [rdi + 0xfffffffffffffff0] ; ret
0x00000000000e3a2e : and al, -0x60 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret -0x1d3f
0x00000000001a9214 : and al, -0x60 ; add dword ptr [rax], eax ; sbb byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x000000000004869a : and al, -0x68 ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret -0x2817
0x00000000000ec7ba : and al, -0x68 ; add cl, byte ptr [rdi] ; ret 0xfc3
0x00000000000e2b7e : and al, -0x6c ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret -0x70f1
0x00000000000450e7 : and al, -0x70 ; add byte ptr [rax], al ; add bl, ch ; ret -0x6f9a
0x000000000004574d : and al, -0x70 ; add byte ptr [rax], al ; add byte ptr [rcx + 0xffffffffffffff83], al ; ret
0x00000000000b431e : and al, -0x77 ; ret
0x0000000000115299 : and al, -0x77 ; ret -0x3eb8
0x00000000001313ad : and al, -0x7b ; ror byte ptr [rdi], -0x77 ; ret
0x0000000000045c76 : and al, -0x7c ; sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret -0x7bf1
0x000000000018df5c : and al, -0x80 ; add al, byte ptr [rax] ; test dh, byte ptr [rbx] ; stc ; jmp rsp
0x00000000000c9cf4 : and al, -0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000aa180 : and al, -0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; imul al ; ret
0x00000000000dd0f1 : and al, -0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x00000000000d77e3 : and al, -0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret -0x72b8
0x00000000000f859d : and al, -1 ; jmp 0xf8564
0x0000000000036a77 : and al, -2 ; fldcw word ptr [rsp + 0xfffffffffffffffe] ; ret
0x0000000000036a7b : and al, -2 ; ret
0x0000000000039eab : and al, -4 ; movss xmm0, dword ptr [rsp + 0xfffffffffffffffc] ; ret
0x0000000000039eb1 : and al, -4 ; ret
0x00000000001ab8e5 : and al, -5 ; jmp qword ptr [rdx]
0x0000000000039ef1 : and al, -8 ; movsd xmm0, qword ptr [rsp + 0xfffffffffffffff8] ; ret
0x0000000000039ef7 : and al, -8 ; ret
0x000000000009b021 : and al, 0 ; add byte ptr [rax + 0xffffffffffffff85], cl ; ror byte ptr [rdi], -0x7b ; ret
0x00000000000235ca : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4801
0x0000000000094b9c : and al, 0 ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000136e75 : and al, 0x10 ; add byte ptr [rbp + 0x1e], dh ; add rsp, 0x48 ; ret
0x00000000000ec8ca : and al, 0x10 ; add cl, byte ptr [rdi] ; ret -0x4615
0x00000000000afa76 : and al, 0x10 ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000815fe : and al, 0x10 ; call qword ptr [rax]
0x000000000002bf6f : and al, 0x10 ; call r15
0x00000000000f611c : and al, 0x10 ; call rax
0x00000000000816d2 : and al, 0x10 ; call rdx
0x00000000000367c7 : and al, 0x10 ; fld xword ptr [rsp + 8] ; ret
0x00000000001201aa : and al, 0x10 ; mov rdi, rbp ; call r14
0x000000000012de04 : and al, 0x10 ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000a4f8b : and al, 0x10 ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000008956b : and al, 0x14 ; add byte ptr [rcx], ch ; ret
0x000000000018bc70 : and al, 0x14 ; hlt ; call rsp
0x00000000000b1caa : and al, 0x18 ; add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000047c1f : and al, 0x18 ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret -0x7cbf
0x00000000000220f8 : and al, 0x18 ; add rsp, 0x28 ; jmp rax
0x0000000000021ec1 : and al, 0x18 ; call rax
0x0000000000023516 : and al, 0x18 ; call rbx
0x0000000000124c97 : and al, 0x18 ; call rcx
0x0000000000107ece : and al, 0x18 ; mov dword ptr [rbp + 0xffffffffffffff80], edx ; mov rdx, r13 ; call rax
0x0000000000107f4e : and al, 0x18 ; mov dword ptr [rbp + 0xffffffffffffff80], edx ; mov rdx, rbx ; call rax
0x0000000000097465 : and al, 0x18 ; mov dword ptr [rdi + 0xfffffffffffffffc], eax ; mov rax, rdi ; ret
0x0000000000102de6 : and al, 0x18 ; mov edi, 0x2000004 ; call rax
0x00000000000b046d : and al, 0x18 ; mov rdi, qword ptr [r13] ; call r12
0x000000000002bf6a : and al, 0x18 ; mov rdi, qword ptr [rsp + 0x10] ; call r15
0x0000000000102ce9 : and al, 0x18 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x000000000008340d : and al, 0x18 ; pop rdx ; pop rbx ; pop rbp ; jmp rax
0x00000000001b0c14 : and al, 0x1a ; add al, byte ptr [rax] ; pop rax ; mov bl, -0xa ; call qword ptr [rax]
0x0000000000029c0b : and al, 0x1c ; jmp 0x29bd1
0x0000000000000975 : and al, 0x20 ; add byte ptr [rax], al ; ret
0x0000000000124aa0 : and al, 0x20 ; call rcx
0x00000000000816cd : and al, 0x20 ; mov qword ptr [rsp + 0x10], rcx ; call rdx
0x000000000002addb : and al, 0x24 ; jmp 0x2ada1
0x0000000000175a44 : and al, 0x26 ; outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x0000000000106b5f : and al, 0x28 ; call 0x72d90
0x00000000000814e4 : and al, 0x28 ; call rax
0x00000000000a4c0d : and al, 0x28 ; call rbx
0x00000000000a4c9b : and al, 0x28 ; lea rcx, qword ptr [rax + 4] ; call rbx
0x0000000000026fc2 : and al, 0x28 ; mov qword ptr [rax], rbx ; jmp 0x26f8b
0x0000000000084037 : and al, 0x28 ; mov rdi, r12 ; call rax
0x00000000000814ab : and al, 0x28 ; mov rdi, r14 ; call qword ptr [rax]
0x00000000000a484c : and al, 0x28 ; mov rsi, r13 ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000fade8 : and al, 0x29 ; or byte ptr [rdi], -0x6b ; ret -0x3015
0x0000000000197b34 : and al, 0x2b ; add byte ptr [rax], al ; test al, -0x54 ; in eax, dx ; call qword ptr [rcx]
0x00000000001a1e14 : and al, 0x2c ; add dword ptr [rax], eax ; sub dl, dl ; int1 ; jmp qword ptr [rbx]
0x000000000011b708 : and al, 0x2c ; add dword ptr [rcx + rcx*4 + 0xffffffffffffffa4], ecx ; ret
0x00000000000be420 : and al, 0x30 ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x1917
0x00000000000490d0 : and al, 0x30 ; add byte ptr [rcx + 0xf], al ; xchg eax, ebp ; ret -0x7cb8
0x00000000000814df : and al, 0x30 ; mov dword ptr [rsp + 0x28], r11d ; call rax
0x0000000000106b5a : and al, 0x30 ; mov qword ptr [rsp + 0x28], rax ; call 0x72d90
0x000000000012f469 : and al, 0x30 ; mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x0000000000080516 : and al, 0x30 ; xor cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x1589
0x0000000000136d4b : and al, 0x31 ; ror byte ptr [rax + 0xffffffffffffff83], -0x3c ; pop rax ; ret
0x00000000000490da : and al, 0x38 ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret -0x7ab3
0x00000000000f2ff7 : and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x00000000000a513f : and al, 0x38 ; mov rcx, r13 ; mov rdi, rbp ; call rbx
0x00000000001a2c14 : and al, 0x3a ; add dword ptr [rax], eax ; in al, dx ; int1 ; jmp qword ptr [rcx]
0x000000000018e7e8 : and al, 0x3d ; cli ; call rsp
0x00000000001895c8 : and al, 0x3f ; jmp 0x1895cb
0x0000000000025b5d : and al, 0x40 ; mov dword ptr [rsp + 8], eax ; call r14
0x00000000000264ac : and al, 0x40 ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000025a64 : and al, 0x40 ; mov dword ptr [rsp + 8], eax ; call rbx
0x00000000001210fa : and al, 0x41 ; call qword ptr [rbx]
0x000000000011e7d6 : and al, 0x41 ; call rsp
0x00000000000da704 : and al, 0x44 ; add dword ptr [rax + 0xffffffffffffff83], ecx ; ret
0x00000000001a3914 : and al, 0x47 ; add dword ptr [rax], eax ; call 0x281a2ba6
0x0000000000120bf4 : and al, 0x48 ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, r13 ; call qword ptr [rax]
0x00000000001349b6 : and al, 0x48 ; add esp, 0x10 ; pop rbx ; ret
0x000000000005e1a5 : and al, 0x48 ; add esp, 0x18 ; mov eax, edx ; ret
0x00000000000cc31e : and al, 0x48 ; add esp, 0x18 ; mov rax, rdx ; ret
0x0000000000125c26 : and al, 0x48 ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f16d9 : and al, 0x48 ; add esp, 0x18 ; ret
0x000000000002428e : and al, 0x48 ; add esp, 0x20 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fe115 : and al, 0x48 ; add esp, 0x38 ; ret
0x00000000000fe176 : and al, 0x48 ; add esp, 0x40 ; ret
0x0000000000078bcd : and al, 0x48 ; add esp, 8 ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x0000000000136d61 : and al, 0x48 ; jne 0x136d46 ; add rsp, 0x58 ; ret
0x00000000000a4708 : and al, 0x48 ; lea ecx, dword ptr [rax + 1] ; call rbx
0x0000000000029eb2 : and al, 0x48 ; mov dword ptr [rsp + 8], eax ; call r14
0x000000000002849b : and al, 0x48 ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000136bed : and al, 0x48 ; mov eax, dword ptr [rax + 0xe8] ; jmp rax
0x00000000000a4264 : and al, 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000be88f : and al, 0x48 ; mov edx, dword ptr [rsp + 0x28] ; call rax
0x00000000000ecb10 : and al, 0x48 ; mov edx, eax ; call 0x108d60
0x00000000000949dc : and al, 0x48 ; test esi, esi ; jne 0x949ec ; jmp 0x949a6
0x0000000000027ea9 : and al, 0x50 ; call rax
0x0000000000028b20 : and al, 0x50 ; mov dword ptr [rsp + 8], eax ; call r12
0x0000000000029536 : and al, 0x50 ; mov dword ptr [rsp + 8], eax ; call r15
0x000000000002a4de : and al, 0x50 ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x0000000000027794 : and al, 0x58 ; mov dword ptr [rsp + 8], eax ; call rbx
0x00000000000286c2 : and al, 0x58 ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000001a5b14 : and al, 0x69 ; add dword ptr [rax], eax ; test al, 0x61 ; hlt ; jmp qword ptr [rbx]
0x000000000018dc8c : and al, 0x6c ; add al, byte ptr [rax] ; in al, -0x50 ; clc ; jmp rsp
0x00000000000278bf : and al, 0x70 ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x0000000000043dad : and al, 0x73 ; ror byte ptr [rax + 0xffffffffffffff83], 1 ; ret
0x0000000000100811 : and al, 0x74 ; adc al, 0x5b ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x0000000000137bab : and al, 0x74 ; ficomp dword ptr [rbx + 0x5d] ; xor eax, eax ; pop r12 ; ret
0x00000000000353db : and al, 0x74 ; ret -0x72b8
0x00000000000aae2d : and al, 0x74 ; sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret -0x7bf1
0x00000000000280c1 : and al, 0x78 ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000001a6c14 : and al, 0x7a ; add dword ptr [rax], eax ; test al, -0x4e ; hlt ; jmp qword ptr [rcx]
0x000000000003cb89 : and al, 0xc ; add rsp, 0x18 ; ret
0x00000000000c1836 : and al, 0xc ; add rsp, 0x28 ; ret
0x0000000000136ea8 : and al, 0xc ; add rsp, 0x48 ; ret
0x000000000018de90 : and al, 2 ; stc ; call rsp
0x00000000000e4fc6 : and al, 4 ; jmp 0xe4f8c
0x000000000009e458 : and al, 7 ; add byte ptr [rax], al ; ret
0x00000000000a6d98 : and al, 8 ; adc byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret -0x67d
0x000000000012066c : and al, 8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rax]
0x00000000000220a6 : and al, 8 ; add rsp, 0x18 ; jmp rax
0x0000000000037078 : and al, 8 ; add rsp, 0x18 ; ret
0x00000000000f1f68 : and al, 8 ; add rsp, 0x28 ; ret
0x000000000007eb5b : and al, 8 ; and rdi, rdx ; neg rdi ; call qword ptr [rax]
0x000000000007eb85 : and al, 8 ; call qword ptr [rax]
0x0000000000087462 : and al, 8 ; call qword ptr [rdx]
0x0000000000028b24 : and al, 8 ; call r12
0x0000000000025b61 : and al, 8 ; call r14
0x00000000000264b0 : and al, 8 ; call r15
0x0000000000102cee : and al, 8 ; call rax
0x0000000000025a68 : and al, 8 ; call rbx
0x00000000001216b0 : and al, 8 ; call rcx
0x00000000000368fa : and al, 8 ; fscale ; fstp st(1) ; ret
0x000000000012e6e7 : and al, 8 ; lea rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x00000000000f6117 : and al, 8 ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x000000000006f0e8 : and al, 8 ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000012a8a2 : and al, 8 ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000027ea4 : and al, 8 ; mov rsi, qword ptr [rsp + 0x50] ; call rax
0x000000000003a2f0 : and al, 8 ; mov rsi, rbp ; call r12
0x00000000000367cb : and al, 8 ; ret
0x000000000012f46e : and al, 8 ; xor eax, eax ; call rdx
0x00000000000c82ce : and al, 8 ; xor r12d, r12d ; jmp 0xc8298
0x000000000018d5a1 : and al, bh ; call rsp
0x00000000001b86d8 : and al, byte ptr [rax + rax] ; add byte ptr [rdx + 2], bl ; add byte ptr [rax], al ; ret
0x0000000000036a28 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000036420 : and al, byte ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000006f3c : and al, byte ptr [rax] ; or al, 0 ; nop ; ret
0x000000000000414c : and al, byte ptr [rax] ; or al, 0 ; ret 0xf
0x00000000000d567d : and al, byte ptr [rbx + 0xd7403f8] ; xor eax, eax ; pop rbx ; ret
0x000000000007a174 : and al, byte ptr [rdi] ; add byte ptr [rdx + 0x48], bl ; cwde ; ret
0x000000000008799a : and al, byte ptr [rsp + 0xffffffffff480974] ; ret -0x3eb8
0x000000000002fde2 : and ax, 0x100 ; movzx eax, ax ; ret
0x000000000002fe02 : and ax, 0x1000 ; movzx eax, ax ; ret
0x000000000002fd42 : and ax, 0x200 ; movzx eax, ax ; ret
0x000000000002fdc2 : and ax, 0x2000 ; movzx eax, ax ; ret
0x000000000002fce2 : and ax, 0x400 ; movzx eax, ax ; ret
0x000000000002fd82 : and ax, 0x4000 ; movzx eax, ax ; ret
0x000000000002fd22 : and ax, 0x800 ; movzx eax, ax ; ret
0x000000000002fd62 : and ax, 0x8000 ; movzx eax, ax ; ret
0x0000000000187bbd : and bh, ah ; inc eax ; and edi, esp ; call qword ptr [rax]
0x0000000000021326 : and bh, bh ; ret -0x76b8
0x0000000000002f60 : and bh, byte ptr [rax + 0xffffffffffffffae] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000744ea : and bh, byte ptr [rsi] ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x76b4
0x00000000001877a4 : and bl, ah ; sti ; jmp qword ptr [rax]
0x000000000009ea37 : and bl, al ; nop dword ptr [rax] ; ret
0x00000000001872e1 : and bl, bh ; jmp rax
0x00000000001872dd : and bl, bh ; push rax ; and bl, bh ; jmp rax
0x000000000007b2b2 : and bl, ch ; ret 0x1f0f
0x0000000000086221 : and byte ptr [r8 + 0x31], r9b ; ret -0x6c42
0x000000000007fda7 : and byte ptr [r8 + 0x39], r9b ; ret
0x000000000007324a : and byte ptr [r8 + 0xffffffffffffff8b], r9b ; sbb byte ptr [r8 + 0x29], cl ; ret -0x76b8
0x0000000000109627 : and byte ptr [r8 + rax], r8b ; ret
0x00000000000a1cb6 : and byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x000000000007bd34 : and byte ptr [r9 + 0x5bc03113], cl ; ret
0x000000000010414d : and byte ptr [rax + 0x2b], cl ; xor r9b, bpl ; ret
0x0000000000085d9b : and byte ptr [rax + 0x31], cl ; ret -0x6c42
0x000000000007fda8 : and byte ptr [rax + 0x39], cl ; ret
0x000000000003c659 : and byte ptr [rax + 0x39], cl ; ret -0x158a
0x000000000003c643 : and byte ptr [rax + 0x39], cl ; ret 0x1677
0x00000000001884e0 : and byte ptr [rax + 0x7fa0fffc], al ; cld ; jmp qword ptr [rax]
0x00000000000247e6 : and byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x00000000000816ce : and byte ptr [rax + 0xffffffffffffff89], cl ; and al, 0x10 ; call rdx
0x000000000006f26d : and byte ptr [rax + 0xffffffffffffff89], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000008776b : and byte ptr [rax + 0xffffffffffffff89], cl ; jae 0x87778 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003abec : and byte ptr [rax + 0xffffffffffffff89], cl ; pop rax ; or cl, ch ; ret -6
0x000000000004457f : and byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x0000000000080bd6 : and byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x74b8
0x00000000000483b1 : and byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x76b7
0x00000000001347f0 : and byte ptr [rax + 0xffffffffffffff89], cl ; ret 0x3d83
0x000000000002e7a4 : and byte ptr [rax + 0xffffffffffffff89], cl ; sti ; test rax, rax ; je 0x2e7af ; call rax
0x0000000000080ba3 : and byte ptr [rax + 0xffffffffffffff8b], cl ; push rax ; or dh, dh ; ret 0xf04
0x000000000007324b : and byte ptr [rax + 0xffffffffffffff8b], cl ; sbb byte ptr [r8 + 0x29], cl ; ret -0x76b8
0x000000000007fda4 : and byte ptr [rax + 0xffffffffffffff8d], cl ; and byte ptr [r8 + 0x39], r9b ; ret
0x00000000001af9c0 : and byte ptr [rax + 0xfffffffffffffff6], bl ; call qword ptr [rdi]
0x0000000000188598 : and byte ptr [rax + 0xfffffffffffffffc], ah ; jmp qword ptr [rax + 0x20fffc61]
0x0000000000188584 : and byte ptr [rax + 0xfffffffffffffffc], dh ; jmp qword ptr [rax + 0x20fffc71]
0x00000000000799b2 : and byte ptr [rax + 0xffffffffffffffff], bh ; pop rbx ; ret
0x000000000007e853 : and byte ptr [rax + 1], cl ; ret
0x0000000000097c76 : and byte ptr [rax + 1], cl ; ret 0x347c
0x0000000000109628 : and byte ptr [rax + rax], al ; ret
0x00000000000fd2c3 : and byte ptr [rax + rax], ch ; pop rbx ; ret
0x00000000001031e2 : and byte ptr [rax], al ; add byte ptr [rax], al ; call 0x1f410
0x00000000000a280c : and byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000c3251 : and byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000f876e : and byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000009fb6c : and byte ptr [rax], cl ; add byte ptr [rax], al ; ret
0x00000000000a1cb7 : and byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x000000000019c970 : and byte ptr [rax], dh ; out dx, al ; call qword ptr [rsi]
0x000000000018882c : and byte ptr [rbp + 0xffffffffa4a0fffc], ah ; cld ; jmp qword ptr [rax]
0x00000000000d1ae5 : and byte ptr [rbp + 0xffffffffc5830172], cl ; add dword ptr [rax + 0xffffffffffffff83], ecx ; ret
0x0000000000167338 : and byte ptr [rbp + 0xffffffffffffffec], ch ; inc dword ptr [rax] ; insb byte ptr es:[rdi], dx ; in al, dx ; call rax
0x00000000001884f8 : and byte ptr [rbp + 0xfffffffffffffffc], bh ; jmp qword ptr [rax + 0x20fffc7c]
0x000000000018857c : and byte ptr [rbp + 0xfffffffffffffffc], ch ; jmp qword ptr [rax + 0x20fffc6e]
0x0000000000115500 : and byte ptr [rbx + 0x2b2fff8], al ; cmove eax, edx ; ret
0x00000000000347e8 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000024292 : and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000019882d : and byte ptr [rbx + 0xa410204], al ; ret
0x000000000019f1dd : and byte ptr [rbx + 0xac90204], al ; ret
0x0000000000195d79 : and byte ptr [rbx + 0xaec0204], al ; ret
0x000000000019f1f9 : and byte ptr [rbx + 0xffffffff8c038604], al ; add ah, byte ptr [rdi + 0xa] ; ret
0x000000000018883c : and byte ptr [rbx + 0xffffffffa2a0fffc], ah ; cld ; call qword ptr [rax]
0x000000000017ae60 : and byte ptr [rbx + 0xffffffffa523fff5], -0xb ; jmp qword ptr [rbx]
0x000000000010959e : and byte ptr [rbx + 0xfffffffffffffff3], bl ; ret
0x00000000001885a0 : and byte ptr [rbx + 0xfffffffffffffffc], ah ; jmp qword ptr [rax + 0x20fffc64]
0x00000000001878b0 : and byte ptr [rbx], al ; cld ; jmp rax
0x00000000001a8220 : and byte ptr [rbx], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001740c0 : and byte ptr [rbx], dh ; in eax, dx ; dec dword ptr [rax] ; xor ebp, ebp ; call rax
0x000000000007bd35 : and byte ptr [rcx + 0x5bc03113], cl ; ret
0x0000000000188518 : and byte ptr [rcx + 0xffffffff8090fffc], al ; cld ; call qword ptr [rax]
0x0000000000188a08 : and byte ptr [rcx + 0xffffffffa090fffc], ah ; cld ; jmp qword ptr [rax]
0x000000000003c978 : and byte ptr [rcx + 0xffffffffd00948c0], cl ; ret
0x0000000000039f35 : and byte ptr [rcx + 0xffffffffdbec2444], cl ; insb byte ptr es:[rdi], dx ; and al, -0x18 ; ret
0x00000000000e48ab : and byte ptr [rcx + 0xffffffffffffff89], al ; ret 0x3145
0x0000000000187360 : and byte ptr [rcx + 0xfffffffffffffffb], dl ; inc dword ptr [rax] ; push rbx ; sti ; jmp rax
0x000000000018855c : and byte ptr [rcx + 0xfffffffffffffffc], ah ; jmp qword ptr [rax + 0x20fffc62]
0x00000000001885b0 : and byte ptr [rcx + 0xfffffffffffffffc], ch ; jmp qword ptr [rax + 0x20fffc6a]
0x00000000000ed440 : and byte ptr [rcx], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000001a12ed : and byte ptr [rcx], al ; add byte ptr [rax], dh ; ret
0x00000000000fb1b1 : and byte ptr [rcx], cl ; ror byte ptr [rax + 9], 1 ; lock or rax, rdi ; ret
0x000000000006f1f5 : and byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000187298 : and byte ptr [rcx], dl ; sti ; jmp rax
0x000000000018881c : and byte ptr [rdi + 0xffffffffa6a0fffc], ah ; cld ; jmp qword ptr [rax]
0x000000000018856c : and byte ptr [rdi + 0xfffffffffffffffc], ah ; jmp qword ptr [rax + 0x20fffc68]
0x00000000001884e8 : and byte ptr [rdi + 0xfffffffffffffffc], bh ; jmp qword ptr [rax + 0x20fffc7e]
0x00000000001885c0 : and byte ptr [rdi + 0xfffffffffffffffc], ch ; jmp qword ptr [rax + 0x20fffc70]
0x00000000001201c3 : and byte ptr [rdi + 1], bh ; call 0x12c460
0x000000000018797c : and byte ptr [rdi], al ; cld ; call qword ptr [rax]
0x0000000000187a18 : and byte ptr [rdi], ch ; cld ; inc dword ptr [rax] ; xor esp, edi ; jmp rax
0x000000000002fdc5 : and byte ptr [rdi], cl ; mov bh, -0x40 ; ret
0x00000000000bd0e2 : and byte ptr [rdi], cl ; test ah, dl ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x24cf
0x00000000000f3786 : and byte ptr [rdi], cl ; test al, byte ptr [rbx] ; add al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x3c01
0x00000000000f36cd : and byte ptr [rdi], cl ; test bh, byte ptr [rcx + rax + 0xffffffff83480000] ; ret 0x3c01
0x00000000000f372e : and byte ptr [rdi], cl ; test bl, bl ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x3c01
0x00000000000f366d : and byte ptr [rdi], cl ; test dl, byte ptr [rcx + rax + 0xffffffff83480000] ; ret 0x3c01
0x0000000000163110 : and byte ptr [rdi], cl ; test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000009e729 : and byte ptr [rdi], cl ; test edx, dword ptr [rax + 4] ; add byte ptr [rax], al ; ret
0x000000000007e1d5 : and byte ptr [rdi], cl ; xchg eax, ebp ; ret -0x7bbf
0x0000000000188574 : and byte ptr [rdx + 0xfffffffffffffffc], ch ; jmp qword ptr [rax + 0x20fffc6b]
0x0000000000193b10 : and byte ptr [rdx], dh ; jmp 0x193b13
0x0000000000187874 : and byte ptr [rip + 0x700fffc], al ; cld ; jmp rax
0x0000000000160caa : and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret -0x7cf1
0x0000000000188824 : and byte ptr [rsi + 0xffffffffa5a0fffc], ah ; cld ; jmp qword ptr [rax]
0x00000000001885a8 : and byte ptr [rsi + 0xfffffffffffffffc], ah ; jmp qword ptr [rax + 0x20fffc67]
0x00000000001884f0 : and byte ptr [rsi + 0xfffffffffffffffc], bh ; jmp qword ptr [rax + 0x20fffc7d]
0x0000000000188554 : and byte ptr [rsi + 0xfffffffffffffffc], bl ; jmp qword ptr [rax + 0x20fffc5f]
0x0000000000194785 : and byte ptr [rsi + rcx + 0x18], bh ; ret
0x0000000000187918 : and byte ptr [rsi], al ; cld ; inc dword ptr [rax] ; or ah, bh ; jmp rax
0x00000000001872d4 : and byte ptr [rsi], bl ; sti ; call qword ptr [rax]
0x00000000000f3ef1 : and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rcx + 0xffffffffffffffff], 0 ; ret
0x0000000000173938 : and byte ptr [rsp + rbp*8], dl ; jmp qword ptr [rax]
0x0000000000188834 : and byte ptr [rsp + rdi*8 + 0xfffffffffca3a0ff], ah ; jmp qword ptr [rax]
0x00000000000a3b42 : and ch, 0xf ; je 0xa3b60 ; add rax, 2 ; ret
0x00000000001877a8 : and ch, ah ; sti ; jmp qword ptr [rax]
0x00000000001a7920 : and ch, bl ; hlt ; jmp qword ptr [rcx]
0x00000000000d542d : and ch, cl ; cmp esp, -1 ; push rdi ; ret 0
0x000000000019b349 : and ch, dh ; jmp qword ptr [rax]
0x00000000000a3b2d : and cl, 0xf ; je 0xa3b50 ; ret
0x0000000000003906 : and cl, ah ; ret
0x000000000019a714 : and cl, bl ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000048cc4 : and cl, byte ptr [rax + 0xffffffffffffff83] ; ret
0x000000000011fedc : and cl, byte ptr [rax + 0xffffffffffffff83] ; ret 0xf01
0x00000000000e69eb : and cl, byte ptr [rax + 0xffffffffffffff8b] ; je 0xe6a14 ; xor byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x74bc
0x00000000000549bf : and cl, byte ptr [rax + 0xffffffffffffffc7] ; ret -2
0x000000000008cc0d : and cl, byte ptr [rcx + 0xffffffffffffff89] ; ret
0x0000000000092e30 : and cl, byte ptr [rcx + rcx*4 + 0xffffffffffffffd8] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002e969 : and cl, byte ptr [rdi] ; xchg al, bl ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x74bf
0x00000000001790c9 : and cl, dh ; jmp rax
0x0000000000187728 : and dh, ah ; sti ; jmp qword ptr [rax]
0x00000000001b0bbd : and dh, dh ; jmp qword ptr [rdx]
0x000000000008d21b : and dh, dh ; ret 0x7504
0x00000000000fa6e1 : and dword ptr [rax + 0xffffffffffffff83], ecx ; ret
0x00000000000f34f1 : and dword ptr [rax + 0xffffffffffffff83], ecx ; ret 0xf01
0x0000000000022d02 : and dword ptr [rax + 0xffffffffffffff89], ecx ; fimul word ptr [rax + 0xffffffffffffff89] ; ret -0x7cb8
0x000000000006aa8e : and dword ptr [rax + 0xffffffffffffff89], ecx ; ret
0x0000000000022fc6 : and dword ptr [rax + 0xffffffffffffff89], ecx ; ret -0x76b8
0x0000000000103346 : and dword ptr [rax + 0xffffffffffffff89], ecx ; ret 0xf66
0x000000000005def6 : and dword ptr [rax + rcx*2 + 0xffffffff8041c509], eax ; into ; ret -0x6318
0x00000000001313de : and dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x000000000004efec : and dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x0000000000177562 : and dword ptr [rax], edx ; jmp qword ptr [rdi]
0x0000000000075cdf : and dword ptr [rbx], -0x11 ; pop rbx ; ret
0x00000000001a13ad : and dword ptr [rcx], eax ; add byte ptr [rax + 0xffffffffffffffc5], ah ; int1 ; call qword ptr [rdx]
0x0000000000032f2b : and dword ptr [rdi + 5], esp ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x00000000000376a6 : and dword ptr [rdi + rdx*8], eax ; xor eax, eax ; ret
0x0000000000074260 : and dword ptr [rdi], -0x31 ; ret
0x0000000000037888 : and dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000008ff0 : and dword ptr [rdi], ebx ; add byte ptr [rax], al ; and al, byte ptr [rax] ; or al, 0 ; nop ; ret
0x0000000000087523 : and dword ptr [rdx + 0x33], edi ; add byte ptr [rax + 0xffffffffffffff89], cl ; and al, 8 ; call qword ptr [rdx]
0x00000000000f6ddb : and dword ptr [rip + 0xfffffffff6310000], eax ; mov rdi, r12 ; call rbx
0x0000000000174619 : and dword ptr [rsi + rbp*2 + 0xffffffffffffff86], edi ; lahf ; ret -0x78e2
0x000000000009e55b : and dword ptr [rsi], eax ; add byte ptr [rax], al ; ret
0x0000000000177561 : and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000001183d3 : and eax, -8 ; add eax, 0x10 ; ret
0x0000000000166336 : and eax, 0 ; add bl, dh ; ret
0x00000000000226eb : and eax, 0 ; ret
0x00000000000f12a3 : and eax, 0x100f ; ret
0x0000000000073b82 : and eax, 0x200 ; ret
0x00000000000c29d5 : and eax, 0x2d0 ; mov eax, esi ; ret
0x00000000000fb004 : and eax, 0x2d0 ; pop rax ; pop rdi ; call rax
0x000000000008b7a7 : and eax, 0x30 ; add rsp, 8 ; jmp rax
0x0000000000021ee2 : and eax, 0x30 ; call rax
0x0000000000031dac : and eax, 0x30 ; call rdx
0x0000000000036be2 : and eax, 0x30 ; jmp rax
0x0000000000047697 : and eax, 0x394d3674 ; ret -0x7cf1
0x00000000000a275d : and eax, 0x3fc00 ; pop rbx ; ret
0x00000000000a2780 : and eax, 0x3fc00 ; ret
0x00000000000a273c : and eax, 0x3fffc00 ; pop rbx ; ret
0x0000000000166107 : and eax, 0x48fff16c ; cmp ebx, ebp ; jae 0x16611b ; call qword ptr [rbx]
0x0000000000094a3e : and eax, 0x5c415d5b ; pop r13 ; pop r14 ; ret
0x000000000002fed2 : and eax, 0x7f ; ret
0x00000000000a27c0 : and eax, 0x7ff80000 ; ret
0x0000000000036434 : and eax, 0x80 ; ret
0x0000000000036a4d : and eax, 0x8000 ; ret
0x00000000000364f7 : and eax, 0x80000000 ; movd xmm0, eax ; ret
0x0000000000073b52 : and eax, 0x804 ; ret
0x00000000000e7157 : and eax, 0x85ffffff ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000000c3657 : and eax, 0x89000289 ; ret -0x38b8
0x0000000000108d87 : and eax, 0xc ; cmp eax, 4 ; je 0x108d90 ; ret
0x0000000000108ed6 : and eax, 0xc ; pop r12 ; ret
0x0000000000070de3 : and eax, 0xc7480034 ; ret -1
0x00000000001a176d : and eax, 0xc7600001 ; int1 ; call qword ptr [rsi]
0x00000000001a1785 : and eax, 0xc7680001 ; int1 ; call qword ptr [rbx]
0x00000000001a179d : and eax, 0xc7700001 ; int1 ; call qword ptr [rbx]
0x0000000000089337 : and eax, 0xf000efd ; xchg eax, esi ; ret 0x144
0x0000000000166b8a : and eax, 0xf31e7500 ; ret
0x0000000000166345 : and eax, 0xff834800 ; add dword ptr [rdi + 3], esi ; ret
0x00000000000fb171 : and eax, 0xfffff000 ; or eax, edi ; ret
0x000000000010d1e8 : and eax, 0xffffff ; ret
0x00000000000d2a18 : and eax, 1 ; nop dword ptr [rax + rax] ; pop rbx ; ret
0x000000000002fe82 : and eax, 1 ; ret
0x000000000002fd02 : and eax, 2 ; movzx eax, ax ; ret
0x00000000000d2931 : and eax, 2 ; pop rbp ; ret
0x00000000000385cc : and eax, 2 ; sub eax, 1 ; ret
0x000000000002fda2 : and eax, 4 ; movzx eax, ax ; ret
0x000000000002fcc2 : and eax, 8 ; movzx eax, ax ; ret
0x0000000000036704 : and eax, 8 ; ret
0x000000000018a785 : and eax, dword ptr [rcx] ; add byte ptr [rsp + rdi], dh ; out dx, eax ; call rsp
0x000000000010f1f1 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; jmp 0x10f204
0x000000000015b3b9 : and eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x0000000000037b23 : and eax, dword ptr [rsi] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000360a2 : and eax, ecx ; ret
0x0000000000036172 : and eax, edx ; movq xmm0, rax ; ret
0x0000000000036751 : and eax, edx ; ret
0x000000000003009d : and eax, esi ; ret
0x0000000000194a8c : and ebp, eax ; jmp 0x194a8f
0x00000000000d54a3 : and ebp, ecx ; or eax, 0xf7fffffc ; ret 0
0x0000000000075ce0 : and ebp, edi ; pop rbx ; ret
0x000000000019c7b1 : and ebp, esi ; jmp rcx
0x0000000000108d22 : and ebx, -0x45 ; cmp r11d, 0xa ; je 0x108d2c ; ret
0x00000000001872e5 : and ebx, edi ; call rax
0x00000000000f3c5a : and ebx, esi ; ret
0x0000000000071e10 : and ecx, -0x31 ; mov dword ptr [rdi], ecx ; ret
0x0000000000162225 : and ecx, 0xff ; sub eax, ecx ; ret
0x0000000000161958 : and ecx, 0xffff ; sub eax, ecx ; ret
0x00000000000d9ec9 : and ecx, dword ptr [rax + 0x63] ; ret -0x72b8
0x000000000007d86c : and ecx, dword ptr [rdi] ; mov dh, 0 ; ret
0x000000000002fee2 : and edi, -0x80 ; sete al ; ret
0x00000000000c33bc : and edi, dword ptr [rax + 1] ; ret
0x0000000000189558 : and edi, dword ptr [rdx] ; jmp 0x18955b
0x000000000018d5e9 : and edi, eax ; call rsp
0x000000000007eb5e : and edi, edx ; neg rdi ; call qword ptr [rax]
0x00000000001b3189 : and edi, esi ; call qword ptr [rdx]
0x0000000000187bc1 : and edi, esp ; call qword ptr [rax]
0x000000000018d5e8 : and edi, r8d ; call rsp
0x000000000003d0b7 : and edx, 0x3ff ; xor eax, edx ; ret
0x00000000000376e8 : and edx, 1 ; jne 0x376f8 ; xor eax, eax ; nop ; ret
0x000000000018e681 : and edx, edi ; call rsp
0x000000000004518b : and esi, 0x8948ffff ; ret
0x0000000000071f13 : and esi, 1 ; mov eax, esi ; ret
0x00000000000d3432 : and esi, 4 ; jne 0xd33dd ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000195fec : and esi, dword ptr [rcx + 0xffffffffffffffed] ; jmp qword ptr [rdx]
0x00000000001a170e : and esi, dword ptr [rcx + rsi*8 + 0xffffffffffffffff] ; sbb al, 0xd ; in eax, dx ; jae 0x1a1708 ; jmp qword ptr [rdx]
0x00000000001b0e2d : and esi, esi ; jmp qword ptr [rdx]
0x000000000017aec4 : and esp, dword ptr [rbp + 0xffffffffa3a0fff5] ; cmc ; jmp qword ptr [rbx]
0x000000000017aed4 : and esp, dword ptr [rbp + 0xffffffffa3f8fff5] ; cmc ; call qword ptr [rax]
0x000000000017aeec : and esp, dword ptr [rbp + 0xffffffffa460fff5] ; cmc ; jmp qword ptr [rbx]
0x000000000017af30 : and esp, dword ptr [rbp + 0xffffffffa470fff5] ; cmc ; jmp qword ptr [rbx]
0x000000000017afa0 : and esp, dword ptr [rbp + 0xffffffffa490fff5] ; cmc ; jmp qword ptr [rbx]
0x000000000017afac : and esp, dword ptr [rbp + 0xffffffffa4a0fff5] ; cmc ; jmp qword ptr [rbx]
0x000000000017b020 : and esp, dword ptr [rbp + 0xffffffffa4e8fff5] ; cmc ; call qword ptr [rax]
0x000000000017ae64 : and esp, dword ptr [rbp + 0xffffffffa523fff5] ; cmc ; jmp qword ptr [rbx]
0x00000000001333d6 : and esp, edi ; dec dword ptr [rax + 0xffffffffffffff83] ; clc ; dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x6d8c
0x0000000000022d01 : and qword ptr [rax + 0xffffffffffffff89], rcx ; fimul word ptr [rax + 0xffffffffffffff89] ; ret -0x7cb8
0x0000000000022fc5 : and qword ptr [rax + 0xffffffffffffff89], rcx ; ret -0x76b8
0x00000000000376a5 : and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x0000000000037887 : and qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000001b0e74 : and r14, r14 ; jmp qword ptr [rdx]
0x0000000000037b22 : and rax, qword ptr [rsi] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000036171 : and rax, rdx ; movq xmm0, rax ; ret
0x000000000007eb5d : and rdi, rdx ; neg rdi ; call qword ptr [rax]
0x00000000000364bb : andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x00000000000364b8 : andps xmm0, xmm3 ; andnps xmm3, xmm1 ; orps xmm0, xmm3 ; ret
0x000000000009449a : bsf eax, eax ; add rax, rdi ; add rax, rcx ; ret
0x000000000008ca70 : bsf eax, eax ; add rax, rdi ; ret
0x000000000008ca80 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000008ca90 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x000000000008ca60 : bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0xfffffffffffffff0] ; ret
0x000000000008c9af : bsf eax, eax ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000094693 : bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x000000000008d715 : bsf eax, edi ; cmove eax, edx ; add eax, 1 ; ret
0x000000000008968d : bsf eax, edx ; ret
0x00000000000897fa : bsf edx, edx ; add rax, rdx ; sub rax, rdi ; ret
0x00000000000947b0 : bsf rax, rax ; lea rax, qword ptr [rdi + rax] ; ret
0x00000000000896da : bsf rax, rdx ; ret
0x0000000000097d41 : bsr eax, eax ; add rax, rdi ; add rax, r8 ; ret
0x000000000008b3a7 : bsr eax, eax ; add rax, rdi ; ret
0x0000000000097c10 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000097c20 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000097c30 : bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x000000000008b62b : bsr eax, esi ; add rax, rdi ; ret
0x000000000008b539 : bsr esi, esi ; lea rax, qword ptr [rcx + rsi] ; ret
0x000000000008b435 : bsr esi, esi ; lea rax, qword ptr [rdi + rsi] ; ret
0x000000000008b3a6 : bsr rax, rax ; add rax, rdi ; ret
0x000000000008b62a : bsr rax, rsi ; add rax, rdi ; ret
0x000000000008b538 : bsr rsi, rsi ; lea rax, qword ptr [rcx + rsi] ; ret
0x000000000008b434 : bsr rsi, rsi ; lea rax, qword ptr [rdi + rsi] ; ret
0x0000000000128d0d : bswap eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000010d1c2 : bswap eax ; ret
0x00000000001a3d5c : bts ebx, esi ; jmp qword ptr [rdx]
0x000000000005f868 : call -0x10f981cc
0x0000000000195ee8 : call -0x1ae6b381
0x000000000018ab38 : call -0x1ae764f9
0x00000000001b1278 : call -0x1ce4f6bd
0x00000000001b0348 : call -0x1ce5062f
0x00000000001a5788 : call -0x1ce5b46d
0x00000000000367e8 : call -0x1d7ad58a
0x00000000001b43c8 : call -0x27e4c4ce
0x000000000007cd1d : call -0x2ef832df
0x00000000000891a7 : call -0x3bfee50c
0x00000000000879a7 : call -0x3bfefd0c
0x000000000008d857 : call -0x3c269e5c
0x000000000003a3f9 : call -0x3c4d4cba
0x000000000015f1f5 : call -0x3c63fef6
0x000000000015e175 : call -0x3c640f76
0x00000000001269d4 : call -0x3c644e1f
0x000000000011e232 : call -0x3c90dcc8
0x00000000001158e2 : call -0x3c9265bc
0x00000000000a4ccb : call -0x3c9971d3
0x000000000007405c : call -0x3c9c7e42
0x0000000000070ad7 : call -0x3c9cb3c7
0x00000000000700f4 : call -0x3c9cbdaa
0x000000000006e677 : call -0x3c9cd827
0x0000000000104d02 : call -0x3caaa3b4
0x00000000000a231f : call -0x3ce94f8f
0x00000000000a2306 : call -0x3ce94fa8
0x000000000009e394 : call -0x3cf61c60
0x0000000000040a1b : call -0x3cfaacdf
0x00000000000b7c7a : call -0x3d45746e
0x0000000000134168 : call -0x3d62be9b
0x00000000001000d4 : call -0x3d66ff26
0x0000000000081e79 : call -0x3d6e9972
0x0000000000083c52 : call -0x3d727ba8
0x00000000000828de : call -0x3d728f1c
0x000000000008009f : call -0x3d72b75b
0x00000000000b0f08 : call -0x3dcba7b4
0x000000000004a4d6 : call -0x4d2cd9c
0x0000000000175083 : call -0x5126110a
0x0000000000031c53 : call -0x74b0211f
0x00000000000b1603 : call -0x7632c0d9
0x000000000005db75 : call -0x7cb21c12
0x000000000012b0c1 : call -0x7f2a582a
0x000000000012b014 : call -0x7f2a58d7
0x000000000012ae4a : call -0x7f2a5aa1
0x0000000000136c22 : call -0xec93d9
0x0000000000136bf1 : call -0xec940a
0x00000000001065c4 : call 0x1028b0
0x000000000010669d : call 0x102960
0x000000000005c44f : call 0x1086a0
0x00000000000ecb14 : call 0x108d60
0x000000000005ff46 : call 0x1105ff39
0x000000000005ffe1 : call 0x1105ffd4
0x00000000000607b4 : call 0x110607a7
0x0000000000060d69 : call 0x11060d5c
0x0000000000062421 : call 0x11062414
0x000000000017b024 : call 0x1117a5cd
0x00000000001ac598 : call 0x111abb82
0x00000000001ac7e8 : call 0x111abdd3
0x00000000001ac848 : call 0x111abe33
0x000000000011205b : call 0x11e270
0x00000000001ad658 : call 0x121acc5b
0x000000000012f6a1 : call 0x12b940
0x000000000012f6b8 : call 0x12b970
0x00000000001201c9 : call 0x12c460
0x00000000001915c8 : call 0x1319001b
0x00000000001b4f38 : call 0x131b46c5
0x00000000000b1fc0 : call 0x1374b0
0x0000000000112bc8 : call 0x137fb0
0x0000000000037680 : call 0x140cbe8b
0x000000000019f6e8 : call 0x1719e73e
0x00000000001b27c8 : call 0x181b1ecd
0x000000000002a961 : call 0x1c52cae
0x000000000002bab1 : call 0x1c53dfe
0x0000000000112d19 : call 0x1f410
0x00000000000e37bb : call 0x1f470
0x0000000000194e38 : call 0x22193ad0
0x000000000019cf98 : call 0x2219be15
0x00000000001a5cb8 : call 0x221a5120
0x00000000001a60d8 : call 0x221a5550
0x00000000001a8a08 : call 0x221a7f37
0x00000000001a91e8 : call 0x221a8725
0x000000000018f724 : call 0x2318e075
0x0000000000193078 : call 0x23191b1d
0x00000000001abe8c : call 0x231ab3e9
0x00000000001aeedc : call 0x231ae469
0x00000000001a0808 : call 0x241a044f
0x0000000000025496 : call 0x248a0
0x0000000000179e6c : call 0x27179245
0x0000000000179e7c : call 0x27179253
0x000000000017a350 : call 0x271797e7
0x00000000001ab748 : call 0x271aad20
0x0000000000190258 : call 0x2818ffb5
0x00000000001a3918 : call 0x281a2ba6
0x00000000000d083e : call 0x2fbf0
0x0000000000039239 : call 0x384b0
0x00000000000ac8a0 : call 0x38ac0
0x00000000000c1270 : call 0x3d4b0
0x00000000000d929d : call 0x42d01be3
0x00000000000d92b1 : call 0x42d01bf7
0x00000000000b1750 : call 0x48cd4074
0x00000000000b1c98 : call 0x48cd45bc
0x000000000004d6f2 : call 0x49990
0x0000000000073104 : call 0x49cf0
0x00000000000aa935 : call 0x4ccd3e49
0x0000000000121f9a : call 0x4cd4a8eb
0x00000000001092bf : call 0x66d29408
0x0000000000075908 : call 0x71b80
0x0000000000106b61 : call 0x72d90
0x0000000000078e78 : call 0x750e0
0x000000000010c815 : call 0x78b10
0x0000000000072a71 : call 0x7dc30
0x00000000000cb71b : call 0x879e0
0x000000000002d140 : call 0x893b0
0x00000000000dc7d0 : call 0x8d150
0x0000000000046021 : call 0x92310
0x0000000000021ac3 : call 0xa26c0
0x00000000000e73c3 : call 0xc1ec0
0x00000000000e5761 : call 0xc29f0
0x00000000000e578e : call 0xc2a10
0x00000000001aa03f : call 0xd37a038
0x00000000000e33d2 : call 0xdf670
0x00000000000efafa : call 0xebd70
0x000000000001feac : call 0xec1a9
0x00000000000f087f : call 0xecae0
0x00000000000707e9 : call 0xecae9
0x00000000000fe949 : call 0xf11c9d1
0x00000000000febc8 : call 0xf11cc50
0x00000000000fec40 : call 0xf11ccc8
0x00000000000fecd0 : call 0xf11cd58
0x00000000000fed60 : call 0xf11cde8
0x00000000000fede0 : call 0xf11ce68
0x00000000000fee70 : call 0xf11cef8
0x00000000000feef0 : call 0xf11cf78
0x00000000000fef80 : call 0xf11d008
0x00000000000ff010 : call 0xf11d098
0x00000000000ff0a0 : call 0xf11d128
0x00000000000ff130 : call 0xf11d1b8
0x00000000000ff250 : call 0xf11d2d8
0x00000000000ff408 : call 0xf11d490
0x00000000000cc30c : call 0xf18e0
0x00000000000f4f12 : call 0xf4940
0x0000000000117c2c : call 0xf7cd0
0x000000000007d90f : call 0xfca125c
0x00000000001795c5 : call qword ptr [eax]
0x000000000012a2a9 : call qword ptr [r10]
0x000000000004bec2 : call qword ptr [r11 + rax*8]
0x00000000001210fb : call qword ptr [r11]
0x000000000001ff64 : call qword ptr [r14]
0x000000000005da22 : call qword ptr [r9]
0x000000000018853b : call qword ptr [rax + 0x10fffc7c]
0x0000000000188533 : call qword ptr [rax + 0x10fffc7d]
0x000000000018852b : call qword ptr [rax + 0x10fffc7e]
0x0000000000188523 : call qword ptr [rax + 0x10fffc7f]
0x000000000018851b : call qword ptr [rax + 0x10fffc80]
0x00000000001878ab : call qword ptr [rax + 0x20fffc10]
0x0000000000187bff : call qword ptr [rax + 0x20fffc60]
0x0000000000187dd7 : call qword ptr [rax + 0x20fffc64]
0x0000000000188303 : call qword ptr [rax + 0x20fffc85]
0x00000000001880eb : call qword ptr [rax + 0x20fffc88]
0x0000000000188a0b : call qword ptr [rax + 0x20fffca0]
0x00000000001887fb : call qword ptr [rax + 0x20fffcac]
0x00000000001885e3 : call qword ptr [rax + 0x20fffcaf]
0x000000000017afa3 : call qword ptr [rax + 0x23fff5a4]
0x00000000000235fe : call qword ptr [rax + 0x48e9c289]
0x000000000005c2be : call qword ptr [rax + 0x8c28348]
0x000000000018798f : call qword ptr [rax + 0xffffffffd0fffbe8]
0x000000000018808f : call qword ptr [rax + 0xffffffffd0fffc37]
0x000000000017912f : call qword ptr [rax + 0xffffffffe0fff180]
0x0000000000187397 : call qword ptr [rax + 0xffffffffe0fffb6e]
0x00000000001877f7 : call qword ptr [rax + 0xffffffffe0fffbd0]
0x00000000001879d7 : call qword ptr [rax + 0xffffffffe0fffbee]
0x00000000001879c3 : call qword ptr [rax + 0xffffffffe0fffbfc]
0x0000000000187ba3 : call qword ptr [rax + 0xffffffffe0fffc1a]
0x000000000003621e : call qword ptr [rax + 0xffffffffffffffc3]
0x00000000001795f3 : call qword ptr [rax]
0x000000000004bec3 : call qword ptr [rbx + rax*8]
0x0000000000166110 : call qword ptr [rbx]
0x0000000000187463 : call qword ptr [rcx + 0x11fffda7]
0x000000000018746b : call qword ptr [rcx + 0x11fffda8]
0x0000000000187473 : call qword ptr [rcx + 0x21fffda9]
0x000000000017b513 : call qword ptr [rcx + 0x22fff6cf]
0x0000000000179cbf : call qword ptr [rcx + 0xffffffffd0fff3d1]
0x000000000005a8a5 : call qword ptr [rcx]
0x0000000000179cb3 : call qword ptr [rdi + 0xffffffffffffffc3]
0x0000000000019471 : call qword ptr [rdi]
0x0000000000187cab : call qword ptr [rdx + 0x22fffc62]
0x0000000000188197 : call qword ptr [rdx + 0x22fffc8a]
0x000000000018e813 : call qword ptr [rdx + rax*8 + 2]
0x0000000000087464 : call qword ptr [rdx]
0x000000000017a0b7 : call qword ptr [rip + 0xffffffffd1fff402]
0x0000000000187c47 : call qword ptr [rsi + 0x26fffc5f]
0x0000000000188133 : call qword ptr [rsi + 0x26fffc87]
0x000000000018862b : call qword ptr [rsi + 0x26fffcae]
0x00000000001874bb : call qword ptr [rsi + 0x26fffdaa]
0x000000000001ff65 : call qword ptr [rsi]
0x0000000000028b26 : call r12
0x0000000000025b63 : call r14
0x00000000000238ef : call r15
0x000000000006e3c2 : call r8
0x0000000000187807 : call rax
0x00000000000f738b : call rbx
0x00000000000233a6 : call rcx
0x000000000017a51b : call rdi
0x0000000000031db1 : call rdx
0x0000000000025b64 : call rsi
0x0000000000028b27 : call rsp
0x00000000001a8be5 : cdq ; add dword ptr [rax], eax ; clc ; sub al, -0xb ; jmp qword ptr [rcx]
0x00000000001a8bcd : cdq ; add dword ptr [rax], eax ; loopne 0x1a8bfe ; cmc ; jmp qword ptr [rcx]
0x00000000001a8b3d : cdq ; add dword ptr [rax], eax ; push rax ; sub al, -0xb ; jmp qword ptr [rcx]
0x000000000018eb29 : cdq ; cli ; jmp rsp
0x000000000017a46d : cdq ; hlt ; call qword ptr [rbx]
0x000000000017a765 : cdq ; hlt ; call qword ptr [rsi]
0x000000000017a475 : cdq ; hlt ; jmp qword ptr [rdi]
0x000000000017a4b9 : cdq ; hlt ; jmp rbx
0x000000000017a75d : cdq ; hlt ; ljmp ptr [rax + 0xffffffffffffff98] ; hlt ; call qword ptr [rsi]
0x000000000017a769 : cdq ; hlt ; ljmp ptr [rax] ; cdq ; hlt ; call qword ptr [rsi]
0x00000000000f5273 : cdq ; idiv bh ; dec dword ptr [rax + 0xffffffffffffff89] ; ret
0x000000000003c984 : cdq ; idiv rsi ; ret
0x0000000000176dc0 : cdq ; in eax, -1 ; lahf ; mov dh, -0x39 ; ret -0x18e1
0x0000000000179181 : cdq ; int1 ; call rax
0x0000000000038849 : cdq ; pop r14 ; idiv r9 ; pop r15 ; ret
0x0000000000129573 : cdq ; pop rsi ; out dx, eax ; dec dword ptr [rax + 0xffffffffffffff89] ; ret
0x0000000000132acb : cdq ; ret
0x000000000004d6f3 : cdq ; ret -1
0x00000000000efcd2 : cdq ; stc ; dec dword ptr [rax + 0x39] ; ret
0x000000000011fb03 : cdq ; sub al, byte ptr [r8] ; pop rbx ; ret
0x000000000010dbd3 : cdq ; sub eax, 0x8948002b ; ret -0x74b8
0x00000000000ff763 : cdq ; xor al, 0x2c ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x76b8
0x00000000000f118b : cdqe ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000007a178 : cdqe ; ret
0x0000000000118ded : cdqe ; shr rax, 4 ; ret
0x00000000000a610f : clc ; adc esi, dword ptr [rbp + rcx + 0xffffffffffffff89] ; ret -0x3615
0x0000000000048d39 : clc ; add al, -0x77 ; ret
0x0000000000080d78 : clc ; add al, 0x74 ; cmp al, -0x77 ; ret -0x4b75
0x00000000000dd598 : clc ; add al, 0xf ; xchg dword ptr [rax + 0xffffffff8900000c], esi ; ret -0x72b8
0x00000000000b0199 : clc ; add al, 0xf ; xchg eax, ebp ; ret -0x3817
0x00000000000afff5 : clc ; add al, 0xf ; xchg eax, ebp ; ret -0x77d
0x00000000000e086d : clc ; add al, 0xf ; xchg eax, ebp ; ret 0x2041
0x000000000004fe53 : clc ; add byte ptr [rax + 0xf], cl ; ret -0x76b8
0x000000000018a1c5 : clc ; add byte ptr [rax], al ; mov al, -0x12 ; call rsp
0x000000000019ea7d : clc ; add byte ptr [rax], al ; nop ; mov edi, gs ; jmp qword ptr [rax]
0x00000000000e58b0 : clc ; add byte ptr [rsp + rax + 0xffffffffffffff89], dh ; ret -0x1115
0x00000000000a459c : clc ; add cl, byte ptr [rax + 0x29] ; ret -0x7515
0x00000000000a4528 : clc ; add cl, byte ptr [rax + 0x29] ; ret -0x7ab8
0x00000000000a45b4 : clc ; add cl, byte ptr [rax + 0x29] ; ret 0x6fe9
0x0000000000077d1c : clc ; add cl, byte ptr [rax + 0x39] ; ret
0x0000000000062028 : clc ; add cl, byte ptr [rax + 0x39] ; ret -0x70f1
0x0000000000074b19 : clc ; add cl, byte ptr [rax + 0x39] ; ret 0x5877
0x000000000004982b : clc ; add cl, byte ptr [rbp + 0x39] ; ret
0x00000000000a6fdb : clc ; add cl, byte ptr [rcx + 0x39] ; ret
0x00000000000ce5fe : clc ; add cl, byte ptr [rdi] ; xchg eax, ebp ; ret
0x00000000001aeef5 : clc ; add dword ptr [rax], eax ; ret
0x000000000018f135 : clc ; add dword ptr [rax], eax ; xor al, -0x29 ; std ; jmp rsp
0x0000000000094d4b : clc ; add dword ptr [rdi + 0xffffffffffffffd9], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001183d5 : clc ; add eax, 0x10 ; ret
0x00000000000b84c6 : clc ; add eax, 0x2907fbc1 ; ret -0x76bc
0x00000000000b2e78 : clc ; add eax, 0x89d02944 ; ret
0x00000000000b306d : clc ; add eax, 0xfd02944 ; scasd eax, dword ptr es:[rdi] ; ret
0x0000000000087564 : clc ; add ecx, dword ptr [rax + 1] ; ret 0x6348
0x00000000000345b0 : clc ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x70e9
0x0000000000121ed1 : clc ; add esi, dword ptr [rsi + 0xb] ; mov eax, 2 ; ret
0x0000000000097d46 : clc ; add rax, r8 ; ret
0x000000000008c838 : clc ; add rax, rcx ; ret
0x0000000000109880 : clc ; add rsp, 8 ; ret
0x000000000007e1d4 : clc ; and byte ptr [rdi], cl ; xchg eax, ebp ; ret -0x7bbf
0x000000000002fed1 : clc ; and eax, 0x7f ; ret
0x000000000010d1e7 : clc ; and eax, 0xffffff ; ret
0x000000000010d1c1 : clc ; bswap eax ; ret
0x000000000018d472 : clc ; call rsp
0x00000000001ad3b8 : clc ; cli ; cmc ; call qword ptr [rax]
0x00000000001ad271 : clc ; cmc ; call qword ptr [rax]
0x00000000001151f1 : clc ; cmc ; je 0x1151e8 ; pop rbx ; ret
0x00000000000497ca : clc ; cmovae rax, rsi ; pop rbx ; ret
0x00000000000498a6 : clc ; cmovae rax, rsi ; ret
0x00000000000840de : clc ; cmovne rax, rcx ; add rsp, 8 ; ret
0x0000000000098046 : clc ; cmp eax, 0x89480f75 ; clc ; ret
0x0000000000003a9e : clc ; cmp eax, ecx ; mov bl, -9 ; adc bh, byte ptr [rax] ; cwde ; ret
0x00000000001621c9 : clc ; cmp rcx, rax ; jne 0x1621f3 ; xor eax, eax ; ret
0x0000000000163009 : clc ; cmp rcx, rax ; jne 0x163033 ; xor eax, eax ; ret
0x000000000003c982 : clc ; cqo ; idiv rsi ; ret
0x000000000017a758 : clc ; cwde ; hlt ; call qword ptr [rsi]
0x00000000000aee4a : clc ; dec dword ptr [rax + 0xffffffffffffff85] ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000001043ef : clc ; dec dword ptr [rax + 0xffffffffffffff85] ; ror byte ptr [rdi], -0x6b ; ret
0x000000000002fb46 : clc ; dec dword ptr [rax + 0xffffffffffffff89] ; ret
0x00000000001333db : clc ; dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x6d8c
0x0000000000081774 : clc ; dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x7bf1
0x000000000006f9ff : clc ; dec dword ptr [rax + 0xffffffffffffff89] ; ret 0xf40
0x000000000018da9a : clc ; dec dword ptr [rbp + rbx*2 + 0x7d120002] ; clc ; call rsp
0x000000000018d8b2 : clc ; dec dword ptr [rbp + rcx*2 + 0x541d0002] ; clc ; call rsp
0x000000000018dde2 : clc ; dec dword ptr [rbp + rsi*2 + 0xfffffffff51d0002] ; clc ; call rsp
0x000000000018d5e2 : clc ; dec dword ptr [rbx + rdi + 0x23410002] ; clc ; call rsp
0x000000000018ddaa : clc ; dec dword ptr [rbx + rsi*2 + 0xfffffffff3cc0002] ; clc ; call rsp
0x00000000000609d1 : clc ; dec dword ptr [rcx + 0xffffffffffffff89] ; ret -0x74b4
0x000000000004ba92 : clc ; dec dword ptr [rcx + 0xffffffffffffff89] ; ret -0x7af1
0x000000000004e283 : clc ; dec dword ptr [rcx + 0xffffffffffffff89] ; ret -0x7bf1
0x00000000000478e6 : clc ; dec dword ptr [rdi] ; ret -0x7cbf
0x000000000006e89f : clc ; dec dword ptr [rdi] ; test cl, byte ptr [rcx + 0xffffffff89000001] ; ret -0x1d7d
0x00000000000725bb : clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret -0x2509
0x000000000018d8f2 : clc ; dec esp ; push rcx ; add al, byte ptr [rax] ; adc al, 0x5e ; clc ; jmp rsp
0x000000000018d382 : clc ; dec esp ; sub al, 2 ; add byte ptr [rcx + rax + 0xfffffffffffffff8], ah ; jmp rsp
0x000000000019b705 : clc ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000af145 : clc ; inc dword ptr [rbp + 0x79c789c0] ; ret
0x000000000018d9d2 : clc ; inc esp ; push rdi ; add al, byte ptr [rax] ; ret -0x793
0x000000000007864b : clc ; jmp 0x78610
0x00000000001ab5fa : clc ; jmp qword ptr [rsi]
0x00000000000b8f29 : clc ; jmp rax
0x000000000018d38a : clc ; jmp rsp
0x0000000000164fea : clc ; jne 0x1650f0 ; ret
0x00000000001ad8f4 : clc ; jno 0x1ad8ec ; jmp qword ptr [rdx]
0x000000000018da62 : clc ; lcall ptr [rbx + rbx*2 + 2] ; add byte ptr [rbp + rsi*2 + 0xfffffffffffffff8], dh ; jmp rsp
0x000000000018d3da : clc ; lcall ptr [rsi + rbp + 0x4b40002] ; clc ; jmp rsp
0x000000000018d732 : clc ; lcall ptr [rsp + rax*2 + 0x3c6b0002] ; clc ; jmp rsp
0x0000000000080c64 : clc ; ljmp 0x39480033, 0xfd3 ; xchg eax, ebp ; ret -0x7cb8
0x00000000000f3f0b : clc ; mov byte ptr [r9 + 0xffffffffffffffff], 0 ; ret
0x0000000000097588 : clc ; mov byte ptr [rdi + 6], 0 ; ret
0x0000000000175a22 : clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x00000000001451c7 : clc ; mov qword ptr [rdi + 0xfffffffffffffff0], r11 ; mov qword ptr [rdi + 0xfffffffffffffff8], rdx ; ret
0x0000000000145f37 : clc ; mov qword ptr [rdi + 0xfffffffffffffff1], rcx ; mov qword ptr [rdi + 0xfffffffffffffff8], rdx ; ret
0x000000000014d317 : clc ; mov qword ptr [rdi + 0xfffffffffffffff1], rdx ; mov qword ptr [rdi + 0xfffffffffffffff8], rcx ; ret
0x0000000000145d37 : clc ; mov qword ptr [rdi + 0xfffffffffffffff2], rcx ; mov qword ptr [rdi + 0xfffffffffffffff8], rdx ; ret
0x000000000014d3a7 : clc ; mov qword ptr [rdi + 0xfffffffffffffff2], rdx ; mov qword ptr [rdi + 0xfffffffffffffff8], rcx ; ret
0x0000000000145b37 : clc ; mov qword ptr [rdi + 0xfffffffffffffff3], rcx ; mov qword ptr [rdi + 0xfffffffffffffff8], rdx ; ret
0x000000000014d437 : clc ; mov qword ptr [rdi + 0xfffffffffffffff3], rdx ; mov qword ptr [rdi + 0xfffffffffffffff8], rcx ; ret
0x00000000001451e3 : clc ; mov qword ptr [rdi + 0xfffffffffffffff8], rdx ; ret
0x0000000000039ef2 : clc ; movsd xmm0, qword ptr [rsp + 0xfffffffffffffff8] ; ret
0x00000000001ac818 : clc ; out -0xb, al ; call qword ptr [rax]
0x000000000019e0f9 : clc ; out dx, al ; call qword ptr [rax]
0x000000000019e111 : clc ; out dx, al ; jmp qword ptr [rsi]
0x00000000000354ac : clc ; pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000102a5d : clc ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007e611 : clc ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000109ab2 : clc ; pop rbx ; ret
0x000000000002201f : clc ; push qword ptr [rax + 0x48] ; add esp, 8 ; ret
0x00000000000fb2ac : clc ; push qword ptr [rax + rcx + 0x5b] ; pop rbp ; ret
0x00000000000be00d : clc ; push qword ptr [rax + rsi + 0xffffffffffffff89] ; ret -0x1d7d
0x000000000007ca50 : clc ; push qword ptr [rbp + 0xffffffffffffffe6] ; pop rbx ; ret
0x000000000007764a : clc ; push qword ptr [rbp + 2] ; pop rbx ; ret
0x0000000000133c8f : clc ; push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x0000000000075cdb : clc ; push qword ptr [rbx + rax + 0xffffffffffffff83] ; and ebp, edi ; pop rbx ; ret
0x0000000000115502 : clc ; push qword ptr [rdx + 0xffffffffc2440f02] ; ret
0x000000000018d4a2 : clc ; push qword ptr [rdx + rsi + 0x12440002] ; clc ; call rsp
0x0000000000022c3d : clc ; ret
0x0000000000186972 : clc ; ret 0x6e1f
0x000000000001fead : clc ; ret 0xc
0x000000000010d1d1 : clc ; ror ax, 8 ; ret
0x00000000001ab538 : clc ; sal ch, cl ; jmp qword ptr [rsi]
0x000000000003c923 : clc ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x00000000000a4599 : clc ; sar rax, 2 ; sub rdx, rax ; jmp 0xa452d
0x000000000010b76b : clc ; sar rax, 6 ; ret
0x0000000000038bba : clc ; shl r9, cl ; mov qword ptr [rdi + 0xfffffffffffffff0], r9 ; ret
0x000000000010d267 : clc ; shr eax, 0x18 ; ret
0x00000000001a8be8 : clc ; sub al, -0xb ; jmp qword ptr [rcx]
0x0000000000135310 : clc ; sub byte ptr [rax], al ; add byte ptr [rcx], 0 ; add dh, dh ; ret
0x00000000001af4a8 : clc ; sub dh, dh ; jmp qword ptr [rcx]
0x0000000000104bc1 : clc ; sub eax, esi ; ret
0x000000000013da4b : clc ; sub rax, rsi ; ret
0x000000000002d503 : clc ; test rcx, rcx ; je 0x2d50b ; call rcx
0x000000000019eead : cld ; add byte ptr [rax], al ; mov al, -0x64 ; out dx, eax ; call qword ptr [rdi]
0x00000000000c31a2 : cld ; add byte ptr [rax], al ; ret
0x00000000001a37ec : cld ; add dword ptr [r8], r8d ; nop ; xchg edx, esi ; jmp qword ptr [rcx]
0x00000000001a56ec : cld ; add dword ptr fs:[rax], eax ; ret -0x19
0x00000000000a275f : cld ; add eax, dword ptr [rax] ; pop rbx ; ret
0x00000000000a2782 : cld ; add eax, dword ptr [rax] ; ret
0x00000000001a12ec : cld ; and byte ptr [rcx], al ; add byte ptr [rax], dh ; ret
0x000000000018853a : cld ; call qword ptr [rax + 0x10fffc7c]
0x0000000000188532 : cld ; call qword ptr [rax + 0x10fffc7d]
0x000000000018852a : cld ; call qword ptr [rax + 0x10fffc7e]
0x0000000000188522 : cld ; call qword ptr [rax + 0x10fffc7f]
0x000000000018851a : cld ; call qword ptr [rax + 0x10fffc80]
0x00000000001878aa : cld ; call qword ptr [rax + 0x20fffc10]
0x0000000000187bfe : cld ; call qword ptr [rax + 0x20fffc60]
0x0000000000187dd6 : cld ; call qword ptr [rax + 0x20fffc64]
0x0000000000188302 : cld ; call qword ptr [rax + 0x20fffc85]
0x00000000001880ea : cld ; call qword ptr [rax + 0x20fffc88]
0x0000000000188a0a : cld ; call qword ptr [rax + 0x20fffca0]
0x00000000001887fa : cld ; call qword ptr [rax + 0x20fffcac]
0x00000000001885e2 : cld ; call qword ptr [rax + 0x20fffcaf]
0x000000000018798e : cld ; call qword ptr [rax + 0xffffffffd0fffbe8]
0x000000000018808e : cld ; call qword ptr [rax + 0xffffffffd0fffc37]
0x0000000000187ba2 : cld ; call qword ptr [rax + 0xffffffffe0fffc1a]
0x0000000000188a46 : cld ; call qword ptr [rax]
0x0000000000187caa : cld ; call qword ptr [rdx + 0x22fffc62]
0x0000000000188196 : cld ; call qword ptr [rdx + 0x22fffc8a]
0x0000000000187cca : cld ; call qword ptr [rdx]
0x0000000000187c46 : cld ; call qword ptr [rsi + 0x26fffc5f]
0x0000000000188132 : cld ; call qword ptr [rsi + 0x26fffc87]
0x000000000018862a : cld ; call qword ptr [rsi + 0x26fffcae]
0x0000000000187c26 : cld ; call qword ptr [rsi]
0x0000000000187bb2 : cld ; call rax
0x0000000000187cba : cld ; call rdx
0x0000000000187c0e : cld ; call rsi
0x0000000000187d82 : cld ; call rsp
0x00000000001650e2 : cld ; cmp eax, dword ptr [rsi + 0xfffffffffffffffc] ; jne 0x1650f0 ; xor eax, eax ; ret
0x000000000019c244 : cld ; cmp ebp, esi ; jmp qword ptr [rdx]
0x00000000000b3dc8 : cld ; dec dword ptr [rax + 0x39] ; ret
0x00000000001333d7 : cld ; dec dword ptr [rax + 0xffffffffffffff83] ; clc ; dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x6d8c
0x00000000000c4e7e : cld ; dec dword ptr [rax + 0xffffffffffffff89] ; ret 0x19eb
0x000000000018824a : cld ; dec esi ; test bh, ah ; push qword ptr [rsp + rax*4 + 0xfffffffffffffffc] ; jmp rsp
0x00000000000368f7 : cld ; fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x00000000001a7e01 : cld ; hlt ; jmp rax
0x00000000001a5bec : cld ; imul eax, dword ptr [rcx], 0xf4636000 ; jmp qword ptr [rcx]
0x000000000019b8b5 : cld ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000187b0a : cld ; inc dword ptr [rax + 0x10fffc37] ; sub bh, ah ; call rax
0x0000000000187b9e : cld ; inc dword ptr [rax + 0x19] ; cld ; call qword ptr [rax + 0xffffffffe0fffc1a]
0x0000000000187a12 : cld ; inc dword ptr [rax + 0x2d] ; cld ; jmp qword ptr [rax]
0x0000000000187b26 : cld ; inc dword ptr [rax + 0x35] ; cld ; inc dword ptr [rax + 0x37] ; cld ; call rax
0x0000000000187aa6 : cld ; inc dword ptr [rax + 0x36] ; cld ; inc dword ptr [rax + 0x38] ; cld ; call rax
0x0000000000187b2a : cld ; inc dword ptr [rax + 0x37] ; cld ; call rax
0x0000000000187aaa : cld ; inc dword ptr [rax + 0x38] ; cld ; call rax
0x000000000018790e : cld ; inc dword ptr [rax + 0x40fffc02] ; add al, -4 ; jmp qword ptr [rax]
0x0000000000187c0a : cld ; inc dword ptr [rax + 0x5f] ; cld ; call rsi
0x0000000000187de2 : cld ; inc dword ptr [rax + 0x63] ; cld ; call rax
0x0000000000187b5a : cld ; inc dword ptr [rax + 0xffffffffd0fffc17] ; sbb ah, bh ; jmp qword ptr [rax]
0x00000000001880f6 : cld ; inc dword ptr [rax + 0xffffffffffffff87] ; cld ; call rax
0x0000000000188806 : cld ; inc dword ptr [rax + 0xffffffffffffffab] ; cld ; call rax
0x00000000001885ee : cld ; inc dword ptr [rax + 0xffffffffffffffae] ; cld ; call rax
0x0000000000187d7e : cld ; inc dword ptr [rax + 0xfffffffffffffffc] ; call rsp
0x000000000018792e : cld ; inc dword ptr [rax + 2] ; cld ; inc dword ptr [rax] ; add al, -4 ; jmp rax
0x0000000000187912 : cld ; inc dword ptr [rax + 4] ; cld ; jmp qword ptr [rax]
0x0000000000187976 : cld ; inc dword ptr [rax + 5] ; cld ; jmp qword ptr [rax]
0x00000000001878fa : cld ; inc dword ptr [rax + 8] ; cld ; jmp qword ptr [rax]
0x000000000018826a : cld ; inc dword ptr [rax + rcx*4 + 0xfffffffffffffffc] ; call rsp
0x0000000000187932 : cld ; inc dword ptr [rax] ; add al, -4 ; jmp rax
0x0000000000187dd2 : cld ; inc dword ptr [rax] ; cld ; call qword ptr [rax + 0x20fffc64]
0x0000000000179206 : cld ; inc dword ptr [rax] ; jg 0x179207 ; jmp qword ptr [rax]
0x000000000018850e : cld ; inc dword ptr [rax] ; jp 0x18850f ; jmp qword ptr [rax + 0x20fffc81]
0x000000000017926a : cld ; inc dword ptr [rax] ; lahf ; cld ; push qword ptr [rax + 0xffffffffffffffa0] ; cld ; jmp rax
0x00000000001887f6 : cld ; inc dword ptr [rax] ; lodsd eax, dword ptr [rsi] ; cld ; call qword ptr [rax + 0x20fffcac]
0x0000000000179226 : cld ; inc dword ptr [rax] ; mov ah, bh ; jmp qword ptr [rax]
0x00000000001885de : cld ; inc dword ptr [rax] ; mov al, -4 ; call qword ptr [rax + 0x20fffcaf]
0x00000000001880e6 : cld ; inc dword ptr [rax] ; mov esp, edi ; call qword ptr [rax + 0x20fffc88]
0x000000000018791a : cld ; inc dword ptr [rax] ; or ah, bh ; jmp rax
0x000000000018854e : cld ; inc dword ptr [rax] ; pop rbp ; cld ; jmp qword ptr [rax]
0x00000000001882fe : cld ; inc dword ptr [rax] ; xchg ah, bh ; call qword ptr [rax + 0x20fffc85]
0x0000000000187a1a : cld ; inc dword ptr [rax] ; xor esp, edi ; jmp rax
0x00000000000a2839 : cld ; inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000a273e : cld ; inc dword ptr [rbx] ; pop rbx ; ret
0x0000000000114d60 : cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000188762 : cld ; inc dword ptr [rdi + rbp*4 + 0xfffffffffffffffc] ; call rsp
0x0000000000187cb6 : cld ; inc dword ptr [rdx + 0x61] ; cld ; call rdx
0x00000000001881a2 : cld ; inc dword ptr [rdx + 0xffffffffffffff89] ; cld ; call rdx
0x000000000018869a : cld ; inc dword ptr [rdx + 0xffffffffffffffb0] ; cld ; call rdx
0x0000000000188192 : cld ; inc dword ptr [rdx] ; mov edi, esp ; call qword ptr [rdx + 0x22fffc8a]
0x0000000000187c12 : cld ; inc dword ptr [rsi + 0x65] ; cld ; call rsi
0x000000000018813e : cld ; inc dword ptr [rsi + 0xffffffffffffff86] ; cld ; call rsi
0x0000000000188636 : cld ; inc dword ptr [rsi + 0xffffffffffffffad] ; cld ; call rsi
0x000000000018812e : cld ; inc dword ptr [rsi] ; mov ah, bh ; call qword ptr [rsi + 0x26fffc87]
0x0000000000188626 : cld ; inc dword ptr [rsi] ; scasd eax, dword ptr es:[rdi] ; cld ; call qword ptr [rsi + 0x26fffcae]
0x0000000000187bbe : cld ; inc eax ; and edi, esp ; call qword ptr [rax]
0x0000000000187b6a : cld ; inc eax ; sbb al, -4 ; call qword ptr [rax]
0x000000000017921e : cld ; inc eax ; test edi, esp ; jmp rax
0x00000000001a3079 : cld ; int1 ; jmp qword ptr [rcx]
0x0000000000179242 : cld ; jmp qword ptr [rax + 0x10fffc90]
0x0000000000188a42 : cld ; jmp qword ptr [rax + 0x10fffca1]
0x000000000018883e : cld ; jmp qword ptr [rax + 0x10fffca2]
0x0000000000188592 : cld ; jmp qword ptr [rax + 0x20fffc5e]
0x0000000000188556 : cld ; jmp qword ptr [rax + 0x20fffc5f]
0x000000000018859a : cld ; jmp qword ptr [rax + 0x20fffc61]
0x000000000018855e : cld ; jmp qword ptr [rax + 0x20fffc62]
0x00000000001885a2 : cld ; jmp qword ptr [rax + 0x20fffc64]
0x0000000000188566 : cld ; jmp qword ptr [rax + 0x20fffc65]
0x00000000001885aa : cld ; jmp qword ptr [rax + 0x20fffc67]
0x000000000018856e : cld ; jmp qword ptr [rax + 0x20fffc68]
0x00000000001885b2 : cld ; jmp qword ptr [rax + 0x20fffc6a]
0x0000000000188576 : cld ; jmp qword ptr [rax + 0x20fffc6b]
0x00000000001885ba : cld ; jmp qword ptr [rax + 0x20fffc6d]
0x000000000018857e : cld ; jmp qword ptr [rax + 0x20fffc6e]
0x00000000001885c2 : cld ; jmp qword ptr [rax + 0x20fffc70]
0x0000000000188586 : cld ; jmp qword ptr [rax + 0x20fffc71]
0x00000000001884fa : cld ; jmp qword ptr [rax + 0x20fffc7c]
0x00000000001884f2 : cld ; jmp qword ptr [rax + 0x20fffc7d]
0x00000000001884ea : cld ; jmp qword ptr [rax + 0x20fffc7e]
0x00000000001884e2 : cld ; jmp qword ptr [rax + 0x20fffc7f]
0x00000000001884da : cld ; jmp qword ptr [rax + 0x20fffc80]
0x0000000000188512 : cld ; jmp qword ptr [rax + 0x20fffc81]
0x0000000000188836 : cld ; jmp qword ptr [rax + 0x20fffca3]
0x000000000018882e : cld ; jmp qword ptr [rax + 0x20fffca4]
0x0000000000188826 : cld ; jmp qword ptr [rax + 0x20fffca5]
0x000000000018881e : cld ; jmp qword ptr [rax + 0x20fffca6]
0x0000000000187b4e : cld ; jmp qword ptr [rax + 0xffffffffe0fffc10]
0x000000000017920a : cld ; jmp qword ptr [rax]
0x00000000001a080a : cld ; jmp qword ptr [rbx]
0x0000000000187cae : cld ; jmp qword ptr [rdx]
0x000000000018810e : cld ; jmp qword ptr [rsi + 0x16fffc84]
0x0000000000187c4a : cld ; jmp qword ptr [rsi]
0x0000000000179202 : cld ; jmp rax
0x0000000000187c9e : cld ; jmp rdx
0x0000000000187c3a : cld ; jmp rsi
0x0000000000187d66 : cld ; jmp rsp
0x0000000000162e16 : cld ; jne 0x163046 ; xor eax, eax ; ret
0x0000000000165005 : cld ; jne 0x1650f0 ; ret
0x00000000001650e5 : cld ; jne 0x1650f0 ; xor eax, eax ; ret
0x0000000000187fca : cld ; ljmp ptr [rdx + 0x3afffc54] ; push rsp ; cld ; jmp rax
0x000000000018838a : cld ; ljmp ptr [rdx + rdi*2 + 0x7a3cfffc] ; cld ; jmp rdx
0x0000000000187e8e : cld ; ljmp ptr [rsp + rdx*2 + 0xfffffffffffffffc] ; call qword ptr [rdx]
0x0000000000145f55 : cld ; mov dword ptr [rdi + 0xfffffffffffffff9], edx ; mov dword ptr [rdi + 0xfffffffffffffffc], ecx ; ret
0x0000000000145d55 : cld ; mov dword ptr [rdi + 0xfffffffffffffffa], edx ; mov dword ptr [rdi + 0xfffffffffffffffc], ecx ; ret
0x0000000000145b55 : cld ; mov dword ptr [rdi + 0xfffffffffffffffb], edx ; mov dword ptr [rdi + 0xfffffffffffffffc], ecx ; ret
0x0000000000145952 : cld ; mov dword ptr [rdi + 0xfffffffffffffffc], edx ; ret
0x0000000000145946 : cld ; mov qword ptr [rdi + 0xfffffffffffffff4], rcx ; mov dword ptr [rdi + 0xfffffffffffffffc], edx ; ret
0x000000000014d4c6 : cld ; mov qword ptr [rdi + 0xfffffffffffffff4], rdx ; mov dword ptr [rdi + 0xfffffffffffffffc], ecx ; ret
0x0000000000145766 : cld ; mov qword ptr [rdi + 0xfffffffffffffff5], rcx ; mov dword ptr [rdi + 0xfffffffffffffffc], edx ; ret
0x000000000014d546 : cld ; mov qword ptr [rdi + 0xfffffffffffffff5], rdx ; mov dword ptr [rdi + 0xfffffffffffffffc], ecx ; ret
0x0000000000145586 : cld ; mov qword ptr [rdi + 0xfffffffffffffff6], rcx ; mov dword ptr [rdi + 0xfffffffffffffffc], edx ; ret
0x000000000014d5c6 : cld ; mov qword ptr [rdi + 0xfffffffffffffff6], rdx ; mov dword ptr [rdi + 0xfffffffffffffffc], ecx ; ret
0x00000000001453a6 : cld ; mov qword ptr [rdi + 0xfffffffffffffff7], rcx ; mov dword ptr [rdi + 0xfffffffffffffffc], edx ; ret
0x000000000014d646 : cld ; mov qword ptr [rdi + 0xfffffffffffffff7], rdx ; mov dword ptr [rdi + 0xfffffffffffffffc], ecx ; ret
0x0000000000097469 : cld ; mov rax, rdi ; ret
0x0000000000039eac : cld ; movss xmm0, dword ptr [rsp + 0xfffffffffffffffc] ; ret
0x000000000018a509 : cld ; out dx, al ; jmp rsp
0x000000000016737c : cld ; outsd dx, dword ptr [rsi] ; in al, dx ; call rsp
0x00000000000a4543 : cld ; pop rbx ; ret
0x0000000000187b66 : cld ; push qword ptr [rax + 0x1b] ; cld ; inc eax ; sbb al, -4 ; call qword ptr [rax]
0x0000000000187bba : cld ; push qword ptr [rax + 0x22] ; cld ; inc eax ; and edi, esp ; call qword ptr [rax]
0x0000000000187c06 : cld ; push qword ptr [rax + 0x40fffc5f] ; pop rdi ; cld ; call rsi
0x00000000001880f2 : cld ; push qword ptr [rax + 0x40fffc87] ; xchg esp, edi ; call rax
0x0000000000188802 : cld ; push qword ptr [rax + 0x40fffcab] ; stosd dword ptr es:[rdi], eax ; cld ; call rax
0x00000000001885ea : cld ; push qword ptr [rax + 0x40fffcae] ; scasb al, byte ptr es:[rdi] ; cld ; call rax
0x000000000018830a : cld ; push qword ptr [rax + 0x50fffc84] ; jp 0x18830f ; call qword ptr [rax]
0x0000000000187d7a : cld ; push qword ptr [rax + 0x6044fffc] ; cld ; call rsp
0x000000000017926e : cld ; push qword ptr [rax + 0xffffffffffffffa0] ; cld ; jmp rax
0x0000000000187972 : cld ; push qword ptr [rax + 3] ; cld ; inc dword ptr [rax + 5] ; cld ; jmp qword ptr [rax]
0x0000000000188266 : cld ; push qword ptr [rax + rcx*4 + 0xffffffff8844fffc] ; cld ; call rsp
0x0000000000187ad6 : cld ; push qword ptr [rax] ; cld ; call qword ptr [rax]
0x00000000001884d6 : cld ; push qword ptr [rax] ; cmp esp, 0xfc80a0ff ; jmp qword ptr [rax]
0x000000000018800e : cld ; push qword ptr [rax] ; push rsp ; cld ; call rax
0x0000000000187baa : cld ; push qword ptr [rax] ; sbb eax, 0x1e80fffc ; cld ; call rax
0x0000000000187a6e : cld ; push qword ptr [rax] ; sub edi, esp ; push rax ; sub al, -4 ; call rax
0x0000000000187f56 : cld ; push qword ptr [rbx + rbx*2 + 0xfffffffffffffffc] ; jmp rsp
0x000000000018875e : cld ; push qword ptr [rdi + rbp*4 + 0xffffffffaf44fffc] ; cld ; call rsp
0x000000000018819e : cld ; push qword ptr [rdx + 0x42fffc89] ; mov esp, edi ; call rdx
0x0000000000188696 : cld ; push qword ptr [rdx + 0x42fffcb0] ; mov al, -4 ; call rdx
0x00000000001888be : cld ; push qword ptr [rdx + 0xffffffffffffffa2] ; cld ; jmp rdx
0x000000000018813a : cld ; push qword ptr [rsi + 0x46fffc86] ; xchg ah, bh ; call rsi
0x0000000000188632 : cld ; push qword ptr [rsi + 0x46fffcad] ; lodsd eax, dword ptr [rsi] ; cld ; call rsi
0x000000000018824e : cld ; push qword ptr [rsp + rax*4 + 0xfffffffffffffffc] ; jmp rsp
0x0000000000187a56 : cld ; push rax ; cld ; call rax
0x0000000000187b4a : cld ; push rax ; cld ; jmp qword ptr [rax + 0xffffffffe0fffc10]
0x000000000018785a : cld ; push rax ; or ah, bh ; call rax
0x0000000000187a72 : cld ; push rax ; sub al, -4 ; call rax
0x0000000000187a3a : cld ; push rax ; xor ah, bh ; call rax
0x0000000000187f52 : cld ; push rsp ; pop rbx ; cld ; push qword ptr [rbx + rbx*2 + 0xfffffffffffffffc] ; jmp rsp
0x0000000000039eb2 : cld ; ret
0x0000000000117d60 : cld ; ret 0x2a
0x00000000001ab4ec : cld ; ret 1
0x00000000001abcec : cld ; retf 1 ; push rax ; fdivrp st(5) ; call qword ptr [rax]
0x0000000000188b9c : cld ; retf ; add dword ptr [rax], eax ; outsb dx, byte ptr [rsi] ; mov gs, ecx ; call rsp
0x000000000019e0c9 : cld ; stc ; call qword ptr [rax]
0x000000000018e569 : cld ; stc ; call rsp
0x00000000001879c5 : cld ; sti ; jmp rax
0x0000000000174ed6 : cld ; test al, -0x69 ; xchg eax, esp ; ret
0x00000000001a78ec : cld ; xchg byte ptr [rcx], al ; add al, al ; fdivr st(4), st(0) ; jmp qword ptr [rcx]
0x00000000001a89ec : cld ; xchg eax, edi ; add dword ptr [rax], eax ; shr byte ptr [rdx], 1 ; cmc ; jmp qword ptr [rcx]
0x000000000003ce85 : cli ; adc byte ptr [rcx], ch ; ret -0x3d97
0x00000000000b2111 : cli ; adc cl, byte ptr [rax + 0x29] ; ret -0x76b8
0x00000000000b218c : cli ; adc cl, byte ptr [rax + 0x29] ; ret 0x6948
0x00000000001343ab : cli ; add al, 0xf ; test bl, byte ptr [rcx + 0xffffffff83000000] ; ret -0x7c80
0x00000000001119dc : cli ; add al, 0xf ; xchg eax, esi ; ret
0x00000000000c29a9 : cli ; add byte ptr [rcx + 0xfffffffff3027ed0], cl ; ret
0x00000000000b2f99 : cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x000000000003e92e : cli ; add cl, byte ptr [rax + 0x29] ; ret -0x72b8
0x00000000000b966a : cli ; add cl, byte ptr [rax + 0x29] ; ret -0x76b8
0x0000000000028563 : cli ; add dword ptr [rax + 0x19], ecx ; ror byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4806
0x00000000000b15f4 : cli ; add ebp, dword ptr [rcx] ; ret 0x48d
0x0000000000003749 : cli ; add ebx, ebp ; in al, -0x12 ; jne 0x372a ; ret 0x975
0x00000000000f3ef0 : cli ; and byte ptr [rsp + rbp*8 + 0x41], dh ; mov byte ptr [rcx + 0xffffffffffffffff], 0 ; ret
0x000000000019e18a : cli ; call qword ptr [rax]
0x000000000018e812 : cli ; call qword ptr [rdx + rax*8 + 2]
0x000000000008645a : cli ; call rax
0x00000000001b7342 : cli ; call rcx
0x000000000017d066 : cli ; call rsp
0x00000000001ad2d1 : cli ; cmc ; call qword ptr [rax]
0x00000000001acea4 : cli ; cmc ; jmp qword ptr [rdx]
0x00000000001ad4b9 : cli ; cmc ; jmp rsp
0x00000000000ee60b : cli ; dec dword ptr [rax + 0x39] ; ret
0x0000000000079ae9 : cli ; dec dword ptr [rax + 0xf] ; ret -0x72b8
0x00000000000c15e1 : cli ; dec dword ptr [rax + 0xf] ; ret 0x48c3
0x00000000000e45fd : cli ; dec dword ptr [rax + 0xffffffffffffff89] ; jmp 0x4cd0cf4e
0x0000000000072e69 : cli ; dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x76b7
0x000000000018ec82 : cli ; dec dword ptr [rbp + rbx*8 + 0xffffffffbe600002] ; cli ; call rsp
0x000000000018e67a : cli ; dec dword ptr [rbp + rsi*4 + 0x213b0002] ; cli ; call rsp
0x0000000000032a29 : cli ; dec dword ptr [rdi] ; xchg eax, ebp ; ret -0x2d7c
0x000000000017d02a : cli ; dec esp ; mov bl, -6 ; jmp rsp
0x000000000018e752 : cli ; dec esp ; mov ebp, 0x33b40002 ; cli ; jmp rsp
0x000000000018e7b2 : cli ; dec esp ; mov edi, 0x3ac40002 ; cli ; jmp rsp
0x00000000000afa19 : cli ; idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x000000000019b74d : cli ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000e54b4 : cli ; inc dword ptr [rbx + rcx*4 + 0x65] ; adc byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x000000000018eb22 : cli ; inc dword ptr [rsi + rdx*8 + 0xffffffff99a40002] ; cli ; jmp rsp
0x000000000018ecea : cli ; inc esp ; loope 0x18ecf1 ; add byte ptr [rsp + rax*8 + 0xfffffffffffffffa], al ; jmp rsp
0x000000000018e832 : cli ; inc esp ; ret 2
0x00000000001a2f71 : cli ; int1 ; jmp qword ptr [rcx]
0x0000000000118401 : cli ; je 0x1183e5 ; mov eax, 0xffffffff ; ret
0x0000000000193ae2 : cli ; jmp qword ptr [rcx]
0x0000000000034c06 : cli ; jmp rdx
0x000000000017d02e : cli ; jmp rsp
0x00000000000c4fca : cli ; jnp 0xc4fdc ; xchg eax, esp ; ret -0x49f1
0x00000000000c51fa : cli ; jnp 0xc520c ; xchg eax, esp ; ret -0x49f1
0x00000000000c5466 : cli ; jnp 0xc5478 ; xchg eax, esp ; ret -0x49f1
0x000000000017d05e : cli ; lcall ptr [rbx + rsi*4 + 0xffffffffbd0cfffa] ; cli ; call rsp
0x000000000018e8c2 : cli ; lcall ptr [rdi + rax*8 + 0x55e40002] ; cli ; call rsp
0x000000000018e612 : cli ; ljmp ptr [rax + rdi*4 + 0x1ec40002] ; cli ; call rsp
0x000000000017d026 : cli ; ljmp ptr [rbx + rsi*4 + 0xffffffffb3ccfffa] ; cli ; jmp rsp
0x0000000000145d58 : cli ; mov dword ptr [rdi + 0xfffffffffffffffc], ecx ; ret
0x00000000000974c7 : cli ; mov rax, rdi ; ret
0x0000000000111b1b : cli ; mov rdi, r12 ; call rax
0x000000000008cc28 : cli ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000139356 : cli ; or al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x0000000000034635 : cli ; or al, byte ptr [rbp + 0xf] ; ret -0x7cb8
0x0000000000029653 : cli ; or byte ptr [rdi], -0x6c ; ret -0x49f1
0x00000000000b0dfd : cli ; or cl, byte ptr [rax + 0x29] ; ret 0x5589
0x0000000000177341 : cli ; push 0x6e ; ja 0x1772c9 ; ret 0x48f
0x00000000000fd987 : cli ; push qword ptr [rbp + rax + 0xffffffffffffff83] ; ret -0x76ff
0x00000000000fb341 : cli ; push qword ptr [rbx + rcx + 0xfffffffffffffff3] ; ret
0x000000000018e6f2 : cli ; push qword ptr [rbx + rdi*4 + 0x2df40002] ; cli ; jmp rsp
0x000000000018ece2 : cli ; push qword ptr [rcx + 2] ; add ah, al ; ret -6
0x000000000006f822 : cli ; push qword ptr [rdx + rcx + 0x48] ; mov eax, edx ; pop rbx ; ret
0x00000000000fd738 : cli ; push qword ptr [rsi + rax + 0xffffffffffffff83] ; ret 0x6601
0x000000000010a26f : cli ; rep inc dword ptr [rbp + 0xffffffffffffff85] ; in al, -0x77 ; ret 0x87e
0x0000000000175de5 : cli ; ret -0x539b
0x00000000000b212f : cli ; ret 0x10
0x00000000001086db : cli ; setae al ; ret
0x00000000000c5461 : cli ; sub al, 0x74 ; cmp eax, dword ptr [rax + 0xffffffff940f7bfa] ; ret -0x49f1
0x000000000011bec9 : cli ; sub al, 0x74 ; or ecx, dword ptr [rax + 0xffffffffffffff83] ; ret
0x00000000000c83de : cli ; sub r10, rax ; jmp 0xc83fc
0x0000000000089730 : cli ; test rdx, rdx ; je 0x89740 ; bsf rax, rdx ; ret
0x000000000008991f : cli ; test rdx, rdx ; je 0x89940 ; bsf rax, rdx ; ret
0x0000000000174a2a : cli ; xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x00000000000892f8 : cli ; xor byte ptr [rbp + rcx*4 + 0x48], al ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret -0x7cbf
0x000000000005362f : cmc ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x000000000013d8c8 : cmc ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x0000000000166bfa : cmc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000017afa2 : cmc ; call qword ptr [rax + 0x23fff5a4]
0x000000000017aeda : cmc ; call qword ptr [rax]
0x00000000001ac5ca : cmc ; call qword ptr [rbx]
0x00000000001a87ea : cmc ; call qword ptr [rcx]
0x000000000017b03e : cmc ; call qword ptr [rdi]
0x00000000001a8db2 : cmc ; call qword ptr [rsi]
0x000000000018bf5a : cmc ; call rsp
0x000000000018dde9 : cmc ; clc ; call rsp
0x00000000001ad021 : cmc ; cmc ; call qword ptr [rcx]
0x0000000000132759 : cmc ; dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x7ab3
0x000000000017aee2 : cmc ; inc dword ptr [rax + 0xffffffffffffffa4] ; cmc ; jmp qword ptr [rbx]
0x000000000010c1b6 : cmc ; inc dword ptr [rbp + 0xffffffffffffff85] ; in al, -0x77 ; ret 0x87e
0x000000000018bf52 : cmc ; inc dword ptr [rcx + rax*8 + 0x3b340001] ; cmc ; call rsp
0x000000000018bf82 : cmc ; inc esp ; ret
0x00000000001151f2 : cmc ; je 0x1151e8 ; pop rbx ; ret
0x000000000017aec6 : cmc ; jmp qword ptr [rax + 0x23fff5a3]
0x000000000017afae : cmc ; jmp qword ptr [rax + 0x23fff5a4]
0x00000000001a9042 : cmc ; jmp qword ptr [rax]
0x000000000017ae62 : cmc ; jmp qword ptr [rbx]
0x00000000001a820a : cmc ; jmp qword ptr [rcx]
0x00000000001ab822 : cmc ; jmp qword ptr [rdi]
0x00000000001a84fa : cmc ; jmp qword ptr [rdx]
0x00000000001a8452 : cmc ; jmp qword ptr [rsi]
0x00000000001a93ba : cmc ; jmp rax
0x00000000001a924a : cmc ; jmp rbx
0x00000000001a936a : cmc ; jmp rdi
0x000000000018bf42 : cmc ; jmp rsp
0x0000000000177769 : cmc ; mov ch, -0x55 ; ret
0x000000000014d54a : cmc ; mov dword ptr [rdi + 0xfffffffffffffffc], ecx ; ret
0x00000000001455de : cmc ; mov dword ptr [rdi + 0xfffffffffffffffc], edx ; ret
0x00000000001990d6 : cmc ; mov edx, 0xd1cffed ; movsd dword ptr es:[rdi], dword ptr [rsi] ; stosb byte ptr es:[rdi], al ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001645f3 : cmc ; movzx edx, byte ptr [rsi + 0xfffffffffffffff5] ; sub eax, edx ; ret
0x0000000000132757 : cmc ; outsb dx, byte ptr [rsi] ; cmc ; dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x7ab3
0x000000000006f9d6 : cmc ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000074501 : cmc ; pop rbp ; pop r12 ; ret
0x0000000000174617 : cmc ; pop rbx ; and dword ptr [rsi + rbp*2 + 0xffffffffffffff86], edi ; lahf ; ret -0x78e2
0x000000000017af32 : cmc ; push qword ptr [rax + 0xffffffffffffffa4] ; cmc ; jmp qword ptr [rbx]
0x000000000017aede : cmc ; push qword ptr [rax] ; movsb byte ptr es:[rdi], byte ptr [rsi] ; cmc ; inc dword ptr [rax + 0xffffffffffffffa4] ; cmc ; jmp qword ptr [rbx]
0x00000000000a6896 : cmc ; setne dl ; jmp 0xa68a8
0x00000000000ab746 : cmc ; setne dl ; jmp 0xab758
0x00000000001645f7 : cmc ; sub eax, edx ; ret
0x00000000001a2354 : cmc ; test esi, ecx ; jmp qword ptr [rdx]
0x0000000000176da5 : cmc ; xlatb ; ret 0x4e27
0x000000000003cdc4 : cmova edx, eax ; xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x00000000000eddd8 : cmova edx, ecx ; mov eax, edx ; ret
0x00000000000b226b : cmova esi, eax ; imul esi, edx ; add eax, esi ; ret
0x00000000000b226a : cmova esi, r8d ; imul esi, edx ; add eax, esi ; ret
0x000000000007dd19 : cmovae eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x00000000000497cc : cmovae eax, esi ; pop rbx ; ret
0x00000000000498a8 : cmovae eax, esi ; ret
0x000000000000385b : cmovae ebp, dword ptr [rdi + 0xffffffffffffffda] ; int 3
0x000000000007dd18 : cmovae rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x18] ; ret
0x00000000000497cb : cmovae rax, rsi ; pop rbx ; ret
0x00000000000498a7 : cmovae rax, rsi ; ret
0x00000000000cc4d0 : cmovbe eax, edx ; ret
0x00000000000a440d : cmove eax, ecx ; ret
0x000000000008d718 : cmove eax, edx ; add eax, 1 ; ret
0x000000000010ba20 : cmove eax, edx ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000008c584 : cmove eax, edx ; add rsp, 8 ; ret
0x00000000000ec8cd : cmove eax, edx ; jmp 0xec88b
0x000000000008b708 : cmove eax, edx ; ret
0x000000000007a885 : cmove eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007a884 : cmove eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000097521 : cmove ecx, dword ptr [rcx + 0xffffffff89480447] ; clc ; ret
0x00000000000951f6 : cmove edx, ebx ; mov rax, rdx ; pop rbx ; ret
0x000000000002f629 : cmove esi, eax ; xor ebp, ebp ; jmp 0x2f633
0x000000000002f628 : cmove r14, rax ; xor ebp, ebp ; jmp 0x2f633
0x00000000000a440c : cmove rax, rcx ; ret
0x000000000008d729 : cmove rax, rdx ; add eax, 1 ; ret
0x000000000008c583 : cmove rax, rdx ; add rsp, 8 ; ret
0x000000000008b707 : cmove rax, rdx ; ret
0x00000000000951f5 : cmove rdx, rbx ; mov rax, rdx ; pop rbx ; ret
0x000000000001f6aa : cmovge eax, edx ; jmp 0x1f67a
0x000000000003ca8d : cmovne eax, ebx ; pop rbx ; ret
0x00000000000840e0 : cmovne eax, ecx ; add rsp, 8 ; ret
0x00000000000717d1 : cmovne eax, ecx ; ret
0x0000000000098131 : cmovne eax, edi ; ret
0x000000000004f4c4 : cmovne eax, edx ; jmp 0x4f53a
0x000000000002f8ab : cmovne eax, edx ; ret
0x000000000012a3c9 : cmovne eax, edx ; sub rsp, -0x80 ; pop rbx ; ret
0x000000000004f4c0 : cmovne ebp, ecx ; cmovne r8, rdx ; jmp 0x4f53a
0x000000000004f4bf : cmovne r13, rcx ; cmovne r8, rdx ; jmp 0x4f53a
0x00000000000717d0 : cmovne r8, rcx ; ret
0x000000000004f4c3 : cmovne r8, rdx ; jmp 0x4f53a
0x000000000003ca8c : cmovne rax, rbx ; pop rbx ; ret
0x00000000000840df : cmovne rax, rcx ; add rsp, 8 ; ret
0x0000000000098130 : cmovne rax, rdi ; ret
0x000000000002f8aa : cmovne rax, rdx ; ret
0x0000000000102bff : cmovns eax, dword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000000fac16 : cmovns eax, edx ; jmp 0xfac1d
0x0000000000048829 : cmovns eax, edx ; pop rbx ; ret
0x00000000000257ec : cmovns eax, edx ; ret
0x0000000000102bfe : cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x00000000000fac15 : cmovns rax, rdx ; jmp 0xfac1d
0x000000000005fa68 : cmovs eax, dword ptr [rbx + 0x149f0e0] ; ret -0x74b8
0x0000000000097473 : cmovs eax, dword ptr [rbx + 0xffffffff894802c7] ; clc ; ret
0x0000000000121980 : cmovs eax, dword ptr [rbx + 0xffffffffc03108c4] ; pop rbx ; pop rbp ; ret
0x000000000012ddc0 : cmovs eax, dword ptr [rbx + 0xffffffffc03128c4] ; pop rbx ; pop rbp ; ret
0x000000000007ca88 : cmovs edi, dword ptr [rcx] ; int1 ; jne 0x7ca80 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000075d78 : cmovs edi, dword ptr [rcx] ; into ; jb 0x75d70 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000001a7e00 : cmp ah, -0xc ; jmp rax
0x0000000000188521 : cmp ah, -1 ; nop ; jg 0x188523 ; call qword ptr [rax]
0x0000000000187aad : cmp ah, bh ; call rax
0x00000000001a30a8 : cmp ah, bh ; int1 ; jmp qword ptr [rcx]
0x00000000000fd2c2 : cmp ah, byte ptr [rax] ; sub al, 0 ; pop rbx ; ret
0x000000000013da97 : cmp ah, byte ptr [rbx + 0xffffffffffffffc9] ; cmp ch, byte ptr [rcx] ; ret -0x35c7
0x000000000013da38 : cmp ah, byte ptr [rbx + 0xffffffffffffffcb] ; add cl, byte ptr [rdi] ; xchg eax, edx ; ror byte ptr [rdi], -0x6c ; ret -0x3f7b
0x00000000001b062c : cmp al, -0x10 ; cmc ; jmp qword ptr [rdx]
0x000000000004601f : cmp al, -0x11 ; call 0x92310
0x000000000018a789 : cmp al, -0x11 ; call rsp
0x00000000000f073c : cmp al, -0x18 ; sahf ; ret
0x000000000019cd2c : cmp al, -0x25 ; add byte ptr [rax], al ; xor byte ptr [rdx + 0xffffffffffffffee], ch ; call qword ptr [rdi]
0x00000000001ac82c : cmp al, -0x2a ; add dword ptr [rax], eax ; lock out -0xb, al ; call qword ptr [rax]
0x00000000001ab72c : cmp al, -0x3b ; add dword ptr [rax], eax ; rcl bl ; cmc ; jmp qword ptr [rsi]
0x000000000019b42c : cmp al, -0x3e ; add byte ptr [rax], al ; mov al, 0x27 ; out dx, al ; call qword ptr [rsi]
0x000000000003d984 : cmp al, -0x4e ; jle 0x3d940 ; jmp 0x3d94d
0x00000000001a922c : cmp al, -0x60 ; add dword ptr [rax], eax ; xor byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a882c : cmp al, -0x6a ; add dword ptr [rax], eax ; jo 0x1a885a ; cmc ; jmp qword ptr [rcx]
0x0000000000080d7b : cmp al, -0x77 ; ret -0x4b75
0x0000000000187335 : cmp al, -5 ; push qword ptr [rax] ; sti ; call rax
0x000000000019b704 : cmp al, -8 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000018d739 : cmp al, -8 ; jmp rsp
0x00000000000d2b48 : cmp al, 0x11 ; je 0xd2b50 ; xor eax, eax ; ret
0x0000000000021f5d : cmp al, 0x16 ; call rax
0x0000000000081dde : cmp al, 0x1e ; mov rax, rsi ; pop rbx ; ret
0x00000000000f6041 : cmp al, 0x24 ; call rbx
0x00000000000a4707 : cmp al, 0x24 ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000136bec : cmp al, 0x24 ; mov rax, qword ptr [rax + 0xe8] ; jmp rax
0x00000000000ecb0f : cmp al, 0x24 ; mov rdx, rax ; call 0x108d60
0x000000000011db9f : cmp al, 0x25 ; xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000098045 : cmp al, 0x3d ; jne 0x98059 ; mov rax, rdi ; ret
0x00000000000c6de4 : cmp al, 0x3f ; jne 0xc6d88 ; mov eax, 1 ; ret
0x00000000000c6dd4 : cmp al, 0x3f ; jne 0xc6db7 ; mov eax, 1 ; ret
0x000000000018f15c : cmp al, 0x40 ; add al, byte ptr [rax] ; push rsp ; fdivr st(5) ; jmp rsp
0x0000000000175a20 : cmp al, 0x46 ; clc ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000035ad7 : cmp al, 0x5f ; je 0x35aeb ; jmp 0x35a9f
0x00000000001959dc : cmp al, 0x6c ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001b612c : cmp al, 0x6f ; add al, byte ptr [rax] ; nop ; ret -9
0x00000000001960fc : cmp al, 0x71 ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000188390 : cmp al, 0x7a ; cld ; jmp rdx
0x0000000000162df3 : cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009e640 : cmp al, 5 ; add byte ptr [rax], al ; ret
0x000000000008107c : cmp al, 8 ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000002257b : cmp al, byte ptr [rax] ; mov dword ptr [rip + 0x3a267d], edi ; pop rbx ; ret
0x000000000001f574 : cmp al, byte ptr [rax] ; pop rax ; pop rbx ; pop rbp ; ret
0x00000000000221a6 : cmp al, byte ptr [rax] ; pop rbx ; ret
0x00000000000223ef : cmp al, byte ptr [rax] ; ret
0x00000000001a2c15 : cmp al, byte ptr [rcx] ; add byte ptr [rax + 0xffffffffffffffec], cl ; int1 ; jmp qword ptr [rcx]
0x00000000001b2c0d : cmp al, byte ptr [rdx] ; add byte ptr [rax], dl ; or dh, bh ; call qword ptr [rsi]
0x0000000000004050 : cmp al, byte ptr [rip] ; add byte ptr [rax], al ; ret
0x0000000000164ab6 : cmp al, byte ptr [rsi + 0xffffffffffffffff] ; jne 0x164ad5 ; xor eax, eax ; ret
0x0000000000022580 : cmp al, byte ptr es:[rax] ; pop rbx ; ret
0x00000000000230a8 : cmp al, ch ; ret -0x3d
0x000000000008ca66 : cmp al, dh ; ret
0x000000000008ca65 : cmp al, r14b ; ret
0x00000000000367a6 : cmp bh, -1 ; inc eax ; shr eax, 0x1f ; ret
0x0000000000188099 : cmp bh, ah ; call rax
0x0000000000193ae1 : cmp bh, dl ; jmp qword ptr [rcx]
0x000000000018e7b9 : cmp bh, dl ; jmp rsp
0x000000000019dc18 : cmp bh, dl ; out dx, al ; jmp rdx
0x00000000001ac06c : cmp bl, byte ptr [rcx + 0xfffffffffffffff5] ; jmp qword ptr [rdx]
0x0000000000092afb : cmp bl, dh ; ret
0x00000000000a3856 : cmp byte ptr [r11], r15b ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x0000000000076c73 : cmp byte ptr [r8 + 0xffffffffffffff89], cl ; ret 0x348
0x00000000000e3482 : cmp byte ptr [r8 + 0xffffffffffffff89], r9b ; ret -0x76b8
0x00000000000e3f4e : cmp byte ptr [r8], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000dcd61 : cmp byte ptr [rax + 0x63], cl ; ret
0x000000000008d64f : cmp byte ptr [rax + 0xf], cl ; ret
0x000000000006f9fc : cmp byte ptr [rax + 0xffffffffffffff83], cl ; clc ; dec dword ptr [rax + 0xffffffffffffff89] ; ret 0xf40
0x000000000005ba32 : cmp byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x00000000001203a3 : cmp byte ptr [rax + 0xffffffffffffff85], cl ; sal byte ptr [rbp + rax + 0x48], -0x77 ; out dx, eax ; call rax
0x0000000000127433 : cmp byte ptr [rax + 0xffffffffffffff85], cl ; sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x0000000000121f72 : cmp byte ptr [rax + 0xffffffffffffff85], cl ; sal byte ptr [rbp + rax + 0x4c], cl ; mov edi, esp ; call rdx
0x00000000000f5ff4 : cmp byte ptr [rax + 0xffffffffffffff89], cl ; and al, 8 ; call rbx
0x00000000000b60f9 : cmp byte ptr [rax + 0xffffffffffffff89], cl ; jmp 0x48cdea49
0x00000000000ddafa : cmp byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x000000000006d4fb : cmp byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x107d
0x00000000000e3483 : cmp byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x76b8
0x00000000001061d4 : cmp byte ptr [rax + 0xffffffffffffff89], cl ; ret 0x2b49
0x0000000000076c74 : cmp byte ptr [rax + 0xffffffffffffff89], cl ; ret 0x348
0x000000000006dfb3 : cmp byte ptr [rax + 0xffffffffffffff89], cl ; ret 0x778d
0x00000000001061d3 : cmp byte ptr [rax + 0xffffffffffffff89], r9b ; ret 0x2b49
0x00000000000d5f97 : cmp byte ptr [rax + 0xffffffffffffff8b], cl ; adc byte ptr [rax + 0x39], cl ; ret
0x00000000000fa332 : cmp byte ptr [rax + 0xffffffffffffffff], bh ; ret
0x0000000000128c46 : cmp byte ptr [rax + 1], bh ; ret
0x000000000008caa7 : cmp byte ptr [rax + 1], cl ; clc ; ret
0x000000000019f108 : cmp byte ptr [rax + rsi*8], dl ; jmp rbx
0x000000000015f3c8 : cmp byte ptr [rax], 1 ; sbb rax, -1 ; ret
0x000000000008ca96 : cmp byte ptr [rax], ah ; ret
0x000000000012fd95 : cmp byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x00000000001044cb : cmp byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret -3
0x000000000000af41 : cmp byte ptr [rax], al ; add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; push rax ; ret
0x000000000003d1d5 : cmp byte ptr [rax], al ; add rsp, 8 ; ret
0x0000000000037ca7 : cmp byte ptr [rax], al ; mov eax, edx ; ret
0x000000000002fa01 : cmp byte ptr [rax], al ; mov qword ptr [rax], rdx ; ret
0x0000000000037c54 : cmp byte ptr [rax], al ; ret
0x000000000013dd1c : cmp byte ptr [rax], al ; ret 0xf66
0x000000000019c0dc : cmp byte ptr [rax], bh ; out dx, al ; jmp qword ptr [rdx]
0x000000000012c519 : cmp byte ptr [rax], bl ; je 0x12c520 ; ret
0x00000000000e3f4f : cmp byte ptr [rax], cl ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000087a30 : cmp byte ptr [rax], dh ; cmovne rax, rdx ; ret
0x0000000000097c36 : cmp byte ptr [rax], dh ; ret
0x000000000008ca86 : cmp byte ptr [rax], dl ; ret
0x000000000008ca85 : cmp byte ptr [rax], r10b ; ret
0x000000000008ca95 : cmp byte ptr [rax], r12b ; ret
0x0000000000097c35 : cmp byte ptr [rax], r14b ; ret
0x0000000000087a2f : cmp byte ptr [rax], sil ; cmovne rax, rdx ; ret
0x00000000000a385a : cmp byte ptr [rbp + 0x13], dh ; ret
0x00000000000a3859 : cmp byte ptr [rbp + 0x13], r14b ; ret
0x0000000000095870 : cmp byte ptr [rbp + 0x29], cl ; ret -0x74ba
0x0000000000095b6b : cmp byte ptr [rbp + 0x31], al ; ror byte ptr [rbp + 0x29], cl ; ret -0x74ba
0x00000000000d1c8c : cmp byte ptr [rbp + 0xffffffff83480143], cl ; ret
0x000000000012a8ca : cmp byte ptr [rbx + 0x5d], bl ; ret
0x00000000001b1eb4 : cmp byte ptr [rbx + 0xffffffff900e4607], al ; add dword ptr [rbx], eax ; ret
0x000000000017a33c : cmp byte ptr [rbx + 0xffffffff9326fff4], dl ; hlt ; jmp qword ptr [rsi]
0x00000000000a3857 : cmp byte ptr [rbx], bh ; cmp byte ptr [rbp + 0x13], r14b ; ret
0x0000000000075ac0 : cmp byte ptr [rcx + 0x5d5b7453], cl ; pop r12 ; ret
0x000000000005b724 : cmp byte ptr [rcx + 0xf], al ; mov dh, 0x45 ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x00000000000f2ff8 : cmp byte ptr [rcx + 0xffffffffc48348d0], cl ; ret
0x000000000005523a : cmp byte ptr [rcx + 0xffffffffffffff83], cl ; ret
0x0000000000051f68 : cmp byte ptr [rcx + 0xffffffffffffff89], cl ; ret -0x72b8
0x00000000001a6328 : cmp byte ptr [rcx + 0xfffffffffffffff4], bh ; jmp qword ptr [rcx]
0x00000000001a9368 : cmp byte ptr [rcx + 0xfffffffffffffff5], al ; jmp rdi
0x00000000001ad8ac : cmp byte ptr [rcx + 0xfffffffffffffff5], dh ; jmp qword ptr [rdx]
0x00000000000a5140 : cmp byte ptr [rcx + rcx*4 + 0xffffffffffffffe9], cl ; mov rdi, rbp ; call rbx
0x00000000000a49e9 : cmp byte ptr [rcx + rcx*4 + 0xfffffffffffffff1], cl ; mov rdi, qword ptr [r13] ; call r12
0x00000000001a2aad : cmp byte ptr [rcx], al ; add byte ptr [rax + 0xffffffffffffffe5], dh ; int1 ; jmp rsi
0x00000000001229c9 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret 0x2948
0x0000000000092f98 : cmp byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0xffffffffffffff89], cl ; ret
0x000000000018aca5 : cmp byte ptr [rcx], al ; add byte ptr [rsi], ah ; shr bh, 1 ; call rsp
0x000000000015f3c9 : cmp byte ptr [rcx], al ; sbb rax, -1 ; ret
0x000000000009fa54 : cmp byte ptr [rcx], cl ; add byte ptr [rax], al ; ret
0x0000000000002044 : cmp byte ptr [rdi + 0xffffffffe652180d], dl ; ret
0x0000000000194198 : cmp byte ptr [rdi + 0xffffffffffffffeb], dl ; jmp qword ptr [rbx]
0x00000000000487f8 : cmp byte ptr [rdi], 0 ; jne 0x48800 ; pop rbx ; ret
0x00000000001a8d68 : cmp byte ptr [rdi], ch ; cmc ; jmp qword ptr [rcx]
0x00000000000e2f93 : cmp byte ptr [rdi], cl ; mov dh, 0x48 ; xor byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x680
0x000000000016169d : cmp byte ptr [rdi], dl ; ret
0x0000000000160c3e : cmp byte ptr [rdi], dl ; ret -0x7cf1
0x00000000001621b0 : cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000162199 : cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000162182 : cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000193ae0 : cmp byte ptr [rdx], -6 ; jmp qword ptr [rcx]
0x00000000000d1880 : cmp byte ptr [rsi + 0x30], 0x11 ; je 0xd1890 ; xor eax, eax ; ret
0x00000000000f16a2 : cmp byte ptr [rsi + 0x41], ah ; mov dword ptr [rax + 0x21], esi ; ret
0x0000000000191978 : cmp byte ptr [rsi + 0xffffffffffffffea], dl ; jmp qword ptr [rcx]
0x000000000019e288 : cmp byte ptr [rsi + 0xffffffffffffffef], al ; jmp qword ptr [rsi]
0x00000000000d2a36 : cmp byte ptr [rsi], cl ; je 0xd29c2 ; pop rbx ; ret
0x000000000017a264 : cmp byte ptr [rsi], dl ; hlt ; call qword ptr [rdx]
0x0000000000189559 : cmp ch, bl ; call rsp
0x00000000001a7938 : cmp ch, bl ; hlt ; jmp qword ptr [rcx]
0x0000000000193f4d : cmp ch, bl ; jmp qword ptr [rdx]
0x00000000001a76dc : cmp ch, byte ptr [rbx + 0xfffffffffffffff4] ; jmp qword ptr [rdx]
0x000000000013da9a : cmp ch, byte ptr [rcx] ; ret -0x35c7
0x00000000001a9159 : cmp ch, dh ; jmp qword ptr [rcx]
0x000000000019c1fd : cmp ch, dh ; jmp qword ptr [rdx]
0x00000000000740c5 : cmp cl, byte ptr [rax + 0x29] ; ret -0x76b8
0x000000000010c910 : cmp cl, byte ptr [rax + 0xffffffffffffff81] ; in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x000000000018f76c : cmp cl, byte ptr [rbp + 0xffffffffffffffe9] ; jmp qword ptr [rdx]
0x0000000000084a71 : cmp cl, byte ptr [rbx + rcx*4 + 0x47] ; or byte ptr [rbp + 0xffffffffffffff89], cl ; ret
0x00000000000f6cba : cmp cl, byte ptr [rcx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x0000000000048cec : cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x000000000007dfdc : cmp dh, byte ptr [rax + rax] ; add dword ptr [rbx + 0xfffffffffffffff3], ebx ; ret
0x00000000000487f5 : cmp dh, byte ptr [rcx] ; rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x00000000001950e4 : cmp dh, byte ptr [rdi + 0xffffffffffffffec] ; jmp qword ptr [rdx]
0x000000000019c0dd : cmp dh, ch ; jmp qword ptr [rdx]
0x00000000001b1e2d : cmp dh, dh ; jmp qword ptr [rdx]
0x00000000000ef045 : cmp dh, dh ; ret
0x0000000000025c85 : cmp dh, dh ; ret -0x74ff
0x00000000000397c9 : cmp dh, dh ; ret 0x7401
0x0000000000098fe5 : cmp dh, dh ; ret 0x7501
0x0000000000002b62 : cmp dl, byte ptr [rdi] ; ret
0x00000000000717ab : cmp dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; ret
0x00000000001085fa : cmp dword ptr [rax + 8], edi ; jne 0x1085f0 ; mov rax, qword ptr [rax + 0x30] ; ret
0x000000000012c518 : cmp dword ptr [rax], 0x18 ; je 0x12c520 ; ret
0x0000000000025494 : cmp dword ptr [rax], eax ; call 0x248a0
0x000000000002ef06 : cmp dword ptr [rax], eax ; mov byte ptr [rip + 0x391d6f], dl ; ret
0x0000000000021a9f : cmp dword ptr [rax], eax ; pop r12 ; ret
0x000000000002c0e5 : cmp dword ptr [rax], eax ; ret
0x0000000000022085 : cmp dword ptr [rax], eax ; test rax, rax ; je 0x2208e ; jmp rax
0x00000000000220b5 : cmp dword ptr [rax], eax ; test rax, rax ; je 0x220be ; jmp rax
0x00000000001a1bc6 : cmp dword ptr [rbp + 0xfffffffffffffff1], -1 ; sbb al, 0xd ; jl 0x1a1bc0 ; jmp qword ptr [rdx]
0x00000000000d1970 : cmp dword ptr [rbx + 0xa4], 1 ; setg dl ; jmp 0xd18fe
0x000000000014d088 : cmp dword ptr [rbx + 0xffffffffffffffff], -1 ; dec dword ptr [rax + 0xffffffffffffff81] ; ret 0x80
0x00000000000e58ae : cmp dword ptr [rcx + 0xfffffffffffffff8], 0 ; je 0xe58b8 ; mov edx, eax ; jmp 0xe58a6
0x00000000001a2b45 : cmp dword ptr [rcx], eax ; add byte ptr [rax + 0xffffffffffffffea], cl ; int1 ; jmp qword ptr [rcx]
0x0000000000065d82 : cmp dword ptr [rcx], ebp ; ret
0x0000000000103181 : cmp dword ptr [rdi + 0x10], 0 ; je 0x103190 ; xor eax, eax ; ret
0x00000000000a4409 : cmp dword ptr [rdi + 8], esi ; cmove rax, rcx ; ret
0x000000000019c364 : cmp dword ptr [rdi], edi ; out dx, al ; jmp qword ptr [rdx]
0x000000000003d982 : cmp dword ptr [rdx + r14*4], 0x40 ; jle 0x3d940 ; jmp 0x3d94d
0x000000000003d983 : cmp dword ptr [rdx + rsi*4], 0x40 ; jle 0x3d940 ; jmp 0x3d94d
0x00000000001107a1 : cmp dword ptr [rip + 0x2b0218], 0 ; jne 0x11076c ; jmp 0x110764
0x0000000000087091 : cmp dword ptr [rip + 0x33ab98], 0 ; je 0x870a0 ; ret
0x00000000000f57e0 : cmp dword ptr [rsi], 0 ; je 0xf57e7 ; pop rbx ; ret
0x00000000000037ea : cmp dword ptr [rsi], ecx ; pop rsp ; ret
0x00000000000ec8c8 : cmp dword ptr [rsp + 0x10], 2 ; cmove eax, edx ; jmp 0xec88b
0x00000000000ec7b8 : cmp dword ptr [rsp + 0xffffffffffffff98], 2 ; cmove eax, edx ; ret
0x000000000012c517 : cmp dword ptr fs:[rax], 0x18 ; je 0x12c520 ; ret
0x00000000000edf80 : cmp eax, -0x5f ; je 0xedf98 ; neg eax ; pop rbx ; ret
0x00000000001151f0 : cmp eax, -0xb ; je 0x1151e8 ; pop rbx ; ret
0x0000000000133c8e : cmp eax, -1 ; je 0x133ca0 ; add rsp, 8 ; ret
0x000000000002201e : cmp eax, -1 ; je 0x22043 ; add rsp, 8 ; ret
0x0000000000075cda : cmp eax, -1 ; je 0x75ce2 ; and dword ptr [rbx], -0x11 ; pop rbx ; ret
0x0000000000075d1e : cmp eax, -1 ; je 0x75d26 ; and dword ptr [rbx], -0x11 ; pop rbx ; ret
0x000000000007ca01 : cmp eax, -1 ; je 0x7ca09 ; and dword ptr [rbx], -0x11 ; pop rbx ; ret
0x00000000000fb2ab : cmp eax, -1 ; je 0xfb2b8 ; pop rbx ; pop rbp ; ret
0x0000000000077649 : cmp eax, -1 ; jne 0x77650 ; pop rbx ; ret
0x000000000007ca4f : cmp eax, -1 ; jne 0x7ca3a ; pop rbx ; ret
0x0000000000115501 : cmp eax, -1 ; mov dl, 2 ; cmove eax, edx ; ret
0x0000000000003b4f : cmp eax, 0x12c401fe ; mov cl, 0x22 ; xchg eax, ebp ; ret
0x00000000000a610e : cmp eax, 0x13 ; je 0xa6120 ; mov edx, eax ; jmp 0xa60e0
0x00000000000a894e : cmp eax, 0x13 ; je 0xa8960 ; mov edx, eax ; jmp 0xa8920
0x00000000000aaffe : cmp eax, 0x13 ; je 0xab010 ; mov edx, eax ; jmp 0xaafd0
0x00000000001107a2 : cmp eax, 0x2b0218 ; add byte ptr [rbp + 0xffffffffffffffc2], dh ; jmp 0x110764
0x0000000000112da2 : cmp eax, 0x2b11d9 ; call rax
0x00000000001124d7 : cmp eax, 0x2b1a44 ; call rax
0x000000000002257e : cmp eax, 0x3a267d ; pop rbx ; ret
0x00000000000cbe4f : cmp eax, 0x48ffffff ; add esp, 0x18 ; ret
0x000000000005dba6 : cmp eax, 0x5d5b0036 ; ret
0x000000000008176f : cmp eax, 0x83480007 ; clc ; dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x7bf1
0x00000000000f99a1 : cmp eax, 0x89000862 ; ret -0x173f
0x0000000000098047 : cmp eax, 0x89480f75 ; clc ; ret
0x0000000000193eff : cmp eax, 0xd1cffeb ; mov ch, 0x37 ; jmp 0x193f07
0x000000000009813a : cmp eax, 0xeb000000 ; ret
0x000000000013dd43 : cmp eax, 0xf3ffffff ; ret
0x00000000001a2f6d : cmp eax, 0xfac00001 ; int1 ; jmp qword ptr [rcx]
0x00000000001a2fe5 : cmp eax, 0xfbd80001 ; int1 ; jmp qword ptr [rcx]
0x0000000000037027 : cmp eax, 0xfffff000 ; ja 0x3702f ; ret
0x00000000000bec12 : cmp eax, 0xfffff000 ; ja 0xbec1a ; ret
0x00000000000c1643 : cmp eax, 0xfffff000 ; ja 0xc164b ; ret
0x00000000000c16dd : cmp eax, 0xfffff000 ; ja 0xc16e5 ; ret
0x00000000000c17cc : cmp eax, 0xfffff000 ; ja 0xc17d4 ; ret
0x00000000000c2a74 : cmp eax, 0xfffff000 ; ja 0xc2a7c ; ret
0x00000000000c2ad4 : cmp eax, 0xfffff000 ; ja 0xc2adc ; ret
0x00000000000c2d28 : cmp eax, 0xfffff000 ; ja 0xc2d30 ; ret
0x00000000000c2d98 : cmp eax, 0xfffff000 ; ja 0xc2da0 ; ret
0x00000000000edbde : cmp eax, 0xfffff000 ; ja 0xedbe8 ; cdqe ; ret
0x00000000000f121b : cmp eax, 0xfffff000 ; ja 0xf1223 ; ret
0x00000000000f1731 : cmp eax, 0xfffff000 ; ja 0xf1739 ; ret
0x00000000000f1f08 : cmp eax, 0xfffff000 ; ja 0xf1f10 ; ret
0x00000000000f1fa8 : cmp eax, 0xfffff000 ; ja 0xf1fb0 ; ret
0x00000000000f2526 : cmp eax, 0xfffff000 ; ja 0xf252e ; ret
0x00000000000f2596 : cmp eax, 0xfffff000 ; ja 0xf259e ; ret
0x00000000000f2613 : cmp eax, 0xfffff000 ; ja 0xf261b ; ret
0x00000000000f26b3 : cmp eax, 0xfffff000 ; ja 0xf26bb ; ret
0x00000000000faf7e : cmp eax, 0xfffff000 ; ja 0xfaf88 ; pop rbx ; pop rbp ; ret
0x00000000000fb1e1 : cmp eax, 0xfffff000 ; ja 0xfb1e9 ; ret
0x00000000000fbf1e : cmp eax, 0xfffff000 ; ja 0xfbf26 ; ret
0x00000000000fc08e : cmp eax, 0xfffff000 ; ja 0xfc096 ; ret
0x00000000000fc658 : cmp eax, 0xfffff000 ; ja 0xfc660 ; ret
0x00000000000fc6fa : cmp eax, 0xfffff000 ; ja 0xfc702 ; ret
0x00000000000fc7aa : cmp eax, 0xfffff000 ; ja 0xfc7b2 ; ret
0x0000000000133a1b : cmp eax, 0xfffff001 ; jae 0x133a23 ; ret
0x0000000000133a6b : cmp eax, 0xfffff001 ; jae 0x133a73 ; ret
0x0000000000036fb8 : cmp eax, 0xfffff001 ; jae 0x36fc0 ; ret
0x0000000000037578 : cmp eax, 0xfffff001 ; jae 0x37580 ; ret
0x00000000000471c2 : cmp eax, 0xfffff001 ; jae 0x471cc ; xor eax, eax ; ret
0x000000000005e228 : cmp eax, 0xfffff001 ; jae 0x5e230 ; ret
0x00000000000b20b8 : cmp eax, 0xfffff001 ; jae 0xb20c0 ; ret
0x00000000000b4f08 : cmp eax, 0xfffff001 ; jae 0xb4f10 ; ret
0x00000000000b4f38 : cmp eax, 0xfffff001 ; jae 0xb4f40 ; ret
0x00000000000c1598 : cmp eax, 0xfffff001 ; jae 0xc15a0 ; ret
0x00000000000c178b : cmp eax, 0xfffff001 ; jae 0xc1793 ; ret
0x00000000000c1868 : cmp eax, 0xfffff001 ; jae 0xc1870 ; ret
0x00000000000c1a51 : cmp eax, 0xfffff001 ; jae 0xc1a89 ; ret
0x00000000000c1ab1 : cmp eax, 0xfffff001 ; jae 0xc1ae9 ; ret
0x00000000000c1e42 : cmp eax, 0xfffff001 ; jae 0xc1e4a ; ret
0x00000000000c2a38 : cmp eax, 0xfffff001 ; jae 0xc2a40 ; ret
0x00000000000c2bc8 : cmp eax, 0xfffff001 ; jae 0xc2bd0 ; ret
0x00000000000c2bf8 : cmp eax, 0xfffff001 ; jae 0xc2c00 ; ret
0x00000000000c2c58 : cmp eax, 0xfffff001 ; jae 0xc2c60 ; ret
0x00000000000c2c88 : cmp eax, 0xfffff001 ; jae 0xc2c90 ; ret
0x00000000000c2cb8 : cmp eax, 0xfffff001 ; jae 0xc2cc0 ; ret
0x00000000000c2ce8 : cmp eax, 0xfffff001 ; jae 0xc2cf0 ; ret
0x00000000000cbec8 : cmp eax, 0xfffff001 ; jae 0xcbed0 ; ret
0x00000000000cbef8 : cmp eax, 0xfffff001 ; jae 0xcbf00 ; ret
0x00000000000cbf28 : cmp eax, 0xfffff001 ; jae 0xcbf30 ; ret
0x00000000000cbf58 : cmp eax, 0xfffff001 ; jae 0xcbf60 ; ret
0x00000000000cbf88 : cmp eax, 0xfffff001 ; jae 0xcbf90 ; ret
0x00000000000cbfb8 : cmp eax, 0xfffff001 ; jae 0xcbfc0 ; ret
0x00000000000cbfe8 : cmp eax, 0xfffff001 ; jae 0xcbff0 ; ret
0x00000000000cc018 : cmp eax, 0xfffff001 ; jae 0xcc020 ; ret
0x00000000000cc234 : cmp eax, 0xfffff001 ; jae 0xcc26f ; ret
0x00000000000cc294 : cmp eax, 0xfffff001 ; jae 0xcc2cf ; ret
0x00000000000ebc75 : cmp eax, 0xfffff001 ; jae 0xebc7f ; mov eax, edx ; ret
0x00000000000ebc98 : cmp eax, 0xfffff001 ; jae 0xebca0 ; ret
0x00000000000ebf28 : cmp eax, 0xfffff001 ; jae 0xebf30 ; ret
0x00000000000ebf58 : cmp eax, 0xfffff001 ; jae 0xebf60 ; ret
0x00000000000ec078 : cmp eax, 0xfffff001 ; jae 0xec080 ; ret
0x00000000000ec0a8 : cmp eax, 0xfffff001 ; jae 0xec0b0 ; ret
0x00000000000ec148 : cmp eax, 0xfffff001 ; jae 0xec150 ; ret
0x00000000000ec1b1 : cmp eax, 0xfffff001 ; jae 0xec1e9 ; ret
0x00000000000ec3a1 : cmp eax, 0xfffff001 ; jae 0xec3d9 ; ret
0x00000000000ec401 : cmp eax, 0xfffff001 ; jae 0xec439 ; ret
0x00000000000ec458 : cmp eax, 0xfffff001 ; jae 0xec460 ; ret
0x00000000000ec9a8 : cmp eax, 0xfffff001 ; jae 0xec9b0 ; ret
0x00000000000ecaf1 : cmp eax, 0xfffff001 ; jae 0xecb29 ; ret
0x00000000000ecb48 : cmp eax, 0xfffff001 ; jae 0xecb50 ; ret
0x00000000000ecb78 : cmp eax, 0xfffff001 ; jae 0xecb80 ; ret
0x00000000000ecba8 : cmp eax, 0xfffff001 ; jae 0xecbb0 ; ret
0x00000000000ecbd8 : cmp eax, 0xfffff001 ; jae 0xecbe0 ; ret
0x00000000000ecc08 : cmp eax, 0xfffff001 ; jae 0xecc10 ; ret
0x00000000000ecc41 : cmp eax, 0xfffff001 ; jae 0xecc79 ; ret
0x00000000000ecc98 : cmp eax, 0xfffff001 ; jae 0xecca0 ; ret
0x00000000000eccc8 : cmp eax, 0xfffff001 ; jae 0xeccd0 ; ret
0x00000000000ed498 : cmp eax, 0xfffff001 ; jae 0xed4a0 ; ret
0x00000000000ed4c8 : cmp eax, 0xfffff001 ; jae 0xed4d0 ; ret
0x00000000000ed4f8 : cmp eax, 0xfffff001 ; jae 0xed500 ; ret
0x00000000000edae8 : cmp eax, 0xfffff001 ; jae 0xedaf0 ; ret
0x00000000000edb48 : cmp eax, 0xfffff001 ; jae 0xedb50 ; ret
0x00000000000edba8 : cmp eax, 0xfffff001 ; jae 0xedbb0 ; ret
0x00000000000edc08 : cmp eax, 0xfffff001 ; jae 0xedc10 ; ret
0x00000000000edc68 : cmp eax, 0xfffff001 ; jae 0xedc70 ; ret
0x00000000000edca1 : cmp eax, 0xfffff001 ; jae 0xedcd9 ; ret
0x00000000000edfbb : cmp eax, 0xfffff001 ; jae 0xedfc3 ; ret
0x00000000000f11b4 : cmp eax, 0xfffff001 ; jae 0xf11ef ; ret
0x00000000000f18e8 : cmp eax, 0xfffff001 ; jae 0xf18f0 ; ret
0x00000000000f1918 : cmp eax, 0xfffff001 ; jae 0xf1920 ; ret
0x00000000000f1948 : cmp eax, 0xfffff001 ; jae 0xf1950 ; ret
0x00000000000f1d08 : cmp eax, 0xfffff001 ; jae 0xf1d10 ; ret
0x00000000000f1ec8 : cmp eax, 0xfffff001 ; jae 0xf1ed0 ; ret
0x00000000000f2838 : cmp eax, 0xfffff001 ; jae 0xf2840 ; ret
0x00000000000f28d8 : cmp eax, 0xfffff001 ; jae 0xf28e0 ; ret
0x00000000000f2914 : cmp eax, 0xfffff001 ; jae 0xf294f ; ret
0x00000000000f2a58 : cmp eax, 0xfffff001 ; jae 0xf2a60 ; ret
0x00000000000f2a88 : cmp eax, 0xfffff001 ; jae 0xf2a90 ; ret
0x00000000000f2ac1 : cmp eax, 0xfffff001 ; jae 0xf2af9 ; ret
0x00000000000f2b18 : cmp eax, 0xfffff001 ; jae 0xf2b20 ; ret
0x00000000000f2b51 : cmp eax, 0xfffff001 ; jae 0xf2b89 ; ret
0x00000000000f2ba8 : cmp eax, 0xfffff001 ; jae 0xf2bb0 ; ret
0x00000000000f2e68 : cmp eax, 0xfffff001 ; jae 0xf2e70 ; ret
0x00000000000f2e98 : cmp eax, 0xfffff001 ; jae 0xf2ea0 ; ret
0x00000000000f2ec8 : cmp eax, 0xfffff001 ; jae 0xf2ed0 ; ret
0x00000000000f3d78 : cmp eax, 0xfffff001 ; jae 0xf3d80 ; ret
0x00000000000f3da8 : cmp eax, 0xfffff001 ; jae 0xf3db0 ; ret
0x00000000000f53ea : cmp eax, 0xfffff001 ; jae 0xf53f2 ; ret
0x00000000000f555b : cmp eax, 0xfffff001 ; jae 0xf5563 ; ret
0x00000000000f5588 : cmp eax, 0xfffff001 ; jae 0xf5590 ; ret
0x00000000000f55b8 : cmp eax, 0xfffff001 ; jae 0xf55c0 ; ret
0x00000000000f55f1 : cmp eax, 0xfffff001 ; jae 0xf5629 ; ret
0x00000000000f5648 : cmp eax, 0xfffff001 ; jae 0xf5650 ; ret
0x00000000000f5678 : cmp eax, 0xfffff001 ; jae 0xf5680 ; ret
0x00000000000f56ab : cmp eax, 0xfffff001 ; jae 0xf56b3 ; ret
0x00000000000f56d8 : cmp eax, 0xfffff001 ; jae 0xf56e0 ; ret
0x00000000000f5708 : cmp eax, 0xfffff001 ; jae 0xf5710 ; ret
0x00000000000f5738 : cmp eax, 0xfffff001 ; jae 0xf5740 ; ret
0x00000000000f5768 : cmp eax, 0xfffff001 ; jae 0xf5770 ; ret
0x00000000000f8ceb : cmp eax, 0xfffff001 ; jae 0xf8cf3 ; ret
0x00000000000f8d18 : cmp eax, 0xfffff001 ; jae 0xf8d20 ; ret
0x00000000000f8d48 : cmp eax, 0xfffff001 ; jae 0xf8d50 ; ret
0x00000000000f8d7b : cmp eax, 0xfffff001 ; jae 0xf8d83 ; ret
0x00000000000f8dab : cmp eax, 0xfffff001 ; jae 0xf8db3 ; ret
0x00000000000f8dd8 : cmp eax, 0xfffff001 ; jae 0xf8de0 ; ret
0x00000000000f8e0b : cmp eax, 0xfffff001 ; jae 0xf8e13 ; ret
0x00000000000f8e38 : cmp eax, 0xfffff001 ; jae 0xf8e40 ; ret
0x00000000000f8e68 : cmp eax, 0xfffff001 ; jae 0xf8e70 ; ret
0x00000000000f8e9b : cmp eax, 0xfffff001 ; jae 0xf8ea3 ; ret
0x00000000000f8ec8 : cmp eax, 0xfffff001 ; jae 0xf8ed0 ; ret
0x00000000000f8efb : cmp eax, 0xfffff001 ; jae 0xf8f03 ; ret
0x00000000000faee8 : cmp eax, 0xfffff001 ; jae 0xfaef0 ; ret
0x00000000000faf18 : cmp eax, 0xfffff001 ; jae 0xfaf20 ; ret
0x00000000000fb041 : cmp eax, 0xfffff001 ; jae 0xfb079 ; ret
0x00000000000fb0a8 : cmp eax, 0xfffff001 ; jae 0xfb0b0 ; ret
0x00000000000fb0d8 : cmp eax, 0xfffff001 ; jae 0xfb0e0 ; ret
0x00000000000fb108 : cmp eax, 0xfffff001 ; jae 0xfb110 ; ret
0x00000000000fb138 : cmp eax, 0xfffff001 ; jae 0xfb140 ; ret
0x00000000000fb3fb : cmp eax, 0xfffff001 ; jae 0xfb403 ; ret
0x00000000000fb428 : cmp eax, 0xfffff001 ; jae 0xfb430 ; ret
0x00000000000fb458 : cmp eax, 0xfffff001 ; jae 0xfb460 ; ret
0x00000000000fb49b : cmp eax, 0xfffff001 ; jae 0xfb4a3 ; ret
0x00000000000fb4c8 : cmp eax, 0xfffff001 ; jae 0xfb4d0 ; ret
0x00000000000fb4f8 : cmp eax, 0xfffff001 ; jae 0xfb500 ; ret
0x00000000000fb528 : cmp eax, 0xfffff001 ; jae 0xfb530 ; ret
0x00000000000fb558 : cmp eax, 0xfffff001 ; jae 0xfb560 ; ret
0x00000000000fb588 : cmp eax, 0xfffff001 ; jae 0xfb590 ; ret
0x00000000000fb5b8 : cmp eax, 0xfffff001 ; jae 0xfb5c0 ; ret
0x00000000000fb5e8 : cmp eax, 0xfffff001 ; jae 0xfb5f0 ; ret
0x00000000000fb618 : cmp eax, 0xfffff001 ; jae 0xfb620 ; ret
0x00000000000fb64b : cmp eax, 0xfffff001 ; jae 0xfb653 ; ret
0x00000000000fb684 : cmp eax, 0xfffff001 ; jae 0xfb6bf ; ret
0x00000000000fb6d8 : cmp eax, 0xfffff001 ; jae 0xfb6e0 ; ret
0x00000000000fb70b : cmp eax, 0xfffff001 ; jae 0xfb713 ; ret
0x00000000000fb738 : cmp eax, 0xfffff001 ; jae 0xfb740 ; ret
0x00000000000fb768 : cmp eax, 0xfffff001 ; jae 0xfb770 ; ret
0x00000000000fb798 : cmp eax, 0xfffff001 ; jae 0xfb7a0 ; ret
0x00000000000fb7c8 : cmp eax, 0xfffff001 ; jae 0xfb7d0 ; ret
0x00000000000fb7f8 : cmp eax, 0xfffff001 ; jae 0xfb800 ; ret
0x00000000000fb82b : cmp eax, 0xfffff001 ; jae 0xfb833 ; ret
0x00000000000fb85b : cmp eax, 0xfffff001 ; jae 0xfb863 ; ret
0x00000000000fb888 : cmp eax, 0xfffff001 ; jae 0xfb890 ; ret
0x00000000000fb8b8 : cmp eax, 0xfffff001 ; jae 0xfb8c0 ; ret
0x00000000000fb8e8 : cmp eax, 0xfffff001 ; jae 0xfb8f0 ; ret
0x00000000000fb91b : cmp eax, 0xfffff001 ; jae 0xfb923 ; ret
0x00000000000fb94b : cmp eax, 0xfffff001 ; jae 0xfb953 ; ret
0x00000000000fb97b : cmp eax, 0xfffff001 ; jae 0xfb983 ; ret
0x00000000000fb9b4 : cmp eax, 0xfffff001 ; jae 0xfb9ef ; ret
0x00000000000fba08 : cmp eax, 0xfffff001 ; jae 0xfba10 ; ret
0x00000000000fba44 : cmp eax, 0xfffff001 ; jae 0xfba7f ; ret
0x00000000000fba98 : cmp eax, 0xfffff001 ; jae 0xfbaa0 ; ret
0x00000000000fbac8 : cmp eax, 0xfffff001 ; jae 0xfbad0 ; ret
0x00000000000fbb04 : cmp eax, 0xfffff001 ; jae 0xfbb3f ; ret
0x00000000000fbb58 : cmp eax, 0xfffff001 ; jae 0xfbb60 ; ret
0x00000000000fbb8b : cmp eax, 0xfffff001 ; jae 0xfbb93 ; ret
0x00000000000fbbb8 : cmp eax, 0xfffff001 ; jae 0xfbbc0 ; ret
0x00000000000fbbe8 : cmp eax, 0xfffff001 ; jae 0xfbbf0 ; ret
0x00000000000fbc1b : cmp eax, 0xfffff001 ; jae 0xfbc23 ; ret
0x00000000000fbc51 : cmp eax, 0xfffff001 ; jae 0xfbc89 ; ret
0x00000000000fbca8 : cmp eax, 0xfffff001 ; jae 0xfbcb0 ; ret
0x00000000000fbcdb : cmp eax, 0xfffff001 ; jae 0xfbce3 ; ret
0x00000000000fbd0b : cmp eax, 0xfffff001 ; jae 0xfbd13 ; ret
0x00000000000fbd61 : cmp eax, 0xfffff001 ; jae 0xfbd99 ; ret
0x00000000000fbdb8 : cmp eax, 0xfffff001 ; jae 0xfbdc0 ; ret
0x00000000000fbdf1 : cmp eax, 0xfffff001 ; jae 0xfbe29 ; ret
0x00000000000fbe48 : cmp eax, 0xfffff001 ; jae 0xfbe50 ; ret
0x00000000000fbe78 : cmp eax, 0xfffff001 ; jae 0xfbe80 ; ret
0x00000000000fbeab : cmp eax, 0xfffff001 ; jae 0xfbeb3 ; ret
0x00000000000fbed8 : cmp eax, 0xfffff001 ; jae 0xfbee0 ; ret
0x00000000000fbfc4 : cmp eax, 0xfffff001 ; jae 0xfbfff ; ret
0x00000000000fc021 : cmp eax, 0xfffff001 ; jae 0xfc059 ; ret
0x00000000000fc131 : cmp eax, 0xfffff001 ; jae 0xfc169 ; ret
0x00000000000fc194 : cmp eax, 0xfffff001 ; jae 0xfc1cf ; ret
0x00000000000fc1eb : cmp eax, 0xfffff001 ; jae 0xfc1f3 ; ret
0x00000000000fc218 : cmp eax, 0xfffff001 ; jae 0xfc220 ; ret
0x00000000000fc248 : cmp eax, 0xfffff001 ; jae 0xfc250 ; ret
0x00000000000fc27b : cmp eax, 0xfffff001 ; jae 0xfc283 ; ret
0x00000000000fc904 : cmp eax, 0xfffff001 ; jae 0xfc93f ; ret
0x00000000000fc964 : cmp eax, 0xfffff001 ; jae 0xfc99f ; ret
0x00000000000fc9b8 : cmp eax, 0xfffff001 ; jae 0xfc9c0 ; ret
0x00000000000fc9e8 : cmp eax, 0xfffff001 ; jae 0xfc9f0 ; ret
0x00000000000fca18 : cmp eax, 0xfffff001 ; jae 0xfca20 ; ret
0x00000000000fca48 : cmp eax, 0xfffff001 ; jae 0xfca50 ; ret
0x00000000000fca7b : cmp eax, 0xfffff001 ; jae 0xfca83 ; ret
0x00000000000fcaab : cmp eax, 0xfffff001 ; jae 0xfcab3 ; ret
0x00000000000fcad8 : cmp eax, 0xfffff001 ; jae 0xfcae0 ; ret
0x00000000000fcb08 : cmp eax, 0xfffff001 ; jae 0xfcb10 ; ret
0x00000000000fcb38 : cmp eax, 0xfffff001 ; jae 0xfcb40 ; ret
0x00000000000fcb68 : cmp eax, 0xfffff001 ; jae 0xfcb70 ; ret
0x000000000010b9af : cmp eax, 0xfffffe8c ; call rax
0x0000000000094d4a : cmp eax, 1 ; ja 0x94d28 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012dce1 : cmp eax, 2 ; sete al ; movzx eax, al ; ret
0x00000000000d567e : cmp eax, 3 ; je 0xd5690 ; xor eax, eax ; pop rbx ; ret
0x0000000000108d8a : cmp eax, 4 ; je 0x108d90 ; ret
0x00000000000c5464 : cmp eax, dword ptr [rax + 0xffffffff940f7bfa] ; ret -0x49f1
0x00000000000717ce : cmp eax, dword ptr [rdx + 0x4c] ; cmovne eax, ecx ; ret
0x000000000018d5e5 : cmp eax, dword ptr [rdx] ; add byte ptr [rcx + 0x23], al ; clc ; call rsp
0x00000000000a377e : cmp eax, dword ptr [rsi + 0x10] ; jne 0xa3870 ; ret
0x00000000000a3793 : cmp eax, dword ptr [rsi + 0x14] ; jne 0xa3870 ; ret
0x00000000000a37a8 : cmp eax, dword ptr [rsi + 0x18] ; jne 0xa3870 ; ret
0x00000000000a37c3 : cmp eax, dword ptr [rsi + 0x1c] ; jne 0xa3870 ; ret
0x00000000000a37de : cmp eax, dword ptr [rsi + 0x20] ; jne 0xa3870 ; ret
0x00000000000a37f3 : cmp eax, dword ptr [rsi + 0x24] ; jne 0xa3870 ; ret
0x00000000000a3808 : cmp eax, dword ptr [rsi + 0x28] ; jne 0xa3870 ; ret
0x00000000000a3813 : cmp eax, dword ptr [rsi + 0x2c] ; jne 0xa3870 ; ret
0x00000000000a382e : cmp eax, dword ptr [rsi + 0x30] ; jne 0xa3870 ; ret
0x00000000000a3843 : cmp eax, dword ptr [rsi + 0x34] ; jne 0xa3870 ; ret
0x00000000000a3858 : cmp eax, dword ptr [rsi + 0x38] ; jne 0xa3870 ; ret
0x00000000000a3863 : cmp eax, dword ptr [rsi + 0x3c] ; jne 0xa3870 ; ret
0x00000000000a3763 : cmp eax, dword ptr [rsi + 0xc] ; jne 0xa3870 ; ret
0x0000000000164fba : cmp eax, dword ptr [rsi + 0xfffffffffffffff0] ; jne 0x1650f0 ; ret
0x0000000000164fd3 : cmp eax, dword ptr [rsi + 0xfffffffffffffff4] ; jne 0x1650f0 ; ret
0x0000000000164fe8 : cmp eax, dword ptr [rsi + 0xfffffffffffffff8] ; jne 0x1650f0 ; ret
0x0000000000165003 : cmp eax, dword ptr [rsi + 0xfffffffffffffffc] ; jne 0x1650f0 ; ret
0x00000000001650e3 : cmp eax, dword ptr [rsi + 0xfffffffffffffffc] ; jne 0x1650f0 ; xor eax, eax ; ret
0x00000000000a3733 : cmp eax, dword ptr [rsi + 4] ; jne 0xa3870 ; ret
0x00000000000a3748 : cmp eax, dword ptr [rsi + 8] ; jne 0xa3870 ; ret
0x00000000000a371d : cmp eax, dword ptr [rsi] ; jne 0xa3870 ; ret
0x000000000004710b : cmp eax, ebx ; jne 0x47100 ; pop rbx ; ret
0x000000000007d869 : cmp eax, ecx ; jae 0x7d890 ; movzx eax, byte ptr [rax] ; ret
0x0000000000003a9f : cmp eax, ecx ; mov bl, -9 ; adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000164ad3 : cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x000000000012b8f1 : cmp eax, edx ; je 0x12b900 ; add rsp, 8 ; ret
0x000000000003827d : cmp eax, edx ; jne 0x38270 ; xor eax, eax ; ret
0x000000000003835d : cmp eax, edx ; jne 0x38350 ; xor eax, eax ; ret
0x000000000009779f : cmp eax, esi ; jne 0x97790 ; mov rax, rdi ; ret
0x00000000000b3861 : cmp ebp, dword ptr [rax] ; or eax, 0x440f4800 ; ret -0x72b8
0x00000000001228e5 : cmp ebp, eax ; xchg r13d, r15d ; dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x48
0x0000000000193f95 : cmp ebp, ebx ; jmp qword ptr [rdx]
0x00000000001a9201 : cmp ebp, esi ; jmp qword ptr [rcx]
0x000000000019c245 : cmp ebp, esi ; jmp qword ptr [rdx]
0x00000000001a9249 : cmp ebp, esi ; jmp rbx
0x0000000000108d26 : cmp ebx, 0xa ; je 0x108d2c ; ret
0x0000000000106443 : cmp ebx, dword ptr [rbx + 0xffffffff89480007] ; ret -0x76b4
0x000000000016610c : cmp ebx, ebp ; jae 0x16611b ; call qword ptr [rbx]
0x00000000000cc3ec : cmp ebx, esi ; ja 0xcc380 ; pop rbx ; pop rbp ; ret
0x0000000000047333 : cmp ecx, 0x2f ; jmp r8
0x0000000000093baf : cmp ecx, 0xd ; je 0x93bc0 ; xor byte ptr [rdx + 0xe], 0x2a ; ret
0x00000000000a7046 : cmp ecx, dword ptr [rax + 0xffffffffffffff83] ; ret
0x00000000000f8c64 : cmp ecx, dword ptr [rax + 0xffffffffffffff89] ; ret
0x00000000001621cb : cmp ecx, eax ; jne 0x1621f3 ; xor eax, eax ; ret
0x000000000016300b : cmp ecx, eax ; jne 0x163033 ; xor eax, eax ; ret
0x000000000016303f : cmp ecx, eax ; jne 0x163046 ; xor eax, eax ; ret
0x00000000001187e5 : cmp ecx, eax ; sbb eax, eax ; ret
0x00000000000d929b : cmp ecx, edx ; call 0x42d01be3
0x00000000000a3d67 : cmp ecx, edx ; jne 0xa3d50 ; sub eax, r8d ; nop ; ret
0x000000000007ca8a : cmp ecx, esi ; jne 0x7ca80 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000166348 : cmp edi, 1 ; ja 0x166350 ; ret
0x00000000000fe5b5 : cmp edi, 9 ; setbe al ; ret
0x00000000001b0554 : cmp edi, ebp ; cmc ; jmp qword ptr [rdx]
0x000000000002d13c : cmp edi, ebp ; je 0x2d156 ; call 0x893b0
0x0000000000070825 : cmp edi, ebx ; je 0x7082e ; call 0xecae9
0x000000000004f2b5 : cmp edi, ecx ; ja 0x4f298 ; mov eax, r8d ; ret
0x00000000001188db : cmp edi, edx ; jne 0x1188b0 ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x00000000000f8f55 : cmp edi, edx ; jne 0xf8f48 ; mov rax, qword ptr [rax + 8] ; ret
0x000000000018805d : cmp edi, esp ; call rax
0x000000000010945e : cmp edx, -0x16 ; cmovne eax, ecx ; ret
0x00000000000c15e0 : cmp edx, -1 ; cmovne rax, rdx ; ret
0x000000000006f821 : cmp edx, -1 ; je 0x6f830 ; mov rax, rdx ; pop rbx ; ret
0x00000000000736b1 : cmp edx, -1 ; je 0x736c0 ; mov rax, rdx ; pop rbx ; ret
0x000000000010d1ff : cmp edx, 0x80000000 ; cmovne eax, edi ; ret
0x00000000000c6d95 : cmp edx, 1 ; sete al ; ret
0x00000000000fc887 : cmp edx, ecx ; cmovae rax, rsi ; ret
0x00000000001086da : cmp edx, edi ; setae al ; ret
0x0000000000118b26 : cmp edx, esi ; jb 0x118b14 ; mov eax, 0xffffffff ; ret
0x000000000003ca89 : cmp esi, -1 ; cmovne rax, rbx ; pop rbx ; ret
0x00000000000bac40 : cmp esi, 1 ; je 0xbac50 ; xor eax, eax ; ret
0x0000000000194ffc : cmp esi, dword ptr [rdi + 0xffffffffffffffec] ; jmp qword ptr [rdx]
0x000000000012289a : cmp esi, dword ptr [rdx + 0x28] ; ja 0x122888 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000018bf59 : cmp esi, ebp ; call rsp
0x000000000019c125 : cmp esi, ebp ; jmp qword ptr [rdx]
0x0000000000176da4 : cmp esi, ebp ; xlatb ; ret 0x4e27
0x000000000001f6a8 : cmp esi, ecx ; cmovge eax, edx ; jmp 0x1f67a
0x0000000000075d7a : cmp esi, ecx ; jb 0x75d70 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000922ac : cmp esi, ecx ; jne 0x92298 ; xor eax, eax ; ret
0x00000000000498a2 : cmp esi, edi ; mov rax, rdi ; cmovae rax, rsi ; ret
0x0000000000118b9e : cmp esi, edx ; ja 0x118b84 ; mov eax, 0xffffffff ; ret
0x00000000001b1e75 : cmp esi, esi ; jmp qword ptr [rdx]
0x00000000001247bc : cmp esp, -1 ; jmp 0x124784
0x00000000000d542f : cmp esp, -1 ; push rdi ; ret 0
0x0000000000188519 : cmp esp, 0xfc8090ff ; call qword ptr [rax]
0x00000000001884d9 : cmp esp, 0xfc80a0ff ; jmp qword ptr [rax]
0x0000000000188395 : cmp esp, 0xfc8162ff ; call rdx
0x000000000018e680 : cmp esp, dword ptr [rcx] ; cli ; call rsp
0x000000000002c0e4 : cmp qword ptr [r8], rax ; ret
0x00000000000e58ad : cmp qword ptr [rcx + 0xfffffffffffffff8], 0 ; je 0xe58b8 ; mov edx, eax ; jmp 0xe58a6
0x0000000000103180 : cmp qword ptr [rdi + 0x10], 0 ; je 0x103190 ; xor eax, eax ; ret
0x00000000001107a0 : cmp qword ptr [rip + 0x2b0218], 0 ; jne 0x11076c ; jmp 0x110764
0x00000000000f57df : cmp qword ptr [rsi], 0 ; je 0xf57e7 ; pop rbx ; ret
0x0000000000092afa : cmp r11b, r14b ; ret
0x0000000000108d25 : cmp r11d, 0xa ; je 0x108d2c ; ret
0x00000000000ef044 : cmp r14b, r14b ; ret
0x0000000000098044 : cmp r8b, 0x3d ; jne 0x98059 ; mov rax, rdi ; ret
0x00000000000fb2aa : cmp r8d, -1 ; je 0xfb2b8 ; pop rbx ; pop rbp ; ret
0x0000000000037026 : cmp rax, -0x1000 ; ja 0x3702f ; ret
0x00000000000bec11 : cmp rax, -0x1000 ; ja 0xbec1a ; ret
0x00000000000c1642 : cmp rax, -0x1000 ; ja 0xc164b ; ret
0x00000000000c16dc : cmp rax, -0x1000 ; ja 0xc16e5 ; ret
0x00000000000c17cb : cmp rax, -0x1000 ; ja 0xc17d4 ; ret
0x00000000000c2a73 : cmp rax, -0x1000 ; ja 0xc2a7c ; ret
0x00000000000c2ad3 : cmp rax, -0x1000 ; ja 0xc2adc ; ret
0x00000000000c2d27 : cmp rax, -0x1000 ; ja 0xc2d30 ; ret
0x00000000000c2d97 : cmp rax, -0x1000 ; ja 0xc2da0 ; ret
0x00000000000f121a : cmp rax, -0x1000 ; ja 0xf1223 ; ret
0x00000000000f1730 : cmp rax, -0x1000 ; ja 0xf1739 ; ret
0x00000000000f1f07 : cmp rax, -0x1000 ; ja 0xf1f10 ; ret
0x00000000000f1fa7 : cmp rax, -0x1000 ; ja 0xf1fb0 ; ret
0x00000000000f2525 : cmp rax, -0x1000 ; ja 0xf252e ; ret
0x00000000000f2595 : cmp rax, -0x1000 ; ja 0xf259e ; ret
0x00000000000f2612 : cmp rax, -0x1000 ; ja 0xf261b ; ret
0x00000000000f26b2 : cmp rax, -0x1000 ; ja 0xf26bb ; ret
0x00000000000fb1e0 : cmp rax, -0x1000 ; ja 0xfb1e9 ; ret
0x00000000000fbf1d : cmp rax, -0x1000 ; ja 0xfbf26 ; ret
0x00000000000fc08d : cmp rax, -0x1000 ; ja 0xfc096 ; ret
0x00000000000fc657 : cmp rax, -0x1000 ; ja 0xfc660 ; ret
0x00000000000fc6f9 : cmp rax, -0x1000 ; ja 0xfc702 ; ret
0x00000000000fc7a9 : cmp rax, -0x1000 ; ja 0xfc7b2 ; ret
0x0000000000133a1a : cmp rax, -0xfff ; jae 0x133a23 ; ret
0x0000000000133a6a : cmp rax, -0xfff ; jae 0x133a73 ; ret
0x0000000000036fb7 : cmp rax, -0xfff ; jae 0x36fc0 ; ret
0x0000000000037577 : cmp rax, -0xfff ; jae 0x37580 ; ret
0x000000000005e227 : cmp rax, -0xfff ; jae 0x5e230 ; ret
0x00000000000b20b7 : cmp rax, -0xfff ; jae 0xb20c0 ; ret
0x00000000000b4f07 : cmp rax, -0xfff ; jae 0xb4f10 ; ret
0x00000000000b4f37 : cmp rax, -0xfff ; jae 0xb4f40 ; ret
0x00000000000c1597 : cmp rax, -0xfff ; jae 0xc15a0 ; ret
0x00000000000c178a : cmp rax, -0xfff ; jae 0xc1793 ; ret
0x00000000000c1867 : cmp rax, -0xfff ; jae 0xc1870 ; ret
0x00000000000c1a50 : cmp rax, -0xfff ; jae 0xc1a89 ; ret
0x00000000000c1ab0 : cmp rax, -0xfff ; jae 0xc1ae9 ; ret
0x00000000000c2a37 : cmp rax, -0xfff ; jae 0xc2a40 ; ret
0x00000000000c2bc7 : cmp rax, -0xfff ; jae 0xc2bd0 ; ret
0x00000000000c2bf7 : cmp rax, -0xfff ; jae 0xc2c00 ; ret
0x00000000000c2c57 : cmp rax, -0xfff ; jae 0xc2c60 ; ret
0x00000000000c2c87 : cmp rax, -0xfff ; jae 0xc2c90 ; ret
0x00000000000c2cb7 : cmp rax, -0xfff ; jae 0xc2cc0 ; ret
0x00000000000c2ce7 : cmp rax, -0xfff ; jae 0xc2cf0 ; ret
0x00000000000cbec7 : cmp rax, -0xfff ; jae 0xcbed0 ; ret
0x00000000000cbef7 : cmp rax, -0xfff ; jae 0xcbf00 ; ret
0x00000000000cbf27 : cmp rax, -0xfff ; jae 0xcbf30 ; ret
0x00000000000cbf57 : cmp rax, -0xfff ; jae 0xcbf60 ; ret
0x00000000000cbf87 : cmp rax, -0xfff ; jae 0xcbf90 ; ret
0x00000000000cbfb7 : cmp rax, -0xfff ; jae 0xcbfc0 ; ret
0x00000000000cbfe7 : cmp rax, -0xfff ; jae 0xcbff0 ; ret
0x00000000000cc017 : cmp rax, -0xfff ; jae 0xcc020 ; ret
0x00000000000cc233 : cmp rax, -0xfff ; jae 0xcc26f ; ret
0x00000000000cc293 : cmp rax, -0xfff ; jae 0xcc2cf ; ret
0x00000000000ebc97 : cmp rax, -0xfff ; jae 0xebca0 ; ret
0x00000000000ebf27 : cmp rax, -0xfff ; jae 0xebf30 ; ret
0x00000000000ebf57 : cmp rax, -0xfff ; jae 0xebf60 ; ret
0x00000000000ec077 : cmp rax, -0xfff ; jae 0xec080 ; ret
0x00000000000ec0a7 : cmp rax, -0xfff ; jae 0xec0b0 ; ret
0x00000000000ec147 : cmp rax, -0xfff ; jae 0xec150 ; ret
0x00000000000ec1b0 : cmp rax, -0xfff ; jae 0xec1e9 ; ret
0x00000000000ec3a0 : cmp rax, -0xfff ; jae 0xec3d9 ; ret
0x00000000000ec400 : cmp rax, -0xfff ; jae 0xec439 ; ret
0x00000000000ec457 : cmp rax, -0xfff ; jae 0xec460 ; ret
0x00000000000ec9a7 : cmp rax, -0xfff ; jae 0xec9b0 ; ret
0x00000000000ecaf0 : cmp rax, -0xfff ; jae 0xecb29 ; ret
0x00000000000ecb47 : cmp rax, -0xfff ; jae 0xecb50 ; ret
0x00000000000ecb77 : cmp rax, -0xfff ; jae 0xecb80 ; ret
0x00000000000ecba7 : cmp rax, -0xfff ; jae 0xecbb0 ; ret
0x00000000000ecbd7 : cmp rax, -0xfff ; jae 0xecbe0 ; ret
0x00000000000ecc07 : cmp rax, -0xfff ; jae 0xecc10 ; ret
0x00000000000ecc40 : cmp rax, -0xfff ; jae 0xecc79 ; ret
0x00000000000ecc97 : cmp rax, -0xfff ; jae 0xecca0 ; ret
0x00000000000eccc7 : cmp rax, -0xfff ; jae 0xeccd0 ; ret
0x00000000000ed497 : cmp rax, -0xfff ; jae 0xed4a0 ; ret
0x00000000000ed4c7 : cmp rax, -0xfff ; jae 0xed4d0 ; ret
0x00000000000ed4f7 : cmp rax, -0xfff ; jae 0xed500 ; ret
0x00000000000edae7 : cmp rax, -0xfff ; jae 0xedaf0 ; ret
0x00000000000edb47 : cmp rax, -0xfff ; jae 0xedb50 ; ret
0x00000000000edba7 : cmp rax, -0xfff ; jae 0xedbb0 ; ret
0x00000000000edc07 : cmp rax, -0xfff ; jae 0xedc10 ; ret
0x00000000000edc67 : cmp rax, -0xfff ; jae 0xedc70 ; ret
0x00000000000edca0 : cmp rax, -0xfff ; jae 0xedcd9 ; ret
0x00000000000edfba : cmp rax, -0xfff ; jae 0xedfc3 ; ret
0x00000000000f11b3 : cmp rax, -0xfff ; jae 0xf11ef ; ret
0x00000000000f18e7 : cmp rax, -0xfff ; jae 0xf18f0 ; ret
0x00000000000f1917 : cmp rax, -0xfff ; jae 0xf1920 ; ret
0x00000000000f1947 : cmp rax, -0xfff ; jae 0xf1950 ; ret
0x00000000000f1d07 : cmp rax, -0xfff ; jae 0xf1d10 ; ret
0x00000000000f1ec7 : cmp rax, -0xfff ; jae 0xf1ed0 ; ret
0x00000000000f2837 : cmp rax, -0xfff ; jae 0xf2840 ; ret
0x00000000000f28d7 : cmp rax, -0xfff ; jae 0xf28e0 ; ret
0x00000000000f2913 : cmp rax, -0xfff ; jae 0xf294f ; ret
0x00000000000f2a57 : cmp rax, -0xfff ; jae 0xf2a60 ; ret
0x00000000000f2a87 : cmp rax, -0xfff ; jae 0xf2a90 ; ret
0x00000000000f2ac0 : cmp rax, -0xfff ; jae 0xf2af9 ; ret
0x00000000000f2b17 : cmp rax, -0xfff ; jae 0xf2b20 ; ret
0x00000000000f2b50 : cmp rax, -0xfff ; jae 0xf2b89 ; ret
0x00000000000f2ba7 : cmp rax, -0xfff ; jae 0xf2bb0 ; ret
0x00000000000f2e67 : cmp rax, -0xfff ; jae 0xf2e70 ; ret
0x00000000000f2e97 : cmp rax, -0xfff ; jae 0xf2ea0 ; ret
0x00000000000f2ec7 : cmp rax, -0xfff ; jae 0xf2ed0 ; ret
0x00000000000f3d77 : cmp rax, -0xfff ; jae 0xf3d80 ; ret
0x00000000000f3da7 : cmp rax, -0xfff ; jae 0xf3db0 ; ret
0x00000000000f53e9 : cmp rax, -0xfff ; jae 0xf53f2 ; ret
0x00000000000f555a : cmp rax, -0xfff ; jae 0xf5563 ; ret
0x00000000000f5587 : cmp rax, -0xfff ; jae 0xf5590 ; ret
0x00000000000f55b7 : cmp rax, -0xfff ; jae 0xf55c0 ; ret
0x00000000000f55f0 : cmp rax, -0xfff ; jae 0xf5629 ; ret
0x00000000000f5647 : cmp rax, -0xfff ; jae 0xf5650 ; ret
0x00000000000f5677 : cmp rax, -0xfff ; jae 0xf5680 ; ret
0x00000000000f56aa : cmp rax, -0xfff ; jae 0xf56b3 ; ret
0x00000000000f56d7 : cmp rax, -0xfff ; jae 0xf56e0 ; ret
0x00000000000f5707 : cmp rax, -0xfff ; jae 0xf5710 ; ret
0x00000000000f5737 : cmp rax, -0xfff ; jae 0xf5740 ; ret
0x00000000000f5767 : cmp rax, -0xfff ; jae 0xf5770 ; ret
0x00000000000f8cea : cmp rax, -0xfff ; jae 0xf8cf3 ; ret
0x00000000000f8d17 : cmp rax, -0xfff ; jae 0xf8d20 ; ret
0x00000000000f8d47 : cmp rax, -0xfff ; jae 0xf8d50 ; ret
0x00000000000f8d7a : cmp rax, -0xfff ; jae 0xf8d83 ; ret
0x00000000000f8daa : cmp rax, -0xfff ; jae 0xf8db3 ; ret
0x00000000000f8dd7 : cmp rax, -0xfff ; jae 0xf8de0 ; ret
0x00000000000f8e0a : cmp rax, -0xfff ; jae 0xf8e13 ; ret
0x00000000000f8e37 : cmp rax, -0xfff ; jae 0xf8e40 ; ret
0x00000000000f8e67 : cmp rax, -0xfff ; jae 0xf8e70 ; ret
0x00000000000f8e9a : cmp rax, -0xfff ; jae 0xf8ea3 ; ret
0x00000000000f8ec7 : cmp rax, -0xfff ; jae 0xf8ed0 ; ret
0x00000000000f8efa : cmp rax, -0xfff ; jae 0xf8f03 ; ret
0x00000000000faee7 : cmp rax, -0xfff ; jae 0xfaef0 ; ret
0x00000000000faf17 : cmp rax, -0xfff ; jae 0xfaf20 ; ret
0x00000000000fb040 : cmp rax, -0xfff ; jae 0xfb079 ; ret
0x00000000000fb0a7 : cmp rax, -0xfff ; jae 0xfb0b0 ; ret
0x00000000000fb0d7 : cmp rax, -0xfff ; jae 0xfb0e0 ; ret
0x00000000000fb107 : cmp rax, -0xfff ; jae 0xfb110 ; ret
0x00000000000fb137 : cmp rax, -0xfff ; jae 0xfb140 ; ret
0x00000000000fb3fa : cmp rax, -0xfff ; jae 0xfb403 ; ret
0x00000000000fb427 : cmp rax, -0xfff ; jae 0xfb430 ; ret
0x00000000000fb457 : cmp rax, -0xfff ; jae 0xfb460 ; ret
0x00000000000fb49a : cmp rax, -0xfff ; jae 0xfb4a3 ; ret
0x00000000000fb4c7 : cmp rax, -0xfff ; jae 0xfb4d0 ; ret
0x00000000000fb4f7 : cmp rax, -0xfff ; jae 0xfb500 ; ret
0x00000000000fb527 : cmp rax, -0xfff ; jae 0xfb530 ; ret
0x00000000000fb557 : cmp rax, -0xfff ; jae 0xfb560 ; ret
0x00000000000fb587 : cmp rax, -0xfff ; jae 0xfb590 ; ret
0x00000000000fb5b7 : cmp rax, -0xfff ; jae 0xfb5c0 ; ret
0x00000000000fb5e7 : cmp rax, -0xfff ; jae 0xfb5f0 ; ret
0x00000000000fb617 : cmp rax, -0xfff ; jae 0xfb620 ; ret
0x00000000000fb64a : cmp rax, -0xfff ; jae 0xfb653 ; ret
0x00000000000fb683 : cmp rax, -0xfff ; jae 0xfb6bf ; ret
0x00000000000fb6d7 : cmp rax, -0xfff ; jae 0xfb6e0 ; ret
0x00000000000fb70a : cmp rax, -0xfff ; jae 0xfb713 ; ret
0x00000000000fb737 : cmp rax, -0xfff ; jae 0xfb740 ; ret
0x00000000000fb767 : cmp rax, -0xfff ; jae 0xfb770 ; ret
0x00000000000fb797 : cmp rax, -0xfff ; jae 0xfb7a0 ; ret
0x00000000000fb7c7 : cmp rax, -0xfff ; jae 0xfb7d0 ; ret
0x00000000000fb7f7 : cmp rax, -0xfff ; jae 0xfb800 ; ret
0x00000000000fb82a : cmp rax, -0xfff ; jae 0xfb833 ; ret
0x00000000000fb85a : cmp rax, -0xfff ; jae 0xfb863 ; ret
0x00000000000fb887 : cmp rax, -0xfff ; jae 0xfb890 ; ret
0x00000000000fb8b7 : cmp rax, -0xfff ; jae 0xfb8c0 ; ret
0x00000000000fb8e7 : cmp rax, -0xfff ; jae 0xfb8f0 ; ret
0x00000000000fb91a : cmp rax, -0xfff ; jae 0xfb923 ; ret
0x00000000000fb94a : cmp rax, -0xfff ; jae 0xfb953 ; ret
0x00000000000fb97a : cmp rax, -0xfff ; jae 0xfb983 ; ret
0x00000000000fb9b3 : cmp rax, -0xfff ; jae 0xfb9ef ; ret
0x00000000000fba07 : cmp rax, -0xfff ; jae 0xfba10 ; ret
0x00000000000fba43 : cmp rax, -0xfff ; jae 0xfba7f ; ret
0x00000000000fba97 : cmp rax, -0xfff ; jae 0xfbaa0 ; ret
0x00000000000fbac7 : cmp rax, -0xfff ; jae 0xfbad0 ; ret
0x00000000000fbb03 : cmp rax, -0xfff ; jae 0xfbb3f ; ret
0x00000000000fbb57 : cmp rax, -0xfff ; jae 0xfbb60 ; ret
0x00000000000fbb8a : cmp rax, -0xfff ; jae 0xfbb93 ; ret
0x00000000000fbbb7 : cmp rax, -0xfff ; jae 0xfbbc0 ; ret
0x00000000000fbbe7 : cmp rax, -0xfff ; jae 0xfbbf0 ; ret
0x00000000000fbc1a : cmp rax, -0xfff ; jae 0xfbc23 ; ret
0x00000000000fbc50 : cmp rax, -0xfff ; jae 0xfbc89 ; ret
0x00000000000fbca7 : cmp rax, -0xfff ; jae 0xfbcb0 ; ret
0x00000000000fbcda : cmp rax, -0xfff ; jae 0xfbce3 ; ret
0x00000000000fbd0a : cmp rax, -0xfff ; jae 0xfbd13 ; ret
0x00000000000fbd60 : cmp rax, -0xfff ; jae 0xfbd99 ; ret
0x00000000000fbdb7 : cmp rax, -0xfff ; jae 0xfbdc0 ; ret
0x00000000000fbdf0 : cmp rax, -0xfff ; jae 0xfbe29 ; ret
0x00000000000fbe47 : cmp rax, -0xfff ; jae 0xfbe50 ; ret
0x00000000000fbe77 : cmp rax, -0xfff ; jae 0xfbe80 ; ret
0x00000000000fbeaa : cmp rax, -0xfff ; jae 0xfbeb3 ; ret
0x00000000000fbed7 : cmp rax, -0xfff ; jae 0xfbee0 ; ret
0x00000000000fbfc3 : cmp rax, -0xfff ; jae 0xfbfff ; ret
0x00000000000fc020 : cmp rax, -0xfff ; jae 0xfc059 ; ret
0x00000000000fc130 : cmp rax, -0xfff ; jae 0xfc169 ; ret
0x00000000000fc193 : cmp rax, -0xfff ; jae 0xfc1cf ; ret
0x00000000000fc1ea : cmp rax, -0xfff ; jae 0xfc1f3 ; ret
0x00000000000fc217 : cmp rax, -0xfff ; jae 0xfc220 ; ret
0x00000000000fc247 : cmp rax, -0xfff ; jae 0xfc250 ; ret
0x00000000000fc27a : cmp rax, -0xfff ; jae 0xfc283 ; ret
0x00000000000fc903 : cmp rax, -0xfff ; jae 0xfc93f ; ret
0x00000000000fc963 : cmp rax, -0xfff ; jae 0xfc99f ; ret
0x00000000000fc9b7 : cmp rax, -0xfff ; jae 0xfc9c0 ; ret
0x00000000000fc9e7 : cmp rax, -0xfff ; jae 0xfc9f0 ; ret
0x00000000000fca17 : cmp rax, -0xfff ; jae 0xfca20 ; ret
0x00000000000fca47 : cmp rax, -0xfff ; jae 0xfca50 ; ret
0x00000000000fca7a : cmp rax, -0xfff ; jae 0xfca83 ; ret
0x00000000000fcaaa : cmp rax, -0xfff ; jae 0xfcab3 ; ret
0x00000000000fcad7 : cmp rax, -0xfff ; jae 0xfcae0 ; ret
0x00000000000fcb07 : cmp rax, -0xfff ; jae 0xfcb10 ; ret
0x00000000000fcb37 : cmp rax, -0xfff ; jae 0xfcb40 ; ret
0x00000000000fcb67 : cmp rax, -0xfff ; jae 0xfcb70 ; ret
0x00000000000717cd : cmp rax, qword ptr [rdx + 0x4c] ; cmovne eax, ecx ; ret
0x000000000004710a : cmp rax, rbx ; jne 0x47100 ; pop rbx ; ret
0x000000000007d868 : cmp rax, rcx ; jae 0x7d890 ; movzx eax, byte ptr [rax] ; ret
0x000000000012b8f0 : cmp rax, rdx ; je 0x12b900 ; add rsp, 8 ; ret
0x000000000003827c : cmp rax, rdx ; jne 0x38270 ; xor eax, eax ; ret
0x000000000003835c : cmp rax, rdx ; jne 0x38350 ; xor eax, eax ; ret
0x0000000000193f94 : cmp rbp, rbx ; jmp qword ptr [rdx]
0x00000000001a9248 : cmp rbp, rsi ; jmp rbx
0x000000000016610b : cmp rbx, rbp ; jae 0x16611b ; call qword ptr [rbx]
0x00000000000cc3eb : cmp rbx, rsi ; ja 0xcc380 ; pop rbx ; pop rbp ; ret
0x00000000001621ca : cmp rcx, rax ; jne 0x1621f3 ; xor eax, eax ; ret
0x000000000016300a : cmp rcx, rax ; jne 0x163033 ; xor eax, eax ; ret
0x00000000001187e4 : cmp rcx, rax ; sbb eax, eax ; ret
0x000000000007ca89 : cmp rcx, rsi ; jne 0x7ca80 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000166347 : cmp rdi, 1 ; ja 0x166350 ; ret
0x000000000002d13b : cmp rdi, rbp ; je 0x2d156 ; call 0x893b0
0x00000000000f8f54 : cmp rdi, rdx ; jne 0xf8f48 ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000c15df : cmp rdx, -1 ; cmovne rax, rdx ; ret
0x00000000000fc886 : cmp rdx, rcx ; cmovae rax, rsi ; ret
0x00000000001086d9 : cmp rdx, rdi ; setae al ; ret
0x0000000000075d79 : cmp rsi, rcx ; jb 0x75d70 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000922ab : cmp rsi, rcx ; jne 0x92298 ; xor eax, eax ; ret
0x0000000000187aac : cmp spl, dil ; call rax
0x000000000013f8b7 : cmpsb byte ptr [rsi], byte ptr es:[rdi] ; adc al, 0 ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000013fbb7 : cmpsb byte ptr [rsi], byte ptr es:[rdi] ; adc dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x00000000000704b4 : cmpsb byte ptr [rsi], byte ptr es:[rdi] ; add al, 0 ; add bl, dh ; ret
0x0000000000140ab7 : cmpsb byte ptr [rsi], byte ptr es:[rdi] ; add al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x0000000000095f86 : cmpsb byte ptr [rsi], byte ptr es:[rdi] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xffffffffffffff83], cl ; ret
0x00000000001896c5 : cmpsb byte ptr [rsi], byte ptr es:[rdi] ; add byte ptr [rax], al ; jmp 0x1896cb
0x00000000000716eb : cmpsb byte ptr [rsi], byte ptr es:[rdi] ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x716aa
0x00000000001407b7 : cmpsb byte ptr [rsi], byte ptr es:[rdi] ; add eax, 0x83480000 ; ret 0x4910
0x0000000000161c49 : cmpsb byte ptr [rsi], byte ptr es:[rdi] ; add eax, 0xc0310000 ; ret
0x0000000000188961 : cmpsb byte ptr [rsi], byte ptr es:[rdi] ; cld ; call rsp
0x0000000000188825 : cmpsb byte ptr [rsi], byte ptr es:[rdi] ; cld ; jmp qword ptr [rax + 0x20fffca5]
0x0000000000188821 : cmpsb byte ptr [rsi], byte ptr es:[rdi] ; cld ; jmp qword ptr [rax]
0x00000000001972d9 : cmpsb byte ptr [rsi], byte ptr es:[rdi] ; in eax, dx ; call rcx
0x000000000019904d : cmpsb byte ptr [rsi], byte ptr es:[rdi] ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a2734 : cmpsb byte ptr [rsi], byte ptr es:[rdi] ; mov cl, dh ; jmp qword ptr [rdx]
0x0000000000097874 : cmpsb byte ptr [rsi], byte ptr es:[rdi] ; mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x00000000000c6e14 : cmpsb byte ptr [rsi], byte ptr es:[rdi] ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000013aef6 : cmpsb byte ptr [rsi], byte ptr es:[rdi] ; or al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x00000000001404b7 : cmpsb byte ptr [rsi], byte ptr es:[rdi] ; or byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x00000000001401b7 : cmpsb byte ptr [rsi], byte ptr es:[rdi] ; or eax, dword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x00000000000d3436 : cmpsb byte ptr [rsi], byte ptr es:[rdi] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000018745d : cmpsb byte ptr [rsi], byte ptr es:[rdi] ; std ; call qword ptr [rcx]
0x000000000018741d : cmpsb byte ptr [rsi], byte ptr es:[rdi] ; std ; call rcx
0x00000000001361b5 : cmpsb byte ptr [rsi], byte ptr es:[rdi] ; sub byte ptr [rax], al ; call qword ptr [rax]
0x0000000000188110 : cmpsb byte ptr [rsi], byte ptr es:[rdi] ; test bh, ah ; call qword ptr [rsi]
0x0000000000004148 : cmpsb byte ptr [rsi], byte ptr es:[rdi] ; xor eax, dword ptr [rax] ; add byte ptr [rdx], ah ; add byte ptr [rax + rax], cl ; ret 0xf
0x000000000018e435 : cmpsd dword ptr [rsi], dword ptr es:[rdi] ; add al, byte ptr [rax] ; add al, -0x35 ; stc ; call rsp
0x00000000000c51f5 : cmpsd dword ptr [rsi], dword ptr es:[rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffff940f7bfa], al ; ret -0x49f1
0x000000000011650d : cmpsd dword ptr [rsi], dword ptr es:[rdi] ; add eax, dword ptr [rax] ; add byte ptr [rbx + 0xffffffff8348247c], cl ; call qword ptr [rax]
0x000000000009b020 : cmpsd dword ptr [rsi], dword ptr es:[rdi] ; and al, 0 ; add byte ptr [rax + 0xffffffffffffff85], cl ; ror byte ptr [rdi], -0x7b ; ret
0x0000000000188959 : cmpsd dword ptr [rsi], dword ptr es:[rdi] ; cld ; call rsp
0x000000000018881d : cmpsd dword ptr [rsi], dword ptr es:[rdi] ; cld ; jmp qword ptr [rax + 0x20fffca6]
0x0000000000188819 : cmpsd dword ptr [rsi], dword ptr es:[rdi] ; cld ; jmp qword ptr [rax]
0x00000000001a069c : cmpsd dword ptr [rsi], dword ptr es:[rdi] ; mov dh, -0x10 ; jmp qword ptr [rdx]
0x0000000000083409 : cmpsd dword ptr [rsi], dword ptr es:[rdi] ; mov rsi, qword ptr [rsp + 0x18] ; pop rdx ; pop rbx ; pop rbp ; jmp rax
0x00000000000038a2 : cmpsd dword ptr [rsi], dword ptr es:[rdi] ; ret 0x49ec
0x000000000018e309 : cmpsd dword ptr [rsi], dword ptr es:[rdi] ; stc ; jmp rsp
0x0000000000187461 : cmpsd dword ptr [rsi], dword ptr es:[rdi] ; std ; call qword ptr [rcx + 0x11fffda7]
0x0000000000187465 : cmpsd dword ptr [rsi], dword ptr es:[rdi] ; std ; call qword ptr [rcx]
0x00000000001abb01 : cmpsd dword ptr [rsi], dword ptr es:[rdi] ; sti ; jmp qword ptr [rsi]
0x0000000000188958 : cmpsd dword ptr fs:[rsi], dword ptr es:[rdi] ; cld ; call rsp
0x00000000000038a1 : cmpsq qword ptr [rsi], qword ptr es:[rdi] ; ret 0x49ec
0x00000000001a8b3c : cqo ; add dword ptr [rax], eax ; push rax ; sub al, -0xb ; jmp qword ptr [rcx]
0x000000000003c983 : cqo ; idiv rsi ; ret
0x0000000000038848 : cqo ; pop r14 ; idiv r9 ; pop r15 ; ret
0x000000000012895f : cwde ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x000000000001f50e : cwde ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; ret
0x000000000004869b : cwde ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret -0x2817
0x0000000000198a5d : cwde ; add byte ptr [rax], al ; nop ; ret -0x13
0x00000000000ec7bb : cwde ; add cl, byte ptr [rdi] ; ret 0xfc3
0x0000000000022f59 : cwde ; add dword ptr [rax + 0xffffffffffffff83], ecx ; ret
0x00000000001a8a1d : cwde ; add dword ptr [rax], eax ; add byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a8a05 : cwde ; add dword ptr [rax], eax ; call 0x221a7f37
0x00000000001a8a95 : cwde ; add dword ptr [rax], eax ; js 0x1a8ac5 ; cmc ; jmp qword ptr [rcx]
0x00000000001a8add : cwde ; add dword ptr [rax], eax ; lock sub esi, ebp ; jmp qword ptr [rcx]
0x00000000001a8a35 : cwde ; add dword ptr [rax], eax ; sbb byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a8a65 : cwde ; add dword ptr [rax], eax ; sub rsi, rbp ; jmp qword ptr [rcx]
0x00000000001a8a4d : cwde ; add dword ptr [rax], eax ; xor byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000054c48 : cwde ; add rax, rdx ; jmp rax
0x00000000000be597 : cwde ; call r14
0x00000000000233a5 : cwde ; call rcx
0x00000000001acc7c : cwde ; cmc ; jmp qword ptr [rdx]
0x000000000019a684 : cwde ; fsubr st(5) ; jmp qword ptr [rdx]
0x000000000017a531 : cwde ; hlt ; call qword ptr [rdi]
0x000000000017a371 : cwde ; hlt ; call qword ptr [rsi]
0x000000000017a789 : cwde ; hlt ; call rsp
0x000000000017a469 : cwde ; hlt ; dec dword ptr [rcx] ; cdq ; hlt ; call qword ptr [rbx]
0x000000000017a3bd : cwde ; hlt ; jmp rsp
0x00000000001999d8 : cwde ; in eax, dx ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000078e74 : cwde ; mov esi, r8d ; call 0x750e0
0x00000000000f118c : cwde ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x00000000000f8929 : cwde ; mov rdx, rax ; jmp 0xf8954
0x00000000000f89fa : cwde ; mov rdx, rax ; jmp 0xf8a26
0x0000000000197268 : cwde ; movsd dword ptr es:[rdi], dword ptr [rsi] ; in eax, dx ; jmp rbx
0x000000000017a260 : cwde ; or eax, 0x1638fff4 ; hlt ; call qword ptr [rdx]
0x000000000017a2c0 : cwde ; or eax, 0x190bfff4 ; hlt ; jmp rdi
0x00000000001a8298 : cwde ; or esi, ebp ; jmp qword ptr [rcx]
0x000000000019edd1 : cwde ; out dx, eax ; jmp rdi
0x00000000000f5c39 : cwde ; repne dec dword ptr [rcx + 0xffffffffffffff8b] ; call rbx
0x00000000000f5c46 : cwde ; repne dec dword ptr [rcx + 0xffffffffffffff8b] ; jge 0xf5c4d ; call rbx
0x0000000000003aa5 : cwde ; ret
0x00000000000193a0 : cwde ; ret 0x3b
0x00000000001ab4d8 : cwde ; sal ch, cl ; jmp qword ptr [rsi]
0x00000000001346f4 : cwde ; shr dword ptr [rax], 0 ; call qword ptr [rax]
0x0000000000118dee : cwde ; shr rax, 4 ; ret
0x000000000005ff4c : dec byte ptr [r15] ; xchg eax, esp ; ret -0x2d7c
0x000000000009c569 : dec byte ptr [r8 + 0x29] ; ret 0x149
0x000000000009a551 : dec byte ptr [r8 + 0x29] ; ret 0x280f
0x000000000009c56a : dec byte ptr [rax + 0x29] ; ret 0x149
0x000000000009a552 : dec byte ptr [rax + 0x29] ; ret 0x280f
0x0000000000086a15 : dec byte ptr [rax + 0x39] ; ret 0x3574
0x000000000006df12 : dec byte ptr [rax + 0xf] ; ret -0x76b4
0x00000000000b1a06 : dec byte ptr [rax + 0xf] ; ret 0x3949
0x00000000000c46b0 : dec byte ptr [rax + 0xffffffffffffff83] ; ret
0x000000000008621e : dec byte ptr [rax + 0xffffffffffffff89] ; and byte ptr [r8 + 0x31], r9b ; ret -0x6c42
0x0000000000085d97 : dec byte ptr [rax + 0xffffffffffffff89] ; and byte ptr [rax + 0x31], cl ; ret -0x6c42
0x00000000000497c7 : dec byte ptr [rax + 0xffffffffffffff89] ; clc ; cmovae rax, rsi ; pop rbx ; ret
0x00000000000498a3 : dec byte ptr [rax + 0xffffffffffffff89] ; clc ; cmovae rax, rsi ; ret
0x000000000010aaf4 : dec byte ptr [rax + 0xffffffffffffff89] ; fucompi st(0) ; ret
0x0000000000041add : dec byte ptr [rax + 0xffffffffffffff89] ; ret
0x0000000000039aaf : dec byte ptr [rax + 0xffffffffffffff89] ; ret -0x76b8
0x00000000000808dd : dec byte ptr [rax + 0xffffffffffffff8d] ; ret
0x00000000000e33ce : dec byte ptr [rcx + rcx*4 + 0xfffffffffffffff7] ; call 0xdf670
0x00000000000f4930 : dec byte ptr [rcx] ; add byte ptr [rax], al ; ret
0x000000000004a66e : dec byte ptr [rdi] ; xchg eax, esp ; ret -0x2d7c
0x00000000000960ab : dec dword ptr [r13 + 0xffffffffffffff89] ; ret
0x0000000000049c1e : dec dword ptr [r8 + 0xffffffffffffff83] ; ret -0x77ff
0x00000000000974df : dec dword ptr [r9 + 0xffffffff8948f947] ; clc ; ret
0x0000000000173a47 : dec dword ptr [rax + 0x18] ; in al, dx ; call rcx
0x00000000000437b3 : dec dword ptr [rax + 0x21] ; ret 0x948
0x0000000000094d39 : dec dword ptr [rax + 0x29] ; ret
0x00000000000c50d7 : dec dword ptr [rax + 0x29] ; ret -0x72b8
0x00000000000aa599 : dec dword ptr [rax + 0x29] ; ret -0x76b4
0x00000000000389a1 : dec dword ptr [rax + 0x29] ; ret -0x76b8
0x000000000009c6ea : dec dword ptr [rax + 0x29] ; ret 0x149
0x000000000009a692 : dec dword ptr [rax + 0x29] ; ret 0x280f
0x0000000000027fe3 : dec dword ptr [rax + 0x39] ; ret
0x0000000000113937 : dec dword ptr [rax + 0x39] ; ret -0x78f1
0x00000000000b359f : dec dword ptr [rax + 0x39] ; ret -0x7bf1
0x0000000000079525 : dec dword ptr [rax + 0x39] ; ret -0x7cf1
0x00000000000de887 : dec dword ptr [rax + 0x63] ; ret
0x00000000000428e0 : dec dword ptr [rax + 0x63] ; ret -0x1517
0x00000000000e55da : dec dword ptr [rax + 0x63] ; ret -0x72b8
0x000000000003fabe : dec dword ptr [rax + 0x63] ; ret 0x2ce9
0x000000000016734b : dec dword ptr [rax + 0x6b] ; in al, dx ; jmp rax
0x000000000008b629 : dec dword ptr [rax + 0xf] ; mov ebp, 0xf80148c6 ; ret
0x000000000008d724 : dec dword ptr [rax + 0xf] ; mov esp, 0x440f48c7 ; ret -0x3f7d
0x000000000003ca8b : dec dword ptr [rax + 0xf] ; ret
0x0000000000060218 : dec dword ptr [rax + 0xf] ; ret -0x427d
0x000000000002f8a9 : dec dword ptr [rax + 0xf] ; ret -0x6f3d
0x0000000000079aea : dec dword ptr [rax + 0xf] ; ret -0x72b8
0x00000000000eeb5e : dec dword ptr [rax + 0xf] ; ret -0x76b4
0x000000000008c582 : dec dword ptr [rax + 0xf] ; ret -0x7cb8
0x00000000000b1816 : dec dword ptr [rax + 0xf] ; ret 0x3949
0x00000000000c15e2 : dec dword ptr [rax + 0xf] ; ret 0x48c3
0x00000000000c312e : dec dword ptr [rax + 0xf] ; ret 0xfc3
0x0000000000189ea3 : dec dword ptr [rax + 0xffffffff838c0000] ; out dx, al ; call rsp
0x0000000000073108 : dec dword ptr [rax + 0xffffffffffffff81] ; ret
0x000000000014d08c : dec dword ptr [rax + 0xffffffffffffff81] ; ret 0x80
0x0000000000132e81 : dec dword ptr [rax + 0xffffffffffffff83] ; clc ; dec dword ptr [rax + 0xffffffffffffff89] ; ret
0x00000000001333d8 : dec dword ptr [rax + 0xffffffffffffff83] ; clc ; dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x6d8c
0x0000000000022f55 : dec dword ptr [rax + 0xffffffffffffff83] ; cwde ; add dword ptr [rax + 0xffffffffffffff83], ecx ; ret
0x000000000002f1f1 : dec dword ptr [rax + 0xffffffffffffff83] ; ret
0x0000000000057e6b : dec dword ptr [rax + 0xffffffffffffff83] ; ret -0x14f8
0x000000000001fc20 : dec dword ptr [rax + 0xffffffffffffff83] ; ret -0x14fc
0x000000000006d7ad : dec dword ptr [rax + 0xffffffffffffff83] ; ret -0x14fe
0x00000000000d8131 : dec dword ptr [rax + 0xffffffffffffff83] ; ret -0x14ff
0x0000000000067d2f : dec dword ptr [rax + 0xffffffffffffff83] ; ret -0x16f8
0x00000000000d4f56 : dec dword ptr [rax + 0xffffffffffffff83] ; ret -0x72ff
0x00000000000c7d8f : dec dword ptr [rax + 0xffffffffffffff83] ; ret -0x77fc
0x0000000000049c1f : dec dword ptr [rax + 0xffffffffffffff83] ; ret -0x77ff
0x0000000000026ac9 : dec dword ptr [rax + 0xffffffffffffff83] ; ret 0x4101
0x000000000004c838 : dec dword ptr [rax + 0xffffffffffffff83] ; ret 0x4801
0x00000000000e8cac : dec dword ptr [rax + 0xffffffffffffff83] ; ret 0x4803
0x000000000012937a : dec dword ptr [rax + 0xffffffffffffff83] ; ret 0x4807
0x0000000000038f41 : dec dword ptr [rax + 0xffffffffffffff83] ; ret 0x4808
0x000000000002d57b : dec dword ptr [rax + 0xffffffffffffff83] ; rol byte ptr [rcx], -0x7d ; ret -0x7cff
0x00000000000966a3 : dec dword ptr [rax + 0xffffffffffffff85] ; fisttp dword ptr [rax + 0xffffffffffffff89] ; ret 0x1e75
0x00000000000965aa : dec dword ptr [rax + 0xffffffffffffff85] ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000000f4322 : dec dword ptr [rax + 0xffffffffffffff85] ; ror byte ptr [rax + 0xffffffffffffff89], 5 ; ret
0x00000000000213b1 : dec dword ptr [rax + 0xffffffffffffff85] ; ror byte ptr [rdi], -0x6b ; ret
0x00000000000e1997 : dec dword ptr [rax + 0xffffffffffffff85] ; ror byte ptr [rdi], -0x7c ; ret
0x00000000000dec66 : dec dword ptr [rax + 0xffffffffffffff85] ; ror byte ptr [rdi], -0x7c ; ret 0
0x000000000006aa89 : dec dword ptr [rax + 0xffffffffffffff85] ; sal byte ptr [rcx + 0x48], -0x77 ; ret
0x00000000000cd6b5 : dec dword ptr [rax + 0xffffffffffffff89] ; add al, 0x24 ; call rbx
0x000000000007eb81 : dec dword ptr [rax + 0xffffffffffffff89] ; and al, 8 ; call qword ptr [rax]
0x000000000008d3c8 : dec dword ptr [rax + 0xffffffffffffff89] ; clc ; ret
0x00000000000f1e76 : dec dword ptr [rax + 0xffffffffffffff89] ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000086c54 : dec dword ptr [rax + 0xffffffffffffff89] ; fimul dword ptr [rcx + rcx*4 + 0xffffffffffffffee] ; call rax
0x000000000012f10c : dec dword ptr [rax + 0xffffffffffffff89] ; fimul word ptr [rax + 0xffffffffffffff89] ; out dx, eax ; call rcx
0x00000000000baf80 : dec dword ptr [rax + 0xffffffffffffff89] ; fmul dword ptr [rax + 0xffffffffffffff83] ; ret
0x0000000000021363 : dec dword ptr [rax + 0xffffffffffffff89] ; fmul dword ptr [rax + 0xffffffffffffffff] ; ret
0x00000000000db245 : dec dword ptr [rax + 0xffffffffffffff89] ; fucompi st(0) ; ret -0xbbf
0x00000000000b79e4 : dec dword ptr [rax + 0xffffffffffffff89] ; jmp 0x48ce0334
0x00000000000e45fe : dec dword ptr [rax + 0xffffffffffffff89] ; jmp 0x4cd0cf4e
0x0000000000111a46 : dec dword ptr [rax + 0xffffffffffffff89] ; lock pop rbx ; ret
0x00000000000cdfa0 : dec dword ptr [rax + 0xffffffffffffff89] ; or r9b, r13b ; ret -8
0x0000000000020268 : dec dword ptr [rax + 0xffffffffffffff89] ; ret
0x0000000000128115 : dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x4015
0x00000000000b4b4f : dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x4717
0x00000000001228ea : dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x48
0x00000000000513f2 : dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x5617
0x000000000005de3b : dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x5f17
0x000000000005de43 : dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x6717
0x00000000001333dc : dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x6d8c
0x00000000000e9aba : dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x7217
0x00000000000c5c42 : dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x72b7
0x000000000004ddf1 : dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x72b8
0x00000000001061a8 : dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x74b8
0x000000000004a4dc : dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x76b4
0x0000000000072e6a : dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x76b7
0x0000000000036e4f : dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x78f1
0x0000000000050ba0 : dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x7a75
0x000000000013275a : dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x7ab3
0x0000000000081775 : dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x7bf1
0x0000000000093bd6 : dec dword ptr [rax + 0xffffffffffffff89] ; ret -0xf17
0x000000000010944f : dec dword ptr [rax + 0xffffffffffffff89] ; ret 0x1376
0x00000000000c4e7f : dec dword ptr [rax + 0xffffffffffffff89] ; ret 0x19eb
0x000000000004c80b : dec dword ptr [rax + 0xffffffffffffff89] ; ret 0x1beb
0x00000000000c5ca7 : dec dword ptr [rax + 0xffffffffffffff89] ; ret 0x1e73
0x00000000000c5cf6 : dec dword ptr [rax + 0xffffffffffffff89] ; ret 0x1f73
0x0000000000106836 : dec dword ptr [rax + 0xffffffffffffff89] ; ret 0x2b49
0x00000000000f1db1 : dec dword ptr [rax + 0xffffffffffffff89] ; ret 0x2d77
0x00000000000e9776 : dec dword ptr [rax + 0xffffffffffffff89] ; ret 0x2e9
0x000000000004c6a7 : dec dword ptr [rax + 0xffffffffffffff89] ; ret 0x31eb
0x000000000007367c : dec dword ptr [rax + 0xffffffffffffff89] ; ret 0x38b
0x00000000000833dd : dec dword ptr [rax + 0xffffffffffffff89] ; ret 0x3d83
0x00000000000e8ebe : dec dword ptr [rax + 0xffffffffffffff89] ; ret 0x3ee9
0x00000000000c6a03 : dec dword ptr [rax + 0xffffffffffffff89] ; ret 0x4164
0x00000000000e8998 : dec dword ptr [rax + 0xffffffffffffff89] ; ret 0x44c6
0x00000000000eebbd : dec dword ptr [rax + 0xffffffffffffff89] ; ret 0x4574
0x00000000000e7b6e : dec dword ptr [rax + 0xffffffffffffff89] ; ret 0x4c6
0x000000000006834b : dec dword ptr [rax + 0xffffffffffffff89] ; ret 0x4ce8
0x00000000000fb33a : dec dword ptr [rax + 0xffffffffffffff89] ; ret 0x5077
0x00000000000e7bd5 : dec dword ptr [rax + 0xffffffffffffff89] ; ret 0x52e9
0x00000000000c15d1 : dec dword ptr [rax + 0xffffffffffffff89] ; ret 0x676
0x00000000000c3b76 : dec dword ptr [rax + 0xffffffffffffff89] ; ret 0x6b8
0x00000000000f162e : dec dword ptr [rax + 0xffffffffffffff89] ; ret 0x7577
0x00000000000ff85f : dec dword ptr [rax + 0xffffffffffffff89] ; ret 0xb9
0x0000000000085471 : dec dword ptr [rax + 0xffffffffffffff89] ; ret 0xcb8
0x00000000000f1cd3 : dec dword ptr [rax + 0xffffffffffffff89] ; ret 0xd77
0x000000000006fa00 : dec dword ptr [rax + 0xffffffffffffff89] ; ret 0xf40
0x00000000000509ce : dec dword ptr [rax + 0xffffffffffffff89] ; ret 0xf4a
0x0000000000050aec : dec dword ptr [rax + 0xffffffffffffff89] ; ror byte ptr [rax + 0xffffffffffffff83], 1 ; ret 0x4803
0x000000000003f8fd : dec dword ptr [rax + 0xffffffffffffff89] ; xor cl, ch ; ret -0x10
0x00000000000dff0b : dec dword ptr [rax + 0xffffffffffffff8b] ; adc byte ptr [r8 + 0x39], cl ; ret 0x574
0x000000000004bfec : dec dword ptr [rax + 0xffffffffffffff8b] ; add byte ptr [rcx + 0xffffffffffffff89], cl ; add bl, ch ; ret
0x000000000012f6a5 : dec dword ptr [rax + 0xffffffffffffff8b] ; cmp byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x0000000000084033 : dec dword ptr [rax + 0xffffffffffffff8b] ; je 0x8405c ; sub byte ptr [rcx + rcx*4 + 0xffffffffffffffe7], cl ; call rax
0x00000000000f5d7d : dec dword ptr [rax + 0xffffffffffffff8b] ; jge 0xf5d82 ; call rbx
0x00000000000f6030 : dec dword ptr [rax + 0xffffffffffffff8b] ; jge 0xf6035 ; call rbx
0x00000000000f7727 : dec dword ptr [rax + 0xffffffffffffff8b] ; jge 0xf772c ; call r12
0x000000000002339d : dec dword ptr [rax + 0xffffffffffffff8b] ; js 0x233ba ; mov qword ptr [rbp + 0xffffffffffffff98], rax ; call rcx
0x00000000000cd2dd : dec dword ptr [rax + 0xffffffffffffff8b] ; mov ebp, 0xffffff58 ; call rbx
0x00000000000f32b4 : dec dword ptr [rax + 0xffffffffffffff8d] ; adc cl, byte ptr [rax + 0xffffffffffffff89] ; ret -0x76b8
0x00000000000a453f : dec dword ptr [rax + 0xffffffffffffff8d] ; cld ; pop rbx ; ret
0x000000000006c311 : dec dword ptr [rax + 0xffffffffffffff8d] ; dec qword ptr [rax + 1] ; ret
0x00000000000f118a : dec dword ptr [rax + 0xffffffffffffff98] ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000009400f : dec dword ptr [rax + 0xffffffffffffffc7] ; ret
0x00000000000e5765 : dec dword ptr [rax + 0xffffffffffffffc7] ; ret -1
0x000000000012bb69 : dec dword ptr [rax + 0xffffffffffffffd3] ; ret 0x2148
0x0000000000037883 : dec dword ptr [rax + 0xffffffffffffffd3] ; ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x000000000005b794 : dec dword ptr [rax + 1] ; ret
0x0000000000178baf : dec dword ptr [rax + rcx*2 + 0xffffffffffffffef] ; call qword ptr [rax]
0x0000000000178bab : dec dword ptr [rax + rcx*2 + 0xffffffffffffffef] ; dec dword ptr [rax + rcx*2 + 0xffffffffffffffef] ; call qword ptr [rax]
0x0000000000178b9b : dec dword ptr [rax + rcx*2 + 0xffffffffffffffef] ; dec dword ptr [rax + rcx*2 + 0xffffffffffffffef] ; jmp qword ptr [rax]
0x0000000000178b9f : dec dword ptr [rax + rcx*2 + 0xffffffffffffffef] ; jmp qword ptr [rax]
0x000000000018aca3 : dec dword ptr [rax + rdi + 0xffffffffd0260001] ; out dx, eax ; call rsp
0x000000000018a563 : dec dword ptr [rax + rdx + 0x2490001] ; out dx, eax ; call rsp
0x0000000000189ca3 : dec dword ptr [rax + rdx*8 + 0x62900000] ; out dx, al ; call rsp
0x0000000000179e93 : dec dword ptr [rax] ; sal bl, cl ; jmp qword ptr [rsi]
0x000000000017915b : dec dword ptr [rax] ; xchg eax, edi ; int1 ; jmp qword ptr [rax]
0x00000000001740c3 : dec dword ptr [rax] ; xor ebp, ebp ; call rax
0x00000000000c83d8 : dec dword ptr [rbp + 0x63] ; ror byte ptr [rcx + 0x29], cl ; cli ; sub r10, rax ; jmp 0xc83fc
0x00000000000d95c8 : dec dword ptr [rbp + 0xffffffff83480143] ; ret
0x00000000000efe04 : dec dword ptr [rbp + 0xffffffff840f0158] ; ret 1
0x00000000000a82c3 : dec dword ptr [rbp + 0xffffffffffffff89] ; fmul qword ptr [rcx + 0xffffffffffffff89] ; ret 0x24eb
0x00000000000960ac : dec dword ptr [rbp + 0xffffffffffffff89] ; ret
0x0000000000063763 : dec dword ptr [rbp + 1] ; loop 0x63751 ; scasb al, byte ptr es:[rdi] ; ret
0x00000000001897e3 : dec dword ptr [rbp + rbp*4 + 0xffffffffdbde0000] ; jmp 0x1897eb
0x000000000018da9b : dec dword ptr [rbp + rbx*2 + 0x7d120002] ; clc ; call rsp
0x000000000018ec83 : dec dword ptr [rbp + rbx*8 + 0xffffffffbe600002] ; cli ; call rsp
0x000000000018d8b3 : dec dword ptr [rbp + rcx*2 + 0x541d0002] ; clc ; call rsp
0x0000000000061f3a : dec dword ptr [rbp + rcx*4 + 0x2d] ; ret
0x000000000018dde3 : dec dword ptr [rbp + rsi*2 + 0xfffffffff51d0002] ; clc ; call rsp
0x000000000018e67b : dec dword ptr [rbp + rsi*4 + 0x213b0002] ; cli ; call rsp
0x00000000000f07be : dec dword ptr [rbx + 0x19e83c7d] ; ret
0x000000000017a0fb : dec dword ptr [rbx + 0x1efff3f6] ; div bl ; call rsp
0x0000000000106681 : dec dword ptr [rbx + 0x2b8d043d] ; add al, ch ; ret
0x00000000000da10d : dec dword ptr [rbx + 0x438d0455] ; add dword ptr [rax + 0xffffffffffffff83], ecx ; ret
0x0000000000136ea5 : dec dword ptr [rbx + 0x480c2444] ; add esp, 0x48 ; ret
0x0000000000173a43 : dec dword ptr [rbx + 0x48ffec17] ; sbb ah, ch ; call rcx
0x00000000000cb9af : dec dword ptr [rbx + 0xffffffff89418845] ; ret -0x247c
0x00000000000bddde : dec dword ptr [rbx + 4] ; jne 0xbddfe ; pop rbx ; ret
0x000000000018d5e3 : dec dword ptr [rbx + rdi + 0x23410002] ; clc ; call rsp
0x000000000018ddab : dec dword ptr [rbx + rsi*2 + 0xfffffffff3cc0002] ; clc ; call rsp
0x000000000017a2c3 : dec dword ptr [rbx] ; sbb esp, esi ; jmp rdi
0x00000000000b43f5 : dec dword ptr [rcx + 0x29] ; ret
0x000000000004b8c1 : dec dword ptr [rcx + 0x39] ; ret -0x7af1
0x00000000001895e3 : dec dword ptr [rcx + 0x40c30000] ; jmp 0x1895eb
0x000000000008453e : dec dword ptr [rcx + 0x63] ; test r8d, dword ptr [rax] ; add rax, r13 ; jmp rax
0x000000000006c286 : dec dword ptr [rcx + 0xffffffff83489604] ; ret 0x4801
0x00000000000974e0 : dec dword ptr [rcx + 0xffffffff8948f947] ; clc ; ret
0x0000000000027977 : dec dword ptr [rcx + 0xffffffffffffff83] ; ret
0x00000000000c9e2e : dec dword ptr [rcx + 0xffffffffffffff83] ; ret -0x16ff
0x0000000000098698 : dec dword ptr [rcx + 0xffffffffffffff83] ; ret -0x7bff
0x00000000000c8cff : dec dword ptr [rcx + 0xffffffffffffff83] ; ret 0x4101
0x00000000000a70da : dec dword ptr [rcx + 0xffffffffffffff83] ; ret 0x4104
0x0000000000023257 : dec dword ptr [rcx + 0xffffffffffffff89] ; fmul qword ptr [rax + 0xffffffffffffff89] ; ret
0x0000000000057436 : dec dword ptr [rcx + 0xffffffffffffff89] ; ret -0x1c17
0x00000000000609d2 : dec dword ptr [rcx + 0xffffffffffffff89] ; ret -0x74b4
0x0000000000056707 : dec dword ptr [rcx + 0xffffffffffffff89] ; ret -0x74b8
0x000000000004ba93 : dec dword ptr [rcx + 0xffffffffffffff89] ; ret -0x7af1
0x000000000004e284 : dec dword ptr [rcx + 0xffffffffffffff89] ; ret -0x7bf1
0x0000000000096c78 : dec dword ptr [rcx + 0xffffffffffffff89] ; ret 0x5be9
0x00000000000af511 : dec dword ptr [rcx + 0xffffffffffffff89] ; ret 0x5ee9
0x000000000007eb30 : dec dword ptr [rcx + 0xffffffffffffff89] ; salc ; call qword ptr [rax]
0x00000000000f5bb5 : dec dword ptr [rcx + 0xffffffffffffff8b] ; call rbx
0x00000000000f603e : dec dword ptr [rcx + 0xffffffffffffff8b] ; cmp al, 0x24 ; call rbx
0x0000000000106277 : dec dword ptr [rcx + 0xffffffffffffff8b] ; cmp byte ptr [rax + 0xffffffffffffff89], r9b ; ret 0x2b49
0x00000000000f5c48 : dec dword ptr [rcx + 0xffffffffffffff8b] ; jge 0xf5c4d ; call rbx
0x00000000000f5d6f : dec dword ptr [rcx + 0xffffffffffffff8b] ; jge 0xf5d74 ; call rbx
0x00000000000f5eb2 : dec dword ptr [rcx + 0xffffffffffffff8b] ; jge 0xf5eb7 ; call rbx
0x00000000000f6022 : dec dword ptr [rcx + 0xffffffffffffff8b] ; jge 0xf6027 ; call rbx
0x0000000000103436 : dec dword ptr [rcx + 0xffffffffffffff8b] ; push rdi ; sbb byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x00000000000d0bc3 : dec dword ptr [rcx + 0xffffffffffffff8b] ; push rdi ; sub byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x0000000000134384 : dec dword ptr [rcx + 0xffffffffffffff8b] ; sub byte ptr [r8 + 0xffffffffffffff89], r9b ; ret -0x76b8
0x0000000000050873 : dec dword ptr [rcx + 0xffffffffffffffc7] ; ret
0x00000000001303d4 : dec dword ptr [rcx + 0xffffffffffffffc7] ; ret -1
0x00000000000972b2 : dec dword ptr [rcx + 1] ; ret
0x000000000001ff60 : dec dword ptr [rcx + rcx*4 + 0xffffffffffffffe7] ; call qword ptr [r14]
0x0000000000178e4b : dec dword ptr [rcx + rdx*2] ; out dx, eax ; call qword ptr [rax]
0x000000000017a46b : dec dword ptr [rcx] ; cdq ; hlt ; call qword ptr [rbx]
0x00000000000fb175 : dec dword ptr [rcx] ; clc ; ret
0x00000000000f12ed : dec dword ptr [rcx] ; lock mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x0000000000105f4b : dec dword ptr [rcx] ; ret
0x00000000000fe5b6 : dec dword ptr [rcx] ; setbe al ; ret
0x000000000018aba3 : dec dword ptr [rdi + rbp + 0xffffffffcc7b0001] ; out dx, eax ; call rsp
0x0000000000189c83 : dec dword ptr [rdi + rcx*8 + 0x60a00000] ; out dx, al ; call rsp
0x000000000002fef6 : dec dword ptr [rdi] ; mov bh, 4 ; js 0x2fe7f ; loopne 0x2feff ; ret
0x00000000000fed75 : dec dword ptr [rdi] ; mov bh, 4 ; js 0xfecfe ; loopne 0xfed7e ; ret
0x0000000000047eeb : dec dword ptr [rdi] ; mov dh, 0x43 ; add dword ptr [rax + 0xffffffffffffff83], ecx ; ret
0x0000000000096f84 : dec dword ptr [rdi] ; mov dh, 0x45 ; ret
0x0000000000096f71 : dec dword ptr [rdi] ; mov dh, 0x45 ; ret -0x7cb7
0x0000000000097199 : dec dword ptr [rdi] ; mov dh, 0x45 ; ret -0x7cb8
0x000000000006d9d2 : dec dword ptr [rdi] ; mov dh, 0x53 ; or al, -0xa ; ret 0x7404
0x0000000000109597 : dec dword ptr [rdi] ; ret -0x7cb8
0x00000000000478e7 : dec dword ptr [rdi] ; ret -0x7cbf
0x00000000000e3dac : dec dword ptr [rdi] ; ret 0x148d
0x00000000000257eb : dec dword ptr [rdi] ; ret 0x41c3
0x000000000007dcd6 : dec dword ptr [rdi] ; ret 0x6348
0x00000000001150e1 : dec dword ptr [rdi] ; test ah, bl ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret -0x7bf1
0x00000000001148f4 : dec dword ptr [rdi] ; test bh, bh ; add al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4104
0x000000000002104c : dec dword ptr [rdi] ; test bl, dl ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret -0x76b4
0x000000000006e8a0 : dec dword ptr [rdi] ; test cl, byte ptr [rcx + 0xffffffff89000001] ; ret -0x1d7d
0x00000000000fc3de : dec dword ptr [rdi] ; test ebp, dword ptr [rbx] ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x0000000000164960 : dec dword ptr [rdi] ; test ebp, dword ptr [rsi + 1] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000063b71 : dec dword ptr [rdi] ; test esi, dword ptr [rdi + rax*8 + 0x6ae9ffff] ; ret -1
0x000000000005c95c : dec dword ptr [rdi] ; xchg dword ptr [rbx + 0xffffffff89000000], esi ; ret 0x348
0x000000000005c63e : dec dword ptr [rdi] ; xchg dword ptr [rcx + 0xffffffff89000000], esi ; ret 0x348
0x000000000005a359 : dec dword ptr [rdi] ; xchg dword ptr [rsi + 0xffffffff89000002], ebp ; ret 0x348
0x0000000000032a2a : dec dword ptr [rdi] ; xchg eax, ebp ; ret -0x2d7c
0x0000000000048fb7 : dec dword ptr [rdi] ; xchg eax, ebp ; ret -0x3fcf
0x0000000000032d8a : dec dword ptr [rdi] ; xchg eax, ebp ; ret -0x6417
0x00000000000cc4cc : dec dword ptr [rdi] ; xchg eax, ebp ; ret 0x460f
0x00000000000725bc : dec dword ptr [rdi] ; xchg eax, esp ; ret -0x2509
0x00000000000c4b63 : dec dword ptr [rdi] ; xchg eax, esp ; ret -0x7ab8
0x00000000000ef710 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0x7c83
0x0000000000080799 : dec dword ptr [rdi] ; xchg eax, esp ; ret 0xee9
0x000000000004d6ee : dec dword ptr [rdi] ; xchg eax, esp ; shr eax, -0x67 ; ret -1
0x00000000000504ef : dec dword ptr [rdx + 0xffffffffffffff8d] ; push rsp ; add cl, byte ptr es:[rax + 1] ; ret -0x7cb8
0x000000000018a8a8 : dec dword ptr [rdx + 0xffffffffffffffef] ; call rsp
0x000000000018a8a3 : dec dword ptr [rdx + rbx + 0x4aff0001] ; out dx, eax ; call rsp
0x0000000000177f7b : dec dword ptr [rdx] ; in eax, dx ; dec dword ptr [rdx] ; in eax, dx ; jmp rdi
0x0000000000177f7f : dec dword ptr [rdx] ; in eax, dx ; jmp rdi
0x0000000000071160 : dec dword ptr [rdx] ; jne 0x711c7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000071e0b : dec dword ptr [rdx] ; jne 0x71e4e ; ret
0x0000000000071f05 : dec dword ptr [rdx] ; jne 0x71f4c ; mov eax, esi ; ret
0x0000000000072005 : dec dword ptr [rdx] ; jne 0x7204c ; mov eax, esi ; ret
0x0000000000072cd0 : dec dword ptr [rdx] ; jne 0x72d34 ; pop rbx ; ret
0x0000000000189b7b : dec dword ptr [rsi + rax*8 + 0x5daa0000] ; in eax, dx ; call rsp
0x00000000000716d7 : dec dword ptr [rsi] ; jne 0x71750 ; mov eax, edx ; pop rbx ; ret
0x0000000000072145 : dec dword ptr [rsi] ; jne 0x721bb ; mov eax, edx ; pop rbx ; ret
0x000000000007272e : dec dword ptr [rsi] ; jne 0x727a0 ; mov eax, edx ; pop rbx ; ret
0x0000000000072890 : dec dword ptr [rsi] ; jne 0x7290c ; mov eax, edx ; pop rbx ; ret
0x0000000000072b85 : dec dword ptr [rsi] ; jne 0x72bfb ; mov eax, edx ; pop rbx ; ret
0x000000000007440a : dec dword ptr [rsi] ; jne 0x7448a ; mov eax, edx ; pop rbx ; ret
0x0000000000078297 : dec dword ptr [rsi] ; jne 0x78309 ; mov eax, edx ; pop rbx ; ret
0x0000000000078429 : dec dword ptr [rsi] ; jne 0x784a4 ; mov eax, edx ; pop rbx ; ret
0x0000000000078cc0 : dec dword ptr [rsi] ; jne 0x78d35 ; mov eax, edx ; pop rbx ; ret
0x0000000000078e62 : dec dword ptr [rsi] ; jne 0x78edf ; mov eax, edx ; pop rbx ; ret
0x00000000000792f2 : dec dword ptr [rsi] ; jne 0x79341 ; mov eax, edx ; pop rbx ; ret
0x0000000000179e9f : dec eax ; sal ebx, cl ; push qword ptr [rax] ; sal ebx, 1 ; jmp qword ptr [rsi]
0x000000000017a417 : dec eax ; xchg eax, esi ; hlt ; call rdx
0x000000000017914f : dec eax ; xchg eax, esi ; int1 ; jmp rax
0x0000000000039b4d : dec ecx ; ret
0x0000000000179d47 : dec edx ; enter -0xd, -0x6f ; sal ebx, 1 ; call rax
0x000000000018824b : dec esi ; test bh, ah ; push qword ptr [rsp + rax*4 + 0xfffffffffffffffc] ; jmp rsp
0x000000000018cc1b : dec esp ; add dword ptr [rdx], eax ; add byte ptr [rax + rsi + 0xfffffffffffffff7], ah ; jmp rsp
0x0000000000188e93 : dec esp ; jl 0x188e97 ; add ah, al ; jno 0x188e85 ; jmp rsp
0x000000000018c5a3 : dec esp ; jrcxz 0x18c5a8 ; add byte ptr [rsi + rbx*4 + 0xfffffffffffffff6], dh ; jmp rsp
0x000000000018bcdb : dec esp ; lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; xor al, -0xc ; jmp rsp
0x000000000017d02b : dec esp ; mov bl, -6 ; jmp rsp
0x000000000018e753 : dec esp ; mov ebp, 0x33b40002 ; cli ; jmp rsp
0x000000000018e7b3 : dec esp ; mov edi, 0x3ac40002 ; cli ; jmp rsp
0x000000000018968b : dec esp ; movsd dword ptr es:[rdi], dword ptr [rsi] ; add byte ptr [rax], al ; hlt ; jmp 0x189693
0x000000000018a503 : dec esp ; or eax, 0xfc840001 ; out dx, al ; jmp rsp
0x000000000018d8f3 : dec esp ; push rcx ; add al, byte ptr [rax] ; adc al, 0x5e ; clc ; jmp rsp
0x000000000018d383 : dec esp ; sub al, 2 ; add byte ptr [rcx + rax + 0xfffffffffffffff8], ah ; jmp rsp
0x000000000009c6e9 : dec qword ptr [r8 + 0x29] ; ret 0x149
0x000000000009a691 : dec qword ptr [r8 + 0x29] ; ret 0x280f
0x0000000000098697 : dec qword ptr [r9 + 0xffffffffffffff83] ; ret -0x7bff
0x00000000000279c0 : dec qword ptr [rax + 0xffffffffffffff83] ; ret 0x4101
0x000000000006c314 : dec qword ptr [rax + 1] ; ret
0x0000000000027976 : dec qword ptr [rcx + 0xffffffffffffff83] ; ret
0x00000000001b7251 : div bh ; call rdx
0x000000000017a101 : div bl ; call rsp
0x000000000017a0fd : div bl ; lcall ptr [rsi] ; div bl ; call rsp
0x00000000000b2885 : div byte ptr [rax] ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret -0x8b7
0x00000000000949df : div byte ptr [rbp + 0xa] ; jmp 0x949a6
0x000000000012f6ee : div byte ptr [rbp + 0xf] ; call 0x12b940
0x0000000000097851 : div byte ptr [rbp + 0xffffffffffffffec] ; mov qword ptr [rdx], rcx ; ret
0x0000000000089812 : div byte ptr [rbp + 4] ; xor rax, rax ; ret
0x000000000002ca91 : div byte ptr [rbp + rax*8 + 0x5b] ; ret
0x000000000001fea9 : div byte ptr [rcx] ; shr al, -8 ; ret 0xc
0x0000000000106634 : div dword ptr [rcx] ; shr al, 0x24 ; ret
0x00000000001066fa : div dword ptr [rcx] ; shr al, 0x5e ; ret -1
0x0000000000179031 : div eax ; jmp qword ptr [rax + 0xffffffffe0fff0f8]
0x000000000006f9d5 : div ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000074500 : div ebp ; pop rbp ; pop r12 ; ret
0x00000000001a5269 : div ebx ; jmp qword ptr [rax]
0x000000000007453c : div ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004f2cd : div ecx ; add r8d, eax ; mov eax, r8d ; ret
0x00000000000a2827 : div ecx ; pop rbx ; mov eax, eax ; ret
0x000000000006f9d4 : div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000744ff : div rbp ; pop rbp ; pop r12 ; ret
0x000000000007453b : div rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019c31c : ds ; out dx, al ; jmp qword ptr [rdx]
0x0000000000196686 : enter -0x128b, -1 ; sbb al, 0xd ; jae 0x196702 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000001f6b0 : enter -0x1401, -0x3a ; ret
0x00000000000c6d51 : enter -0x14fe, -0x6a ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000018f71e : enter -0x16b2, -1 ; sbb al, 0xd ; call 0x2318e075
0x000000000009776d : enter -0x178c, -0xd ; ret
0x0000000000098fe1 : enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x000000000010b53b : enter -0x38ff, -0x77 ; ret -0x7af1
0x0000000000049828 : enter -0x3eb7, -8 ; add cl, byte ptr [rbp + 0x39] ; ret
0x00000000001269d1 : enter -0x3eb8, -0x18 ; or byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x0000000000164ad4 : enter -0x3fe7, -0x7d ; fdivr st(7) ; ret
0x000000000009c566 : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x149
0x000000000009a54e : enter -0x72b8, 0x49 ; dec byte ptr [rax + 0x29] ; ret 0x280f
0x000000000009c6e6 : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x149
0x000000000009a68e : enter -0x72b8, 0x49 ; dec dword ptr [rax + 0x29] ; ret 0x280f
0x00000000001aef1e : enter -0xa76, -1 ; sbb al, 0xd ; int1 ; mov ch, dh ; jmp qword ptr [rdx]
0x0000000000179d49 : enter -0xd, -0x6f ; sal ebx, 1 ; call rax
0x0000000000063b4c : enter -1, -0x17 ; xchg eax, ebx ; ret -1
0x00000000000f5c94 : enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x0000000000124797 : enter 0, 0 ; call rax
0x0000000000124759 : enter 0, 0 ; jmp rcx
0x00000000000f8f83 : enter 0, 0 ; ret
0x00000000000c338f : enter 0x1b8, 0 ; add byte ptr [rax], al ; ret
0x000000000007d86a : enter 0x2373, 0xf ; mov dh, 0 ; ret
0x0000000000036594 : enter 0x280f, -0x3f ; ret
0x0000000000128d0e : enter 0x289, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000000a56aa : enter 0x31c3, -0x40 ; nop ; ret
0x000000000008905d : enter 0x31c3, -0x40 ; ret
0x0000000000128467 : enter 0x4189, 0x48 ; mov eax, 1 ; ret
0x00000000001283c4 : enter 0x4189, 0x54 ; mov eax, 1 ; ret
0x0000000000128494 : enter 0x4189, 0x58 ; mov eax, 1 ; ret
0x000000000001fc1f : enter 0x48ff, -0x7d ; ret -0x14fc
0x000000000010ce76 : enter 0x577, -0x17 ; ret -0x684
0x0000000000001b11 : enter 0x59e7, 0x5b ; ret 0x2a63
0x0000000000085e2b : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000003066a : enter 0x5d5b, 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000f1547 : enter 0x5d5b, 0x41 ; pop rsp ; ret
0x000000000017755c : enter 0x8ac, 0x47 ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000008b664 : enter 0xb24, 0 ; ret
0x0000000000037463 : enter 0xf44, 0x45 ; ret -0x72b8
0x0000000000161cf6 : enter 0xf66, -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret -0x7cf1
0x0000000000087a81 : enter 0xf66, -0x15 ; ret
0x000000000018c04d : enter 1, -0x5c ; ret -0xb
0x000000000018c05d : enter 1, -0x6c ; ret
0x000000000018c055 : enter 1, 0x14 ; ret
0x000000000018c045 : enter 1, 0x14 ; ret -0xb
0x000000000009fdc4 : enter 5, 0 ; ret
0x000000000017755f : es ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000001a0b8d : f2xm1 ; jmp qword ptr [rdx]
0x000000000005e4e7 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; pop rbp ; ret
0x000000000010a13e : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov eax, esi ; pop rbx ; pop rbp ; ret
0x000000000007bdc7 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x18] ; jmp rax
0x000000000007c313 : fadd dword ptr [rax] ; add byte ptr [rax], al ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x00000000000f7da0 : fadd dword ptr [rax] ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000047656 : fadd dword ptr [rax] ; add byte ptr [rax], al ; ret
0x000000000010b9cc : fadd dword ptr [rax] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000c88ae : fadd dword ptr [rbp + 0xffffffffffffff89] ; ror dword ptr [rcx + 0xffffffffffffff89], cl ; ret 0x1f0f
0x0000000000131ec9 : fadd dword ptr [rbx + 0x14807e0] ; ret 0x3b48
0x000000000004d981 : fadd dword ptr [rcx + 0x39] ; ret -0x79f1
0x000000000007b0bb : fadd dword ptr [rcx + 0x5d] ; ret
0x00000000000a5aa4 : fadd dword ptr [rcx + 0x5f] ; ret
0x00000000000b85a7 : fadd dword ptr [rcx + 0xffffffffffffff89] ; ret
0x00000000001aca7d : fadd dword ptr [rcx] ; add byte ptr [rax + 0xffffffffffffffed], al ; cmc ; call qword ptr [rax]
0x00000000001aca35 : fadd dword ptr [rcx] ; add byte ptr [rax], ch ; in eax, dx ; cmc ; call qword ptr [rdi]
0x000000000018c38d : fadd dword ptr [rcx] ; add byte ptr [rsp + rdx*2 + 0xfffffffffffffff6], dh ; jmp rsp
0x000000000019424c : fadd dword ptr [rdx + 0xffffffffffffffeb] ; jmp qword ptr [rdx]
0x00000000001a93b8 : fadd dword ptr [rdx + 0xfffffffffffffff5] ; jmp rax
0x0000000000189adc : fadd st(2), st(0) ; add byte ptr [rax], al ; xchg eax, esp ; push rsi ; in eax, dx ; push rsp ; ret 0
0x00000000001650f8 : fadd st(3) ; nop word ptr [rax + rax] ; ret
0x000000000016304e : fadd st(3) ; ret
0x00000000000f8b90 : fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x00000000000f087a : fbld dword ptr [rbp + rax*2 + 0xffffffffffffff8b] ; call 0xecae0
0x0000000000161841 : fbld dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret -0x7cf1
0x00000000000539f3 : fbstp dword ptr [rsi] ; add byte ptr [rbp + 0x5c], dh ; mov eax, edx ; pop rbx ; ret
0x00000000000b85bd : fcmovb st(0), st(1) ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x0000000000176b98 : fcmovb st(0), st(3) ; ret
0x00000000000364b5 : fcom dword ptr [rbx] ; add byte ptr [rdi], cl ; push rsp ; ret
0x000000000017a318 : fcom dword ptr [rdx + 0xffffffff92d8fff4] ; hlt ; call qword ptr [rax]
0x00000000001919c8 : fcom dword ptr [rsi + 0xffffffffffffffea] ; jmp qword ptr [rdi]
0x00000000001938ac : fcom qword ptr [rbx + rbp*8] ; jmp qword ptr [rdx]
0x0000000000187e8c : fcom qword ptr [rsp + rdi*8 + 0xffffffffffffffff] ; insb byte ptr es:[rdi], dx ; push rsp ; cld ; call qword ptr [rdx]
0x00000000001b6959 : fcomi st(7) ; jmp qword ptr [rcx]
0x000000000017a77c : fcomp dword ptr [rax + 0xffffffff98d8fff4] ; hlt ; call qword ptr [rsi]
0x00000000001af346 : fcomp dword ptr [rbp + rsi*8 + 0x340d1cff] ; xchg eax, ebx ; cmc ; jmp qword ptr [rdx]
0x000000000007c2e5 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000002cbf7 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000001f665 : fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000034010 : fcomp dword ptr [rbx + 0x5d] ; ret
0x0000000000086aca : fcomp dword ptr [rbx + 0xffffffffffffffc3] ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000083754 : fcomp dword ptr [rbx + 0xffffffffffffffc3] ; xor eax, eax ; pop rbx ; ret
0x0000000000177919 : fcomp dword ptr [rdx + 0x21] ; ret
0x00000000001a8bcc : fcomp qword ptr [rcx + 0x2ce00001] ; cmc ; jmp qword ptr [rcx]
0x0000000000175b80 : fcomp qword ptr [rdi + 0xffffffffffffffb6] ; ret 0x474c
0x00000000001a3ee9 : fcompi st(2) ; call qword ptr [rdx]
0x00000000000a2900 : fcompi st(3) ; ret
0x00000000001a9cd5 : fcompi st(4) ; jmp qword ptr [rdx]
0x00000000001afead : fcompi st(5) ; jmp qword ptr [rdx]
0x00000000001b6c69 : fcompi st(7) ; call rdi
0x000000000004710c : fdiv dword ptr [rbp + 0xfffffffffffffff1] ; pop rbx ; ret
0x00000000000fac10 : fdiv dword ptr [rcx] ; rol byte ptr [rbp + 0x490f48d2], -0x3e ; jmp 0xfac1d
0x00000000000b4318 : fdiv qword ptr [rax] ; add byte ptr [rcx + 0xffffffff89242444], cl ; ret
0x00000000000cc4b4 : fdiv st(3) ; ret
0x000000000019edcc : fdiv st(3), st(0) ; add byte ptr [rax], al ; lock cwde ; out dx, eax ; jmp rdi
0x0000000000187755 : fdiv st(3), st(0) ; call qword ptr [rax]
0x00000000001876d5 : fdiv st(3), st(0) ; call rax
0x00000000001792e5 : fdiv st(5), st(0) ; jmp qword ptr [rax]
0x0000000000058548 : fdiv st(7), st(0) ; dec dword ptr [rax + 0xffffffffffffff83] ; ret -0x14f8
0x00000000001876b9 : fdivp st(3) ; call rax
0x00000000000cb7af : fdivp st(3) ; dec dword ptr [rax + 1] ; ret
0x0000000000187739 : fdivp st(3) ; push qword ptr [rax] ; loopne 0x18773a ; call qword ptr [rax]
0x00000000001a62c8 : fdivr dword ptr [rax + 0xfffffffffffffff4] ; jmp qword ptr [rcx]
0x00000000000db8b7 : fdivr dword ptr [rcx] ; ret -0x3877
0x00000000000d9457 : fdivr dword ptr [rcx] ; ret -0x3e77
0x0000000000196b64 : fdivr dword ptr [rdx + 0xffffffffffffffed] ; jmp qword ptr [rdx]
0x0000000000109190 : fdivr dword ptr [rsi + 0x1002b] ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000001aaad4 : fdivr st(0), st(0) ; hlt ; jmp qword ptr [rdx]
0x000000000019e159 : fdivr st(1) ; call qword ptr [rax]
0x00000000001a2fe8 : fdivr st(3) ; int1 ; jmp qword ptr [rcx]
0x00000000000c6cc8 : fdivr st(3), st(0) ; ret
0x0000000000174ed5 : fdivr st(4) ; test al, -0x69 ; xchg eax, esp ; ret
0x00000000001a78d9 : fdivr st(4), st(0) ; jmp qword ptr [rcx]
0x00000000001a994d : fdivr st(4), st(0) ; jmp qword ptr [rdx]
0x00000000001792dd : fdivr st(5) ; jmp qword ptr [rax + 0xffffffffe0fffdda]
0x000000000018f161 : fdivr st(5) ; jmp rsp
0x0000000000109f14 : fdivr st(5) ; rep inc dword ptr [rbp + 0xffffffffffffff85] ; in al, -0x77 ; ret 0x87e
0x00000000001b1d01 : fdivr st(6), st(0) ; jmp qword ptr [rbx]
0x00000000001b1d99 : fdivr st(6), st(0) ; jmp qword ptr [rcx]
0x0000000000058a9e : fdivr st(7) ; dec dword ptr [rax + 0xffffffffffffff83] ; ret -0x14f8
0x00000000000d991a : fdivr st(7) ; dec dword ptr [rax + 0xffffffffffffff89] ; ret
0x000000000015f3cd : fdivr st(7) ; ret
0x000000000009d41e : fdivr st(7) ; xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000001a9c8d : fdivrp st(4) ; jmp qword ptr [rdx]
0x00000000001abcf1 : fdivrp st(5) ; call qword ptr [rax]
0x0000000000110aff : fiadd dword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x74b8
0x00000000000fb218 : fiadd dword ptr [rax] ; add byte ptr [rbx + 0xffffffff8914244c], cl ; ret
0x00000000000a5e30 : fiadd dword ptr [rbp + 0x450f48c9] ; ret -0x7cb8
0x000000000003db62 : fiadd dword ptr [rbp + 0x450f48ff] ; ret -0x7cb8
0x00000000000ec8c7 : fiadd dword ptr [rbx + 0x210247c] ; cmove eax, edx ; jmp 0xec88b
0x00000000000ec7b7 : fiadd dword ptr [rbx + 0x298247c] ; cmove eax, edx ; ret
0x0000000000123fce : fiadd dword ptr [rbx + 0xffffffff840f03e2] ; ret 1
0x0000000000109591 : fiadd dword ptr [rcx + 0xfffffffffff000fb] ; dec dword ptr [rdi] ; ret -0x7cb8
0x0000000000086ac4 : fiadd dword ptr [rdi] ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x0000000000134889 : fiadd word ptr [rax] ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000001f572 : ficom dword ptr [rdx + rdi] ; add byte ptr [rax + 0x5b], bl ; pop rbp ; ret
0x0000000000173930 : ficom dword ptr [rip + 0x1636ffec] ; in al, dx ; jmp qword ptr [rax]
0x000000000002baeb : ficomp dword ptr [rax] ; adc eax, 0x3d8d4800 ; ret 0x1553
0x0000000000137bad : ficomp dword ptr [rbx + 0x5d] ; xor eax, eax ; pop r12 ; ret
0x00000000000f63a9 : ficomp word ptr [rbx + 0x5d] ; xor eax, eax ; pop r12 ; ret
0x0000000000177766 : ficomp word ptr [rdx + 0xffffffffffffffe7] ; cmc ; mov ch, -0x55 ; ret
0x000000000008194a : fidiv word ptr [rbx] ; add byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], cl ; xchg eax, ebp ; ret -0x7cb8
0x0000000000136bc5 : fidivr dword ptr [rax + 1] ; ret
0x00000000000d94ad : fidivr dword ptr [rcx] ; ret -0x3e77
0x00000000000e4245 : fidivr dword ptr [rcx] ; ret 0x3173
0x0000000000048ce8 : fild dword ptr [rax + 0xf3a007d] ; xchg eax, esp ; ret
0x000000000019cd8d : fild dword ptr [rax] ; add al, dh ; insb byte ptr es:[rdi], dx ; out dx, al ; call qword ptr [rsi]
0x000000000019cd2d : fild dword ptr [rax] ; add byte ptr [rax], dh ; push -0x12 ; call qword ptr [rdi]
0x00000000000bad87 : fild dword ptr [rbp + 0x31] ; ror byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x00000000000ce5fc : fild dword ptr [rbx + 0xffffffff950f02f8] ; ret
0x0000000000112b07 : fild dword ptr [rcx + 0xffffffffffffff83] ; std ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x000000000002c2bd : fild dword ptr [rdi + 0x39] ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x00000000000f463d : fild qword ptr [rax + rax] ; add rsp, 8 ; ret
0x000000000007a436 : fild word ptr [rbp + 0x4f0f48c9] ; ret -0x76b8
0x00000000000ae25a : fild word ptr [rcx + 0x29] ; ret
0x00000000000f1356 : fild word ptr [rcx + 0xf] ; xor byte ptr [rcx], -0x40 ; ret
0x000000000004f2b8 : fild word ptr [rcx + rcx*4 + 0xffffffffffffffc0] ; ret
0x000000000018ec9d : fild word ptr [rdx] ; add byte ptr [rdi + rdi*4], al ; cli ; jmp rsp
0x000000000002610b : fimul dword ptr [rax + 0x29] ; ret -0x7cb8
0x0000000000066725 : fimul dword ptr [rax + 0x39] ; ret -0x7df1
0x000000000003ff85 : fimul dword ptr [rax + 0x39] ; ret 0xf48
0x000000000013db85 : fimul dword ptr [rax + 0x63] ; ror dword ptr [rax + 1], -8 ; ret
0x000000000011661d : fimul dword ptr [rax + 0xffffffffffffff83] ; ret -0x17ff
0x000000000012ad40 : fimul dword ptr [rax + 0xffffffffffffff83] ; ret 0x4812
0x00000000000a72d1 : fimul dword ptr [rax + 0xfffffffffffffff7] ; fimul dword ptr [rax + 0x39] ; ret 0xf48
0x000000000008d3f2 : fimul dword ptr [rax + 0xfffffffffffffff7] ; ret -8
0x000000000002079f : fimul dword ptr [rax + 0xffffffffffffffff] ; ret 0x4eb
0x0000000000139176 : fimul dword ptr [rax + rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x00000000000f2085 : fimul dword ptr [rcx + 0x39] ; ret -0x7df1
0x000000000015f1f2 : fimul dword ptr [rcx + 0xffffffffffffff83] ; call -0x3c63fef6
0x000000000015e172 : fimul dword ptr [rcx + 0xffffffffffffff83] ; call -0x3c640f76
0x0000000000055be7 : fimul dword ptr [rcx + 0xffffffffffffff89] ; ret -0x74bc
0x00000000000c5655 : fimul dword ptr [rcx + 3] ; push rdi ; adc byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x0000000000086c57 : fimul dword ptr [rcx + rcx*4 + 0xffffffffffffffee] ; call rax
0x0000000000086e13 : fimul dword ptr [rcx + rcx*4 + 0xffffffffffffffee] ; mov rdi, r12 ; call rax
0x00000000000e33cb : fimul dword ptr [rcx + rcx*4 + 0xfffffffffffffffe] ; mov rdi, r14 ; call 0xdf670
0x000000000003677f : fimul dword ptr [rcx] ; ret -0x48f1
0x0000000000095320 : fimul dword ptr [rdi] ; test al, dh ; add dword ptr [rax], eax ; add byte ptr [rcx + 0xffffffffffffff89], cl ; ret
0x0000000000051308 : fimul word ptr [rax + 0xffffffffffffff83] ; ret
0x0000000000083621 : fimul word ptr [rax + 0xffffffffffffff83] ; ret 0x4810
0x000000000012f10f : fimul word ptr [rax + 0xffffffffffffff89] ; out dx, eax ; call rcx
0x0000000000041b70 : fimul word ptr [rax + 0xffffffffffffff89] ; ret
0x000000000002ac9f : fimul word ptr [rax + 0xffffffffffffff89] ; ret -0x76b8
0x0000000000022d05 : fimul word ptr [rax + 0xffffffffffffff89] ; ret -0x7cb8
0x00000000000e47c3 : fimul word ptr [rax + 0xffffffffffffff8b] ; or cl, byte ptr [rax + 0xffffffffffffff89] ; ret 0x11e8
0x0000000000068599 : fimul word ptr [rax + 1] ; ret
0x00000000000384ee : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x38540
0x0000000000039c7e : fimul word ptr [rbp + rcx*4 + 0xa] ; jmp 0x39cd0
0x00000000000f783f : fimul word ptr [rcx + rcx*4 + 0xffffffffffffffef] ; call r14
0x0000000000086d29 : fimul word ptr [rcx + rcx*4 + 0xffffffffffffffef] ; call rdx
0x000000000012c01e : fimul word ptr [rcx + rcx*4 + 0xffffffffffffffff] ; call qword ptr [rax]
0x000000000002e29b : fimul word ptr [rdi + 0x63] ; xor al, -0x4e ; add r14, r10 ; jmp r14
0x00000000000c6dd7 : fistp qword ptr [rax + 1] ; ret
0x00000000000d6fd0 : fistp qword ptr [rcx] ; ret -0x3e77
0x00000000000754a9 : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x20] ; jmp rax
0x00000000000752ae : fistp word ptr [rbx + 0x48] ; mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000135f8b : fistp word ptr [rbx + 0x48] ; mov esi, ebp ; pop rbp ; jmp rax
0x000000000012db81 : fistp word ptr [rbx + 0x5d] ; jmp rax
0x000000000008617e : fisttp dword ptr [rax + 0x21] ; ret
0x0000000000054c44 : fisttp dword ptr [rax + 0x63] ; adc al, -0x68 ; add rax, rdx ; jmp rax
0x00000000000279ad : fisttp dword ptr [rax + 0xffffffffffffff83] ; ret 0x4801
0x0000000000039131 : fisttp dword ptr [rax + 0xffffffffffffff89] ; ret
0x00000000000966a6 : fisttp dword ptr [rax + 0xffffffffffffff89] ; ret 0x1e75
0x00000000000fd2be : fisttp dword ptr [rax + 0xffffffffffffff89] ; sbb eax, 0x2c203a ; pop rbx ; ret
0x0000000000049584 : fisttp dword ptr [rax + 0xffffffffffffff8d] ; add r9b, byte ptr [r9 + rcx*4 + 0xffffffffffffffc2] ; jmp 0x495a1
0x0000000000106074 : fisttp dword ptr [rcx + 0xffffffffffffff83] ; ret 0x4d30
0x0000000000045bd8 : fisttp dword ptr [rcx + 0xffffffffffffff89] ; fld dword ptr [rcx + 0xffffffffffffff89] ; ret
0x000000000003914b : fisttp dword ptr [rcx + 0xffffffffffffff89] ; ret -0x74b6
0x0000000000065d7b : fisttp dword ptr [rdi] ; lahf ; rol byte ptr [rsi + 0xffffffffffffff89], 0x2c ; cmp dword ptr [rcx], ebp ; ret
0x00000000000366da : fisttp dword ptr [rdi] ; ret
0x00000000000965ad : fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x000000000019c634 : fisttp dword ptr [rsi + 0xffffffffffffffee] ; jmp qword ptr [rdx]
0x00000000000c8eca : fisttp qword ptr [rax + 0xffffffffffffff83] ; ret
0x000000000003ec8e : fisttp qword ptr [rax + 0xffffffffffffff89] ; ret
0x000000000008c65a : fisttp qword ptr [rax + 0xffffffffffffffff] ; ret -0xb8
0x0000000000048a9f : fisttp qword ptr [rbp + 0x39480037] ; ret
0x000000000012c2d3 : fisttp qword ptr [rcx + 0xf] ; fisttp qword ptr [rax + 0xffffffffffffff83] ; ret
0x000000000005b514 : fisttp qword ptr [rcx + 0xffffffff83f631cb] ; ret
0x00000000000f68f7 : fisttp qword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x0000000000094b6c : fisttp word ptr [rax + 0x29] ; ret 0x2948
0x000000000011e7d2 : fisttp word ptr [rax + 0xffffffffffffff89] ; or al, 0x24 ; call r12
0x000000000005014a : fisttp word ptr [rax + 0xffffffffffffff89] ; ret
0x00000000000ed095 : fisttp word ptr [rax + 0xffffffffffffff89] ; ret 0x14c
0x00000000001367a4 : fisttp word ptr [rax + 0xffffffffffffff8b] ; and al, 0x10 ; call rax
0x00000000001216ac : fisttp word ptr [rax + 0xffffffffffffff8b] ; and al, 8 ; call rcx
0x00000000000954d8 : fisttp word ptr [rax + 1] ; ret
0x00000000000b1e07 : fisttp word ptr [rax + 1] ; ret -0x76b8
0x00000000000391cf : fisttp word ptr [rax] ; add rdx, r8 ; mov rax, rdx ; pop rbx ; ret
0x00000000000f6ab5 : fisttp word ptr [rbx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000011e8e3 : fisttp word ptr [rcx + 0xffffffffffffff89] ; in eax, 0x41 ; call rdi
0x00000000000969a0 : fisttp word ptr [rcx + 1] ; ret
0x0000000000086457 : fisttp word ptr [rcx + rcx*4 + 0xfffffffffffffffa] ; call rax
0x000000000013e57d : fisttp word ptr [rip + 0xffffffff83480000] ; ret 0x4910
0x00000000000f16b1 : fisub dword ptr [rcx + rcx*4 + 0x10] ; or eax, -1 ; ret
0x00000000000f229d : fisub dword ptr [rcx + rcx*4 + 0x10] ; or rax, -1 ; jmp 0xf226a
0x00000000000f24fd : fisub dword ptr [rcx + rcx*4 + 0x10] ; or rax, -1 ; jmp 0xf24ca
0x0000000000161c11 : fisub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret -0x7cf1
0x0000000000161911 : fisub word ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret -0x7cf1
0x0000000000122415 : fld dword ptr [rax] ; add byte ptr [rax], al ; mov rdi, rbp ; call qword ptr [rbx]
0x00000000001b798c : fld dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x0000000000045bdb : fld dword ptr [rcx + 0xffffffffffffff89] ; ret
0x000000000019cf95 : fld qword ptr [rax] ; add al, ch ; js 0x19cf89 ; jmp qword ptr [rcx]
0x000000000018ec85 : fld qword ptr [rdx] ; add byte ptr [rax + 0xffffffffffffffbe], ah ; cli ; call rsp
0x0000000000175bc1 : fld qword ptr [rsi + 0x32] ; mov bh, -0x4c ; mov edi, dword ptr [rdx] ; ret
0x000000000003682f : fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x00000000000368c9 : fld xword ptr [rsp + 0xffffffffffffffe8] ; fstp xword ptr [rdi] ; ret
0x00000000000368a9 : fld xword ptr [rsp + 0xffffffffffffffe8] ; ret
0x00000000000368f8 : fld xword ptr [rsp + 8] ; fscale ; fstp st(1) ; ret
0x00000000000367c9 : fld xword ptr [rsp + 8] ; ret
0x0000000000036a79 : fldcw word ptr [rsp + 0xfffffffffffffffe] ; ret
0x000000000008c999 : fldenv dword ptr [rsi + 0xf] ; je 0x8c9ed ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x00000000000945d7 : fldenv dword ptr [rsi + 0xf] ; je 0x9462b ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000161c91 : fldenv dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret -0x7cf1
0x000000000008c891 : fldenv dword ptr [rsi + 0xf] ; xlatb ; ret
0x0000000000189159 : fldl2e ; call rsp
0x0000000000022083 : fldl2t ; cmp dword ptr [rax], eax ; test rax, rax ; je 0x2208e ; jmp rax
0x000000000019a715 : fldln2 ; jmp qword ptr [rdx]
0x0000000000038594 : fmul dword ptr [rax + 0x11] ; rcr byte ptr [rbp + 0x5b] ; ret
0x0000000000049605 : fmul dword ptr [rax + 0x39] ; ret
0x0000000000086a0b : fmul dword ptr [rax + 0x39] ; ret 0x2f74
0x0000000000077bfc : fmul dword ptr [rax + 0xf] ; ret
0x00000000000baf83 : fmul dword ptr [rax + 0xffffffffffffff83] ; ret
0x0000000000021366 : fmul dword ptr [rax + 0xffffffffffffffff] ; ret
0x00000000000c4b02 : fmul dword ptr [rax + 3] ; adc byte ptr [r8 + 0xffffffffffffff83], r9b ; ret
0x00000000000bad6e : fmul dword ptr [rbx + 0xffffffff83480440] ; ret
0x00000000000b43be : fmul dword ptr [rcx + 0x39] ; ret
0x000000000009364e : fmul dword ptr [rcx + 0xf] ; ret
0x00000000000c5f10 : fmul dword ptr [rcx + 3] ; adc byte ptr [r8 + 0xffffffffffffff83], r9b ; ret
0x00000000000b8e34 : fmul dword ptr [rdi] ; mov dh, 0x40 ; add dword ptr [rax + 0xffffffffffffff83], ecx ; ret
0x00000000000fda8d : fmul dword ptr [rdi] ; ret
0x000000000002ddeb : fmul dword ptr [rsi + 0x63] ; add al, -0x7e ; add r8, rdx ; jmp r8
0x000000000003871a : fmul qword ptr [rax + 0xf] ; ret -0x76b8
0x00000000000be07b : fmul qword ptr [rax + 0xffffffffffffff83] ; ret
0x00000000000c5253 : fmul qword ptr [rax + 0xffffffffffffff83] ; ret 0x3c01
0x000000000002325a : fmul qword ptr [rax + 0xffffffffffffff89] ; ret
0x0000000000087e19 : fmul qword ptr [rcx + 0xffffffffffffff83] ; ret 0x7f10
0x000000000008dd1f : fmul qword ptr [rcx + 0xffffffffffffff83] ; ret 0xf10
0x00000000000a82c6 : fmul qword ptr [rcx + 0xffffffffffffff89] ; ret 0x24eb
0x00000000001a72e8 : fmul st(0) ; hlt ; jmp qword ptr [rdx]
0x000000000018c05c : fmul st(0), st(0) ; add dword ptr [rax], eax ; xchg eax, esp ; ret
0x0000000000043bc8 : fmulp st(1) ; ret
0x00000000000db9ee : fnstcw word ptr [rcx] ; rol byte ptr [rcx + 0xffffffffffffff89], 1 ; ret
0x000000000008185f : fnstenv dword ptr [rbx] ; add byte ptr [rcx], bh ; ret 0xa7e
0x0000000000002516 : fnstenv dword ptr [rdx + rdx + 0xffffffffc768ac6d] ; ret
0x0000000000035445 : fpatan ; ret
0x00000000001ad004 : frstor dword ptr [rdi + 0xfffffffffffffff5] ; jmp qword ptr [rdx]
0x0000000000161a11 : frstor dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret -0x7cf1
0x0000000000003c85 : fs ; or byte ptr [rbx + 0x4e], ch ; ret 0x6bba
0x00000000000368fc : fscale ; fstp st(1) ; ret
0x0000000000112da3 : fst dword ptr [rcx] ; sub eax, dword ptr [rax] ; call rax
0x00000000001938f4 : fst qword ptr [rbx + rbp*8] ; jmp qword ptr [rdx]
0x00000000001758a7 : fstp dword ptr [rbx + 0x4a315a58] ; ret 0x1b49
0x0000000000094d4e : fstp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000001158de : fstp qword ptr [rbx + 0x48] ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x0000000000175c20 : fstp st(0) ; ret -0x21a3
0x00000000000fac0f : fstp st(0) ; xor eax, eax ; test edx, edx ; cmovns rax, rdx ; jmp 0xfac1d
0x00000000000369e0 : fstp st(1) ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000368fe : fstp st(1) ; ret
0x0000000000036831 : fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x00000000000368cd : fstp xword ptr [rdi] ; ret
0x0000000000036fc8 : fsub dword ptr [rcx + rcx*4 + 1] ; or rax, -1 ; ret
0x00000000000ec810 : fsub dword ptr [rcx + rcx*4 + 2] ; mov eax, 0xffffffff ; ret
0x0000000000036cf2 : fsub dword ptr [rcx + rcx*4 + 2] ; or rax, -1 ; ret
0x00000000000fb37a : fsub dword ptr [rcx + rcx*4 + 6] ; or rax, -1 ; ret
0x0000000000161d11 : fsub dword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret -0x7cf1
0x00000000000993c4 : fsub dword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000000a21bb : fsub qword ptr [rsi + 0xf] ; jmp 0xa2183
0x0000000000161b11 : fsub qword ptr [rsi + 0xf] ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret -0x7cf1
0x0000000000087b9c : fsub qword ptr [rsi + 0xf] ; xlatb ; ret
0x00000000001664bb : fsub st(3), st(0) ; mov dl, 0x66 ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001ac5c8 : fsub st(5) ; cmc ; call qword ptr [rbx]
0x000000000018ad21 : fsub st(7), st(0) ; jmp rsp
0x00000000000f5c92 : fsubp st(0) ; enter -2, -1 ; mov rdi, qword ptr [r15] ; call rbx
0x000000000007080b : fsubp st(0) ; pop rdi ; ret
0x0000000000036833 : fsubp st(1) ; ret
0x00000000001891b1 : fsubp st(2) ; jmp rsp
0x00000000001a88a8 : fsubr dword ptr [rax] ; cmc ; call qword ptr [rax]
0x00000000001a5acc : fsubr qword ptr [rax + 1] ; add byte ptr [rax + 0x61], dl ; hlt ; jmp qword ptr [rax]
0x00000000001ad2cc : fsubr st(0), st(0) ; add dword ptr [rax], eax ; adc dl, bh ; cmc ; call qword ptr [rax]
0x00000000001ad3cc : fsubr st(1), st(0) ; add dword ptr [rax], eax ; lock cli ; cmc ; call qword ptr [rax]
0x000000000019a5ad : fsubr st(5) ; jmp qword ptr [rdx]
0x00000000001778f8 : fucom st(5) ; loop 0x177948 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x00000000001897e9 : fucomi st(3) ; call rsp
0x0000000000199f45 : fucomi st(5) ; jmp qword ptr [rdx]
0x00000000000ebba8 : fucomp st(0) ; ret -0xcc8
0x00000000001956e5 : fucomp st(4) ; jmp qword ptr [rdx]
0x0000000000178b2d : fucomp st(6) ; call qword ptr [rcx]
0x0000000000178b45 : fucomp st(6) ; call rsp
0x0000000000078b95 : fucompi st(0) ; adc eax, 0x89ffffd1 ; ret 0x3f7
0x00000000000c3655 : fucompi st(0) ; and eax, 0x89000289 ; ret -0x38b8
0x0000000000045189 : fucompi st(0) ; and esi, 0x8948ffff ; ret
0x00000000000aba2b : fucompi st(0) ; call rdx
0x0000000000020941 : fucompi st(0) ; mov ecx, 0x89000a7e ; ret -0x3fcf
0x0000000000078ccd : fucompi st(0) ; or eax, 0x89ffffc4 ; ret -0x4315
0x0000000000072153 : fucompi st(0) ; push rdi ; pushfq ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x72118
0x000000000002f7d7 : fucompi st(0) ; ret
0x00000000000f5028 : fucompi st(0) ; ret -0xab4
0x00000000000db248 : fucompi st(0) ; ret -0xbbf
0x00000000000cb7ac : fucompi st(0) ; sahf ; fdivp st(3) ; dec dword ptr [rax + 1] ; ret
0x0000000000035750 : fucompi st(0) ; sbb bl, byte ptr [rbp + 0xffffffffc031fffe] ; pop rbx ; ret
0x0000000000072738 : fucompi st(0) ; xacquire ; xchg eax, edi ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x72701
0x0000000000083b53 : fucompi st(0) ; xchg eax, edi ; out -1, al ; dec dword ptr [rax + 0xffffffffffffff89] ; ret 0x3d83
0x00000000000ee607 : fucompi st(0) ; xor ebx, dword ptr [rsi + 0xfffffffffffffffa] ; dec dword ptr [rax + 0x39] ; ret
0x0000000000078e72 : fucompi st(3) ; cwde ; mov esi, r8d ; call 0x750e0
0x0000000000187c14 : gs ; cld ; call rsi
0x000000000008b724 : gs ; xor eax, dword ptr [rax] ; ret
0x00000000001a72e4 : hlt ; add byte ptr [rcx], 0 ; fmul st(0) ; hlt ; jmp qword ptr [rdx]
0x000000000018f1d4 : hlt ; add qword ptr [r8], r8 ; and al, -0x1f ; std ; jmp rsp
0x000000000017a26a : hlt ; call qword ptr [rax]
0x000000000017a46e : hlt ; call qword ptr [rbx]
0x0000000000019500 : hlt ; call qword ptr [rdi]
0x000000000017a266 : hlt ; call qword ptr [rdx]
0x000000000017a372 : hlt ; call qword ptr [rsi]
0x00000000001a7a12 : hlt ; call rbx
0x000000000017a0ba : hlt ; call rcx
0x000000000017a51a : hlt ; call rdi
0x000000000017a41a : hlt ; call rdx
0x000000000017a78a : hlt ; call rsp
0x00000000001a8be4 : hlt ; cdq ; add dword ptr [rax], eax ; clc ; sub al, -0xb ; jmp qword ptr [rcx]
0x00000000001aeef4 : hlt ; clc ; add dword ptr [rax], eax ; ret
0x00000000001a2fe4 : hlt ; cmp eax, 0xfbd80001 ; int1 ; jmp qword ptr [rcx]
0x000000000017a2c2 : hlt ; dec dword ptr [rbx] ; sbb esp, esi ; jmp rdi
0x000000000017a46a : hlt ; dec dword ptr [rcx] ; cdq ; hlt ; call qword ptr [rbx]
0x000000000017a416 : hlt ; dec eax ; xchg eax, esi ; hlt ; call rdx
0x000000000018bcda : hlt ; dec esp ; lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; xor al, -0xc ; jmp rsp
0x000000000017a7fe : hlt ; inc dword ptr [rcx + 0x34fff4cb] ; retf ; hlt ; call rsp
0x0000000000195ee4 : hlt ; insb byte ptr es:[rdi], dx ; add byte ptr [rax], al ; call -0x1ae6b381
0x000000000018f0a8 : hlt ; iretd ; std ; jmp rsp
0x0000000000175ca8 : hlt ; jmp 0x175c77
0x0000000000189690 : hlt ; jmp 0x189693
0x00000000001a5ad2 : hlt ; jmp qword ptr [rax]
0x00000000001a5b1a : hlt ; jmp qword ptr [rbx]
0x000000000017a536 : hlt ; jmp qword ptr [rcx]
0x000000000017a476 : hlt ; jmp qword ptr [rdi]
0x00000000001a72ea : hlt ; jmp qword ptr [rdx]
0x000000000017a306 : hlt ; jmp qword ptr [rsi]
0x00000000001a7e02 : hlt ; jmp rax
0x000000000017a4ba : hlt ; jmp rbx
0x000000000017a2c6 : hlt ; jmp rdi
0x00000000001a578a : hlt ; jmp rdx
0x000000000017a56e : hlt ; jmp rsi
0x000000000017a3be : hlt ; jmp rsp
0x0000000000164fd5 : hlt ; jne 0x1650f0 ; ret
0x00000000001a91e4 : hlt ; lahf ; add dword ptr [rax], eax ; call 0x221a8725
0x000000000018a0b8 : hlt ; lahf ; out dx, al ; jmp rsp
0x000000000017a2be : hlt ; lcall ptr [rax + 0xbfff40d] ; sbb esp, esi ; jmp rdi
0x000000000017a752 : hlt ; ljmp ptr [rax + 0xfffffffff8fff498] ; cwde ; hlt ; call qword ptr [rsi]
0x000000000017a75e : hlt ; ljmp ptr [rax + 0xffffffffffffff98] ; hlt ; call qword ptr [rsi]
0x000000000017a76a : hlt ; ljmp ptr [rax] ; cdq ; hlt ; call qword ptr [rsi]
0x000000000017a2fe : hlt ; ljmp ptr [rbp + 0x7cfff420] ; sbb al, -0xc ; jmp qword ptr [rsi]
0x000000000017a2ca : hlt ; ljmp ptr [rbp + 0x7dfff418] ; sbb ah, dh ; call qword ptr [rdi]
0x000000000017a52e : hlt ; ljmp ptr [rcx + 0x17fff498] ; wait ; hlt ; jmp qword ptr [rcx]
0x000000000017a72e : hlt ; ljmp ptr [rcx + 0xffffffffa9fff498] ; cwde ; hlt ; call qword ptr [rsi]
0x000000000017a3b6 : hlt ; ljmp ptr [rcx + 0xffffffffa9fff498] ; cwde ; hlt ; jmp rsp
0x000000000018a0b4 : hlt ; lock add byte ptr [rax], al ; hlt ; lahf ; out dx, al ; jmp rsp
0x000000000019ab4c : hlt ; lock in eax, dx ; jmp qword ptr [rdx]
0x00000000001ad2e4 : hlt ; loopne 0x1ad2e8 ; add byte ptr [rax], cl ; cli ; cmc ; call qword ptr [rax]
0x000000000014d4ca : hlt ; mov dword ptr [rdi + 0xfffffffffffffffc], ecx ; ret
0x00000000001457ce : hlt ; mov dword ptr [rdi + 0xfffffffffffffffc], edx ; ret
0x00000000001645e3 : hlt ; movzx edx, byte ptr [rsi + 0xfffffffffffffff4] ; sub eax, edx ; ret
0x000000000019d3a4 : hlt ; pop rax ; out dx, al ; jmp qword ptr [rdx]
0x0000000000187f54 : hlt ; pop rbx ; cld ; push qword ptr [rbx + rbx*2 + 0xfffffffffffffffc] ; jmp rsp
0x00000000001a5ce4 : hlt ; push 1 ; add byte ptr [rax + 0x64], bl ; hlt ; jmp qword ptr [rcx]
0x000000000017a802 : hlt ; push qword ptr [rbx + rcx*8] ; hlt ; call rsp
0x000000000017a7ae : hlt ; push qword ptr [rsp + rcx*8] ; hlt ; call rsp
0x0000000000189af0 : hlt ; push rsi ; in eax, dx ; jmp qword ptr [rbx + rax*8]
0x00000000000a4183 : hlt ; ret
0x0000000000189ae4 : hlt ; ret 0
0x0000000000175de3 : hlt ; stosb byte ptr es:[rdi], al ; cli ; ret -0x539b
0x00000000001645e7 : hlt ; sub eax, edx ; ret
0x0000000000003c81 : hlt ; test al, 0x35 ; push rbx ; fs ; or byte ptr [rbx + 0x4e], ch ; ret 0x6bba
0x00000000000d2a33 : hlt ; xor eax, eax ; cmp byte ptr [rsi], cl ; je 0xd29c2 ; pop rbx ; ret
0x000000000017867d : idiv bh ; call rdi
0x00000000000d4f54 : idiv bh ; dec dword ptr [rax + 0xffffffffffffff83] ; ret -0x72ff
0x00000000000db243 : idiv bh ; dec dword ptr [rax + 0xffffffffffffff89] ; fucompi st(0) ; ret -0xbbf
0x00000000000f5274 : idiv bh ; dec dword ptr [rax + 0xffffffffffffff89] ; ret
0x00000000000b43f3 : idiv bh ; dec dword ptr [rcx + 0x29] ; ret
0x0000000000039b52 : idiv bh ; dec ecx ; ret
0x000000000017b21a : idiv bh ; in eax, 0x49 ; idiv bh ; ror byte ptr [rsi + 0xfffffffffffffff6], 1 ; call rax
0x000000000018c7a2 : idiv bh ; je 0x18c791 ; add dword ptr [rax], eax ; ret -0x938
0x000000000017b4fa : idiv bh ; mov esp, 0x22fff6d0 ; sal dh, cl ; jmp qword ptr [rdx]
0x00000000000afa1a : idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x000000000018c38a : idiv bh ; pushfq ; fadd dword ptr [rcx] ; add byte ptr [rsp + rdx*2 + 0xfffffffffffffff6], dh ; jmp rsp
0x00000000001ad752 : idiv bh ; ret 3
0x000000000017b21e : idiv bh ; ror byte ptr [rsi + 0xfffffffffffffff6], 1 ; call rax
0x00000000001b0e70 : idiv bh ; sbb al, 0xd ; and r14, r14 ; jmp qword ptr [rdx]
0x00000000001b1e70 : idiv bh ; sbb al, 0xd ; into ; cmp esi, esi ; jmp qword ptr [rdx]
0x00000000001b0bb8 : idiv bh ; sbb al, 0xd ; scasb al, byte ptr es:[rdi] ; and dh, dh ; jmp qword ptr [rdx]
0x00000000001b1030 : idiv bh ; sbb al, 0xd ; sub esi, esi ; jmp qword ptr [rdx]
0x000000000017ac14 : idiv bh ; test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x000000000011d1ae : idiv bh ; xor eax, eax ; ret
0x00000000001879f1 : idiv bl ; inc eax ; idiv ebx ; call qword ptr [rax]
0x00000000000257e6 : idiv byte ptr [rax + 0xffffffffffffffff] ; cmovns eax, edx ; ret
0x0000000000197004 : idiv byte ptr [rbx + 0xffffffffffffffed] ; jmp qword ptr [rdx]
0x000000000012f72d : idiv byte ptr [rsi + 0x38] ; call 0x12b940
0x00000000001879f5 : idiv ebx ; call qword ptr [rax]
0x000000000003884d : idiv ecx ; pop r15 ; ret
0x00000000000814af : idiv edi ; adc byte ptr [rax + 0xffffffffffffff89], cl ; ret 0x58b
0x00000000000afa5e : idiv edi ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000f7f95 : idiv edi ; add rsp, 0x408 ; ret
0x00000000000cb62f : idiv edi ; dec dword ptr [rax + 0xffffffffffffff83] ; ret
0x000000000011c7f9 : idiv edi ; dec dword ptr [rax + 0xffffffffffffff89] ; ret
0x00000000000abfcb : idiv edi ; dec dword ptr [rcx + 0xffffffffffffff83] ; ret 0x4104
0x0000000000039b4b : idiv edi ; dec ecx ; ret
0x000000000018cf4a : idiv edi ; lar eax, word ptr fs:[rax] ; retf -0x895 ; call rsp
0x0000000000118aad : idiv edi ; mov eax, ebx ; pop rbx ; ret
0x000000000018cc6a : idiv edi ; mov esp, 0x64000202 ; xor dh, bh ; call rsp
0x000000000018cb6a : idiv edi ; mov esp, 0x840001ff ; sub esi, edi ; call rsp
0x000000000018c98a : idiv edi ; mov esp, 0xa40001f7 ; add esi, edi ; call rsp
0x00000000000c56bd : idiv edi ; push rsi ; ret
0x00000000001b53e2 : idiv edi ; ret
0x00000000001b483a : idiv edi ; ret 0
0x00000000001b67d0 : idiv edi ; sbb al, 0xd ; ret
0x00000000001b6b70 : idiv edi ; sbb al, 0xd ; scasb al, byte ptr es:[rdi] ; xor al, -9 ; jmp qword ptr [rdx]
0x00000000001b7020 : idiv edi ; sbb al, 0xd ; sub al, byte ptr [rsi + 0xfffffffffffffff7] ; jmp qword ptr [rdx]
0x00000000001b6bd0 : idiv edi ; sbb al, 0xd ; xchg eax, ebx ; xor al, -9 ; jmp qword ptr [rdx]
0x000000000003c986 : idiv esi ; ret
0x00000000001b701f : idiv r15 ; sbb al, 0xd ; sub al, byte ptr [rsi + 0xfffffffffffffff7] ; jmp qword ptr [rdx]
0x00000000000b4403 : idiv r15b ; dec dword ptr [rcx + 0x29] ; ret
0x000000000017b21d : idiv r15b ; ror byte ptr [rsi + 0xfffffffffffffff6], 1 ; call rax
0x000000000003884c : idiv r9 ; pop r15 ; ret
0x000000000003c985 : idiv rsi ; ret
0x00000000000dc7cf : imul al ; jnp 0xdc7dc ; sti ; call rcx
0x00000000000aa187 : imul al ; ret
0x0000000000032048 : imul al ; ret 1
0x000000000012da3f : imul al ; sbb ebx, dword ptr [rdx] ; out dx, eax ; dec dword ptr [rax + 0xffffffffffffff89] ; ret
0x000000000019111e : imul byte ptr [rax] ; ljmp 0x800d1cff, -0x15d8 ; jmp qword ptr [rdx]
0x0000000000188644 : imul byte ptr [rbx + 0xffffffffab86fffc] ; cld ; call qword ptr [rsi]
0x000000000009cc18 : imul cl ; ret 8
0x00000000000e33d1 : imul eax ; cdq ; ret -1
0x000000000011c803 : imul eax ; idiv bh ; dec dword ptr [rax + 0xffffffffffffff89] ; ret
0x000000000010654f : imul eax ; pop rbx ; ret
0x00000000000394c7 : imul eax ; ret
0x00000000001068e8 : imul eax ; ret -0x41
0x00000000001065fb : imul eax ; scasd eax, dword ptr es:[rdi] ; ret -1
0x00000000000cc7ed : imul eax, dword ptr [rax], 0x450f0000 ; ret -0x7b17
0x0000000000163141 : imul eax, dword ptr [rcx], 0 ; add dh, dh ; ret 0x7502
0x00000000001a5cfd : imul eax, dword ptr [rcx], 0 ; jo 0x1a5d66 ; hlt ; jmp qword ptr [rdi]
0x00000000000d7063 : imul eax, dword ptr [rcx], 0x63480000 ; ret -0x74b8
0x000000000018b2c5 : imul eax, dword ptr [rcx], 0xf1b29400 ; call rsp
0x00000000001a5afd : imul eax, dword ptr [rcx], 0xf4619000 ; jmp qword ptr [rcx]
0x00000000001a5b15 : imul eax, dword ptr [rcx], 0xf461a800 ; jmp qword ptr [rbx]
0x00000000001a5bd5 : imul eax, dword ptr [rcx], 0xf4634800 ; jmp qword ptr [rcx]
0x00000000001a5bed : imul eax, dword ptr [rcx], 0xf4636000 ; jmp qword ptr [rcx]
0x00000000001b5b8d : imul eax, dword ptr [rdx], 0xf79a4000 ; call qword ptr [rdx]
0x00000000001b5bd5 : imul eax, dword ptr [rdx], 0xf79a9800 ; jmp qword ptr [rcx]
0x000000000019b6bd : imul ebp ; jmp qword ptr [rdx]
0x00000000001aa71c : imul ebp, ebx, -0xc ; jmp qword ptr [rdx]
0x0000000000102bd5 : imul ebx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007e439 : imul ebx, dword ptr [rax], 0x48 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010a432 : imul ebx, dword ptr [rbx + 0x5d], 0x5c41f089 ; ret
0x0000000000102b75 : imul ecx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000102aaf : imul edi, dword ptr [rax], 0x48 ; mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001ae106 : imul edi, dword ptr [rbp + 0xfffffffffffffff5], 0x270d1cff ; jl 0x1ae104 ; jmp qword ptr [rdx]
0x00000000000f0631 : imul edi, dword ptr [rbx + 0xffffffffc085ffff], -0x77 ; ret
0x00000000001253db : imul edi, ebp, 0x89c085ff ; ret
0x00000000000c6ebf : imul edi, edi, 0x8348ffff ; ret
0x00000000001885b1 : imul edi, esp, 0xfc6aa0ff ; jmp qword ptr [rax]
0x0000000000112059 : imul edx, dword ptr [rax + 0xffffffffffffffe8], 0x10 ; ret 0
0x0000000000102ba5 : imul edx, dword ptr [rax], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000ff5d3 : imul edx, dword ptr [rbx], 0x8948002c ; ret -0x76b8
0x0000000000002b60 : imul edx, edx, 0x3a ; adc al, -0x19 ; ret
0x000000000019e009 : imul esi ; call qword ptr [rcx]
0x000000000017a0d4 : imul esi, eax, -0xd ; jmp rax
0x000000000018bf79 : imul esi, ebp, -1 ; pop rsp ; ret
0x00000000001ad497 : imul esi, ebp, -1 ; sbb al, 0xd ; or ebp, dword ptr [rcx + 0xfffffffffffffff5] ; jmp qword ptr [rdx]
0x00000000001ad07f : imul esi, ebp, 0xdd0d1cff ; cmc ; jmp qword ptr [rdx]
0x00000000000b226e : imul esi, edx ; add eax, esi ; ret
0x00000000001795f1 : imul esi, edx, 0xf26910ff ; jmp qword ptr [rax]
0x000000000017960d : imul esi, edx, 0xf269c0ff ; jmp rax
0x0000000000179615 : imul esi, edx, 0xf26a00ff ; jmp qword ptr [rax]
0x000000000019bb7e : imul esp, dword ptr [rcx + 0xffffffffffffffee], 0xc50d1cff ; adc dh, ch ; jmp qword ptr [rdx]
0x000000000009d95c : imul esp, dword ptr [rsi + 0xf], 0x74 ; ret 0xff3
0x000000000000374c : in al, -0x12 ; jne 0x372a ; ret 0x975
0x00000000000c82d2 : in al, -0x15 ; ret
0x0000000000061f35 : in al, -0x17 ; out -1, eax ; dec dword ptr [rbp + rcx*4 + 0x2d] ; ret
0x00000000000bceb5 : in al, -0x17 ; ret -3
0x00000000001aff84 : in al, -0x21 ; cmc ; jmp qword ptr [rdx]
0x000000000018beb0 : in al, -0x29 ; hlt ; jmp rsp
0x00000000001ab7d4 : in al, -0x3b ; add dword ptr [rax], eax ; js 0x1ab7ae ; cmc ; jmp qword ptr [rsi]
0x00000000001ab4d4 : in al, -0x3e ; add dword ptr [rax], eax ; cwde ; sal ch, cl ; jmp qword ptr [rsi]
0x000000000018ece0 : in al, -0x40 ; cli ; push qword ptr [rcx + 2] ; add ah, al ; ret -6
0x000000000018dc90 : in al, -0x50 ; clc ; jmp rsp
0x00000000001a8cd4 : in al, -0x66 ; add dword ptr [rax], eax ; js 0x1a8d08 ; cmc ; jmp qword ptr [rcx]
0x0000000000109f1a : in al, -0x77 ; ret 0x87e
0x00000000001a78d4 : in al, -0x7a ; add dword ptr [rax], eax ; test al, -0x24 ; hlt ; jmp qword ptr [rcx]
0x00000000000e20ed : in al, -0x7d ; mov byte ptr [rcx], -0x7d ; ret 0x4840
0x00000000001b2021 : in al, -0xa ; jmp rdx
0x000000000014d4aa : in al, -0xd ; movq qword ptr [rdi + 0xfffffffffffffff0], mm1 ; ret
0x000000000008391e : in al, -1 ; dec dword ptr [rax + 0xffffffffffffff89] ; ret 0x3d83
0x00000000000f7725 : in al, -1 ; dec dword ptr [rax + 0xffffffffffffff8b] ; jge 0xf772c ; call r12
0x00000000001877c9 : in al, -5 ; call rax
0x0000000000187725 : in al, -5 ; jmp qword ptr [rax]
0x0000000000165008 : in al, 0 ; add byte ptr [rax], al ; ret
0x00000000000fb481 : in al, 0 ; add byte ptr [rax], al ; syscall ; ret
0x0000000000189efd : in al, 0 ; add ch, cl ; mov dh, ch ; call rsp
0x00000000001916d4 : in al, 0x24 ; add byte ptr [rax], al ; sbb byte ptr [rdx + 0xffffffffffffffea], dl ; call qword ptr [rcx]
0x0000000000036bc3 : in al, 0x38 ; add byte ptr [rbp + 0xfffffffff30675c0], al ; ret
0x0000000000189a98 : in al, 0x4d ; in eax, dx ; jmp rsp
0x00000000000a6893 : in al, 0x4d ; mov ebp, esi ; setne dl ; jmp 0xa68a8
0x00000000000ab743 : in al, 0x4d ; mov ebp, esi ; setne dl ; jmp 0xab758
0x000000000018e8c8 : in al, 0x55 ; cli ; call rsp
0x000000000012f6d8 : in al, 0x55 ; push rbx ; xor ebx, ebx ; call 0x12b970
0x000000000010d128 : in al, 0x66 ; sub eax, dword ptr [rax] ; add rsp, 0x28 ; jmp rax
0x00000000001a5bd4 : in al, 0x69 ; add dword ptr [rax], eax ; movsxd rsi, esp ; jmp qword ptr [rcx]
0x00000000001b60d4 : in al, 0x6e ; add al, byte ptr [rax] ; test al, 4 ; sti ; jmp qword ptr [rdx]
0x00000000001a60d4 : in al, 0x6e ; add dword ptr [rax], eax ; call 0x221a5550
0x000000000008799c : in al, 0x74 ; or dword ptr [rax + 0xffffffffffffffff], ecx ; ret -0x3eb8
0x00000000000f6990 : in al, 0xc ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000009e498 : in al, 6 ; add byte ptr [rax], al ; ret
0x0000000000085613 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret
0x0000000000031e14 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; ret 0xd6e
0x000000000010c8f8 : in al, dx ; add byte ptr [rax], 0 ; add al, ch ; scasb al, byte ptr es:[rdi] ; ret
0x0000000000193adc : in al, dx ; add byte ptr [rax], al ; cmp byte ptr [rdx], -6 ; jmp qword ptr [rcx]
0x0000000000138840 : in al, dx ; add eax, 0x83480000 ; ret -0x14f0
0x000000000019567a : in al, dx ; call qword ptr [rax]
0x0000000000019470 : in al, dx ; call qword ptr [rdi]
0x000000000016733e : in al, dx ; call rax
0x0000000000173a4a : in al, dx ; call rcx
0x000000000019558a : in al, dx ; call rdx
0x000000000016737e : in al, dx ; call rsp
0x00000000000397c8 : in al, dx ; cmp dh, dh ; ret 0x7401
0x00000000001a8adc : in al, dx ; cwde ; add dword ptr [rax], eax ; lock sub esi, ebp ; jmp qword ptr [rcx]
0x0000000000173a46 : in al, dx ; dec dword ptr [rax + 0x18] ; in al, dx ; call rcx
0x000000000016734a : in al, dx ; dec dword ptr [rax + 0x6b] ; in al, dx ; jmp rax
0x0000000000173a42 : in al, dx ; dec dword ptr [rbx + 0x48ffec17] ; sbb ah, ch ; call rcx
0x0000000000039f39 : in al, dx ; fld xword ptr [rsp + 0xffffffffffffffe8] ; ret
0x000000000019a99d : in al, dx ; in eax, dx ; jmp qword ptr [rdx]
0x000000000016733a : in al, dx ; inc dword ptr [rax] ; insb byte ptr es:[rdi], dx ; in al, dx ; call rax
0x00000000001a5fdc : in al, dx ; insd dword ptr es:[rdi], dx ; add dword ptr [rax], eax ; mov al, 0x6c ; hlt ; jmp qword ptr [rcx]
0x00000000001a2c19 : in al, dx ; int1 ; jmp qword ptr [rcx]
0x00000000000d59dd : in al, dx ; jl 0xd5a10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000167336 : in al, dx ; jmp qword ptr [rax]
0x0000000000194e3a : in al, dx ; jmp qword ptr [rcx]
0x0000000000194e96 : in al, dx ; jmp qword ptr [rdx]
0x000000000016734e : in al, dx ; jmp rax
0x0000000000173a0a : in al, dx ; jmp rdx
0x00000000001898fa : in al, dx ; jmp rsp
0x00000000000ec276 : in al, dx ; jo 0xec26f ; ret 0x4840
0x00000000001898f2 : in al, dx ; lcall ptr [rbx + rsi*4 + 0x98f0000] ; in al, dx ; jmp rsp
0x0000000000177764 : in al, dx ; lock ficomp word ptr [rdx + 0xffffffffffffffe7] ; cmc ; mov ch, -0x55 ; ret
0x00000000000f3ef3 : in al, dx ; mov byte ptr [r9 + 0xffffffffffffffff], 0 ; ret
0x000000000019acdc : in al, dx ; mov edx, 0x10d00000 ; out dx, al ; jmp qword ptr [rcx]
0x00000000001457ca : in al, dx ; mov qword ptr [rdi + 0xfffffffffffffff4], rcx ; mov dword ptr [rdi + 0xfffffffffffffffc], edx ; ret
0x0000000000097853 : in al, dx ; mov qword ptr [rdx], rcx ; ret
0x000000000012dcf4 : in al, dx ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x000000000004989a : in al, dx ; mov rax, rsi ; nop ; ret
0x000000000014d8aa : in al, dx ; movdqu xmmword ptr [rdi + 0xfffffffffffffff0], xmm1 ; ret
0x00000000001a82dc : in al, dx ; nop ; add dword ptr [rax], eax ; loopne 0x1a82ed ; cmc ; jmp qword ptr [rcx]
0x00000000000fc90e : in al, dx ; or al, ch ; jmp 0xfc8d6
0x00000000000e4e0e : in al, dx ; or al, ch ; mov ebx, 0x39fffde9 ; ret
0x0000000000083dca : in al, dx ; or byte ptr [rax + 0x39], cl ; ret -0x78f1
0x000000000008202a : in al, dx ; or byte ptr [rax + 0xffffffffffffff83], cl ; call qword ptr [rax]
0x000000000012f48f : in al, dx ; or byte ptr [rax + 0xffffffffffffff89], -0x30 ; pop rbx ; ret
0x0000000000139564 : in al, dx ; or byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x000000000001f662 : in al, dx ; or byte ptr [rcx + 0x415d5bd8], 0x5c ; ret
0x00000000000f3112 : in al, dx ; or byte ptr [rdi + 0x1000], bh ; call 0x1f410
0x000000000018a421 : in al, dx ; out dx, al ; call rsp
0x000000000019f0c1 : in al, dx ; out dx, eax ; call rsp
0x0000000000167346 : in al, dx ; push qword ptr [rax + 0x6b] ; in al, dx ; dec dword ptr [rax + 0x6b] ; in al, dx ; jmp rax
0x0000000000167332 : in al, dx ; push qword ptr [rax] ; insb byte ptr es:[rdi], dx ; in al, dx ; jmp qword ptr [rax]
0x0000000000178e48 : in al, dx ; push rbx ; out dx, eax ; dec dword ptr [rcx + rdx*2] ; out dx, eax ; call qword ptr [rax]
0x0000000000189b2c : in al, dx ; ret
0x000000000019b4dc : in al, dx ; ret 0
0x00000000000707f9 : in al, dx ; ret 7
0x00000000000a4cc6 : in al, dx ; sbb byte ptr [rbx + 0x48], 0x29 ; call -0x3c9971d3
0x00000000000a45ef : in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000013121d : in al, dx ; sbb byte ptr [rbx + 0xffffffff940f0afe], al ; ret
0x00000000001b0adc : in al, dx ; sbb byte ptr [rdx], al ; add al, dl ; mov cl, -0xa ; jmp qword ptr [rcx]
0x0000000000187995 : in al, dx ; sti ; jmp qword ptr [rax]
0x000000000019bca4 : in al, dx ; sub dh, ch ; jmp qword ptr [rdx]
0x00000000001a8ddc : in al, dx ; wait ; add dword ptr [rax], eax ; shr byte ptr [rdi], 1 ; cmc ; jmp qword ptr [rcx]
0x000000000017733e : in al, dx ; xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x1772c9 ; ret 0x48f
0x0000000000116f12 : in al, dx ; xor byte ptr [rcx], -0x40 ; pop rbx ; ret
0x0000000000189261 : in eax, -0x16 ; call rsp
0x00000000001ae9ec : in eax, -0x79 ; cmc ; jmp qword ptr [rdx]
0x00000000001ac599 : in eax, -0xb ; call qword ptr [rax]
0x00000000001ac5c9 : in eax, -0xb ; call qword ptr [rbx]
0x000000000014d52a : in eax, -0xd ; movq qword ptr [rdi + 0xfffffffffffffff0], mm1 ; ret
0x000000000009238a : in eax, -0xd ; ret
0x00000000001a2ab1 : in eax, -0xf ; jmp rsi
0x0000000000057e69 : in eax, -1 ; dec dword ptr [rax + 0xffffffffffffff83] ; ret -0x14f8
0x0000000000176dc1 : in eax, -1 ; lahf ; mov dh, -0x39 ; ret -0x18e1
0x00000000001792f5 : in eax, -3 ; jmp qword ptr [rax]
0x00000000001877a9 : in eax, -5 ; jmp qword ptr [rax]
0x0000000000187749 : in eax, -5 ; jmp rax
0x000000000007ae62 : in eax, 0 ; adc byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x0000000000189f1d : in eax, 0 ; add bh, dl ; mov esi, ebp ; jmp rsp
0x0000000000175a43 : in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000000f4038 : in eax, 0x2c ; add byte ptr [rax + 0xffffffff89480038], al ; ret
0x0000000000081239 : in eax, 0x33 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000e4f78 : in eax, 0x39 ; ret
0x000000000011e8e6 : in eax, 0x41 ; call rdi
0x00000000000a3d6a : in eax, 0x44 ; sub eax, eax ; nop ; ret
0x000000000009886a : in eax, 0x48 ; mov eax, ebx ; pop rbx ; ret
0x000000000008d31a : in eax, 0x48 ; mov eax, edi ; ret
0x00000000000499d2 : in eax, 0x48 ; mov eax, esi ; ret
0x000000000017b21c : in eax, 0x49 ; idiv bh ; ror byte ptr [rsi + 0xfffffffffffffff6], 1 ; call rax
0x00000000000f3e8e : in eax, 0x49 ; mov ecx, esi ; mov byte ptr [r9 + 0xffffffffffffffff], 0 ; ret
0x000000000010b835 : in eax, 0x5d ; ret
0x0000000000174cd9 : in eax, 0x6a ; mov eax, 0x45155e93 ; ret 0x591c
0x00000000000a3b43 : in eax, 0xf ; je 0xa3b60 ; add rax, 2 ; ret
0x00000000000283d6 : in eax, dx ; add byte ptr [rax], al ; add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x0000000000066697 : in eax, dx ; add dword ptr [rax + 1], ecx ; ret
0x00000000000a9852 : in eax, dx ; add dword ptr [rcx + 0xffffffffffffff83], ecx ; jmp -0x3d721fa4
0x00000000001959fa : in eax, dx ; call qword ptr [rax]
0x0000000000197b3a : in eax, dx ; call qword ptr [rcx]
0x000000000019585a : in eax, dx ; call qword ptr [rdx]
0x00000000001740c6 : in eax, dx ; call rax
0x0000000000196c12 : in eax, dx ; call rbx
0x00000000001972da : in eax, dx ; call rcx
0x0000000000189b1a : in eax, dx ; call rsp
0x00000000001aca81 : in eax, dx ; cmc ; call qword ptr [rax]
0x00000000001aca39 : in eax, dx ; cmc ; call qword ptr [rdi]
0x00000000001740c2 : in eax, dx ; dec dword ptr [rax] ; xor ebp, ebp ; call rax
0x0000000000177f7a : in eax, dx ; dec dword ptr [rdx] ; in eax, dx ; dec dword ptr [rdx] ; in eax, dx ; jmp rdi
0x0000000000177f7e : in eax, dx ; dec dword ptr [rdx] ; in eax, dx ; jmp rdi
0x0000000000189b7a : in eax, dx ; dec dword ptr [rsi + rax*8 + 0x5daa0000] ; in eax, dx ; call rsp
0x00000000001afeac : in eax, dx ; fcompi st(5) ; jmp qword ptr [rdx]
0x00000000001999d9 : in eax, dx ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a1714 : in eax, dx ; jae 0x1a1708 ; jmp qword ptr [rdx]
0x000000000002f62d : in eax, dx ; jmp 0x2f633
0x0000000000195e2a : in eax, dx ; jmp qword ptr [rax]
0x0000000000189af2 : in eax, dx ; jmp qword ptr [rbx + rax*8]
0x00000000001958be : in eax, dx ; jmp qword ptr [rdx]
0x000000000019a272 : in eax, dx ; jmp rax
0x000000000019726a : in eax, dx ; jmp rbx
0x000000000019579a : in eax, dx ; jmp rcx
0x0000000000177f82 : in eax, dx ; jmp rdi
0x0000000000196592 : in eax, dx ; jmp rsi
0x0000000000189a9a : in eax, dx ; jmp rsp
0x0000000000165e9f : in eax, dx ; jne 0x165e78 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007b7ac : in eax, dx ; jne 0x7b7c0 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007b9f9 : in eax, dx ; jne 0x7ba28 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000d153a : in eax, dx ; jne 0xd1520 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001add24 : in eax, dx ; js 0x1add1c ; jmp qword ptr [rdx]
0x00000000000a20d2 : in eax, dx ; lea rax, qword ptr [rcx + 0xffffffffffffffff] ; ret
0x0000000000189a92 : in eax, dx ; ljmp ptr [rax + rax*8 + 0x4de40000] ; in eax, dx ; jmp rsp
0x00000000000a1a99 : in eax, dx ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a1aaf : in eax, dx ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a1ad1 : in eax, dx ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a1aef : in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a1b0f : in eax, dx ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a1b35 : in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a1b51 : in eax, dx ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a1b71 : in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a1b91 : in eax, dx ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a1bb7 : in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a1bd9 : in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a1bf7 : in eax, dx ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a1c17 : in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a1c33 : in eax, dx ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a1c53 : in eax, dx ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a1c73 : in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a1c93 : in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a1cb9 : in eax, dx ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a1d09 : in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a19df : in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a19fd : in eax, dx ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a1a1d : in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a1a3f : in eax, dx ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a1a5f : in eax, dx ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a1a7f : in eax, dx ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a1915 : in eax, dx ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a1927 : in eax, dx ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a193d : in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a1955 : in eax, dx ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a196b : in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a197d : in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a199b : in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a19a7 : in eax, dx ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000a19bd : in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a1901 : in eax, dx ; mov byte ptr [rdi], ch ; ret
0x00000000000a6135 : in eax, dx ; mov edx, eax ; jmp 0xa60e0
0x00000000000a8975 : in eax, dx ; mov edx, eax ; jmp 0xa8920
0x00000000000ab025 : in eax, dx ; mov edx, eax ; jmp 0xaafd0
0x00000000001455da : in eax, dx ; mov qword ptr [rdi + 0xfffffffffffffff5], rcx ; mov dword ptr [rdi + 0xfffffffffffffffc], edx ; ret
0x00000000000977a2 : in eax, dx ; mov rax, rdi ; ret
0x00000000000a906f : in eax, dx ; mov rbx, r15 ; setne dl ; jmp 0xa9087
0x000000000014d92a : in eax, dx ; movdqu xmmword ptr [rdi + 0xfffffffffffffff0], xmm1 ; ret
0x00000000000d509d : in eax, dx ; movsxd rcx, dword ptr [rax + r13*4] ; add rax, rcx ; jmp rax
0x00000000000890c8 : in eax, dx ; or al, 0 ; ret
0x000000000013d0d0 : in eax, dx ; or byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x00000000000c1998 : in eax, dx ; pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000189b12 : in eax, dx ; push qword ptr [rbx + rax*8] ; add byte ptr [rax + rbx*2], al ; in eax, dx ; call rsp
0x0000000000189ae2 : in eax, dx ; push rsp ; ret 0
0x00000000000a1eb2 : in eax, dx ; ret
0x00000000001879d5 : in eax, dx ; sti ; call qword ptr [rax + 0xffffffffe0fffbee]
0x00000000000a2222 : in eax, dx ; sub rax, 1 ; ret
0x000000000016617f : in eax, dx ; xchg eax, edx ; jmp 0x166182
0x00000000000876e2 : in eax, dx ; xor eax, eax ; ret
0x000000000008d235 : inc bl ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx + 0xfffffffffffffffc], ecx ; ret
0x000000000010e71c : inc byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x74b8
0x000000000019f0a5 : inc byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffffe6], bh ; out dx, eax ; jmp qword ptr [rbx]
0x00000000001147ee : inc byte ptr [rbx + 0x394101c0] ; ret -0x268b
0x00000000000bac41 : inc byte ptr [rcx] ; je 0xbac50 ; xor eax, eax ; ret
0x00000000000f3e94 : inc dword ptr [r8] ; ret
0x0000000000187b0b : inc dword ptr [rax + 0x10fffc37] ; sub bh, ah ; call rax
0x0000000000187b9f : inc dword ptr [rax + 0x19] ; cld ; call qword ptr [rax + 0xffffffffe0fffc1a]
0x0000000000187a13 : inc dword ptr [rax + 0x2d] ; cld ; jmp qword ptr [rax]
0x0000000000187b27 : inc dword ptr [rax + 0x35] ; cld ; inc dword ptr [rax + 0x37] ; cld ; call rax
0x0000000000187aa7 : inc dword ptr [rax + 0x36] ; cld ; inc dword ptr [rax + 0x38] ; cld ; call rax
0x0000000000187b2b : inc dword ptr [rax + 0x37] ; cld ; call rax
0x0000000000187aab : inc dword ptr [rax + 0x38] ; cld ; call rax
0x000000000018790f : inc dword ptr [rax + 0x40fffc02] ; add al, -4 ; jmp qword ptr [rax]
0x000000000018735b : inc dword ptr [rax + 0x4f] ; sti ; jmp qword ptr [rax]
0x00000000001872a3 : inc dword ptr [rax + 0x50fffb13] ; adc al, -5 ; jmp qword ptr [rax]
0x0000000000178e5b : inc dword ptr [rax + 0x53] ; out dx, eax ; call qword ptr [rax]
0x0000000000178ec7 : inc dword ptr [rax + 0x53] ; out dx, eax ; inc dword ptr [rax + 0x53] ; out dx, eax ; call qword ptr [rax]
0x0000000000178efb : inc dword ptr [rax + 0x53] ; out dx, eax ; inc dword ptr [rax + 0x53] ; out dx, eax ; jmp rax
0x0000000000178eff : inc dword ptr [rax + 0x53] ; out dx, eax ; jmp rax
0x000000000018737b : inc dword ptr [rax + 0x5e] ; sti ; jmp qword ptr [rax]
0x0000000000187c0b : inc dword ptr [rax + 0x5f] ; cld ; call rsi
0x0000000000187de3 : inc dword ptr [rax + 0x63] ; cld ; call rax
0x0000000000187393 : inc dword ptr [rax + 0x6d] ; sti ; call qword ptr [rax + 0xffffffffe0fffb6e]
0x000000000017912b : inc dword ptr [rax + 0x7e] ; int1 ; call qword ptr [rax + 0xffffffffe0fff180]
0x00000000001795bb : inc dword ptr [rax + 0xffffffffb0fff267] ; jmp rax
0x000000000017913b : inc dword ptr [rax + 0xffffffffd0fff187] ; mov ecx, esi ; jmp qword ptr [rax]
0x00000000001873a3 : inc dword ptr [rax + 0xffffffffd0fffb72] ; jae 0x1873a6 ; jmp qword ptr [rax]
0x00000000001879e3 : inc dword ptr [rax + 0xffffffffd0fffbf2] ; rep sti ; jmp qword ptr [rax]
0x0000000000187b5b : inc dword ptr [rax + 0xffffffffd0fffc17] ; sbb ah, bh ; jmp qword ptr [rax]
0x0000000000060283 : inc dword ptr [rax + 0xffffffffffef46bd] ; jmp qword ptr [rax]
0x000000000004b1d6 : inc dword ptr [rax + 0xfffffffffffb04bd] ; jmp qword ptr [rax]
0x000000000004a68d : inc dword ptr [rax + 0xfffffffffffb06bd] ; jmp qword ptr [rax]
0x00000000001880f7 : inc dword ptr [rax + 0xffffffffffffff87] ; cld ; call rax
0x000000000017aee3 : inc dword ptr [rax + 0xffffffffffffffa4] ; cmc ; jmp qword ptr [rbx]
0x0000000000187533 : inc dword ptr [rax + 0xffffffffffffffa9] ; std ; call rax
0x0000000000188807 : inc dword ptr [rax + 0xffffffffffffffab] ; cld ; call rax
0x00000000001885ef : inc dword ptr [rax + 0xffffffffffffffae] ; cld ; call rax
0x00000000001877f3 : inc dword ptr [rax + 0xffffffffffffffcf] ; sti ; call qword ptr [rax + 0xffffffffe0fffbd0]
0x000000000018771f : inc dword ptr [rax + 0xffffffffffffffe2] ; sti ; jmp qword ptr [rax]
0x00000000001879d3 : inc dword ptr [rax + 0xffffffffffffffed] ; sti ; call qword ptr [rax + 0xffffffffe0fffbee]
0x00000000001879bf : inc dword ptr [rax + 0xfffffffffffffffb] ; sti ; call qword ptr [rax + 0xffffffffe0fffbfc]
0x0000000000187d7f : inc dword ptr [rax + 0xfffffffffffffffc] ; call rsp
0x000000000018792f : inc dword ptr [rax + 2] ; cld ; inc dword ptr [rax] ; add al, -4 ; jmp rax
0x0000000000187913 : inc dword ptr [rax + 4] ; cld ; jmp qword ptr [rax]
0x0000000000187977 : inc dword ptr [rax + 5] ; cld ; jmp qword ptr [rax]
0x00000000001878fb : inc dword ptr [rax + 8] ; cld ; jmp qword ptr [rax]
0x000000000018e44b : inc dword ptr [rax + rbp*4 + 0xffffffffcfb40002] ; stc ; call rsp
0x000000000018826b : inc dword ptr [rax + rcx*4 + 0xfffffffffffffffc] ; call rsp
0x000000000018f0a3 : inc dword ptr [rax + rsi*2] ; add ah, dh ; iretd ; std ; jmp rsp
0x000000000018a30d : inc dword ptr [rax] ; add ah, al ; ret -0x12
0x0000000000187933 : inc dword ptr [rax] ; add al, -4 ; jmp rax
0x00000000001791fb : inc dword ptr [rax] ; add byte ptr [rax], al ; add al, al ; jl 0x1791ff ; jmp rax
0x0000000000061364 : inc dword ptr [rax] ; add byte ptr [rax], al ; add al, ch ; ret 0x439
0x00000000000627b3 : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xffffffffffffff89], cl ; ret -0x74b4
0x000000000004b7ea : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xffffffffffffff89], cl ; ret -0x74bc
0x00000000000ce64a : inc dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x0000000000164fed : inc dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000162227 : inc dword ptr [rax] ; add byte ptr [rax], al ; sub eax, ecx ; ret
0x000000000019f105 : inc dword ptr [rax] ; add byte ptr [rax], bh ; adc al, -0x10 ; jmp rbx
0x000000000018a315 : inc dword ptr [rax] ; add byte ptr [rbx + rax*8 + 0xffffffffffffffee], dl ; jmp rsp
0x0000000000065d36 : inc dword ptr [rax] ; add dword ptr [rax], eax ; add cl, ch ; ret
0x00000000001872db : inc dword ptr [rax] ; and bl, bh ; push rax ; and bl, bh ; jmp rax
0x0000000000187dd3 : inc dword ptr [rax] ; cld ; call qword ptr [rax + 0x20fffc64]
0x00000000001795ef : inc dword ptr [rax] ; imul esi, edx, 0xf26910ff ; jmp qword ptr [rax]
0x000000000016733b : inc dword ptr [rax] ; insb byte ptr es:[rdi], dx ; in al, dx ; call rax
0x0000000000178127 : inc dword ptr [rax] ; insd dword ptr es:[rdi], dx ; out dx, al ; jmp rax
0x0000000000179207 : inc dword ptr [rax] ; jg 0x179207 ; jmp qword ptr [rax]
0x000000000017957f : inc dword ptr [rax] ; jmp qword ptr gs:[rax]
0x000000000018850f : inc dword ptr [rax] ; jp 0x18850f ; jmp qword ptr [rax + 0x20fffc81]
0x000000000017919f : inc dword ptr [rax] ; jrcxz 0x179194 ; call qword ptr [rax]
0x000000000017926b : inc dword ptr [rax] ; lahf ; cld ; push qword ptr [rax + 0xffffffffffffffa0] ; cld ; jmp rax
0x00000000001887f7 : inc dword ptr [rax] ; lodsd eax, dword ptr [rsi] ; cld ; call qword ptr [rax + 0x20fffcac]
0x00000000001877bf : inc dword ptr [rax] ; loope 0x1877be ; call rax
0x0000000000179227 : inc dword ptr [rax] ; mov ah, bh ; jmp qword ptr [rax]
0x00000000001885df : inc dword ptr [rax] ; mov al, -4 ; call qword ptr [rax + 0x20fffcaf]
0x00000000001880e7 : inc dword ptr [rax] ; mov esp, edi ; call qword ptr [rax + 0x20fffc88]
0x000000000018791b : inc dword ptr [rax] ; or ah, bh ; jmp rax
0x000000000010d257 : inc dword ptr [rax] ; or eax, esi ; bswap eax ; ret
0x000000000018854f : inc dword ptr [rax] ; pop rbp ; cld ; jmp qword ptr [rax]
0x0000000000179617 : inc dword ptr [rax] ; push -0xe ; jmp qword ptr [rax]
0x0000000000179107 : inc dword ptr [rax] ; push 0x49a0fff1 ; int1 ; call qword ptr [rax]
0x0000000000178e57 : inc dword ptr [rax] ; push rbx ; out dx, eax ; inc dword ptr [rax + 0x53] ; out dx, eax ; call qword ptr [rax]
0x0000000000187363 : inc dword ptr [rax] ; push rbx ; sti ; jmp rax
0x00000000000f3e95 : inc dword ptr [rax] ; ret
0x00000000001872c3 : inc dword ptr [rax] ; sbb bh, bl ; call rax
0x00000000001882ff : inc dword ptr [rax] ; xchg ah, bh ; call qword ptr [rax + 0x20fffc85]
0x0000000000187a1b : inc dword ptr [rax] ; xor esp, edi ; jmp rax
0x00000000000bceb2 : inc dword ptr [rbp + 0x31] ; in al, -0x17 ; ret -3
0x00000000000d06fd : inc dword ptr [rbp + 0x39ee74f1] ; ret -0x71f1
0x00000000000af146 : inc dword ptr [rbp + 0x79c789c0] ; ret
0x00000000000f48ea : inc dword ptr [rbp + 0xffffffff831174c0] ; ret
0x00000000000f489f : inc dword ptr [rbp + 0xffffffff831c74c0] ; ret
0x0000000000048826 : inc dword ptr [rbp + 0xffffffffc2490fd2] ; pop rbx ; ret
0x0000000000109f17 : inc dword ptr [rbp + 0xffffffffffffff85] ; in al, -0x77 ; ret 0x87e
0x00000000000961ed : inc dword ptr [rbp + 0xffffffffffffff85] ; rol byte ptr [rcx + 0xf], cl ; xchg eax, ebp ; ret 0x5474
0x00000000001189d4 : inc dword ptr [rbp + 1] ; ret 0x3941
0x0000000000178b2b : inc dword ptr [rbp + rbx*8 + 0xffffffffffffffee] ; call qword ptr [rcx]
0x0000000000178b43 : inc dword ptr [rbp + rbx*8 + 0xffffffffffffffee] ; call rsp
0x000000000018e0a3 : inc dword ptr [rbp + rcx*4 + 0x65340002] ; stc ; call rsp
0x0000000000032d86 : inc dword ptr [rbx + 0xfff0878] ; xchg eax, ebp ; ret -0x6417
0x000000000006db07 : inc dword ptr [rbx + 0xffffffff840f69f8] ; ret -2
0x0000000000122fbd : inc dword ptr [rbx + 0xffffffff894863fd] ; ret
0x00000000001151ef : inc dword ptr [rbx + 0xfffffffff374f5f8] ; pop rbx ; ret
0x000000000005ff6a : inc dword ptr [rbx + 0xffffffffffef00bd] ; jmp qword ptr [rax]
0x00000000000c5332 : inc dword ptr [rbx + 0xfffffffffffe388d] ; jmp qword ptr [rax]
0x00000000000c553c : inc dword ptr [rbx + 0xfffffffffffe508d] ; jmp qword ptr [rax]
0x0000000000080ee6 : inc dword ptr [rbx + 0xffffffffffffff8d] ; sub eax, 0x448d48fe ; ret
0x00000000000e54b5 : inc dword ptr [rbx + rcx*4 + 0x65] ; adc byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x000000000003d0b9 : inc dword ptr [rbx] ; add byte ptr [rax], al ; xor eax, edx ; ret
0x00000000000a283a : inc dword ptr [rbx] ; div ecx ; pop rbx ; mov eax, eax ; ret
0x00000000000a273f : inc dword ptr [rbx] ; pop rbx ; ret
0x00000000000614e4 : inc dword ptr [rcx + 0x29] ; ret 0x3945
0x000000000017a7ff : inc dword ptr [rcx + 0x34fff4cb] ; retf ; hlt ; call rsp
0x000000000004b87c : inc dword ptr [rcx + 0x39] ; ret
0x000000000004dc39 : inc dword ptr [rcx + 0x39] ; ret -0x78f1
0x000000000007466b : inc dword ptr [rcx + 0x5c] ; ret
0x0000000000118503 : inc dword ptr [rcx + 0x5e] ; ret
0x0000000000076b09 : inc dword ptr [rcx + 0x5f] ; ret
0x00000000000f422c : inc dword ptr [rcx + 0x800008] ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret 0x5e9
0x000000000007a883 : inc dword ptr [rcx + 0xf] ; les r11d, ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000045f53 : inc dword ptr [rcx + 0xf] ; mov dh, 0x7d ; add cl, ch ; ret -0x1f
0x00000000000cdeb2 : inc dword ptr [rcx + 0xf] ; ret -0x76bc
0x000000000002a975 : inc dword ptr [rcx + 0xffffffffffffff88] ; add rcx, qword ptr [r9 + 0x39] ; ret
0x0000000000050027 : inc dword ptr [rcx + 0xffffffffffffff89] ; popfq ; or byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x00000000000c7179 : inc dword ptr [rcx + 0xffffffffffffff89] ; ret
0x0000000000187453 : inc dword ptr [rcx + 0xffffffffffffffa4] ; std ; call qword ptr [rcx]
0x000000000018747f : inc dword ptr [rcx + 0xffffffffffffffab] ; std ; call rcx
0x00000000000c985e : inc dword ptr [rcx + 0xffffffffffffffe2] ; add byte ptr [rax + 0x63], cl ; ret -0x49f1
0x000000000018bf53 : inc dword ptr [rcx + rax*8 + 0x3b340001] ; cmc ; call rsp
0x00000000000707e5 : inc dword ptr [rcx + rcx*4 + 0xffffffffffffffef] ; call 0xecae9
0x0000000000114d61 : inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000cb48a : inc dword ptr [rcx] ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x0000000000166349 : inc dword ptr [rcx] ; ja 0x166350 ; ret
0x0000000000187657 : inc dword ptr [rcx] ; mov ebx, 0xbb01fffd ; std ; call rax
0x0000000000187597 : inc dword ptr [rcx] ; mov ebx, 0xbb01fffd ; std ; jmp qword ptr [rcx]
0x000000000018768b : inc dword ptr [rcx] ; mov ebx, 0xdb58fffd ; sti ; jmp qword ptr [rax]
0x00000000001b75f9 : inc dword ptr [rcx] ; or ebp, edx ; add dword ptr [rbx], eax ; ret
0x0000000000020bf4 : inc dword ptr [rdi + 4] ; ret
0x000000000018a41b : inc dword ptr [rdi + rax + 0xffffffffecd40001] ; out dx, al ; call rsp
0x000000000018e563 : inc dword ptr [rdi + rbp*4 + 0xfffffffffcb40002] ; stc ; call rsp
0x0000000000188763 : inc dword ptr [rdi + rbp*4 + 0xfffffffffffffffc] ; call rsp
0x0000000000187cb7 : inc dword ptr [rdx + 0x61] ; cld ; call rdx
0x00000000001881a3 : inc dword ptr [rdx + 0xffffffffffffff89] ; cld ; call rdx
0x000000000018869b : inc dword ptr [rdx + 0xffffffffffffffb0] ; cld ; call rdx
0x000000000018bc6b : inc dword ptr [rdx + rbp*4 + 0x14240001] ; hlt ; call rsp
0x0000000000188193 : inc dword ptr [rdx] ; mov edi, esp ; call qword ptr [rdx + 0x22fffc8a]
0x000000000013ed5d : inc dword ptr [rip + 0xffffffff83480000] ; ret 0x4910
0x0000000000187c13 : inc dword ptr [rsi + 0x65] ; cld ; call rsi
0x000000000018813f : inc dword ptr [rsi + 0xffffffffffffff86] ; cld ; call rsi
0x0000000000188637 : inc dword ptr [rsi + 0xffffffffffffffad] ; cld ; call rsi
0x000000000019c43c : inc dword ptr [rsi + 0xffffffffffffffee] ; jmp qword ptr [rdx]
0x000000000018eb23 : inc dword ptr [rsi + rdx*8 + 0xffffffff99a40002] ; cli ; jmp rsp
0x000000000018812f : inc dword ptr [rsi] ; mov ah, bh ; call qword ptr [rsi + 0x26fffc87]
0x0000000000188627 : inc dword ptr [rsi] ; scasd eax, dword ptr es:[rdi] ; cld ; call qword ptr [rsi + 0x26fffcae]
0x00000000001874b7 : inc dword ptr [rsi] ; stosb byte ptr es:[rdi], al ; std ; call qword ptr [rsi + 0x26fffdaa]
0x000000000017957d : inc dword ptr fs:[rax] ; jmp qword ptr gs:[rax]
0x0000000000187bbf : inc eax ; and edi, esp ; call qword ptr [rax]
0x00000000001879f3 : inc eax ; idiv ebx ; call qword ptr [rax]
0x0000000000178123 : inc eax ; insb byte ptr es:[rdi], dx ; out dx, al ; inc dword ptr [rax] ; insd dword ptr es:[rdi], dx ; out dx, al ; jmp rax
0x00000000001873b3 : inc eax ; ja 0x1873b2 ; call qword ptr [rax]
0x0000000000179577 : inc eax ; jmp rax
0x000000000018799f : inc eax ; lock sti ; call qword ptr [rax]
0x00000000001790f7 : inc eax ; pop rdi ; int1 ; call rax
0x00000000001795ab : inc eax ; push rax ; jmp qword ptr [rax]
0x0000000000179593 : inc eax ; push rax ; jmp qword ptr gs:[rax]
0x0000000000178edb : inc eax ; push rdx ; out dx, eax ; call qword ptr [rax]
0x0000000000187827 : inc eax ; retf ; sti ; call qword ptr [rax]
0x0000000000187b6b : inc eax ; sbb al, -4 ; call qword ptr [rax]
0x00000000000367a9 : inc eax ; shr eax, 0x1f ; ret
0x000000000018752f : inc eax ; test al, -3 ; inc dword ptr [rax + 0xffffffffffffffa9] ; std ; call rax
0x000000000017921f : inc eax ; test edi, esp ; jmp rax
0x000000000017ac19 : inc ebx ; add dh, bh ; jmp rdi
0x00000000000717dc : inc ebx ; nop ; xor eax, eax ; ret
0x0000000000164ad9 : inc ebx ; nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000207a1 : inc edx ; jmp 0x207a9
0x00000000000f3281 : inc esi ; jmp qword ptr [r8]
0x000000000018a82b : inc esp ; add dword ptr es:[rax], eax ; je 0x18a87a ; out dx, eax ; jmp rsp
0x0000000000189553 : inc esp ; lahf ; add byte ptr [rax], al ; and edi, dword ptr [rdx] ; jmp 0x18955b
0x000000000018eceb : inc esp ; loope 0x18ecf1 ; add byte ptr [rsp + rax*8 + 0xfffffffffffffffa], al ; jmp rsp
0x00000000001788b3 : inc esp ; out -1, eax ; jmp qword ptr [rcx]
0x000000000018d9d3 : inc esp ; push rdi ; add al, byte ptr [rax] ; ret -0x793
0x000000000018bf83 : inc esp ; ret
0x0000000000179cf3 : inc esp ; ret -0xd
0x000000000018e833 : inc esp ; ret 2
0x000000000002a974 : inc qword ptr [rcx + 0xffffffffffffff88] ; add rcx, qword ptr [r9 + 0x39] ; ret
0x00000000000207a0 : inc rdx ; jmp 0x207a9
0x000000000007d5a4 : insb byte ptr es:[rdi], dx ; add al, byte ptr [rax] ; add bl, dh ; ret
0x000000000018dc8d : insb byte ptr es:[rdi], dx ; add al, byte ptr [rax] ; in al, -0x50 ; clc ; jmp rsp
0x00000000001b5e5d : insb byte ptr es:[rdi], dx ; add al, byte ptr [rax] ; rol byte ptr [rsi], -5 ; jmp qword ptr [rdx]
0x0000000000195ee5 : insb byte ptr es:[rdi], dx ; add byte ptr [rax], al ; call -0x1ae6b381
0x0000000000195e25 : insb byte ptr es:[rdi], dx ; add byte ptr [rax], al ; pop rax ; xchg eax, edx ; in eax, dx ; jmp qword ptr [rax]
0x0000000000139ce4 : insb byte ptr es:[rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x00000000001a5dfd : insb byte ptr es:[rdi], dx ; add dword ptr [rax], eax ; push rax ; hlt ; jmp qword ptr [rcx]
0x000000000018b355 : insb byte ptr es:[rdi], dx ; add dword ptr [rax], eax ; ret -0xf
0x00000000001a735c : insb byte ptr es:[rdi], dx ; add dword ptr [rcx], 0xf4ca4000 ; jmp qword ptr [rcx]
0x00000000001a305c : insb byte ptr es:[rdi], dx ; add dword ptr ds:[rax], eax ; lock sti ; int1 ; jmp qword ptr [rcx]
0x00000000001b8b84 : insb byte ptr es:[rdi], dx ; add eax, 0x3ee0000 ; add byte ptr [rax], al ; ret 5
0x000000000003682c : insb byte ptr es:[rdi], dx ; and al, -0x18 ; fld st(0) ; fstp xword ptr [rdi] ; fsubp st(1) ; ret
0x00000000000368ca : insb byte ptr es:[rdi], dx ; and al, -0x18 ; fstp xword ptr [rdi] ; ret
0x00000000000368aa : insb byte ptr es:[rdi], dx ; and al, -0x18 ; ret
0x0000000000036a7a : insb byte ptr es:[rdi], dx ; and al, -2 ; ret
0x00000000000368f9 : insb byte ptr es:[rdi], dx ; and al, 8 ; fscale ; fstp st(1) ; ret
0x000000000003a2ef : insb byte ptr es:[rdi], dx ; and al, 8 ; mov rsi, rbp ; call r12
0x00000000000367ca : insb byte ptr es:[rdi], dx ; and al, 8 ; ret
0x000000000018d9d1 : insb byte ptr es:[rdi], dx ; clc ; inc esp ; push rdi ; add al, byte ptr [rax] ; ret -0x793
0x00000000001885b9 : insb byte ptr es:[rdi], dx ; cld ; jmp qword ptr [rax + 0x20fffc6d]
0x00000000001ad69d : insb byte ptr es:[rdi], dx ; cmc ; jmp qword ptr [rdx]
0x0000000000198a5c : insb byte ptr es:[rdi], dx ; cwde ; add byte ptr [rax], al ; nop ; ret -0x13
0x00000000001a5f69 : insb byte ptr es:[rdi], dx ; hlt ; jmp qword ptr [rcx]
0x000000000016733d : insb byte ptr es:[rdi], dx ; in al, dx ; call rax
0x0000000000167335 : insb byte ptr es:[rdi], dx ; in al, dx ; jmp qword ptr [rax]
0x0000000000167331 : insb byte ptr es:[rdi], dx ; in al, dx ; push qword ptr [rax] ; insb byte ptr es:[rdi], dx ; in al, dx ; jmp qword ptr [rax]
0x00000000001958bd : insb byte ptr es:[rdi], dx ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001b5e5c : insb byte ptr es:[rdi], dx ; insb byte ptr es:[rdi], dx ; add al, byte ptr [rax] ; rol byte ptr [rsi], -5 ; jmp qword ptr [rdx]
0x00000000001778fe : insb byte ptr es:[rdi], dx ; insd dword ptr es:[rdi], dx ; pop rbx ; ret 0x6f9
0x000000000017914d : insb byte ptr es:[rdi], dx ; int1 ; dec eax ; xchg eax, esi ; int1 ; jmp rax
0x000000000019690c : insb byte ptr es:[rdi], dx ; ja 0x1968fc ; jmp qword ptr [rdx]
0x00000000001a685c : insb byte ptr es:[rdi], dx ; jbe 0x1a6860 ; add byte ptr [rax + 0xffffffffffffffaa], dl ; hlt ; call qword ptr [rbx]
0x00000000000f3030 : insb byte ptr es:[rdi], dx ; ljmp 0x8348fffc, 0x18c4 ; ret
0x00000000000d6fe4 : insb byte ptr es:[rdi], dx ; mov eax, 0x39c77f04 ; ret -0x3e77
0x00000000000d6fcc : insb byte ptr es:[rdi], dx ; mov eax, 0x39df7f04 ; ret -0x3e77
0x00000000001248bc : insb byte ptr es:[rdi], dx ; mov eax, 1 ; ret
0x000000000013dad0 : insb byte ptr es:[rdi], dx ; mov ebp, 0x63480003 ; ret 0xf66
0x000000000019cd91 : insb byte ptr es:[rdi], dx ; out dx, al ; call qword ptr [rsi]
0x0000000000178125 : insb byte ptr es:[rdi], dx ; out dx, al ; inc dword ptr [rax] ; insd dword ptr es:[rdi], dx ; out dx, al ; jmp rax
0x00000000001b4d5c : insb byte ptr es:[rdi], dx ; pop rbx ; add al, byte ptr [rax] ; jg 0x1b4d5a ; call qword ptr [rdx]
0x00000000001a8f5c : insb byte ptr es:[rdi], dx ; popfq ; add dword ptr [rax], eax ; loopne 0x1a8f94 ; cmc ; jmp qword ptr [rcx]
0x0000000000187e90 : insb byte ptr es:[rdi], dx ; push rsp ; cld ; call qword ptr [rdx]
0x00000000001ab45c : insb byte ptr es:[rdi], dx ; ret 1
0x000000000018e81c : insb byte ptr es:[rdi], dx ; ret 2
0x00000000000a6102 : insb byte ptr es:[rdi], dx ; ror byte ptr [rbp + 0xffffffff840f0142], 1 ; ret 0
0x00000000001a875c : insb byte ptr es:[rdi], dx ; xchg eax, ebp ; add dword ptr [rax], eax ; mov al, 0x27 ; cmc ; jmp qword ptr [rcx]
0x0000000000130240 : insb byte ptr es:[rdi], dx ; xor eax, dword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x000000000013c950 : insd dword ptr es:[rdi], dx ; adc byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x00000000001b5f25 : insd dword ptr es:[rdi], dx ; add al, byte ptr [rax] ; sub byte ptr [rsi], al ; sti ; jmp qword ptr [rdx]
0x00000000000942a5 : insd dword ptr es:[rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16ff
0x000000000013d850 : insd dword ptr es:[rdi], dx ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x00000000001a5fdd : insd dword ptr es:[rdi], dx ; add dword ptr [rax], eax ; mov al, 0x6c ; hlt ; jmp qword ptr [rcx]
0x00000000001a5fad : insd dword ptr es:[rdi], dx ; add dword ptr [rax], eax ; push rax ; insb byte ptr es:[rdi], dx ; hlt ; jmp qword ptr [rcx]
0x00000000000328bd : insd dword ptr es:[rdi], dx ; add eax, 0xc6834900 ; or byte ptr [rax + 1], cl ; ret
0x000000000018857d : insd dword ptr es:[rdi], dx ; cld ; jmp qword ptr [rax + 0x20fffc6e]
0x00000000001885bd : insd dword ptr es:[rdi], dx ; cld ; jmp qword ptr [rax]
0x00000000001b701e : insd dword ptr es:[rdi], dx ; idiv r15 ; sbb al, 0xd ; sub al, byte ptr [rsi + 0xfffffffffffffff7] ; jmp qword ptr [rdx]
0x0000000000167339 : insd dword ptr es:[rdi], dx ; in al, dx ; inc dword ptr [rax] ; insb byte ptr es:[rdi], dx ; in al, dx ; call rax
0x0000000000192e5c : insd dword ptr es:[rdi], dx ; mov ch, dl ; jmp qword ptr [rdx]
0x0000000000178129 : insd dword ptr es:[rdi], dx ; out dx, al ; jmp rax
0x00000000001778ff : insd dword ptr es:[rdi], dx ; pop rbx ; ret 0x6f9
0x0000000000175cad : insd dword ptr es:[rdi], dx ; ret -0x4647
0x0000000000001bf0 : insd dword ptr es:[rdi], dx ; ret 0x1bb7
0x0000000000177b60 : insd dword ptr es:[rdi], dx ; sar bh, 1 ; jmp qword ptr [rdi]
0x0000000000187395 : insd dword ptr es:[rdi], dx ; sti ; call qword ptr [rax + 0xffffffffe0fffb6e]
0x00000000000fd05e : insd dword ptr es:[rdi], dx ; sub eax, 0x89480008 ; ret -0xcf
0x0000000000176bbf : insd dword ptr es:[rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000000f9fb2 : int 0x31
0x0000000000050c5f : int 0x80
0x0000000000083fcf : int 0xb0
0x00000000000bcecf : int 0xdd
0x00000000000fd0dc : int 0xf
0x0000000000179ca5 : int 0xf3
0x00000000000b4e61 : int 0xfa
0x000000000010ea03 : int 0xfd
0x0000000000036bbd : int 0xff
0x000000000018e9b5 : int 2
0x000000000000385f : int 3
0x000000000004f2ce : int1 ; add r8d, eax ; mov eax, r8d ; ret
0x000000000008d08e : int1 ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000017912e : int1 ; call qword ptr [rax + 0xffffffffe0fff180]
0x000000000017910e : int1 ; call qword ptr [rax]
0x00000000001a178a : int1 ; call qword ptr [rbx]
0x00000000001a09c2 : int1 ; call qword ptr [rcx]
0x00000000001a1012 : int1 ; call qword ptr [rdx]
0x00000000001a1772 : int1 ; call qword ptr [rsi]
0x00000000001790fa : int1 ; call rax
0x00000000001a0fc2 : int1 ; call rsi
0x000000000018b242 : int1 ; call rsp
0x000000000019b8fc : int1 ; cld ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000132457 : int1 ; dec dword ptr [rax + 0x29] ; ret
0x000000000010b0bb : int1 ; dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x76b7
0x000000000017915a : int1 ; dec dword ptr [rax] ; xchg eax, edi ; int1 ; jmp qword ptr [rax]
0x0000000000106276 : int1 ; dec dword ptr [rcx + 0xffffffffffffff8b] ; cmp byte ptr [rax + 0xffffffffffffff89], r9b ; ret 0x2b49
0x000000000017914e : int1 ; dec eax ; xchg eax, esi ; int1 ; jmp rax
0x00000000001aab1d : int1 ; hlt ; jmp qword ptr [rdx]
0x000000000019ab05 : int1 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000017912a : int1 ; inc dword ptr [rax + 0x7e] ; int1 ; call qword ptr [rax + 0xffffffffe0fff180]
0x000000000017913a : int1 ; inc dword ptr [rax + 0xffffffffd0fff187] ; mov ecx, esi ; jmp qword ptr [rax]
0x00000000001791fa : int1 ; inc dword ptr [rax] ; add byte ptr [rax], al ; add al, al ; jl 0x1791ff ; jmp rax
0x000000000017919e : int1 ; inc dword ptr [rax] ; jrcxz 0x179194 ; call qword ptr [rax]
0x0000000000179106 : int1 ; inc dword ptr [rax] ; push 0x49a0fff1 ; int1 ; call qword ptr [rax]
0x00000000001790f6 : int1 ; inc eax ; pop rdi ; int1 ; call rax
0x00000000001a2d39 : int1 ; int1 ; jmp qword ptr [rdx]
0x000000000017910a : int1 ; jmp qword ptr [rax + 0x10fff149]
0x00000000001790ce : int1 ; jmp qword ptr [rax]
0x00000000001a1e1a : int1 ; jmp qword ptr [rbx]
0x00000000001a0942 : int1 ; jmp qword ptr [rcx]
0x00000000001a146e : int1 ; jmp qword ptr [rdx]
0x00000000001790ca : int1 ; jmp rax
0x00000000000a27e5 : int1 ; jmp rcx
0x00000000001a2ab2 : int1 ; jmp rsi
0x000000000018b21a : int1 ; jmp rsp
0x000000000007ca8b : int1 ; jne 0x7ca80 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000196a9c : int1 ; jns 0x196a8c ; jmp qword ptr [rdx]
0x00000000000f3e91 : int1 ; mov byte ptr [r9 + 0xffffffffffffffff], 0 ; ret
0x00000000001aef24 : int1 ; mov ch, dh ; jmp qword ptr [rdx]
0x0000000000003a4b : int1 ; mov dl, 0x1e ; ret
0x0000000000085436 : int1 ; mov eax, 0x16 ; je 0x85440 ; ret
0x000000000014d31b : int1 ; mov qword ptr [rdi + 0xfffffffffffffff8], rcx ; ret
0x0000000000145d9f : int1 ; mov qword ptr [rdi + 0xfffffffffffffff8], rdx ; ret
0x000000000012287a : int1 ; mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00000000001085fe : int1 ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000000000a49ec : int1 ; mov rdi, qword ptr [r13] ; call r12
0x00000000001645b3 : int1 ; movzx edx, byte ptr [rsi + 0xfffffffffffffff1] ; sub eax, edx ; ret
0x00000000000d1894 : int1 ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x000000000019237e : int1 ; outsd dx, dword ptr [rsi] ; ljmp 0x720d1cff, -0x1593 ; jmp qword ptr [rdx]
0x00000000000a2828 : int1 ; pop rbx ; mov eax, eax ; ret
0x000000000004710e : int1 ; pop rbx ; ret
0x00000000001ac6ac : int1 ; pop rdx ; cmc ; jmp qword ptr [rdx]
0x0000000000108cd2 : int1 ; pop rdx ; pop r10 ; ret
0x000000000017914a : int1 ; push qword ptr [rax + 0x6c] ; int1 ; dec eax ; xchg eax, esi ; int1 ; jmp rax
0x00000000001790f2 : int1 ; push qword ptr [rax + 0xffffffffc0fff15d] ; pop rdi ; int1 ; call rax
0x00000000001790c6 : int1 ; push qword ptr [rax + 0xffffffffe0fff120] ; or dh, cl ; jmp qword ptr [rax]
0x000000000018b23a : int1 ; push qword ptr [rsi + 1] ; add byte ptr [rdi + rdx*4 + 0xfffffffffffffff1], dh ; call rsp
0x000000000017919a : int1 ; push rax ; loop 0x179190 ; inc dword ptr [rax] ; jrcxz 0x179194 ; call qword ptr [rax]
0x0000000000179156 : int1 ; push rax ; xchg eax, esi ; int1 ; dec dword ptr [rax] ; xchg eax, edi ; int1 ; jmp qword ptr [rax]
0x00000000000f02ba : int1 ; repne push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000025eb : int1 ; ret
0x00000000001772d6 : int1 ; ret 0x5803
0x000000000010f09b : int1 ; sbb byte ptr [rbx], ch ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret 0xb9
0x000000000010ef9b : int1 ; sbb dword ptr [rbx], ebp ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x76b8
0x00000000001645b7 : int1 ; sub eax, edx ; ret
0x0000000000098058 : int1 ; test r8b, r8b ; jne 0x97ffb ; mov rax, rdi ; ret
0x000000000009801e : int1 ; xor eax, eax ; ret
0x000000000013e08e : into ; adc al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x00000000000d6ff3 : into ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret -0x74b8
0x00000000000e54b3 : into ; cli ; inc dword ptr [rbx + rcx*4 + 0x65] ; adc byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x000000000001f6a9 : into ; cmovge eax, edx ; jmp 0x1f67a
0x00000000001b1e74 : into ; cmp esi, esi ; jmp qword ptr [rdx]
0x0000000000075d7b : into ; jb 0x75d70 ; lea eax, dword ptr [rdx + rdi] ; ret
0x00000000001a1c9c : into ; jl 0x1a1c90 ; jmp qword ptr [rdx]
0x00000000000c8317 : into ; jmp 0xc82dd
0x000000000006ddd9 : into ; jmp rsi
0x00000000000922ad : into ; jne 0x92298 ; xor eax, eax ; ret
0x000000000018ac39 : into ; out dx, eax ; jmp rsp
0x000000000005defd : into ; ret -0x6318
0x000000000018824c : into ; test bh, ah ; push qword ptr [rsp + rax*4 + 0xfffffffffffffffc] ; jmp rsp
0x000000000018ea1d : iretd ; add al, byte ptr [rax] ; mov ah, 0x69 ; cli ; jmp rsp
0x00000000000874b7 : iretd ; call rcx
0x00000000001aeffc : iretd ; mov ch, dh ; jmp qword ptr [rdx]
0x00000000001994de : iretd ; mov ecx, 0xd1cffed ; jl 0x19949f ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000815fa : iretd ; mov qword ptr [rsp + 0x10], rcx ; call qword ptr [rax]
0x00000000001ad0c6 : iretd ; push 0xd1cfff5 ; adc al, 0x68 ; cmc ; jmp qword ptr [rdx]
0x000000000018e451 : iretd ; stc ; call rsp
0x00000000001792cd : iretd ; std ; jmp qword ptr [rax + 0xffffffffe0fffdd1]
0x000000000018f0a9 : iretd ; std ; jmp rsp
0x00000000001877f5 : iretd ; sti ; call qword ptr [rax + 0xffffffffe0fffbd0]
0x00000000000022cf : ja -0x29efb4ab ; ret
0x000000000010b767 : ja 0x10b771 ; mov rax, rdi ; sar rax, 6 ; ret
0x0000000000118943 : ja 0x118946 ; ret
0x0000000000118ba0 : ja 0x118b84 ; mov eax, 0xffffffff ; ret
0x000000000011f911 : ja 0x11f95b ; mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000012289d : ja 0x122888 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000012ef52 : ja 0x12ef6c ; mov dword ptr [rdi + 0x28], edx ; mov al, 1 ; ret
0x000000000012ef77 : ja 0x12ef91 ; ret
0x000000000012f0df : ja 0x12f0f9 ; mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x000000000016634b : ja 0x166350 ; ret
0x0000000000177344 : ja 0x1772c9 ; ret 0x48f
0x00000000001873b5 : ja 0x1873b2 ; call qword ptr [rax]
0x0000000000194f6d : ja 0x194f5b ; jmp qword ptr [rdx]
0x0000000000194fb5 : ja 0x194fa3 ; jmp qword ptr [rdx]
0x0000000000194ffd : ja 0x194feb ; jmp qword ptr [rdx]
0x000000000019509d : ja 0x19508b ; jmp qword ptr [rdx]
0x00000000001950e5 : ja 0x1950d3 ; jmp qword ptr [rdx]
0x000000000019512d : ja 0x19511b ; jmp qword ptr [rdx]
0x00000000001951ad : ja 0x19519b ; jmp qword ptr [rdx]
0x00000000001951f5 : ja 0x1951e3 ; jmp qword ptr [rdx]
0x000000000019523d : ja 0x19522b ; jmp qword ptr [rdx]
0x00000000001952b5 : ja 0x1952a3 ; jmp qword ptr [rdx]
0x00000000001952fd : ja 0x1952eb ; jmp qword ptr [rdx]
0x0000000000195345 : ja 0x195333 ; jmp qword ptr [rdx]
0x00000000001968c5 : ja 0x1968b4 ; jmp qword ptr [rdx]
0x000000000019690d : ja 0x1968fc ; jmp qword ptr [rdx]
0x00000000001a694d : ja 0x1a6950 ; add byte ptr [rax + 0xffffffffffffffad], dh ; hlt ; jmp qword ptr [rdi]
0x00000000001ae554 : ja 0x1ae4d6 ; cmc ; jmp qword ptr [rdx]
0x00000000001b6955 : ja 0x1b6959 ; add al, cl ; fcomi st(7) ; jmp qword ptr [rcx]
0x000000000002f92d : ja 0x2f93f ; lea rax, qword ptr [rdx + rsi*4] ; mov eax, dword ptr [rdi + rax] ; ret
0x000000000003702c : ja 0x3702f ; ret
0x0000000000038c1e : ja 0x38c69 ; shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000047644 : ja 0x4767d ; add byte ptr [rax + rcx*2 + 0xffffffffffffff8b], ah ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret 0xde8
0x000000000004f2b7 : ja 0x4f298 ; mov eax, r8d ; ret
0x000000000006f392 : ja 0x6f3ef ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x0000000000092318 : ja 0x92310 ; ret 0x7401
0x0000000000094d4d : ja 0x94d28 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000098b9c : ja 0x98bb0 ; mov rax, rdi ; ret
0x000000000009daa7 : ja 0x9daab ; ret
0x000000000009dac3 : ja 0x9dac9 ; mov dword ptr [rdi], ecx ; ret
0x000000000009db04 : ja 0x9db0e ; mov qword ptr [rdi], rcx ; ret
0x000000000009db89 : ja 0x9db9b ; ret
0x000000000009dbdf : ja 0x9dbf5 ; ret
0x000000000009dc61 : ja 0x9dc7b ; ret
0x000000000009f0a7 : ja 0x9f0ab ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009f0c3 : ja 0x9f0c9 ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009f114 : ja 0x9f11e ; mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000009f1f9 : ja 0x9f20b ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000009f26f : ja 0x9f285 ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000009f2f1 : ja 0x9f30b ; lea rax, qword ptr [rdi + 0x18] ; ret
0x00000000000a0b87 : ja 0xa0b8b ; ret
0x00000000000a0ba3 : ja 0xa0ba9 ; mov dword ptr [rdi], ecx ; ret
0x00000000000a0be4 : ja 0xa0bee ; mov qword ptr [rdi], rcx ; ret
0x00000000000a0c69 : ja 0xa0c7b ; ret
0x00000000000a0cbf : ja 0xa0cd5 ; ret
0x00000000000a0d41 : ja 0xa0d5b ; ret
0x00000000000a1657 : ja 0xa165b ; ret
0x00000000000a1673 : ja 0xa1679 ; mov dword ptr [rdi], ecx ; ret
0x00000000000a16b4 : ja 0xa16be ; mov qword ptr [rdi], rcx ; ret
0x00000000000a1739 : ja 0xa174b ; ret
0x00000000000a178f : ja 0xa17a5 ; ret
0x00000000000a1811 : ja 0xa182b ; ret
0x00000000000a2b99 : ja 0xa2bb0 ; sub rdi, 0x10 ; add rax, rdi ; ret
0x00000000000a440a : ja 0xa4414 ; cmove rax, rcx ; ret
0x00000000000a5593 : ja 0xa55c6 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000bec17 : ja 0xbec1a ; ret
0x00000000000c1648 : ja 0xc164b ; ret
0x00000000000c16e2 : ja 0xc16e5 ; ret
0x00000000000c17d1 : ja 0xc17d4 ; ret
0x00000000000c2a79 : ja 0xc2a7c ; ret
0x00000000000c2ad9 : ja 0xc2adc ; ret
0x00000000000c2d2d : ja 0xc2d30 ; ret
0x00000000000c2d9d : ja 0xc2da0 ; ret
0x00000000000cc3ee : ja 0xcc380 ; pop rbx ; pop rbp ; ret
0x00000000000e51d1 : ja 0xe51d7 ; xor eax, eax ; ret
0x00000000000ec29f : ja 0xec2d6 ; add rsp, 0x70 ; pop rbx ; ret
0x00000000000edbe3 : ja 0xedbe8 ; cdqe ; ret
0x00000000000edd2f : ja 0xedd97 ; add rsp, 0x38 ; ret
0x00000000000f0993 : ja 0xf09a0 ; mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x00000000000f1220 : ja 0xf1223 ; ret
0x00000000000f1736 : ja 0xf1739 ; ret
0x00000000000f1f0d : ja 0xf1f10 ; ret
0x00000000000f1fad : ja 0xf1fb0 ; ret
0x00000000000f252b : ja 0xf252e ; ret
0x00000000000f259b : ja 0xf259e ; ret
0x00000000000f2618 : ja 0xf261b ; ret
0x00000000000f26b8 : ja 0xf26bb ; ret
0x00000000000f29b1 : ja 0xf2a22 ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000000f3de9 : ja 0xf3df3 ; ret
0x00000000000faf83 : ja 0xfaf88 ; pop rbx ; pop rbp ; ret
0x00000000000fb1e6 : ja 0xfb1e9 ; ret
0x00000000000fbf23 : ja 0xfbf26 ; ret
0x00000000000fc093 : ja 0xfc096 ; ret
0x00000000000fc65d : ja 0xfc660 ; ret
0x00000000000fc6ff : ja 0xfc702 ; ret
0x00000000000fc7af : ja 0xfc7b2 ; ret
0x0000000000133a20 : jae 0x133a23 ; ret
0x0000000000133a70 : jae 0x133a73 ; ret
0x0000000000136bc4 : jae 0x136ba0 ; mov eax, 1 ; ret
0x000000000016610e : jae 0x16611b ; call qword ptr [rbx]
0x0000000000166be7 : jae 0x166bfb ; nop dword ptr [rax] ; call qword ptr [rbx]
0x0000000000175902 : jae 0x1758db ; jo 0x175977 ; mov ebp, 0xfb67d10d ; ret
0x000000000017679e : jae 0x176773 ; push rsi ; pop rdx ; je 0x176768 ; ret -0x5304
0x00000000001873a9 : jae 0x1873a6 ; jmp qword ptr [rax]
0x0000000000188ee9 : jae 0x188ed5 ; call rsp
0x000000000018ddad : jae 0x18ddb1 ; add ah, cl ; rep clc ; call rsp
0x0000000000193fdc : jae 0x194019 ; jmp 0x193fdf
0x00000000001951ac : jae 0x195225 ; in al, dx ; jmp qword ptr [rdx]
0x000000000019652d : jae 0x19651c ; jmp qword ptr [rdx]
0x0000000000196575 : jae 0x196564 ; jmp qword ptr [rdx]
0x000000000019668c : jae 0x196702 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001982d4 : jae 0x19825d ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a1715 : jae 0x1a1708 ; jmp qword ptr [rdx]
0x00000000001a60c1 : jae 0x1a60b7 ; jmp qword ptr [rcx]
0x00000000001a60d9 : jae 0x1a60cf ; jmp qword ptr [rcx]
0x0000000000036fbd : jae 0x36fc0 ; ret
0x000000000003757d : jae 0x37580 ; ret
0x00000000000471c7 : jae 0x471cc ; xor eax, eax ; ret
0x000000000005afa5 : jae 0x5afaa ; add byte ptr [rcx + 0xffffffffffffff89], cl ; ret 0x32e9
0x000000000005e22d : jae 0x5e230 ; ret
0x0000000000075401 : jae 0x75352 ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000007be63 : jae 0x7be11 ; nop dword ptr [rax] ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000007d86b : jae 0x7d890 ; movzx eax, byte ptr [rax] ; ret
0x000000000008776e : jae 0x87778 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a4479 : jae 0xa4481 ; or al, 0 ; ret
0x00000000000b20bd : jae 0xb20c0 ; ret
0x00000000000b4f0d : jae 0xb4f10 ; ret
0x00000000000b4f3d : jae 0xb4f40 ; ret
0x00000000000c159d : jae 0xc15a0 ; ret
0x00000000000c1790 : jae 0xc1793 ; ret
0x00000000000c186d : jae 0xc1870 ; ret
0x00000000000c1a56 : jae 0xc1a89 ; ret
0x00000000000c1ab6 : jae 0xc1ae9 ; ret
0x00000000000c1e47 : jae 0xc1e4a ; ret
0x00000000000c2a3d : jae 0xc2a40 ; ret
0x00000000000c2bcd : jae 0xc2bd0 ; ret
0x00000000000c2bfd : jae 0xc2c00 ; ret
0x00000000000c2c5d : jae 0xc2c60 ; ret
0x00000000000c2c8d : jae 0xc2c90 ; ret
0x00000000000c2cbd : jae 0xc2cc0 ; ret
0x00000000000c2ced : jae 0xc2cf0 ; ret
0x00000000000cbecd : jae 0xcbed0 ; ret
0x00000000000cbefd : jae 0xcbf00 ; ret
0x00000000000cbf2d : jae 0xcbf30 ; ret
0x00000000000cbf5d : jae 0xcbf60 ; ret
0x00000000000cbf8d : jae 0xcbf90 ; ret
0x00000000000cbfbd : jae 0xcbfc0 ; ret
0x00000000000cbfed : jae 0xcbff0 ; ret
0x00000000000cc01d : jae 0xcc020 ; ret
0x00000000000cc239 : jae 0xcc26f ; ret
0x00000000000cc299 : jae 0xcc2cf ; ret
0x00000000000ebc7a : jae 0xebc7f ; mov eax, edx ; ret
0x00000000000ebc9d : jae 0xebca0 ; ret
0x00000000000ebf2d : jae 0xebf30 ; ret
0x00000000000ebf5d : jae 0xebf60 ; ret
0x00000000000ec07d : jae 0xec080 ; ret
0x00000000000ec0ad : jae 0xec0b0 ; ret
0x00000000000ec14d : jae 0xec150 ; ret
0x00000000000ec1b6 : jae 0xec1e9 ; ret
0x00000000000ec3a6 : jae 0xec3d9 ; ret
0x00000000000ec406 : jae 0xec439 ; ret
0x00000000000ec45d : jae 0xec460 ; ret
0x00000000000ec9ad : jae 0xec9b0 ; ret
0x00000000000ecaf6 : jae 0xecb29 ; ret
0x00000000000ecb4d : jae 0xecb50 ; ret
0x00000000000ecb7d : jae 0xecb80 ; ret
0x00000000000ecbad : jae 0xecbb0 ; ret
0x00000000000ecbdd : jae 0xecbe0 ; ret
0x00000000000ecc0d : jae 0xecc10 ; ret
0x00000000000ecc46 : jae 0xecc79 ; ret
0x00000000000ecc9d : jae 0xecca0 ; ret
0x00000000000ecccd : jae 0xeccd0 ; ret
0x00000000000ed49d : jae 0xed4a0 ; ret
0x00000000000ed4cd : jae 0xed4d0 ; ret
0x00000000000ed4fd : jae 0xed500 ; ret
0x00000000000edaed : jae 0xedaf0 ; ret
0x00000000000edb4d : jae 0xedb50 ; ret
0x00000000000edbad : jae 0xedbb0 ; ret
0x00000000000edc0d : jae 0xedc10 ; ret
0x00000000000edc6d : jae 0xedc70 ; ret
0x00000000000edca6 : jae 0xedcd9 ; ret
0x00000000000edfc0 : jae 0xedfc3 ; ret
0x00000000000f11b9 : jae 0xf11ef ; ret
0x00000000000f18ed : jae 0xf18f0 ; ret
0x00000000000f191d : jae 0xf1920 ; ret
0x00000000000f194d : jae 0xf1950 ; ret
0x00000000000f1d0d : jae 0xf1d10 ; ret
0x00000000000f1ecd : jae 0xf1ed0 ; ret
0x00000000000f283d : jae 0xf2840 ; ret
0x00000000000f28dd : jae 0xf28e0 ; ret
0x00000000000f2919 : jae 0xf294f ; ret
0x00000000000f2a5d : jae 0xf2a60 ; ret
0x00000000000f2a8d : jae 0xf2a90 ; ret
0x00000000000f2ac6 : jae 0xf2af9 ; ret
0x00000000000f2b1d : jae 0xf2b20 ; ret
0x00000000000f2b56 : jae 0xf2b89 ; ret
0x00000000000f2bad : jae 0xf2bb0 ; ret
0x00000000000f2e6d : jae 0xf2e70 ; ret
0x00000000000f2e9d : jae 0xf2ea0 ; ret
0x00000000000f2ecd : jae 0xf2ed0 ; ret
0x00000000000f3d7d : jae 0xf3d80 ; ret
0x00000000000f3dad : jae 0xf3db0 ; ret
0x00000000000f53ef : jae 0xf53f2 ; ret
0x00000000000f5560 : jae 0xf5563 ; ret
0x00000000000f558d : jae 0xf5590 ; ret
0x00000000000f55bd : jae 0xf55c0 ; ret
0x00000000000f55f6 : jae 0xf5629 ; ret
0x00000000000f564d : jae 0xf5650 ; ret
0x00000000000f567d : jae 0xf5680 ; ret
0x00000000000f56b0 : jae 0xf56b3 ; ret
0x00000000000f56dd : jae 0xf56e0 ; ret
0x00000000000f570d : jae 0xf5710 ; ret
0x00000000000f573d : jae 0xf5740 ; ret
0x00000000000f576d : jae 0xf5770 ; ret
0x00000000000f8cf0 : jae 0xf8cf3 ; ret
0x00000000000f8d1d : jae 0xf8d20 ; ret
0x00000000000f8d4d : jae 0xf8d50 ; ret
0x00000000000f8d80 : jae 0xf8d83 ; ret
0x00000000000f8db0 : jae 0xf8db3 ; ret
0x00000000000f8ddd : jae 0xf8de0 ; ret
0x00000000000f8e10 : jae 0xf8e13 ; ret
0x00000000000f8e3d : jae 0xf8e40 ; ret
0x00000000000f8e6d : jae 0xf8e70 ; ret
0x00000000000f8ea0 : jae 0xf8ea3 ; ret
0x00000000000f8ecd : jae 0xf8ed0 ; ret
0x00000000000f8f00 : jae 0xf8f03 ; ret
0x00000000000faeed : jae 0xfaef0 ; ret
0x00000000000faf1d : jae 0xfaf20 ; ret
0x00000000000fb046 : jae 0xfb079 ; ret
0x00000000000fb0ad : jae 0xfb0b0 ; ret
0x00000000000fb0dd : jae 0xfb0e0 ; ret
0x00000000000fb10d : jae 0xfb110 ; ret
0x00000000000fb13d : jae 0xfb140 ; ret
0x00000000000fb400 : jae 0xfb403 ; ret
0x00000000000fb42d : jae 0xfb430 ; ret
0x00000000000fb45d : jae 0xfb460 ; ret
0x00000000000fb4a0 : jae 0xfb4a3 ; ret
0x00000000000fb4cd : jae 0xfb4d0 ; ret
0x00000000000fb4fd : jae 0xfb500 ; ret
0x00000000000fb52d : jae 0xfb530 ; ret
0x00000000000fb55d : jae 0xfb560 ; ret
0x00000000000fb58d : jae 0xfb590 ; ret
0x00000000000fb5bd : jae 0xfb5c0 ; ret
0x00000000000fb5ed : jae 0xfb5f0 ; ret
0x00000000000fb61d : jae 0xfb620 ; ret
0x00000000000fb650 : jae 0xfb653 ; ret
0x00000000000fb689 : jae 0xfb6bf ; ret
0x00000000000fb6dd : jae 0xfb6e0 ; ret
0x00000000000fb710 : jae 0xfb713 ; ret
0x00000000000fb73d : jae 0xfb740 ; ret
0x00000000000fb76d : jae 0xfb770 ; ret
0x00000000000fb79d : jae 0xfb7a0 ; ret
0x00000000000fb7cd : jae 0xfb7d0 ; ret
0x00000000000fb7fd : jae 0xfb800 ; ret
0x00000000000fb830 : jae 0xfb833 ; ret
0x00000000000fb860 : jae 0xfb863 ; ret
0x00000000000fb88d : jae 0xfb890 ; ret
0x00000000000fb8bd : jae 0xfb8c0 ; ret
0x00000000000fb8ed : jae 0xfb8f0 ; ret
0x00000000000fb920 : jae 0xfb923 ; ret
0x00000000000fb950 : jae 0xfb953 ; ret
0x00000000000fb980 : jae 0xfb983 ; ret
0x00000000000fb9b9 : jae 0xfb9ef ; ret
0x00000000000fba0d : jae 0xfba10 ; ret
0x00000000000fba49 : jae 0xfba7f ; ret
0x00000000000fba9d : jae 0xfbaa0 ; ret
0x00000000000fbacd : jae 0xfbad0 ; ret
0x00000000000fbb09 : jae 0xfbb3f ; ret
0x00000000000fbb5d : jae 0xfbb60 ; ret
0x00000000000fbb90 : jae 0xfbb93 ; ret
0x00000000000fbbbd : jae 0xfbbc0 ; ret
0x00000000000fbbed : jae 0xfbbf0 ; ret
0x00000000000fbc20 : jae 0xfbc23 ; ret
0x00000000000fbc56 : jae 0xfbc89 ; ret
0x00000000000fbcad : jae 0xfbcb0 ; ret
0x00000000000fbce0 : jae 0xfbce3 ; ret
0x00000000000fbd10 : jae 0xfbd13 ; ret
0x00000000000fbd66 : jae 0xfbd99 ; ret
0x00000000000fbdbd : jae 0xfbdc0 ; ret
0x00000000000fbdf6 : jae 0xfbe29 ; ret
0x00000000000fbe4d : jae 0xfbe50 ; ret
0x00000000000fbe7d : jae 0xfbe80 ; ret
0x00000000000fbeb0 : jae 0xfbeb3 ; ret
0x00000000000fbedd : jae 0xfbee0 ; ret
0x00000000000fbfc9 : jae 0xfbfff ; ret
0x00000000000fc026 : jae 0xfc059 ; ret
0x00000000000fc136 : jae 0xfc169 ; ret
0x00000000000fc199 : jae 0xfc1cf ; ret
0x00000000000fc1f0 : jae 0xfc1f3 ; ret
0x00000000000fc21d : jae 0xfc220 ; ret
0x00000000000fc24d : jae 0xfc250 ; ret
0x00000000000fc280 : jae 0xfc283 ; ret
0x00000000000fc909 : jae 0xfc93f ; ret
0x00000000000fc969 : jae 0xfc99f ; ret
0x00000000000fc9bd : jae 0xfc9c0 ; ret
0x00000000000fc9ed : jae 0xfc9f0 ; ret
0x00000000000fca1d : jae 0xfca20 ; ret
0x00000000000fca4d : jae 0xfca50 ; ret
0x00000000000fca80 : jae 0xfca83 ; ret
0x00000000000fcab0 : jae 0xfcab3 ; ret
0x00000000000fcadd : jae 0xfcae0 ; ret
0x00000000000fcb0d : jae 0xfcb10 ; ret
0x00000000000fcb3d : jae 0xfcb40 ; ret
0x00000000000fcb6d : jae 0xfcb70 ; ret
0x000000000010b94a : jb 0x10b9ca ; sub eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000118b28 : jb 0x118b14 ; mov eax, 0xffffffff ; ret
0x00000000001228a1 : jb 0x1228c3 ; ret
0x000000000012289b : jb 0x1228c5 ; ja 0x122888 ; mov qword ptr [rdx + 0x20], rsi ; ret
0x0000000000143daa : jb 0x143db4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000143efa : jb 0x143f04 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014404a : jb 0x144054 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014419a : jb 0x1441a4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001442ea : jb 0x1442f4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014443a : jb 0x144444 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014458a : jb 0x144594 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001446da : jb 0x1446e4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014482a : jb 0x144834 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014497a : jb 0x144984 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000144aca : jb 0x144ad4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000144c1a : jb 0x144c24 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000144d6a : jb 0x144d74 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000144eba : jb 0x144ec4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014500a : jb 0x145014 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014677a : jb 0x146784 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001468ca : jb 0x1468d4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146a1a : jb 0x146a24 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146b6a : jb 0x146b74 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146cba : jb 0x146cc4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146e0a : jb 0x146e14 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146f5a : jb 0x146f64 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001470aa : jb 0x1470b4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001471fa : jb 0x147204 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014734a : jb 0x147354 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014749a : jb 0x1474a4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001475ea : jb 0x1475f4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014773a : jb 0x147744 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014788a : jb 0x147894 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001479da : jb 0x1479e4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014914a : jb 0x149154 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014929a : jb 0x1492a4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001493ea : jb 0x1493f4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014953a : jb 0x149544 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014968a : jb 0x149694 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001497da : jb 0x1497e4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014992a : jb 0x149934 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000149a7a : jb 0x149a84 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000149bca : jb 0x149bd4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000149d1a : jb 0x149d24 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000149e6a : jb 0x149e74 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000149fba : jb 0x149fc4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014a10a : jb 0x14a114 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014a25a : jb 0x14a264 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014a3aa : jb 0x14a3b4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000016613f : jb 0x166130 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000166bf9 : jb 0x166bf0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001873a5 : jb 0x1873a2 ; call rax
0x00000000001888c0 : jb 0x188864 ; cld ; jmp rdx
0x000000000018b959 : jb 0x18b94e ; jmp rsp
0x00000000001963ed : jb 0x1963dc ; jmp qword ptr [rdx]
0x0000000000197d2c : jb 0x197cb0 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001aa6d4 : jb 0x1aa6c0 ; hlt ; jmp qword ptr [rdx]
0x00000000001ac22d : jb 0x1ac230 ; add byte ptr [rax + 0xffffffffffffffe1], al ; cmc ; call qword ptr [rcx]
0x0000000000002b5c : jb 0x2af3 ; test bp, word ptr [rbx + 0xffffffffffffffd2] ; cmp dl, byte ptr [rdi] ; ret
0x0000000000075d7c : jb 0x75d70 ; lea eax, dword ptr [rdx + rdi] ; ret
0x0000000000078f45 : jb 0x78f67 ; mov dword ptr [rcx], eax ; ret
0x000000000009fa1a : jb 0x9fa25 ; add byte ptr [rax], al ; ret
0x00000000000d2a55 : jb 0xd29c2 ; pop rbx ; ret
0x00000000000d29ed : jb 0xd29e5 ; ret 0x7408
0x0000000000111a57 : jbe 0x1119c2 ; xor eax, eax ; pop rbx ; ret
0x0000000000121ed3 : jbe 0x121ee0 ; mov eax, 2 ; ret
0x00000000001873b1 : jbe 0x1873ae ; inc eax ; ja 0x1873b2 ; call qword ptr [rax]
0x0000000000194e95 : jbe 0x194e83 ; jmp qword ptr [rdx]
0x0000000000194f0d : jbe 0x194efb ; jmp qword ptr [rdx]
0x000000000019687d : jbe 0x19686c ; jmp qword ptr [rdx]
0x00000000001968c4 : jbe 0x19693d ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a685d : jbe 0x1a6860 ; add byte ptr [rax + 0xffffffffffffffaa], dl ; hlt ; call qword ptr [rbx]
0x000000000004759b : jbe 0x4760d ; xor eax, eax ; ret
0x000000000004978c : jbe 0x49780 ; nop ; mov rax, rsi ; pop rbx ; ret
0x000000000004e5c7 : jbe 0x4a485 ; jmp 0x4a803
0x00000000000832d2 : jbe 0x832bb ; xor eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000896d9 : jbe 0x89723 ; bsf eax, edx ; ret
0x000000000008caa6 : jbe 0x8cae0 ; add rax, rdi ; ret
0x000000000008cab6 : jbe 0x8cae0 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008cac6 : jbe 0x8cae0 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008cad6 : jbe 0x8cae0 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000098ff9 : jbe 0x98ff1 ; ret 0xf10
0x000000000009ac19 : jbe 0x9ac11 ; ret 0xf10
0x000000000000d050 : jbe 0xd052 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; jmp qword ptr [rsi]
0x00000000000f783b : jbe 0xf7868 ; mov rsi, rbx ; mov rdi, r13 ; call r14
0x00000000000f79b6 : jbe 0xf798b ; cli ; dec dword ptr [rax + 0x39] ; ret
0x00000000001007de : je 0x1007e8 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000100812 : je 0x100828 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x0000000000103185 : je 0x103190 ; xor eax, eax ; ret
0x00000000001049e6 : je 0x104a10 ; mov eax, r9d ; sub eax, edx ; ret
0x0000000000107033 : je 0x107040 ; mov eax, 7 ; ret
0x0000000000107051 : je 0x107070 ; mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x0000000000107060 : je 0x1070bf ; xor eax, eax ; pop rbx ; ret
0x0000000000108d29 : je 0x108d2c ; ret
0x0000000000108d8d : je 0x108d90 ; ret
0x0000000000109622 : je 0x10962b ; lea rax, qword ptr [rip + 0x42045] ; ret
0x00000000001096c2 : je 0x1096cb ; lea rax, qword ptr [rip + 0x44a75] ; ret
0x000000000010ac3c : je 0x10ac48 ; add rsp, 8 ; ret
0x000000000010d36b : je 0x10d39e ; ror byte ptr [rax + 0xffffffffffffff83], 1 ; ret 0xf01
0x000000000011210f : je 0x112116 ; mov rdi, rbx ; call rax
0x00000000001123f6 : je 0x1123fd ; mov rdi, rbx ; call rax
0x00000000001124d3 : je 0x1124de ; lea rdi, qword ptr [rip + 0x2b1a44] ; call rax
0x00000000001151f3 : je 0x1151e8 ; pop rbx ; ret
0x0000000000118403 : je 0x1183e5 ; mov eax, 0xffffffff ; ret
0x000000000011c9b2 : je 0x11c9b8 ; ret
0x000000000011fa13 : je 0x11fa1a ; mov rdi, rsp ; call rax
0x000000000011faee : je 0x11faf5 ; mov rdi, rsp ; call rax
0x00000000001201a9 : je 0x1201cf ; adc byte ptr [rax + 0xffffffffffffff89], cl ; out dx, eax ; call r14
0x00000000001203a7 : je 0x1203ae ; mov rdi, rbp ; call rax
0x0000000000120778 : je 0x120780 ; ret
0x0000000000121445 : je 0x12144c ; mov rdi, r14 ; call rax
0x00000000001216c3 : je 0x1216ca ; mov rdi, rbx ; call rax
0x0000000000121f76 : je 0x121f7d ; mov rdi, r12 ; call rdx
0x0000000000122413 : je 0x1224f2 ; mov rdi, rbp ; call qword ptr [rbx]
0x0000000000124792 : je 0x12479d ; lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x000000000012516d : je 0x125174 ; mov rdi, r12 ; call rax
0x000000000012534b : je 0x125353 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000125de9 : je 0x125df0 ; add rsp, 0x48 ; ret
0x0000000000127503 : je 0x127418 ; mov rdi, rbx ; call rax
0x0000000000127437 : je 0x12743e ; mov rdi, rbp ; call rdx
0x0000000000127543 : je 0x127550 ; mov eax, 1 ; ret
0x0000000000127628 : je 0x12762f ; mov rdi, rbp ; call rax
0x0000000000127848 : je 0x12784f ; mov rdi, rbp ; call rax
0x000000000012836f : je 0x128377 ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000128a2e : je 0x128a35 ; mov rdi, r12 ; call rax
0x0000000000128d9f : je 0x128da7 ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000012b87e : je 0x12b851 ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000012b84f : je 0x12b858 ; pop rbx ; ret
0x000000000012b8bb : je 0x12b86c ; pop rbx ; ret
0x000000000012b8f3 : je 0x12b900 ; add rsp, 8 ; ret
0x000000000012c51b : je 0x12c520 ; ret
0x000000000012c5fb : je 0x12c603 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000012cd04 : je 0x12cd0c ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000012dd8d : je 0x12ddf0 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000012de4d : je 0x12deb0 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000012df0d : je 0x12df70 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000012dfcd : je 0x12e030 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001312c8 : je 0x1312d0 ; xor eax, eax ; ret
0x0000000000133c91 : je 0x133ca0 ; add rsp, 8 ; ret
0x0000000000137bac : je 0x137b88 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x0000000000138173 : je 0x138136 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000138e45 : je 0x138e48 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000138f43 : je 0x138f06 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000139e2a : je 0x139e2d ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000139f83 : je 0x139f46 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000013bb53 : je 0x13bb16 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000013db84 : je 0x13db60 ; movsxd rax, ecx ; add rax, rdi ; ret
0x000000000013de63 : je 0x13de26 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000013f4f3 : je 0x13f4b6 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000161f87 : je 0x161f8b ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000165bd6 : je 0x165bda ; call rdx
0x0000000000165cdf : je 0x165ce8 ; call rdx
0x0000000000166334 : je 0x16630a ; and eax, 0 ; add bl, dh ; ret
0x0000000000175a68 : je 0x175a2f ; xor al, -0x28 ; ret
0x0000000000175ca7 : je 0x175c9d ; jmp 0x175c77
0x00000000001767a2 : je 0x176768 ; ret -0x5304
0x0000000000187f58 : je 0x187fb5 ; cld ; jmp rsp
0x0000000000188250 : je 0x1881d6 ; cld ; jmp rsp
0x00000000001897b0 : je 0x189788 ; jmp 0x1897b3
0x0000000000189b14 : je 0x189ad9 ; add byte ptr [rax], al ; add al, 0x58 ; in eax, dx ; call rsp
0x0000000000189f1c : je 0x189f03 ; add byte ptr [rax], al ; xlatb ; mov esi, ebp ; jmp rsp
0x0000000000189f84 : je 0x189f6d ; add byte ptr [rax], al ; add al, -0x72 ; out dx, al ; jmp rsp
0x000000000018a830 : je 0x18a87a ; out dx, eax ; jmp rsp
0x000000000018b240 : je 0x18b1d9 ; int1 ; call rsp
0x000000000018b23c : je 0x18b2a4 ; add dword ptr [rax], eax ; je 0x18b1d9 ; int1 ; call rsp
0x000000000018c7a4 : je 0x18c791 ; add dword ptr [rax], eax ; ret -0x938
0x000000000018da68 : je 0x18dadf ; clc ; jmp rsp
0x0000000000196334 : je 0x1963a7 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019668d : je 0x19667c ; jmp qword ptr [rdx]
0x00000000001966d5 : je 0x1966c4 ; jmp qword ptr [rdx]
0x000000000019671d : je 0x19670c ; jmp qword ptr [rdx]
0x0000000000197264 : je 0x1971e6 ; add byte ptr [rax], al ; cwde ; movsd dword ptr es:[rdi], dword ptr [rsi] ; in eax, dx ; jmp rbx
0x0000000000198664 : je 0x1985fa ; add byte ptr [rax], al ; js 0x198626 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a146d : je 0x1a1460 ; jmp qword ptr [rdx]
0x00000000001a14b5 : je 0x1a14a8 ; jmp qword ptr [rdx]
0x00000000001a153d : je 0x1a1530 ; jmp qword ptr [rdx]
0x00000000001a1585 : je 0x1a1578 ; jmp qword ptr [rdx]
0x00000000001a161d : je 0x1a1610 ; jmp qword ptr [rdx]
0x00000000001a1665 : je 0x1a1658 ; jmp qword ptr [rdx]
0x00000000001a16cd : je 0x1a16c0 ; jmp qword ptr [rdx]
0x00000000001a1d6c : je 0x1a1deb ; int1 ; jmp qword ptr [rdx]
0x00000000001a3164 : je 0x1a31a5 ; add dword ptr [rax], eax ; add sil, dl ; call rdi
0x00000000001a60f1 : je 0x1a60e7 ; jmp qword ptr [rcx]
0x00000000001a6264 : je 0x1a62d6 ; add dword ptr [rax], eax ; js 0x1a62e2 ; hlt ; jmp qword ptr [rcx]
0x00000000001a8a64 : je 0x1a89fe ; add dword ptr [rax], eax ; sub rsi, rbp ; jmp qword ptr [rcx]
0x00000000001a8d64 : je 0x1a8d01 ; add dword ptr [rax], eax ; cmp byte ptr [rdi], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a9364 : je 0x1a9307 ; add dword ptr [rax], eax ; cmp byte ptr [rcx + 0xfffffffffffffff5], al ; jmp rdi
0x00000000001ab564 : je 0x1ab529 ; add dword ptr [rax], eax ; sub bl, dl ; cmc ; jmp qword ptr [rsi]
0x00000000001adac4 : je 0x1adb3e ; cmc ; jmp qword ptr [rdx]
0x0000000000001cb2 : je 0x1cdc ; ret
0x0000000000022021 : je 0x22043 ; add rsp, 8 ; ret
0x000000000002208a : je 0x2208e ; jmp rax
0x00000000000220ba : je 0x220be ; jmp rax
0x00000000000223e8 : je 0x223f8 ; lea rax, qword ptr [rip + 0x3a280f] ; ret
0x0000000000027ea3 : je 0x27ec9 ; or byte ptr [rax + 0xffffffffffffff8b], cl ; je 0x27ece ; push rax ; call rax
0x0000000000027ea8 : je 0x27ece ; push rax ; call rax
0x000000000002ca92 : je 0x2ca59 ; pop rbx ; ret
0x000000000002d13e : je 0x2d156 ; call 0x893b0
0x000000000002d180 : je 0x2d184 ; call rax
0x000000000002d507 : je 0x2d50b ; call rcx
0x000000000002e7ab : je 0x2e7af ; call rax
0x0000000000034b15 : je 0x34b3b ; or byte ptr [rcx + 0xffffffffffffff89], cl ; ret 0x1074
0x0000000000035ad9 : je 0x35aeb ; jmp 0x35a9f
0x0000000000036546 : je 0x36537 ; ret
0x00000000000368e6 : je 0x36888 ; ret
0x000000000005db76 : je 0x5db80 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000006f08a : je 0x6f098 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006f12a : je 0x6f138 ; mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x000000000006f824 : je 0x6f830 ; mov rax, rdx ; pop rbx ; ret
0x0000000000070827 : je 0x7082e ; call 0xecae9
0x00000000000736b4 : je 0x736c0 ; mov rax, rdx ; pop rbx ; ret
0x0000000000073f5c : je 0x73f68 ; mov eax, 0xffffffff ; ret
0x0000000000074df0 : je 0x74e3a ; add esp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000075a93 : je 0x75aa0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000075ac3 : je 0x75b20 ; pop rbp ; pop r12 ; ret
0x0000000000075cdd : je 0x75ce2 ; and dword ptr [rbx], -0x11 ; pop rbx ; ret
0x0000000000075d21 : je 0x75d26 ; and dword ptr [rbx], -0x11 ; pop rbx ; ret
0x0000000000076258 : je 0x76260 ; mov eax, 0xffffffff ; ret
0x000000000007943b : je 0x793d9 ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000000794bf : je 0x794c8 ; pop rbx ; ret
0x000000000007be43 : je 0x7bdf8 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007bf93 : je 0x7bf48 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007c10c : je 0x7c118 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007ca04 : je 0x7ca09 ; and dword ptr [rbx], -0x11 ; pop rbx ; ret
0x000000000007e212 : je 0x7e220 ; nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000007f205 : je 0x7f209 ; call rdx
0x000000000007fa65 : je 0x7fa6e ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000814aa : je 0x814d0 ; sub byte ptr [rcx + rcx*4 + 0xfffffffffffffff7], cl ; call qword ptr [rax]
0x000000000008340c : je 0x83432 ; sbb byte ptr [rdx + 0x5b], bl ; pop rbp ; jmp rax
0x0000000000084036 : je 0x8405c ; sub byte ptr [rcx + rcx*4 + 0xffffffffffffffe7], cl ; call rax
0x0000000000084449 : je 0x8444d ; call rax
0x000000000008543c : je 0x85440 ; ret
0x0000000000085d2e : je 0x85eb0 ; mov rsi, r14 ; call rax
0x0000000000086d25 : je 0x86da0 ; mov rsi, rbx ; mov rdi, r13 ; call rdx
0x0000000000087098 : je 0x870a0 ; ret
0x00000000000877e2 : je 0x877eb ; lea rax, qword ptr [rip + 0x11595] ; ret
0x00000000000879cf : je 0x879d8 ; lea rax, qword ptr [rip + 0xdb688] ; ret
0x00000000000890c2 : je 0x890cb ; lea rax, qword ptr [rip + 0xced15] ; ret
0x00000000000891cf : je 0x891d8 ; lea rax, qword ptr [rip + 0xb4818] ; ret
0x0000000000089357 : je 0x89378 ; movsx edx, sil ; mov eax, edx ; ret
0x0000000000089462 : je 0x89469 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008968b : je 0x89691 ; bsf eax, edx ; ret
0x0000000000089734 : je 0x89740 ; bsf rax, rdx ; ret
0x00000000000896d8 : je 0x89750 ; bsf rax, rdx ; ret
0x0000000000089923 : je 0x89940 ; bsf rax, rdx ; ret
0x0000000000089a62 : je 0x89a6b ; lea rax, qword ptr [rip + 0x10f35] ; ret
0x000000000008b342 : je 0x8b34b ; lea rax, qword ptr [rip + 0xce245] ; ret
0x000000000008b65f : je 0x8b668 ; lea rax, qword ptr [rip + 0xb24c8] ; ret
0x000000000008b9ef : je 0x8b9f8 ; lea rax, qword ptr [rip + 0xb2258] ; ret
0x000000000008c99c : je 0x8c9ed ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000008cb1c : je 0x8cb26 ; lea rax, qword ptr [rip + 0xd40cb] ; ret
0x000000000008d282 : je 0x8d28b ; lea rax, qword ptr [rip + 0xc0ec5] ; ret
0x000000000008d772 : je 0x8d77b ; lea rax, qword ptr [rip + 0xce995] ; ret
0x000000000008d892 : je 0x8d89b ; lea rax, qword ptr [rip + 0xd0085] ; ret
0x00000000000922a9 : je 0x922b8 ; cmp rsi, rcx ; jne 0x92298 ; xor eax, eax ; ret
0x00000000000922f3 : je 0x922fc ; lea rax, qword ptr [rip + 0xb1464] ; ret
0x0000000000093828 : je 0x93838 ; lea rax, qword ptr [rip + 0xfffffffffffffaef] ; ret
0x0000000000093bb2 : je 0x93bc0 ; xor byte ptr [rdx + 0xe], 0x2a ; ret
0x00000000000945da : je 0x9462b ; xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000094691 : je 0x946a0 ; bsf eax, eax ; lea rax, qword ptr [rdi + rax] ; ret
0x0000000000094b84 : je 0x94b90 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009779d : je 0x977b0 ; cmp eax, esi ; jne 0x97790 ; mov rax, rdi ; ret
0x0000000000097cdc : je 0x97cb0 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000986ab : je 0x98668 ; mov byte ptr [r10 + 1], 0 ; ret
0x000000000009dda9 : je 0x9ddf1 ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx + 0xffffffffffffff83], 1 ; ret 0x4d10
0x000000000009f436 : je 0x9f47e ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx + 0xffffffffffffff83], 1 ; ret 0x4d10
0x00000000000a114a : je 0xa1192 ; adc byte ptr [rsi + 0xf], ah ; xlatb ; ror byte ptr [rcx + 0xffffffffffffff83], 1 ; ret 0x4d10
0x00000000000a2725 : je 0xa2712 ; movzx eax, cl ; pop rbx ; ret
0x00000000000a274d : je 0xa2712 ; movzx eax, dl ; pop rbx ; ret
0x00000000000a2886 : je 0xa28a8 ; xor eax, eax ; add rsp, 0x18 ; ret
0x00000000000a38ef : je 0xa38d8 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a3b29 : je 0xa3b40 ; mov cl, dl ; and cl, 0xf ; je 0xa3b50 ; ret
0x00000000000a3b30 : je 0xa3b50 ; ret
0x00000000000a3b45 : je 0xa3b60 ; add rax, 2 ; ret
0x00000000000a3ca2 : je 0xa3c60 ; mov dword ptr [rsi + 4], 0 ; ret
0x00000000000a3d1a : je 0xa3cd0 ; nop dword ptr [rax] ; sub eax, r8d ; ret
0x00000000000a4146 : je 0xa41b0 ; lea rax, qword ptr [rdi + 0xfffffffffffffff0] ; ret
0x00000000000a4407 : je 0xa441b ; cmp dword ptr [rdi + 8], esi ; cmove rax, rcx ; ret
0x00000000000a446c : je 0xa4476 ; lea rax, qword ptr [rip + 0xbddbb] ; ret
0x00000000000a6111 : je 0xa6120 ; mov edx, eax ; jmp 0xa60e0
0x00000000000a8951 : je 0xa8960 ; mov edx, eax ; jmp 0xa8920
0x00000000000ab001 : je 0xab010 ; mov edx, eax ; jmp 0xaafd0
0x00000000000aba26 : je 0xab9ef ; or byte ptr [rax + 0xffffffffffffff89], cl ; fucompi st(0) ; call rdx
0x00000000000b5dc0 : je 0xb5e12 ; ror byte ptr [rax + 0xffffffffffffffba], 1 ; ret
0x00000000000bac43 : je 0xbac50 ; xor eax, eax ; ret
0x00000000000be163 : je 0xbe190 ; mov rdi, r15 ; call r14
0x00000000000c1b4e : je 0xc1b52 ; call rax
0x00000000000c1cd3 : je 0xc1cdb ; call rdx
0x00000000000c1d5b : je 0xc1d63 ; call rax
0x00000000000c3329 : je 0xc3358 ; mov eax, 1 ; ret
0x00000000000c33bb : je 0xc33e0 ; mov eax, 1 ; ret
0x00000000000d1884 : je 0xd1890 ; xor eax, eax ; ret
0x00000000000d28db : je 0xd2924 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d2a38 : je 0xd29c2 ; pop rbx ; ret
0x00000000000d2b4a : je 0xd2b50 ; xor eax, eax ; ret
0x00000000000d2b46 : je 0xd2ba0 ; cmp al, 0x11 ; je 0xd2b50 ; xor eax, eax ; ret
0x00000000000d4952 : je 0xd4959 ; add dword ptr [rax + 0xffffffffffffff83], ecx ; rol byte ptr [rcx], -0x7d ; ret 0x4001
0x00000000000d5681 : je 0xd5690 ; xor eax, eax ; pop rbx ; ret
0x00000000000df4c9 : je 0xdf4d2 ; mov dword ptr [rax], r12d ; xor eax, eax ; jmp 0xdf494
0x00000000000e4814 : je 0xe47ec ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000e4d42 : je 0xe4d47 ; mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x00000000000e5012 : je 0xe5017 ; mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x00000000000e58b2 : je 0xe58b8 ; mov edx, eax ; jmp 0xe58a6
0x00000000000e5f25 : je 0xe5efb ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e69ee : je 0xe6a14 ; xor byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x74bc
0x00000000000edf83 : je 0xedf98 ; neg eax ; pop rbx ; ret
0x00000000000f3ef2 : je 0xf3ee0 ; mov byte ptr [r9 + 0xffffffffffffffff], 0 ; ret
0x00000000000f57e3 : je 0xf57e7 ; pop rbx ; ret
0x00000000000f6e00 : je 0xf6e07 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000000f823d : je 0xf82d8 ; call rax
0x00000000000f83b4 : je 0xf84b0 ; call rax
0x00000000000f8598 : je 0xf85a1 ; lea rax, qword ptr [r12 + 0xffffffffffffffff] ; jmp 0xf8564
0x00000000000fafd6 : je 0xfafd9 ; ret
0x00000000000fb2ae : je 0xfb2b8 ; pop rbx ; pop rbp ; ret
0x00000000000fc636 : je 0xfc63b ; mov eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000000fd73a : je 0xfd742 ; add edx, 1 ; mov word ptr [rax], dx ; ret
0x00000000000fd989 : je 0xfd990 ; add edx, 1 ; mov dword ptr [rax], edx ; ret
0x0000000000125552 : jg 0x125594 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x125560 ; ret
0x000000000012801d : jg 0x128024 ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0xcf
0x000000000012c7e2 : jg 0x12c824 ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x12c7f0 ; ret
0x0000000000145989 : jg 0x1459da ; ret
0x0000000000145a0f : jg 0x145a58 ; ret
0x0000000000145b89 : jg 0x145bda ; ret -0x76b4
0x0000000000145c0f : jg 0x145c58 ; ret -0x76b4
0x0000000000148359 : jg 0x1483aa ; ret
0x00000000001483df : jg 0x148428 ; ret
0x0000000000148559 : jg 0x1485aa ; ret -0x76b4
0x00000000001485df : jg 0x148628 ; ret -0x76b4
0x000000000014ad29 : jg 0x14ad7a ; ret
0x000000000014adaf : jg 0x14adf8 ; ret
0x000000000014af29 : jg 0x14af7a ; ret -0x76b4
0x000000000014afaf : jg 0x14aff8 ; ret -0x76b4
0x000000000014d2f8 : jg 0x14d341 ; loope 0x14d2ef ; movq qword ptr [rdi + 0xfffffffffffffff0], mm1 ; ret
0x000000000014d36f : jg 0x14d3b8 ; ret 0xff2
0x000000000014d388 : jg 0x14d3d1 ; loop 0x14d37f ; movq qword ptr [rdi + 0xfffffffffffffff0], mm1 ; ret
0x000000000014d3ff : jg 0x14d448 ; ret
0x000000000014d418 : jg 0x14d461 ; jrcxz 0x14d40f ; movq qword ptr [rdi + 0xfffffffffffffff0], mm1 ; ret
0x000000000014d4a8 : jg 0x14d4f1 ; in al, -0xd ; movq qword ptr [rdi + 0xfffffffffffffff0], mm1 ; ret
0x000000000014d528 : jg 0x14d571 ; in eax, -0xd ; movq qword ptr [rdi + 0xfffffffffffffff0], mm1 ; ret
0x000000000014d5a8 : jg 0x14d5f1 ; out -0xd, al ; movq qword ptr [rdi + 0xfffffffffffffff0], mm1 ; ret
0x000000000014d628 : jg 0x14d671 ; out -0xd, eax ; movq qword ptr [rdi + 0xfffffffffffffff0], mm1 ; ret
0x000000000014d8a8 : jg 0x14d8f1 ; in al, dx ; movdqu xmmword ptr [rdi + 0xfffffffffffffff0], xmm1 ; ret
0x000000000014d928 : jg 0x14d971 ; in eax, dx ; movdqu xmmword ptr [rdi + 0xfffffffffffffff0], xmm1 ; ret
0x000000000014d9b8 : jg 0x14da01 ; out dx, al ; movdqu xmmword ptr [rdi + 0xfffffffffffffff0], xmm1 ; ret
0x000000000014da38 : jg 0x14da81 ; out dx, eax ; movdqu xmmword ptr [rdi + 0xfffffffffffffff0], xmm1 ; ret
0x000000000014daac : jg 0x14dab5 ; ret
0x000000000014db06 : jg 0x14db17 ; ret
0x000000000014db01 : jg 0x14db4a ; psllq mm1, qword ptr [rdi] ; jg 0x14db17 ; ret
0x000000000014db76 : jg 0x14db87 ; ret
0x000000000014dbe6 : jg 0x14dbf7 ; ret
0x000000000014dbe1 : jg 0x14dc2a ; or eax, 0xf7f0ff3 ; ret
0x000000000014dc56 : jg 0x14dc67 ; ret
0x000000000014dc51 : jg 0x14dc9a ; or al, -0xd ; movq qword ptr [rdi], mm1 ; ret
0x000000000014dcc6 : jg 0x14dcd7 ; ret
0x000000000014dcc1 : jg 0x14dd0a ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000014dd36 : jg 0x14dd47 ; ret
0x000000000014dd31 : jg 0x14dd7a ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000014dda6 : jg 0x14ddb7 ; ret
0x000000000014dda1 : jg 0x14ddea ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000014de16 : jg 0x14de27 ; ret
0x000000000014de11 : jg 0x14de5a ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000014de86 : jg 0x14de97 ; ret
0x000000000014def6 : jg 0x14df07 ; ret
0x000000000014df66 : jg 0x14df77 ; ret
0x000000000014df61 : jg 0x14dfaa ; add eax, 0xf7f0ff3 ; ret
0x000000000014dfd6 : jg 0x14dfe7 ; ret
0x000000000014dfd1 : jg 0x14e01a ; add al, -0xd ; movq qword ptr [rdi], mm1 ; ret
0x000000000014e046 : jg 0x14e057 ; ret
0x000000000014e041 : jg 0x14e08a ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x000000000014e0b6 : jg 0x14e0c7 ; ret
0x000000000014e0b1 : jg 0x14e0fa ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x000000000014e126 : jg 0x14e137 ; ret
0x000000000014e121 : jg 0x14e16a ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000014fdc8 : jg 0x14fe11 ; loope 0x14fdbf ; movq qword ptr [rdi + 0xfffffffffffffff0], mm1 ; ret
0x000000000014fe3f : jg 0x14fe88 ; ret 0xff2
0x000000000014fe58 : jg 0x14fea1 ; loop 0x14fe4f ; movq qword ptr [rdi + 0xfffffffffffffff0], mm1 ; ret
0x000000000014fecf : jg 0x14ff18 ; ret
0x000000000014fee8 : jg 0x14ff31 ; jrcxz 0x14fedf ; movq qword ptr [rdi + 0xfffffffffffffff0], mm1 ; ret
0x000000000014ff78 : jg 0x14ffc1 ; in al, -0xd ; movq qword ptr [rdi + 0xfffffffffffffff0], mm1 ; ret
0x000000000014fff8 : jg 0x150041 ; in eax, -0xd ; movq qword ptr [rdi + 0xfffffffffffffff0], mm1 ; ret
0x0000000000150078 : jg 0x1500c1 ; out -0xd, al ; movq qword ptr [rdi + 0xfffffffffffffff0], mm1 ; ret
0x00000000001500f8 : jg 0x150141 ; out -0xd, eax ; movq qword ptr [rdi + 0xfffffffffffffff0], mm1 ; ret
0x0000000000150378 : jg 0x1503c1 ; in al, dx ; movdqu xmmword ptr [rdi + 0xfffffffffffffff0], xmm1 ; ret
0x00000000001503f8 : jg 0x150441 ; in eax, dx ; movdqu xmmword ptr [rdi + 0xfffffffffffffff0], xmm1 ; ret
0x0000000000150488 : jg 0x1504d1 ; out dx, al ; movdqu xmmword ptr [rdi + 0xfffffffffffffff0], xmm1 ; ret
0x0000000000150508 : jg 0x150551 ; out dx, eax ; movdqu xmmword ptr [rdi + 0xfffffffffffffff0], xmm1 ; ret
0x000000000015057c : jg 0x150585 ; ret
0x00000000001505d6 : jg 0x1505e7 ; ret
0x00000000001505d1 : jg 0x15061a ; psllq mm1, qword ptr [rdi] ; jg 0x1505e7 ; ret
0x0000000000150646 : jg 0x150657 ; ret
0x00000000001506b6 : jg 0x1506c7 ; ret
0x00000000001506b1 : jg 0x1506fa ; or eax, 0xf7f0ff3 ; ret
0x0000000000150726 : jg 0x150737 ; ret
0x0000000000150721 : jg 0x15076a ; or al, -0xd ; movq qword ptr [rdi], mm1 ; ret
0x0000000000150796 : jg 0x1507a7 ; ret
0x0000000000150791 : jg 0x1507da ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000150806 : jg 0x150817 ; ret
0x0000000000150801 : jg 0x15084a ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000150876 : jg 0x150887 ; ret
0x0000000000150871 : jg 0x1508ba ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000001508e6 : jg 0x1508f7 ; ret
0x00000000001508e1 : jg 0x15092a ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000150956 : jg 0x150967 ; ret
0x00000000001509c6 : jg 0x1509d7 ; ret
0x0000000000150a36 : jg 0x150a47 ; ret
0x0000000000150a31 : jg 0x150a7a ; add eax, 0xf7f0ff3 ; ret
0x0000000000150aa6 : jg 0x150ab7 ; ret
0x0000000000150aa1 : jg 0x150aea ; add al, -0xd ; movq qword ptr [rdi], mm1 ; ret
0x0000000000150b16 : jg 0x150b27 ; ret
0x0000000000150b11 : jg 0x150b5a ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000150b86 : jg 0x150b97 ; ret
0x0000000000150b81 : jg 0x150bca ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000150bf6 : jg 0x150c07 ; ret
0x0000000000150bf1 : jg 0x150c3a ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000001528e8 : jg 0x152931 ; loope 0x1528df ; movq qword ptr [rdi + 0xfffffffffffffff0], mm1 ; ret
0x000000000015295f : jg 0x1529a8 ; ret 0xff2
0x0000000000152978 : jg 0x1529c1 ; loop 0x15296f ; movq qword ptr [rdi + 0xfffffffffffffff0], mm1 ; ret
0x00000000001529ef : jg 0x152a38 ; ret
0x0000000000152a08 : jg 0x152a51 ; jrcxz 0x1529ff ; movq qword ptr [rdi + 0xfffffffffffffff0], mm1 ; ret
0x0000000000152a98 : jg 0x152ae1 ; in al, -0xd ; movq qword ptr [rdi + 0xfffffffffffffff0], mm1 ; ret
0x0000000000152b18 : jg 0x152b61 ; in eax, -0xd ; movq qword ptr [rdi + 0xfffffffffffffff0], mm1 ; ret
0x0000000000152b98 : jg 0x152be1 ; out -0xd, al ; movq qword ptr [rdi + 0xfffffffffffffff0], mm1 ; ret
0x0000000000152c18 : jg 0x152c61 ; out -0xd, eax ; movq qword ptr [rdi + 0xfffffffffffffff0], mm1 ; ret
0x0000000000152e98 : jg 0x152ee1 ; in al, dx ; movdqu xmmword ptr [rdi + 0xfffffffffffffff0], xmm1 ; ret
0x0000000000152f18 : jg 0x152f61 ; in eax, dx ; movdqu xmmword ptr [rdi + 0xfffffffffffffff0], xmm1 ; ret
0x0000000000152fa8 : jg 0x152ff1 ; out dx, al ; movdqu xmmword ptr [rdi + 0xfffffffffffffff0], xmm1 ; ret
0x0000000000153028 : jg 0x153071 ; out dx, eax ; movdqu xmmword ptr [rdi + 0xfffffffffffffff0], xmm1 ; ret
0x000000000015309c : jg 0x1530a5 ; ret
0x00000000001530f6 : jg 0x153107 ; ret
0x00000000001530f1 : jg 0x15313a ; psllq mm1, qword ptr [rdi] ; jg 0x153107 ; ret
0x0000000000153166 : jg 0x153177 ; ret
0x00000000001531d6 : jg 0x1531e7 ; ret
0x00000000001531d1 : jg 0x15321a ; or eax, 0xf7f0ff3 ; ret
0x0000000000153246 : jg 0x153257 ; ret
0x0000000000153241 : jg 0x15328a ; or al, -0xd ; movq qword ptr [rdi], mm1 ; ret
0x00000000001532b6 : jg 0x1532c7 ; ret
0x00000000001532b1 : jg 0x1532fa ; or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x0000000000153326 : jg 0x153337 ; ret
0x0000000000153321 : jg 0x15336a ; or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000153396 : jg 0x1533a7 ; ret
0x0000000000153391 : jg 0x1533da ; or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x0000000000153406 : jg 0x153417 ; ret
0x0000000000153401 : jg 0x15344a ; or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x0000000000153476 : jg 0x153487 ; ret
0x00000000001534e6 : jg 0x1534f7 ; ret
0x0000000000153556 : jg 0x153567 ; ret
0x0000000000153551 : jg 0x15359a ; add eax, 0xf7f0ff3 ; ret
0x00000000001535c6 : jg 0x1535d7 ; ret
0x00000000001535c1 : jg 0x15360a ; add al, -0xd ; movq qword ptr [rdi], mm1 ; ret
0x0000000000153636 : jg 0x153647 ; ret
0x0000000000153631 : jg 0x15367a ; add esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000001536a6 : jg 0x1536b7 ; ret
0x00000000001536a1 : jg 0x1536ea ; add dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x0000000000153716 : jg 0x153727 ; ret
0x0000000000153711 : jg 0x15375a ; add ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x00000000001650f5 : jg 0x165100 ; neg eax ; ret
0x0000000000179209 : jg 0x179207 ; jmp qword ptr [rax]
0x00000000001883a9 : jg 0x1883a7 ; call rdx
0x00000000001884e5 : jg 0x1884e3 ; jmp qword ptr [rax]
0x00000000001884e9 : jg 0x1884e7 ; jmp qword ptr [rax + 0x20fffc7e]
0x0000000000188525 : jg 0x188523 ; call qword ptr [rax]
0x0000000000188529 : jg 0x188527 ; call qword ptr [rax + 0x10fffc7e]
0x0000000000192e56 : jg 0x192de3 ; ljmp 0x6d0d1cff, -0x1576 ; jmp qword ptr [rdx]
0x00000000001954c5 : jg 0x1954b3 ; jmp qword ptr [rdx]
0x00000000001aa8d4 : jg 0x1aa8c1 ; hlt ; jmp qword ptr [rdx]
0x00000000001ae29d : jg 0x1ae294 ; jmp qword ptr [rdx]
0x00000000001b4d61 : jg 0x1b4d5a ; call qword ptr [rdx]
0x000000000001fbe9 : jg 0x1fb76 ; add cl, byte ptr [rax + 0xffffffffffffff83] ; ret -0x7cfc
0x00000000000360cb : jg 0x36115 ; sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000036544 : jg 0x36546 ; je 0x36537 ; ret
0x000000000003673a : jg 0x3673c ; add byte ptr [rcx], cl ; ret -0x2f77
0x00000000000366d5 : jg 0x3674e ; or cl, byte ptr [rdi] ; push rdi ; fisttp dword ptr [rdi] ; ret
0x00000000000368e2 : jg 0x36929 ; or ecx, eax ; je 0x36888 ; ret
0x000000000004725b : jg 0x472c5 ; xor eax, eax ; ret
0x0000000000049ad9 : jg 0x49adf ; adc ecx, dword ptr [rax + 0xffffffffffffff83] ; ret 0x4c10
0x000000000008d317 : jg 0x8d329 ; jne 0x8d300 ; mov rax, rdi ; ret
0x000000000009db76 : jg 0x9db7f ; ret
0x000000000009db86 : jg 0x9db8f ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009db9a : jg 0x9dba3 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009dbb9 : jg 0x9dbc2 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009dbc9 : jg 0x9dbd2 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009dbd9 : jg 0x9dbe2 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009dbfa : jg 0x9dc03 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009dc1a : jg 0x9dc23 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009dc3a : jg 0x9dc43 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009dc5a : jg 0x9dc63 ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000009dc9d : jg 0x9dca6 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009dcbd : jg 0x9dcc6 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009dcdb : jg 0x9dce4 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009dcfb : jg 0x9dd04 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009dd1b : jg 0x9dd24 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009dd3b : jg 0x9dd44 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009e2c8 : jg 0x9e2cb ; jne 0x9eb80 ; ret
0x000000000009e2ec : jg 0x9e2f0 ; jne 0x9eb80 ; ret
0x000000000009e30f : jg 0x9e314 ; jne 0x9eb80 ; ret
0x000000000009e32a : jg 0x9e330 ; jne 0x9eb80 ; ret
0x000000000009e34d : jg 0x9e354 ; jne 0x9eb80 ; ret
0x000000000009e372 : jg 0x9e37a ; jne 0x9eb80 ; ret
0x000000000009e390 : jg 0x9e399 ; jne 0x9eb80 ; ret
0x000000000009e3ac : jg 0x9e3b6 ; jne 0x9eb80 ; ret
0x000000000009e3cf : jg 0x9e3da ; jne 0x9eb80 ; ret
0x000000000009e3f4 : jg 0x9e400 ; jne 0x9eb80 ; ret
0x000000000009e412 : jg 0x9e41f ; jne 0x9eb80 ; ret
0x000000000009e432 : jg 0x9e440 ; jne 0x9eb80 ; ret
0x000000000009e454 : jg 0x9e463 ; jne 0x9eb80 ; ret
0x000000000009e474 : jg 0x9e484 ; jne 0x9eb80 ; ret
0x000000000009e494 : jg 0x9e4a5 ; jne 0x9eb80 ; ret
0x000000000009e4ae : jg 0x9e4c0 ; jne 0x9eb80 ; ret
0x000000000009e4d1 : jg 0x9e4e4 ; jne 0x9eb80 ; ret
0x000000000009e4f6 : jg 0x9e50a ; jne 0x9eb80 ; ret
0x000000000009e514 : jg 0x9e529 ; jne 0x9eb80 ; ret
0x000000000009e534 : jg 0x9e54a ; jne 0x9eb80 ; ret
0x000000000009e557 : jg 0x9e56e ; jne 0x9eb80 ; ret
0x000000000009e576 : jg 0x9e58e ; jne 0x9eb80 ; ret
0x000000000009e596 : jg 0x9e5af ; jne 0x9eb80 ; ret
0x000000000009e5b6 : jg 0x9e5d0 ; jne 0x9eb80 ; ret
0x000000000009e5d9 : jg 0x9e5f4 ; jne 0x9eb80 ; ret
0x000000000009e60e : jg 0x9e62a ; jne 0x9eb80 ; ret
0x000000000009e63c : jg 0x9e659 ; jne 0x9eb80 ; ret
0x000000000009e66c : jg 0x9e68a ; jne 0x9eb80 ; ret
0x000000000009e698 : jg 0x9e6b7 ; jne 0x9eb80 ; ret
0x000000000009e6c8 : jg 0x9e6e8 ; jne 0x9eb80 ; ret
0x000000000009e6f8 : jg 0x9e719 ; jne 0x9eb80 ; ret
0x000000000009e728 : jg 0x9e74a ; jne 0x9eb80 ; ret
0x000000000009e846 : jg 0x9e84f ; ret
0x000000000009e859 : jg 0x9e862 ; mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009e86a : jg 0x9e873 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009e889 : jg 0x9e892 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009e899 : jg 0x9e8a2 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009e8ac : jg 0x9e8b5 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x000000000009e8ca : jg 0x9e8d3 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009e8ea : jg 0x9e8f3 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009e90a : jg 0x9e913 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009e92d : jg 0x9e936 ; mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x000000000009e96d : jg 0x9e976 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009e98d : jg 0x9e996 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009e9ab : jg 0x9e9b4 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009e9cb : jg 0x9e9d4 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009e9eb : jg 0x9e9f4 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009ea0b : jg 0x9ea14 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009eb42 : jg 0x9eb4b ; ret
0x000000000009ec76 : jg 0x9eca8 ; ret
0x000000000009f1e6 : jg 0x9f1ef ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000009f1f6 : jg 0x9f1ff ; mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000009f229 : jg 0x9f232 ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000009f249 : jg 0x9f252 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000009f36f : jg 0x9f3c8 ; or eax, 0x1c478d48 ; ret
0x000000000009f96b : jg 0x9f96e ; jne 0xa0390 ; ret
0x000000000009f990 : jg 0x9f994 ; jne 0xa0390 ; ret
0x000000000009f9b3 : jg 0x9f9b8 ; jne 0xa0390 ; ret
0x000000000009f9ce : jg 0x9f9d4 ; jne 0xa0390 ; ret
0x000000000009f9f1 : jg 0x9f9f8 ; jne 0xa0390 ; ret
0x000000000009fa16 : jg 0x9fa1e ; jne 0xa0390 ; ret
0x000000000009fa34 : jg 0x9fa3d ; jne 0xa0390 ; ret
0x000000000009fa50 : jg 0x9fa5a ; jne 0xa0390 ; ret
0x000000000009fa73 : jg 0x9fa7e ; jne 0xa0390 ; ret
0x000000000009fa98 : jg 0x9faa4 ; jne 0xa0390 ; ret
0x000000000009fac6 : jg 0x9fad3 ; jne 0xa0390 ; ret
0x000000000009fae6 : jg 0x9faf4 ; jne 0xa0390 ; ret
0x000000000009fb08 : jg 0x9fb17 ; jne 0xa0390 ; ret
0x000000000009fb38 : jg 0x9fb48 ; jne 0xa0390 ; ret
0x000000000009fb68 : jg 0x9fb79 ; jne 0xa0390 ; ret
0x000000000009fb92 : jg 0x9fba4 ; jne 0xa0390 ; ret
0x000000000009fbb5 : jg 0x9fbc8 ; jne 0xa0390 ; ret
0x000000000009fbda : jg 0x9fbee ; jne 0xa0390 ; ret
0x000000000009fc08 : jg 0x9fc1d ; jne 0xa0390 ; ret
0x000000000009fc38 : jg 0x9fc4e ; jne 0xa0390 ; ret
0x000000000009fc6b : jg 0x9fc82 ; jne 0xa0390 ; ret
0x000000000009fc9a : jg 0x9fcb2 ; jne 0xa0390 ; ret
0x000000000009fcca : jg 0x9fce3 ; jne 0xa0390 ; ret
0x000000000009fcfa : jg 0x9fd14 ; jne 0xa0390 ; ret
0x000000000009fd2d : jg 0x9fd48 ; jne 0xa0390 ; ret
0x000000000009fd62 : jg 0x9fd7e ; jne 0xa0390 ; ret
0x000000000009fd90 : jg 0x9fdad ; jne 0xa0390 ; ret
0x000000000009fdc0 : jg 0x9fdde ; jne 0xa0390 ; ret
0x000000000009fdec : jg 0x9fe0b ; jne 0xa0390 ; ret
0x000000000009fe1c : jg 0x9fe3c ; jne 0xa0390 ; ret
0x000000000009fe4c : jg 0x9fe6d ; jne 0xa0390 ; ret
0x000000000009fe7c : jg 0x9fe9e ; jne 0xa0390 ; ret
0x00000000000a0026 : jg 0xa002f ; lea rax, qword ptr [rdi + 0x10] ; ret
0x00000000000a0039 : jg 0xa0042 ; mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a0079 : jg 0xa0082 ; mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a0099 : jg 0xa00a2 ; mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x00000000000a01bf : jg 0xa0218 ; or eax, 0x1d478d48 ; ret
0x00000000000a0352 : jg 0xa035b ; ret
0x00000000000a0486 : jg 0xa04b8 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x00000000000a0c56 : jg 0xa0c5f ; ret
0x00000000000a0c66 : jg 0xa0c6f ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a0c7a : jg 0xa0c83 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a0c99 : jg 0xa0ca2 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a0ca9 : jg 0xa0cb2 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a0cb9 : jg 0xa0cc2 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a0cda : jg 0xa0ce3 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a0cfa : jg 0xa0d03 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a0d1a : jg 0xa0d23 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a0d3a : jg 0xa0d43 ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a0d7d : jg 0xa0d86 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a0d9d : jg 0xa0da6 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a0dbb : jg 0xa0dc4 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a0ddb : jg 0xa0de4 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a0dfb : jg 0xa0e04 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a0e1b : jg 0xa0e24 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a1726 : jg 0xa172f ; ret
0x00000000000a1736 : jg 0xa173f ; mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a174a : jg 0xa1753 ; mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a1769 : jg 0xa1772 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a1779 : jg 0xa1782 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a1789 : jg 0xa1792 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a17aa : jg 0xa17b3 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a17ca : jg 0xa17d3 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a17ea : jg 0xa17f3 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a180a : jg 0xa1813 ; mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a184d : jg 0xa1856 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a186d : jg 0xa1876 ; mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a188b : jg 0xa1894 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x00000000000a18ab : jg 0xa18b4 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x00000000000a18cb : jg 0xa18d4 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x00000000000a18eb : jg 0xa18f4 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a1a96 : jg 0xa1a9f ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a1c6f : jg 0xa1cc8 ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a1c8f : jg 0xa1ce8 ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a1d06 : jg 0xa1d38 ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a1d05 : jg 0xa1d86 ; xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a26e0 : jg 0xa271b ; ret 0x2b77
0x00000000000a3875 : jg 0xa3879 ; neg eax ; ret
0x00000000000c30dc : jg 0xc30de ; add byte ptr [rax], al ; ret
0x00000000000eca40 : jg 0xeca8a ; add esp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000f7f88 : jg 0xf7f92 ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0xcf
0x00000000000fa96e : jg 0xfa99c ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000118dcc : jge 0x118dd1 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012534f : jge 0x125361 ; call rax
0x000000000012c5ff : jge 0x12c611 ; call rax
0x000000000012cd08 : jge 0x12cd1a ; call rax
0x0000000000179205 : jge 0x179203 ; inc dword ptr [rax] ; jg 0x179207 ; jmp qword ptr [rax]
0x000000000017a2d0 : jge 0x17a2ea ; hlt ; call qword ptr [rdi]
0x00000000001883b9 : jge 0x1883b7 ; call rdx
0x00000000001884f5 : jge 0x1884f3 ; jmp qword ptr [rax]
0x00000000001884f9 : jge 0x1884f7 ; jmp qword ptr [rax + 0x20fffc7c]
0x0000000000188535 : jge 0x188533 ; call qword ptr [rax]
0x0000000000188539 : jge 0x188537 ; call qword ptr [rax + 0x10fffc7c]
0x000000000018bd99 : jge 0x18bd8f ; jmp rsp
0x000000000018daa1 : jge 0x18da9b ; call rsp
0x00000000001996b4 : jge 0x19966f ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000199744 : jge 0x1996ff ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a1ce5 : jge 0x1a1cd8 ; jmp qword ptr [rdx]
0x00000000001a1d6d : jge 0x1a1d60 ; jmp qword ptr [rdx]
0x00000000001a6f05 : jge 0x1a6f08 ; add byte ptr [rax + 0xffffffffffffffbb], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001a6f1d : jge 0x1a6f20 ; add byte ptr [rax + 0xffffffffffffffbb], ah ; hlt ; jmp qword ptr [rcx]
0x000000000002257f : jge 0x225a7 ; cmp al, byte ptr [rax] ; pop rbx ; ret
0x0000000000048cea : jge 0x48cec ; cmp cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x0000000000070823 : jge 0x70895 ; cmp edi, ebx ; je 0x7082e ; call 0xecae9
0x0000000000094b81 : jge 0x94b83 ; add byte ptr [rdx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x0000000000097bbf : jge 0x97bc1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a49ef : jge 0xa49f1 ; call r12
0x00000000000a4fe2 : jge 0xa5015 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000000b0471 : jge 0xb0473 ; call r12
0x00000000000be596 : jge 0xbe530 ; call r14
0x00000000000cb716 : jge 0xcb6a8 ; movsx esi, byte ptr [rax] ; call 0x879e0
0x00000000000e578f : jge 0xe5763 ; std ; dec dword ptr [rax + 0xffffffffffffffc7] ; ret -1
0x00000000000f45af : jge 0xf4591 ; sub al, 0 ; add rsp, 8 ; ret
0x00000000000f5c4b : jge 0xf5c4d ; call rbx
0x00000000000f5d72 : jge 0xf5d74 ; call rbx
0x00000000000f5d80 : jge 0xf5d82 ; call rbx
0x00000000000f5eb5 : jge 0xf5eb7 ; call rbx
0x00000000000f6025 : jge 0xf6027 ; call rbx
0x00000000000f6033 : jge 0xf6035 ; call rbx
0x00000000000f643f : jge 0xf6401 ; mov r15d, r14d ; mov rax, qword ptr [rbp + 0xffffffffffffffb8] ; call rax
0x00000000000f772a : jge 0xf772c ; call r12
0x00000000001282ed : jl 0x1282f4 ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0xcf
0x000000000016304b : jl 0x163050 ; neg eax ; ret
0x0000000000179201 : jl 0x1791ff ; jmp rax
0x000000000017a304 : jl 0x17a322 ; hlt ; jmp qword ptr [rsi]
0x00000000001884fd : jl 0x1884fb ; jmp qword ptr [rax]
0x000000000018853d : jl 0x18853b ; call qword ptr [rax]
0x0000000000188e95 : jl 0x188e97 ; add ah, al ; jno 0x188e85 ; jmp rsp
0x000000000018bd94 : jl 0x18bd46 ; add dword ptr [rax], eax ; mov ah, 0x7d ; hlt ; jmp rsp
0x000000000018def5 : jl 0x18def9 ; add byte ptr [rdx + rdx], dh ; stc ; jmp rsp
0x0000000000196f85 : jl 0x196f74 ; jmp qword ptr [rdx]
0x0000000000197135 : jl 0x197124 ; jmp qword ptr [rdx]
0x000000000019717d : jl 0x19716c ; jmp qword ptr [rdx]
0x00000000001971c5 : jl 0x1971b4 ; jmp qword ptr [rdx]
0x0000000000197cbc : jl 0x197c40 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019831c : jl 0x1982a6 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001994e4 : jl 0x19949f ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019a26c : jl 0x19a21e ; add byte ptr [rax], al ; adc dh, bh ; in eax, dx ; jmp rax
0x000000000019b62d : jl 0x19b62b ; jmp qword ptr [rdx]
0x000000000019b675 : jl 0x19b673 ; jmp qword ptr [rdx]
0x000000000019c96c : jl 0x19c945 ; add byte ptr [rax], al ; and byte ptr [rax], dh ; out dx, al ; call qword ptr [rsi]
0x000000000019d56c : jl 0x19d551 ; add byte ptr [rax], al ; push rax ; mov edi, esp ; call qword ptr [rdx]
0x00000000001a1091 : jl 0x1a1084 ; call qword ptr [rax]
0x00000000001a1b25 : jl 0x1a1b18 ; jmp qword ptr [rdx]
0x00000000001a1b6d : jl 0x1a1b60 ; jmp qword ptr [rdx]
0x00000000001a1bcd : jl 0x1a1bc0 ; jmp qword ptr [rdx]
0x00000000001a1c15 : jl 0x1a1c08 ; jmp qword ptr [rdx]
0x00000000001a1c9d : jl 0x1a1c90 ; jmp qword ptr [rdx]
0x00000000001a2f6c : jl 0x1a2fab ; add dword ptr [rax], eax ; sar dl, -0xf ; jmp qword ptr [rcx]
0x00000000001a6df5 : jl 0x1a6df8 ; add byte ptr [rax + 0xffffffffffffffb9], bh ; hlt ; jmp qword ptr [rbx]
0x00000000001a916c : jl 0x1a910d ; add dword ptr [rax], eax ; jo 0x1a91aa ; cmc ; jmp qword ptr [rcx]
0x00000000001ab16c : jl 0x1ab12d ; add dword ptr [rax], eax ; push rax ; xchg eax, edi ; cmc ; call rsp
0x00000000001adeb5 : jl 0x1adeac ; jmp qword ptr [rdx]
0x00000000001adf45 : jl 0x1adf3c ; jmp qword ptr [rdx]
0x00000000001adf8d : jl 0x1adf84 ; jmp qword ptr [rdx]
0x00000000001adfed : jl 0x1adfe4 ; jmp qword ptr [rdx]
0x00000000001ae035 : jl 0x1ae02c ; jmp qword ptr [rdx]
0x00000000001ae07d : jl 0x1ae074 ; jmp qword ptr [rdx]
0x00000000001ae0c5 : jl 0x1ae0bc ; jmp qword ptr [rdx]
0x00000000001ae10d : jl 0x1ae104 ; jmp qword ptr [rdx]
0x00000000001ae155 : jl 0x1ae14c ; jmp qword ptr [rdx]
0x00000000000025c3 : jl 0x2552 ; loop 0x259d ; ret 0x23cb
0x0000000000025a63 : jl 0x25a89 ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000025b5c : jl 0x25b82 ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000025f30 : jl 0x25f56 ; mov dword ptr [rsp + 8], eax ; call rbx
0x00000000000261b9 : jl 0x261df ; mov dword ptr [rsp + 8], eax ; call r14
0x00000000000264ab : jl 0x264d1 ; mov dword ptr [rsp + 8], eax ; call r15
0x000000000002659d : jl 0x265c3 ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000026988 : jl 0x269ae ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000026b7f : jl 0x26ba5 ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000026ea0 : jl 0x26ec6 ; mov dword ptr [rsp + 8], eax ; call r14
0x00000000000270ab : jl 0x270d1 ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000027793 : jl 0x277b9 ; pop rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x00000000000278be : jl 0x278e4 ; jo 0x2790a ; mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x000000000002849a : jl 0x284c0 ; mov qword ptr [rsp + 8], rax ; call rbx
0x0000000000028b1f : jl 0x28b45 ; push rax ; mov dword ptr [rsp + 8], eax ; call r12
0x0000000000029535 : jl 0x2955b ; push rax ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000029eb1 : jl 0x29ed7 ; mov qword ptr [rsp + 8], rax ; call r14
0x000000000002a3be : jl 0x2a3e4 ; pop rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000002a6b7 : jl 0x2a6dd ; pop rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000002a80c : jl 0x2a832 ; jo 0x2a858 ; mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x000000000002b00a : jl 0x2b030 ; mov qword ptr [rsp + 8], rax ; call r14
0x000000000002b50e : jl 0x2b534 ; pop rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000002b807 : jl 0x2b82d ; pop rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x000000000002b95c : jl 0x2b982 ; jo 0x2b9a8 ; mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x000000000003abea : jl 0x3ac10 ; and byte ptr [rax + 0xffffffffffffff89], cl ; pop rax ; or cl, ch ; ret -6
0x000000000004444a : jl 0x44470 ; xor byte ptr [rax + 0x29], cl ; ret 0x2949
0x0000000000000452 : jl 0x464 ; sbb al, 0xc ; ret 0x4412
0x000000000004fe51 : jl 0x4fe14 ; clc ; add byte ptr [rax + 0xf], cl ; ret -0x76b8
0x0000000000085d30 : jl 0x85d33 ; add byte ptr [rax], al ; mov rsi, r14 ; call rax
0x000000000008bb07 : jl 0x8bb2d ; or byte ptr [rax + 0x39], cl ; ret
0x0000000000097c4a : jl 0x97cb0 ; add rax, rdi ; ret
0x0000000000097c5a : jl 0x97cb0 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x0000000000097c7a : jl 0x97cb0 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x0000000000097c9a : jl 0x97cb0 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000b8ed3 : jl 0xb8f1d ; ror byte ptr [rax + 0xffffffffffffff83], 1 ; ret
0x00000000000c1c70 : jl 0xc1c2a ; sti ; dec dword ptr [rax + 0x39] ; ret
0x00000000000d59de : jl 0xd5a10 ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000ec7b9 : jl 0xec7df ; cwde ; add cl, byte ptr [rdi] ; ret 0xfc3
0x00000000000ec8c9 : jl 0xec8ef ; adc byte ptr [rdx], al ; cmove eax, edx ; jmp 0xec88b
0x00000000000f6116 : jl 0xf613c ; or byte ptr [rax + 0xffffffffffffff8b], cl ; and al, 0x10 ; call rax
0x00000000000fafd4 : jl 0xfb015 ; je 0xfafd9 ; ret
0x0000000000102ace : jle 0x102b3b ; clc ; dec dword ptr [rax + 0xffffffffffffff89] ; ret
0x000000000010a26e : jle 0x10a26a ; rep inc dword ptr [rbp + 0xffffffffffffff85] ; in al, -0x77 ; ret 0x87e
0x000000000010e2ad : jle 0x10e305 ; sub eax, dword ptr [rax] ; add ecx, ebp ; ret
0x000000000012b378 : jle 0x12b388 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x000000000012f72e : jle 0x12f768 ; call 0x12b940
0x000000000013db07 : jle 0x13da28 ; movsxd rax, ecx ; ret
0x000000000017912d : jle 0x179120 ; call qword ptr [rax + 0xffffffffe0fff180]
0x00000000001873c9 : jle 0x1873c6 ; jmp rax
0x00000000001883b1 : jle 0x1883af ; call rdx
0x00000000001884ed : jle 0x1884eb ; jmp qword ptr [rax]
0x00000000001884f1 : jle 0x1884ef ; jmp qword ptr [rax + 0x20fffc7d]
0x000000000018852d : jle 0x18852b ; call qword ptr [rax]
0x0000000000188531 : jle 0x18852f ; call qword ptr [rax + 0x10fffc7d]
0x000000000019547d : jle 0x19546b ; jmp qword ptr [rdx]
0x0000000000196bf4 : jle 0x196c71 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a1db5 : jle 0x1a1da8 ; jmp qword ptr [rdx]
0x00000000001a1dfd : jle 0x1a1df0 ; jmp qword ptr [rdx]
0x00000000001a1e95 : jle 0x1a1e88 ; jmp qword ptr [rdx]
0x00000000001a1edd : jle 0x1a1ed0 ; jmp qword ptr [rdx]
0x00000000001a1f25 : jle 0x1a1f18 ; jmp qword ptr [rdx]
0x00000000001a1f6d : jle 0x1a1f60 ; jmp qword ptr [rdx]
0x00000000001a1fb5 : jle 0x1a1fa8 ; jmp qword ptr [rdx]
0x00000000001a1ffd : jle 0x1a1ff0 ; jmp qword ptr [rdx]
0x00000000001a7015 : jle 0x1a7018 ; add byte ptr [rax + 0xffffffffffffffbe], cl ; hlt ; jmp qword ptr [rcx]
0x00000000001a702d : jle 0x1a7030 ; add byte ptr [rax + 0xffffffffffffffbe], ah ; hlt ; jmp qword ptr [rcx]
0x00000000001a7045 : jle 0x1a7048 ; add byte ptr [rax + 0xffffffffffffffbe], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001ae255 : jle 0x1ae24c ; jmp qword ptr [rdx]
0x000000000002caa2 : jle 0x2caac ; sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000002f7d1 : jle 0x2f803 ; push qword ptr [rdi + rax + 0xffffffffffffff89] ; fucompi st(0) ; ret
0x000000000003d987 : jle 0x3d940 ; jmp 0x3d94d
0x00000000000744eb : jle 0x744ed ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x76b4
0x00000000000c3189 : jle 0xc318b ; add byte ptr [rax], al ; ret
0x000000000018f720 : jmp -0x17d9ebdc
0x000000000010981e : jmp -0x3bf6de95
0x00000000001099de : jmp -0x3c1edcd1
0x000000000007e24e : jmp -0x3c6ed0ac
0x00000000000e4ea3 : jmp -0x3cb7b15b
0x00000000000e4e12 : jmp -0x3cb7b1ec
0x0000000000038c21 : jmp -0x3cecea8e
0x00000000000a3783 : jmp -0x3cf5c878
0x00000000000a9856 : jmp -0x3d721fa4
0x000000000000314e : jmp -0x3da2fa0a
0x000000000004f662 : jmp -0x3db6fa4d
0x000000000011ecf6 : jmp -0x3f683f06
0x000000000018f6d8 : jmp -0x4cd9ec24
0x000000000018fad0 : jmp -0x55d9e82c
0x00000000000a5436 : jmp -0x6227d
0x00000000000a5143 : jmp -0x62570
0x0000000000113011 : jmp -0x76a20d61
0x0000000000101f5b : jmp 0x101c9b
0x000000000010c9e1 : jmp 0x10c9a6
0x000000000010e2b2 : jmp 0x10e07a
0x000000000010e66a : jmp 0x10e44a
0x000000000010ea02 : jmp 0x10e7d4
0x000000000010f1f5 : jmp 0x10f204
0x000000000010fdc7 : jmp 0x10fdc9
0x000000000011059a : jmp 0x110445
0x00000000001107f9 : jmp 0x1106ce
0x0000000000116b11 : jmp 0x11698e
0x0000000000117c82 : jmp 0x117c91
0x0000000000117cec : jmp 0x117cfa
0x0000000000118a16 : jmp 0x118a60
0x00000000001247bf : jmp 0x124784
0x000000000012bb7e : jmp 0x12bb84
0x000000000012e192 : jmp 0x12e156
0x000000000013224a : jmp 0x13220f
0x00000000001348ea : jmp 0x134767
0x0000000000166181 : jmp 0x166182
0x0000000000174f6a : jmp 0x174fa4
0x0000000000175ca9 : jmp 0x175c77
0x0000000000176ca0 : jmp 0x176c2e
0x00000000001893e2 : jmp 0x1893e3
0x0000000000189402 : jmp 0x189403
0x000000000018943a : jmp 0x18943b
0x0000000000189552 : jmp 0x189553
0x000000000018955a : jmp 0x18955b
0x00000000001895ca : jmp 0x1895cb
0x00000000001895e2 : jmp 0x1895e3
0x00000000001895ea : jmp 0x1895eb
0x0000000000189692 : jmp 0x189693
0x00000000001896ca : jmp 0x1896cb
0x00000000001897b2 : jmp 0x1897b3
0x00000000001897ea : jmp 0x1897eb
0x0000000000189842 : jmp 0x189843
0x00000000001936ba : jmp 0x1936bb
0x000000000019381e : jmp 0x19381f
0x0000000000193866 : jmp 0x193867
0x00000000001938ae : jmp 0x1938af
0x00000000001938f6 : jmp 0x1938f7
0x000000000019393e : jmp 0x19393f
0x0000000000193986 : jmp 0x193987
0x00000000001939ce : jmp 0x1939cf
0x0000000000193a16 : jmp 0x193a17
0x0000000000193b12 : jmp 0x193b13
0x0000000000193e12 : jmp 0x193e13
0x0000000000193e76 : jmp 0x193e77
0x0000000000193ebe : jmp 0x193ebf
0x0000000000193f06 : jmp 0x193f07
0x0000000000193f4e : jmp 0x193f4f
0x0000000000193f96 : jmp 0x193f97
0x0000000000193fde : jmp 0x193fdf
0x0000000000194182 : jmp 0x194183
0x000000000019419a : jmp 0x19419b
0x00000000001941fa : jmp 0x1941fb
0x000000000019424e : jmp 0x19424f
0x0000000000194296 : jmp 0x194297
0x00000000001942de : jmp 0x1942df
0x0000000000194326 : jmp 0x194327
0x0000000000194596 : jmp 0x194597
0x00000000001945de : jmp 0x1945df
0x000000000019470e : jmp 0x19470f
0x0000000000194756 : jmp 0x194757
0x00000000001948b6 : jmp 0x1948b7
0x00000000001948fe : jmp 0x1948ff
0x0000000000194a8e : jmp 0x194a8f
0x0000000000194ad6 : jmp 0x194ad7
0x000000000002177f : jmp 0x2173a
0x0000000000021b63 : jmp 0x21b27
0x00000000000230a7 : jmp 0x230e1
0x000000000018f7f8 : jmp 0x252614fc
0x0000000000026536 : jmp 0x264fa
0x0000000000026b11 : jmp 0x26a42
0x0000000000026f7d : jmp 0x26f42
0x0000000000026fc7 : jmp 0x26f8b
0x0000000000028271 : jmp 0x27ec6
0x000000000018f7b0 : jmp 0x292614b4
0x0000000000029c0d : jmp 0x29bd1
0x000000000002addd : jmp 0x2ada1
0x000000000002f62e : jmp 0x2f633
0x0000000000035adb : jmp 0x35a9f
0x0000000000003867 : jmp 0x382c
0x00000000000384f2 : jmp 0x38540
0x0000000000039c82 : jmp 0x39cd0
0x000000000018f768 : jmp 0x3a26146c
0x000000000003d7a6 : jmp 0x3d684
0x000000000003d989 : jmp 0x3d94d
0x000000000003dc1d : jmp 0x3db44
0x000000000018f690 : jmp 0x41261394
0x0000000000045f59 : jmp 0x44120
0x0000000000045efd : jmp 0x44347
0x0000000000045eb3 : jmp 0x45b72
0x0000000000046ef5 : jmp 0x46eba
0x00000000000b5a70 : jmp 0x48cde3bd
0x00000000000b6070 : jmp 0x48cde9bd
0x00000000000b60fc : jmp 0x48cdea49
0x00000000000b6189 : jmp 0x48cdead6
0x00000000000b79e7 : jmp 0x48ce0334
0x0000000000126ef2 : jmp 0x48d23180
0x00000000000456b7 : jmp 0x48f4e005
0x0000000000071542 : jmp 0x48f59e8f
0x00000000000b7cac : jmp 0x49ce05f9
0x00000000000b7cf6 : jmp 0x49ce0643
0x00000000000b816b : jmp 0x49ce0ab8
0x000000000004e044 : jmp 0x4a263
0x000000000004e20c : jmp 0x4a485
0x000000000004e5cd : jmp 0x4a803
0x000000000004bff3 : jmp 0x4bfb8
0x0000000000050bc2 : jmp 0x4cc7950f
0x00000000000933a9 : jmp 0x4ccbbcfa
0x00000000000b63c7 : jmp 0x4ccded14
0x00000000000b6a21 : jmp 0x4ccdf36e
0x00000000000b6aad : jmp 0x4ccdf3fa
0x00000000000b6b2e : jmp 0x4ccdf47b
0x00000000000b7901 : jmp 0x4cce024e
0x00000000000b7a4e : jmp 0x4cce039b
0x00000000000e4601 : jmp 0x4cd0cf4e
0x000000000004e806 : jmp 0x4e7ca
0x00000000000565a5 : jmp 0x56569
0x000000000005a37f : jmp 0x56602
0x0000000000058fba : jmp 0x58f7e
0x0000000000063b4f : jmp 0x5fde7
0x0000000000061f36 : jmp 0x60680
0x0000000000061dd3 : jmp 0x61d98
0x000000000018f648 : jmp 0x6226134c
0x0000000000068875 : jmp 0x64a9f
0x00000000000687b5 : jmp 0x64aa1
0x000000000007600b : jmp 0x75fd0
0x0000000000077a81 : jmp 0x77a7e
0x00000000000483f6 : jmp 0x77c6bd44
0x000000000018fb18 : jmp 0x7826181c
0x000000000007864c : jmp 0x78610
0x000000000007ae49 : jmp 0x7ae47
0x000000000007b2b3 : jmp 0x7b277
0x0000000000188bd2 : jmp 0x8040d6
0x0000000000080e92 : jmp 0x80d47
0x0000000000082347 : jmp 0x8230c
0x00000000000824c9 : jmp 0x82310
0x0000000000082db2 : jmp 0x827c6
0x0000000000083371 : jmp 0x83336
0x0000000000083595 : jmp 0x835a4
0x0000000000086a12 : jmp 0x869d2
0x0000000000086bf0 : jmp 0x86bb5
0x0000000000087a84 : jmp 0x87a49
0x0000000000087bd8 : jmp 0x87b9c
0x000000000009400b : jmp 0x93e62
0x00000000000946ec : jmp 0x946b1
0x0000000000094838 : jmp 0x947fc
0x00000000000949e2 : jmp 0x949a6
0x000000000009813e : jmp 0x98103
0x00000000000a207e : jmp 0xa2043
0x00000000000a214f : jmp 0xa2114
0x00000000000a21be : jmp 0xa2183
0x00000000000ac932 : jmp 0xabd39
0x00000000000badc7 : jmp 0xbad8b
0x00000000000bdb50 : jmp 0xbdb15
0x00000000000c49b7 : jmp 0xc4401
0x00000000000c5a3b : jmp 0xc4dd0
0x00000000000c56bb : jmp 0xc4e52
0x00000000000c82d3 : jmp 0xc8298
0x00000000000c8318 : jmp 0xc82dd
0x00000000000c9084 : jmp 0xc90ce
0x00000000000cb62d : jmp 0xcae29
0x00000000000cf548 : jmp 0xcf458
0x00000000000d5414 : jmp 0xd50b6
0x00000000000d5583 : jmp 0xd5266
0x00000000000d54df : jmp 0xd52e1
0x00000000000d53fa : jmp 0xd5360
0x00000000000de6a5 : jmp 0xde6ba
0x00000000000df4d0 : jmp 0xdf494
0x00000000000e4fc8 : jmp 0xe4f8c
0x00000000000eeee7 : jmp 0xeed1d
0x00000000000f1a91 : jmp 0xf1a4f
0x00000000000f22a5 : jmp 0xf226a
0x00000000000f2505 : jmp 0xf24ca
0x00000000000f4926 : jmp 0xf4934
0x00000000000f859f : jmp 0xf8564
0x00000000000fc911 : jmp 0xfc8d6
0x00000000000479b7 : jmp qword ptr [r8]
0x000000000017910b : jmp qword ptr [rax + 0x10fff149]
0x0000000000179243 : jmp qword ptr [rax + 0x10fffc90]
0x0000000000188a43 : jmp qword ptr [rax + 0x10fffca1]
0x000000000018883f : jmp qword ptr [rax + 0x10fffca2]
0x0000000000188593 : jmp qword ptr [rax + 0x20fffc5e]
0x0000000000188557 : jmp qword ptr [rax + 0x20fffc5f]
0x000000000018859b : jmp qword ptr [rax + 0x20fffc61]
0x000000000018855f : jmp qword ptr [rax + 0x20fffc62]
0x00000000001885a3 : jmp qword ptr [rax + 0x20fffc64]
0x0000000000188567 : jmp qword ptr [rax + 0x20fffc65]
0x00000000001885ab : jmp qword ptr [rax + 0x20fffc67]
0x000000000018856f : jmp qword ptr [rax + 0x20fffc68]
0x00000000001885b3 : jmp qword ptr [rax + 0x20fffc6a]
0x0000000000188577 : jmp qword ptr [rax + 0x20fffc6b]
0x00000000001885bb : jmp qword ptr [rax + 0x20fffc6d]
0x000000000018857f : jmp qword ptr [rax + 0x20fffc6e]
0x00000000001885c3 : jmp qword ptr [rax + 0x20fffc70]
0x0000000000188587 : jmp qword ptr [rax + 0x20fffc71]
0x00000000001884fb : jmp qword ptr [rax + 0x20fffc7c]
0x00000000001884f3 : jmp qword ptr [rax + 0x20fffc7d]
0x00000000001884eb : jmp qword ptr [rax + 0x20fffc7e]
0x00000000001884e3 : jmp qword ptr [rax + 0x20fffc7f]
0x00000000001884db : jmp qword ptr [rax + 0x20fffc80]
0x0000000000188513 : jmp qword ptr [rax + 0x20fffc81]
0x0000000000188837 : jmp qword ptr [rax + 0x20fffca3]
0x000000000018882f : jmp qword ptr [rax + 0x20fffca4]
0x0000000000188827 : jmp qword ptr [rax + 0x20fffca5]
0x000000000018881f : jmp qword ptr [rax + 0x20fffca6]
0x000000000017aec7 : jmp qword ptr [rax + 0x23fff5a3]
0x000000000017afaf : jmp qword ptr [rax + 0x23fff5a4]
0x000000000017960b : jmp qword ptr [rax + 0xffffffffc0fff269]
0x00000000001793e7 : jmp qword ptr [rax + 0xffffffffd0fff252]
0x00000000001795d3 : jmp qword ptr [rax + 0xffffffffd0fff268]
0x000000000018741b : jmp qword ptr [rax + 0xffffffffd1fffda6]
0x0000000000179013 : jmp qword ptr [rax + 0xffffffffe0fff0ee]
0x0000000000179023 : jmp qword ptr [rax + 0xffffffffe0fff0f3]
0x0000000000179033 : jmp qword ptr [rax + 0xffffffffe0fff0f8]
0x0000000000179043 : jmp qword ptr [rax + 0xffffffffe0fff0fd]
0x0000000000187b4f : jmp qword ptr [rax + 0xffffffffe0fffc10]
0x00000000001792bf : jmp qword ptr [rax + 0xffffffffe0fffdc8]
0x00000000001792cf : jmp qword ptr [rax + 0xffffffffe0fffdd1]
0x00000000001792df : jmp qword ptr [rax + 0xffffffffe0fffdda]
0x00000000001792ef : jmp qword ptr [rax + 0xffffffffe0fffde3]
0x00000000000479b8 : jmp qword ptr [rax]
0x000000000018e3db : jmp qword ptr [rbp + 2]
0x0000000000189af3 : jmp qword ptr [rbx + rax*8]
0x0000000000002547 : jmp qword ptr [rbx]
0x00000000001788b7 : jmp qword ptr [rcx]
0x000000000018d143 : jmp qword ptr [rdi + rbx + 2]
0x00000000000b5aed : jmp qword ptr [rdi]
0x000000000019b9ce : jmp qword ptr [rdx + 0xffffffffffffffee]
0x000000000017867b : jmp qword ptr [rdx + 0xfffffffffffffff6]
0x00000000000cd2fe : jmp qword ptr [rdx]
0x000000000017865f : jmp qword ptr [rip + 0x20ffffed]
0x000000000018810f : jmp qword ptr [rsi + 0x16fffc84]
0x000000000003c171 : jmp qword ptr [rsi + 0xf]
0x0000000000179cfb : jmp qword ptr [rsi + 0xffffffffe0fff3cc]
0x000000000004488d : jmp qword ptr [rsi + 0xffffffffffffff90]
0x0000000000177b7b : jmp qword ptr [rsi + 0xffffffffffffffef]
0x000000000000d058 : jmp qword ptr [rsi]
0x0000000000179561 : jmp qword ptr fs:[rax]
0x0000000000179581 : jmp qword ptr gs:[rax]
0x0000000000001b5e : jmp r10
0x000000000002e2a3 : jmp r14
0x000000000002ddf3 : jmp r8
0x000000000014377d : jmp r9
0x000000000002208c : jmp rax
0x00000000000e384d : jmp rbx
0x000000000004ce6c : jmp rcx
0x0000000000127dab : jmp rdi
0x0000000000001b5f : jmp rdx
0x000000000002e2a4 : jmp rsi
0x0000000000002a4d : jmp rsp
0x0000000000106a5e : jne 0x106a67 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001085fd : jne 0x1085f0 ; mov rax, qword ptr [rax + 0x30] ; ret
0x00000000001086e8 : jne 0x1086f0 ; mov eax, 1 ; ret
0x0000000000108718 : jne 0x108720 ; xor eax, eax ; ret
0x0000000000108748 : jne 0x108750 ; xor eax, eax ; ret
0x0000000000108778 : jne 0x108780 ; xor eax, eax ; ret
0x00000000001087a8 : jne 0x1087b0 ; xor eax, eax ; ret
0x00000000001087d8 : jne 0x1087e0 ; xor eax, eax ; ret
0x0000000000108808 : jne 0x108810 ; xor eax, eax ; ret
0x0000000000108838 : jne 0x108840 ; xor eax, eax ; ret
0x0000000000108868 : jne 0x108870 ; xor eax, eax ; ret
0x0000000000108898 : jne 0x1088a0 ; xor eax, eax ; ret
0x00000000001088c8 : jne 0x1088d0 ; xor eax, eax ; ret
0x00000000001088f8 : jne 0x108900 ; xor eax, eax ; ret
0x0000000000108928 : jne 0x108930 ; xor eax, eax ; ret
0x0000000000108958 : jne 0x108960 ; xor eax, eax ; ret
0x0000000000108988 : jne 0x108990 ; xor eax, eax ; ret
0x00000000001089b8 : jne 0x1089c0 ; xor eax, eax ; ret
0x00000000001089e8 : jne 0x1089f0 ; xor eax, eax ; ret
0x0000000000108a18 : jne 0x108a20 ; xor eax, eax ; ret
0x0000000000108a48 : jne 0x108a50 ; xor eax, eax ; ret
0x0000000000108a78 : jne 0x108a80 ; xor eax, eax ; ret
0x0000000000108aa8 : jne 0x108ab0 ; xor eax, eax ; ret
0x0000000000108b08 : jne 0x108b10 ; xor eax, eax ; ret
0x0000000000108b38 : jne 0x108b40 ; xor eax, eax ; ret
0x0000000000108b68 : jne 0x108b70 ; xor eax, eax ; ret
0x0000000000108b98 : jne 0x108ba0 ; xor eax, eax ; ret
0x0000000000108bc8 : jne 0x108bd0 ; xor eax, eax ; ret
0x0000000000108bf8 : jne 0x108c00 ; xor eax, eax ; ret
0x0000000000108c28 : jne 0x108c30 ; xor eax, eax ; ret
0x0000000000108c58 : jne 0x108c60 ; xor eax, eax ; ret
0x0000000000108c88 : jne 0x108c90 ; xor eax, eax ; ret
0x0000000000108cd1 : jne 0x108cc4 ; pop rdx ; pop r10 ; ret
0x0000000000108fcf : jne 0x108fc0 ; leave ; ret
0x00000000001090cd : jne 0x109090 ; leave ; ret
0x00000000001096c7 : jne 0x109713 ; add al, 0 ; ret
0x000000000010981d : jne 0x109808 ; mov rax, rdi ; ret
0x000000000010987c : jne 0x109868 ; mov rax, rdi ; add rsp, 8 ; ret
0x00000000001099dd : jne 0x1099c8 ; mov rax, r10 ; ret
0x000000000010a431 : jne 0x10a49c ; pop rbx ; pop rbp ; mov eax, esi ; pop r12 ; ret
0x000000000010ae88 : jne 0x10ae90 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010b9ab : jne 0x10b97d ; lea rdi, qword ptr [rip + 0xfffffffffffffe8c] ; call rax
0x000000000010c6d1 : jne 0x10c73c ; pop rbx ; pop rbp ; mov eax, esi ; pop r12 ; ret
0x000000000010cb75 : jne 0x10cb60 ; mov rax, rdi ; add rsp, 8 ; ret
0x00000000001107a8 : jne 0x11076c ; jmp 0x110764
0x00000000001123e3 : jne 0x1123d0 ; pop rbx ; ret
0x00000000001122e2 : jne 0x112c73 ; mov eax, edx ; pop rbx ; ret
0x00000000001188dd : jne 0x1188b0 ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x000000000011ce4c : jne 0x11ce50 ; ret
0x000000000011ce8c : jne 0x11ce78 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000121a1d : jne 0x121a48 ; mov dword ptr [rsi], 0 ; ret
0x0000000000122275 : jne 0x122280 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x000000000012237d : jne 0x122312 ; xor eax, eax ; pop rbx ; ret
0x0000000000125558 : jne 0x125560 ; ret
0x000000000012c577 : jne 0x12c560 ; pop rbx ; ret
0x000000000012c7e8 : jne 0x12c7f0 ; ret
0x000000000012dcf3 : jne 0x12dce1 ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x000000000012e190 : jne 0x12e14e ; jmp 0x12e156
0x000000000012f5f7 : jne 0x12f600 ; ret
0x000000000012f637 : jne 0x12f640 ; ret
0x000000000012f6ea : jne 0x12f6ec ; test r14d, r14d ; jne 0x12f700 ; call 0x12b940
0x000000000012f6ef : jne 0x12f700 ; call 0x12b940
0x0000000000132456 : jne 0x132449 ; dec dword ptr [rax + 0x29] ; ret
0x0000000000134ad8 : jne 0x134afd ; mov eax, edx ; add rsp, 8 ; ret
0x0000000000134b7b : jne 0x134ba0 ; mov eax, edx ; add rsp, 8 ; ret
0x0000000000136d63 : jne 0x136d46 ; add rsp, 0x58 ; ret
0x0000000000136d4a : jne 0x136d70 ; xor eax, eax ; add rsp, 0x58 ; ret
0x0000000000136e04 : jne 0x136e10 ; xor eax, eax ; add rsp, 0x58 ; ret
0x0000000000136e78 : jne 0x136e98 ; add rsp, 0x48 ; ret
0x00000000001379f8 : jne 0x137a00 ; xor eax, eax ; ret
0x0000000000137a28 : jne 0x137a30 ; xor eax, eax ; ret
0x0000000000137a58 : jne 0x137a60 ; xor eax, eax ; ret
0x0000000000137a88 : jne 0x137a90 ; xor eax, eax ; ret
0x0000000000137ab8 : jne 0x137ac0 ; xor eax, eax ; ret
0x0000000000137ae8 : jne 0x137af0 ; xor eax, eax ; ret
0x000000000015b031 : jne 0x15b5e0 ; ret
0x00000000001617c1 : jne 0x1621f3 ; xor eax, eax ; ret
0x00000000001617e9 : jne 0x1621ff ; xor eax, eax ; ret
0x0000000000162df1 : jne 0x163033 ; xor eax, eax ; ret
0x0000000000162e17 : jne 0x163046 ; xor eax, eax ; ret
0x0000000000163155 : jne 0x1630e0 ; lea rax, qword ptr [rdi + 3] ; ret
0x0000000000163127 : jne 0x1630e0 ; lea rax, qword ptr [rdi + 7] ; ret
0x00000000001648b4 : jne 0x164ac0 ; xor eax, eax ; ret
0x0000000000164ad1 : jne 0x164ad5 ; cmp eax, ecx ; sbb eax, eax ; sbb eax, -1 ; ret
0x0000000000164961 : jne 0x164ad5 ; xor eax, eax ; ret
0x0000000000164fbd : jne 0x1650f0 ; ret
0x00000000001650e6 : jne 0x1650f0 ; xor eax, eax ; ret
0x0000000000165e4d : jne 0x165e38 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000165ea0 : jne 0x165e78 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000188f99 : jne 0x188f85 ; jmp rsp
0x000000000018b971 : jne 0x18b966 ; call rsp
0x000000000018da69 : jne 0x18da63 ; jmp rsp
0x0000000000190d7e : jne 0x190d8c ; ljmp 0x320d1cff, -0x15ff ; jmp qword ptr [rdx]
0x0000000000194324 : jne 0x1942b9 ; jmp 0x194327
0x00000000001967ed : jne 0x1967dc ; jmp qword ptr [rdx]
0x0000000000196835 : jne 0x196824 ; jmp qword ptr [rdx]
0x00000000001a192d : jne 0x1a1920 ; jmp qword ptr [rdx]
0x00000000001a1975 : jne 0x1a1968 ; jmp qword ptr [rdx]
0x00000000001a1b24 : jne 0x1a1ba2 ; int1 ; jmp qword ptr [rdx]
0x00000000001ada7c : jne 0x1adaf6 ; cmc ; jmp qword ptr [rdx]
0x00000000000363d7 : jne 0x363e0 ; add rsp, 8 ; ret
0x00000000000366b2 : jne 0x366c0 ; add rsp, 8 ; ret
0x000000000000374e : jne 0x372a ; ret 0x975
0x00000000000376eb : jne 0x376f8 ; xor eax, eax ; nop ; ret
0x000000000003827f : jne 0x38270 ; xor eax, eax ; ret
0x00000000000382a5 : jne 0x38288 ; mov eax, 1 ; ret
0x000000000003835f : jne 0x38350 ; xor eax, eax ; ret
0x0000000000038385 : jne 0x38368 ; mov eax, 1 ; ret
0x000000000003c046 : jne 0x3c140 ; xor eax, eax ; pop rbx ; ret
0x000000000004662f : jne 0x46746 ; pop rbx ; ret
0x00000000000470c8 : jne 0x470c0 ; nop word ptr [rax + rax] ; pop rbx ; ret
0x000000000004710d : jne 0x47100 ; pop rbx ; ret
0x00000000000487fb : jne 0x48800 ; pop rbx ; ret
0x0000000000049583 : jne 0x49560 ; lea rax, qword ptr [rbp + 2] ; mov rdx, r8 ; jmp 0x495a1
0x00000000000499d1 : jne 0x499b8 ; mov rax, rsi ; ret
0x0000000000049a55 : jne 0x49a30 ; mov rax, rsi ; ret
0x00000000000539f6 : jne 0x53a54 ; mov eax, edx ; pop rbx ; ret
0x000000000005dbe1 : jne 0x5dbf0 ; mov rax, rbx ; pop rbx ; ret
0x000000000005e64c : jne 0x5e6bf ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x0000000000063ba9 : jne 0x602c6 ; jmp 0x5fde7
0x0000000000063b72 : jne 0x6032c ; jmp 0x5fde7
0x0000000000063b49 : jne 0x60373 ; jmp 0x5fde7
0x000000000006eb1a : jne 0x6eb8c ; nop dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000006f391 : jne 0x6f40a ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x0000000000070fc3 : jne 0x7103f ; pop rbx ; pop rbp ; mov rax, rdx ; pop r12 ; ret
0x0000000000071162 : jne 0x711c7 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000716d9 : jne 0x71750 ; mov eax, edx ; pop rbx ; ret
0x0000000000071e0d : jne 0x71e4e ; ret
0x0000000000071f07 : jne 0x71f4c ; mov eax, esi ; ret
0x0000000000072007 : jne 0x7204c ; mov eax, esi ; ret
0x0000000000072147 : jne 0x721bb ; mov eax, edx ; pop rbx ; ret
0x0000000000072730 : jne 0x727a0 ; mov eax, edx ; pop rbx ; ret
0x0000000000072892 : jne 0x7290c ; mov eax, edx ; pop rbx ; ret
0x0000000000072b87 : jne 0x72bfb ; mov eax, edx ; pop rbx ; ret
0x0000000000072cd2 : jne 0x72d34 ; pop rbx ; ret
0x000000000007440c : jne 0x7448a ; mov eax, edx ; pop rbx ; ret
0x00000000000744d6 : jne 0x744e0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007764c : jne 0x77650 ; pop rbx ; ret
0x0000000000078299 : jne 0x78309 ; mov eax, edx ; pop rbx ; ret
0x000000000007842b : jne 0x784a4 ; mov eax, edx ; pop rbx ; ret
0x000000000007883b : jne 0x788ad ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x0000000000078cc2 : jne 0x78d35 ; mov eax, edx ; pop rbx ; ret
0x0000000000078e64 : jne 0x78edf ; mov eax, edx ; pop rbx ; ret
0x000000000007922c : jne 0x79240 ; mov eax, dword ptr [rdi + 0xc0] ; pop rbx ; ret
0x00000000000792f4 : jne 0x79341 ; mov eax, edx ; pop rbx ; ret
0x000000000007b7ad : jne 0x7b7c0 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007b9fa : jne 0x7ba28 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000007ca52 : jne 0x7ca3a ; pop rbx ; ret
0x000000000007ca8c : jne 0x7ca80 ; lea eax, dword ptr [rdx + rdi] ; ret
0x000000000007e60d : jne 0x7e5f8 ; mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000876e1 : jne 0x876d0 ; xor eax, eax ; ret
0x0000000000087754 : jne 0x87775 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000087c32 : jne 0x87c3b ; lea rax, qword ptr [rip + 5] ; ret
0x0000000000089813 : jne 0x89819 ; xor rax, rax ; ret
0x0000000000089aae : jne 0x89ab7 ; lea rax, qword ptr [rip + 9] ; ret
0x000000000008b781 : jne 0x8b790 ; add rsp, 8 ; ret
0x000000000008ca59 : jne 0x8cab0 ; xor rax, rax ; ret
0x000000000008ca19 : jne 0x8cad0 ; xor rax, rax ; ret
0x000000000008cb08 : jne 0x8cb12 ; lea rax, qword ptr [rip + 0x1f] ; ret
0x000000000008d3c3 : jne 0x8d2a6 ; mov rax, rdi ; ret
0x000000000008d319 : jne 0x8d300 ; mov rax, rdi ; ret
0x000000000008d8de : jne 0x8d8e7 ; lea rax, qword ptr [rip + 0x79] ; ret
0x000000000008d941 : jne 0x8d94a ; lea rax, qword ptr [rip + 6] ; ret
0x000000000008fbce : jne 0x8fbd7 ; lea rax, qword ptr [rip + 0x79] ; ret
0x000000000008fc31 : jne 0x8fc3a ; lea rax, qword ptr [rip + 6] ; ret
0x00000000000922ae : jne 0x92298 ; xor eax, eax ; ret
0x00000000000922df : jne 0x922e9 ; lea rax, qword ptr [rip + 0x6878] ; ret
0x0000000000094936 : jne 0x94918 ; pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x00000000000949e0 : jne 0x949ec ; jmp 0x949a6
0x00000000000977a1 : jne 0x97790 ; mov rax, rdi ; ret
0x00000000000977f2 : jne 0x977d8 ; xor eax, eax ; ret
0x0000000000097852 : jne 0x97840 ; mov qword ptr [rdx], rcx ; ret
0x0000000000097bbd : jne 0x97c40 ; xor eax, eax ; ret
0x0000000000097bfa : jne 0x97c70 ; xor eax, eax ; ret
0x000000000009805c : jne 0x97ffb ; mov rax, rdi ; ret
0x000000000009801d : jne 0x98010 ; xor eax, eax ; ret
0x0000000000098048 : jne 0x98059 ; mov rax, rdi ; ret
0x00000000000980e5 : jne 0x980d8 ; xor eax, eax ; ret
0x0000000000098869 : jne 0x98850 ; mov rax, rbx ; pop rbx ; ret
0x0000000000098b4c : jne 0x98b30 ; xor eax, eax ; sub eax, ecx ; ret
0x000000000009e2ca : jne 0x9eb80 ; ret
0x000000000009f96d : jne 0xa0390 ; ret
0x00000000000a1eb1 : jne 0xa1ea0 ; ret
0x00000000000a1f61 : jne 0xa1f50 ; ret
0x00000000000a20d1 : jne 0xa20c0 ; lea rax, qword ptr [rcx + 0xffffffffffffffff] ; ret
0x00000000000a2221 : jne 0xa2210 ; sub rax, 1 ; ret
0x00000000000a371f : jne 0xa3870 ; ret
0x00000000000a36fe : jne 0xa3870 ; xor eax, eax ; ret
0x00000000000a38a8 : jne 0xa38b2 ; lea rax, qword ptr [rip + 0xd48f] ; ret
0x00000000000a3d69 : jne 0xa3d50 ; sub eax, r8d ; nop ; ret
0x00000000000a3e48 : jne 0xa3e30 ; mov rax, rbx ; pop rbx ; ret
0x00000000000a412b : jne 0xa4180 ; lea rax, qword ptr [rdi + 0xfffffffffffffff0] ; ret
0x00000000000a42d8 : jne 0xa42c8 ; xor eax, eax ; ret
0x00000000000a4458 : jne 0xa4462 ; lea rax, qword ptr [rip + 0xc84f] ; ret
0x00000000000b08dc : jne 0xb094f ; pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x00000000000b56a9 : jne 0xb56b8 ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000bdde1 : jne 0xbddfe ; pop rbx ; ret
0x00000000000bde7f : jne 0xbdea1 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000be592 : jne 0xbe53c ; mov rdi, qword ptr [rbp + 0xffffffffffffff98] ; call r14
0x00000000000c3157 : jne 0xc30db ; mov eax, 0x7d00 ; ret
0x00000000000c6de6 : jne 0xc6d88 ; mov eax, 1 ; ret
0x00000000000c6dd6 : jne 0xc6db7 ; mov eax, 1 ; ret
0x00000000000d153b : jne 0xd1520 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000d1893 : jne 0xd1886 ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x00000000000d2868 : jne 0xd282b ; mov dword ptr [rdi + 0x2c], eax ; mov dword ptr [rdi + 0x30], eax ; ret
0x00000000000d2a7d : jne 0xd29c2 ; pop rbx ; ret
0x00000000000d2a65 : jne 0xd29ee ; pop rbx ; ret
0x00000000000d2a32 : jne 0xd2a28 ; xor eax, eax ; cmp byte ptr [rsi], cl ; je 0xd29c2 ; pop rbx ; ret
0x00000000000d3435 : jne 0xd33dd ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e4fc1 : jne 0xe4f63 ; mov edx, dword ptr [r12 + 4] ; jmp 0xe4f8c
0x00000000000eca3f : jne 0xecac0 ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000f492e : jne 0xf5332 ; ret
0x00000000000f63a8 : jne 0xf6388 ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000f8924 : jne 0xf88d6 ; mov qword ptr [rbp + 0xffffffffffffff98], rax ; mov rdx, rax ; jmp 0xf8954
0x00000000000f89f5 : jne 0xf89a7 ; mov qword ptr [rbp + 0xffffffffffffff98], rax ; mov rdx, rax ; jmp 0xf8a26
0x00000000000f8f57 : jne 0xf8f48 ; mov rax, qword ptr [rax + 8] ; ret
0x00000000000f9fb1 : jne 0xf9f80 ; xor eax, eax ; pop rbx ; ret
0x00000000000fa172 : jne 0xfa140 ; xor eax, eax ; pop rbx ; ret
0x000000000012b903 : jno 0x12b93b ; sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x0000000000161a7e : jno 0x161a87 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000187488 : jno 0x187436 ; std ; call qword ptr [rcx]
0x0000000000188589 : jno 0x188587 ; jmp qword ptr [rax]
0x0000000000188b49 : jno 0x188b34 ; jmp rsp
0x0000000000188d1d : jno 0x188d1f ; add byte ptr [rcx + rdx*8 + 0xffffffffffffffe9], ah ; call rsp
0x0000000000188e99 : jno 0x188e85 ; jmp rsp
0x0000000000192139 : jno 0x192125 ; jmp rbx
0x000000000019415e : jno 0x19416a ; ret
0x0000000000195f5d : jno 0x195f4c ; jmp qword ptr [rdx]
0x0000000000195fa5 : jno 0x195f94 ; jmp qword ptr [rdx]
0x0000000000195fed : jno 0x195fdc ; jmp qword ptr [rdx]
0x000000000019606d : jno 0x19605c ; jmp qword ptr [rdx]
0x00000000001960b5 : jno 0x1960a4 ; jmp qword ptr [rdx]
0x00000000001960fd : jno 0x1960ec ; jmp qword ptr [rdx]
0x000000000019619d : jno 0x19618c ; jmp qword ptr [rdx]
0x00000000001961e5 : jno 0x1961d4 ; jmp qword ptr [rdx]
0x000000000019622d : jno 0x19621c ; jmp qword ptr [rdx]
0x00000000001962a5 : jno 0x196294 ; jmp qword ptr [rdx]
0x00000000001962ed : jno 0x1962dc ; jmp qword ptr [rdx]
0x0000000000196335 : jno 0x196324 ; jmp qword ptr [rdx]
0x00000000001963a5 : jno 0x196394 ; jmp qword ptr [rdx]
0x0000000000196435 : jno 0x196424 ; jmp qword ptr [rdx]
0x00000000001964e5 : jno 0x1964d4 ; jmp qword ptr [rdx]
0x00000000001a62f5 : jno 0x1a62f8 ; add byte ptr [rax], cl ; jns 0x1a62ef ; jmp qword ptr [rcx]
0x00000000001a6325 : jno 0x1a6328 ; add byte ptr [rax], bh ; jns 0x1a631f ; jmp qword ptr [rcx]
0x00000000001ad82d : jno 0x1ad824 ; jmp qword ptr [rdx]
0x00000000001ad8ad : jno 0x1ad8a4 ; jmp qword ptr [rdx]
0x00000000001ad8f5 : jno 0x1ad8ec ; jmp qword ptr [rdx]
0x00000000001b4669 : jno 0x1b4662 ; call qword ptr [rbx]
0x00000000000021c7 : jno 0x2212 ; ret 0x1dd4
0x0000000000038b14 : jno 0x38b5f ; shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000003903 : jno 0x3947 ; xchg eax, ebx ; and cl, ah ; ret
0x000000000005e64d : jno 0x5e6aa ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x0000000000078f41 : jno 0x78f47 ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000007e3fd : jno 0x7e406 ; add byte ptr [rax + 0xffffffffffffff83], cl ; clc ; dec dword ptr [rax + 0xffffffffffffff89] ; ret
0x00000000000b08dd : jno 0xb093a ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x00000000000b6eec : jno 0xb6e77 ; ret -0x1d7d
0x00000000000b6fc6 : jno 0xb6f51 ; ret -0x1d7d
0x00000000000b709e : jno 0xb7029 ; ret -0x1d7d
0x00000000000b717e : jno 0xb7109 ; ret -0x1d7d
0x00000000000b729e : jno 0xb7229 ; ret -0x1d7d
0x00000000000b737f : jno 0xb730a ; ret -0x1d7d
0x00000000000b7416 : jno 0xb73a1 ; ret -0x1d7d
0x00000000000b8279 : jno 0xb8204 ; ret -0x1d7d
0x00000000000b8a79 : jno 0xb8a04 ; ret -0x1d7d
0x00000000000b8b7a : jno 0xb8b05 ; ret -0x1d7d
0x00000000000b8ca3 : jno 0xb8c2e ; ret -0x1d7d
0x00000000000ec780 : jno 0xec775 ; ret
0x00000000001123de : jnp 0x112428 ; test rdi, rdi ; jne 0x1123d0 ; pop rbx ; ret
0x0000000000128373 : jnp 0x1283dd ; call rax
0x0000000000128da3 : jnp 0x128dfd ; call rax
0x0000000000175785 : jnp 0x175740 ; ret
0x0000000000188349 : jnp 0x188347 ; call rax
0x0000000000188e4d : jnp 0x188e4f ; add byte ptr [rbp + rbp*2 + 0xffffffffffffffea], ah ; call rsp
0x000000000018aba8 : jnp 0x18ab76 ; out dx, eax ; call rsp
0x0000000000195799 : jnp 0x195788 ; jmp rcx
0x0000000000196bad : jnp 0x196b9c ; jmp qword ptr [rdx]
0x0000000000196bf5 : jnp 0x196be4 ; jmp qword ptr [rdx]
0x0000000000196ca5 : jnp 0x196c94 ; jmp qword ptr [rdx]
0x0000000000196ced : jnp 0x196cdc ; jmp qword ptr [rdx]
0x0000000000196d35 : jnp 0x196d24 ; jmp qword ptr [rdx]
0x0000000000196de5 : jnp 0x196dd4 ; jmp qword ptr [rdx]
0x0000000000196e2d : jnp 0x196e1c ; jmp qword ptr [rdx]
0x0000000000196e75 : jnp 0x196e64 ; jmp qword ptr [rdx]
0x0000000000196ef5 : jnp 0x196ee4 ; jmp qword ptr [rdx]
0x0000000000196f3d : jnp 0x196f2c ; jmp qword ptr [rdx]
0x0000000000196f3c : jnp 0x196fb9 ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000197005 : jnp 0x196ff4 ; jmp qword ptr [rdx]
0x000000000019704d : jnp 0x19703c ; jmp qword ptr [rdx]
0x0000000000198114 : jnp 0x19809c ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019949c : jnp 0x199457 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a6d2d : jnp 0x1a6d30 ; add byte ptr [rax], al ; mov bh, -0xc ; call rdi
0x00000000001ade6d : jnp 0x1ade64 ; jmp qword ptr [rdx]
0x00000000000236eb : jnp 0x23705 ; call rax
0x000000000003c8cb : jnp 0x3c8d5 ; mov qword ptr [rax + 0x60], rdx ; call qword ptr [rbx]
0x0000000000059df4 : jnp 0x59d7f ; ret 0x348
0x00000000000c4fcb : jnp 0xc4fdc ; xchg eax, esp ; ret -0x49f1
0x00000000000c51fb : jnp 0xc520c ; xchg eax, esp ; ret -0x49f1
0x00000000000c5467 : jnp 0xc5478 ; xchg eax, esp ; ret -0x49f1
0x00000000000dc7d1 : jnp 0xdc7dc ; sti ; call rcx
0x00000000000efcd1 : jnp 0xefc6c ; stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000000a1a18 : jns -0x12c5dd8b ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a19f8 : jns -0x12c5deab ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a1996 : jns -0x12c5e30d ; mov byte ptr [rdi + 7], ch ; ret
0x0000000000104a17 : jns 0x1049e8 ; mov eax, edx ; sub eax, r9d ; ret
0x0000000000104b99 : jns 0x104bce ; mov eax, r8d ; sub eax, r9d ; ret
0x00000000001740be : jns 0x17413a ; and byte ptr [rbx], dh ; in eax, dx ; dec dword ptr [rax] ; xor ebp, ebp ; call rax
0x000000000017488e : jns 0x174822 ; ret -0x797
0x0000000000176c9e : jns 0x176ced ; jmp 0x176c2e
0x000000000017b03c : jns 0x17afe3 ; cmc ; call qword ptr [rdi]
0x000000000018de8d : jns 0x18de91 ; add byte ptr [rdx + rax], ah ; stc ; call rsp
0x0000000000190c5e : jns 0x190c6d ; ljmp 0x890d1cff, -0x1607 ; jmp qword ptr [rdx]
0x0000000000196a55 : jns 0x196a44 ; jmp qword ptr [rdx]
0x0000000000196a9d : jns 0x196a8c ; jmp qword ptr [rdx]
0x0000000000198481 : jns 0x19846b ; call rdx
0x000000000019b824 : jns 0x19b821 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a39ed : jns 0x1a39e1 ; jmp qword ptr [rdx]
0x00000000001a3a35 : jns 0x1a3a29 ; jmp qword ptr [rdx]
0x00000000001a62f9 : jns 0x1a62ef ; jmp qword ptr [rcx]
0x00000000001a6329 : jns 0x1a631f ; jmp qword ptr [rcx]
0x00000000001adb6c : jns 0x1adbe6 ; cmc ; jmp qword ptr [rdx]
0x00000000001add6d : jns 0x1add64 ; jmp qword ptr [rdx]
0x00000000001b05e4 : jns 0x1b05d6 ; cmc ; jmp qword ptr [rdx]
0x0000000000001b29 : jns 0x1b32 ; ret
0x0000000000021b5d : jns 0x21a39 ; jmp 0x21b27
0x000000000000322f : jns 0x3208 ; ret 0x5a51
0x0000000000036e5b : jns 0x36e68 ; add rsp, 0xd0 ; ret
0x000000000000389f : jns 0x38ee ; cmpsq qword ptr [rsi], qword ptr es:[rdi] ; ret 0x49ec
0x0000000000086d26 : jns 0x86d70 ; mov esi, ebx ; mov rdi, r13 ; call rdx
0x000000000008d8e3 : jns 0x8d8e5 ; add byte ptr [rax], al ; ret
0x000000000008fbd3 : jns 0x8fbd5 ; add byte ptr [rax], al ; ret
0x00000000000c7119 : jns 0xc711e ; add byte ptr [rcx + 0xffffffffffffff89], al ; ret
0x00000000000e58af : jns 0xe58a9 ; add byte ptr [rsp + rax + 0xffffffffffffff89], dh ; ret -0x1115
0x00000000000f2f04 : jns 0xf2f09 ; mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x0000000000124f7e : jo 0x124fdb ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000012585b : jo 0x1258b8 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000129f77 : jo 0x129f04 ; push rax ; adc dh, dh ; ret 0x7401
0x0000000000167348 : jo 0x1673b5 ; in al, dx ; dec dword ptr [rax + 0x6b] ; in al, dx ; jmp rax
0x0000000000175904 : jo 0x175977 ; mov ebp, 0xfb67d10d ; ret
0x000000000017914c : jo 0x1791ba ; int1 ; dec eax ; xchg eax, esi ; int1 ; jmp rax
0x0000000000179270 : jo 0x179212 ; cld ; jmp rax
0x000000000017af34 : jo 0x17aeda ; cmc ; jmp qword ptr [rbx]
0x0000000000187320 : jo 0x187356 ; sti ; call qword ptr [rax]
0x0000000000187340 : jo 0x187383 ; sti ; call qword ptr [rax]
0x0000000000187358 : jo 0x1873a7 ; sti ; inc dword ptr [rax + 0x4f] ; sti ; jmp qword ptr [rax]
0x00000000001873b0 : jo 0x187428 ; sti ; inc eax ; ja 0x1873b2 ; call qword ptr [rax]
0x0000000000187750 : jo 0x18772c ; sti ; push qword ptr [rax] ; fdiv st(3), st(0) ; call qword ptr [rax]
0x0000000000187824 : jo 0x1877f0 ; sti ; inc eax ; retf ; sti ; call qword ptr [rax]
0x0000000000187974 : jo 0x187979 ; cld ; inc dword ptr [rax + 5] ; cld ; jmp qword ptr [rax]
0x000000000018799c : jo 0x18798d ; sti ; inc eax ; lock sti ; call qword ptr [rax]
0x00000000001879f0 : jo 0x1879e8 ; sti ; inc eax ; idiv ebx ; call qword ptr [rax]
0x0000000000187b68 : jo 0x187b85 ; cld ; inc eax ; sbb al, -4 ; call qword ptr [rax]
0x0000000000187bbc : jo 0x187be0 ; cld ; inc eax ; and edi, esp ; call qword ptr [rax]
0x0000000000188585 : jo 0x188583 ; jmp qword ptr [rax + 0x20fffc71]
0x00000000001885c5 : jo 0x1885c3 ; jmp qword ptr [rax]
0x000000000018f0a5 : jo 0x18f0a7 ; add ah, dh ; iretd ; std ; jmp rsp
0x0000000000196e74 : jo 0x196ef1 ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000197d74 : jo 0x197cf8 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001983b0 : jo 0x198369 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a17a0 : jo 0x1a1769 ; int1 ; call qword ptr [rbx]
0x00000000001a2ab0 : jo 0x1a2a97 ; int1 ; jmp rsi
0x00000000001a5d00 : jo 0x1a5d66 ; hlt ; jmp qword ptr [rdi]
0x00000000001a6265 : jo 0x1a6268 ; add byte ptr [rax + 0x78], bh ; hlt ; jmp qword ptr [rcx]
0x00000000001a62c5 : jo 0x1a62c8 ; add al, bl ; js 0x1a62bf ; jmp qword ptr [rcx]
0x00000000001a6950 : jo 0x1a68ff ; hlt ; jmp qword ptr [rdi]
0x00000000001a8830 : jo 0x1a885a ; cmc ; jmp qword ptr [rcx]
0x00000000001a9170 : jo 0x1a91aa ; cmc ; jmp qword ptr [rcx]
0x00000000001ab5b0 : jo 0x1ab585 ; cmc ; jmp qword ptr [rsi]
0x00000000001ad7e5 : jo 0x1ad7dc ; jmp qword ptr [rdx]
0x00000000001adb24 : jo 0x1adb9e ; cmc ; jmp qword ptr [rdx]
0x00000000000278c0 : jo 0x2790a ; mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x000000000002a80e : jo 0x2a858 ; mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x000000000002b95e : jo 0x2b9a8 ; mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x0000000000046398 : jo 0x4639b ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000006690 : jo 0x6693 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rbx]
0x000000000007207a : jo 0x72001 ; sar byte ptr [rax + 9], -0xd ; ret
0x0000000000074d9a : jo 0x74dac ; mov qword ptr [rax + 0x40], rcx ; ret
0x000000000007883c : jo 0x78899 ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x000000000007a774 : jo 0x7a7be ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007e516 : jo 0x7e51f ; add byte ptr [rax + 0xffffffffffffff83], cl ; clc ; dec dword ptr [rax + 0xffffffffffffff89] ; ret
0x00000000000854a9 : jo 0x85506 ; pop rbp ; pop r12 ; ret
0x0000000000085568 : jo 0x8559b ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000c49b5 : jo 0xc49cf ; jmp 0xc4401
0x00000000000d2c2e : jo 0xd2c50 ; xor eax, eax ; ret
0x00000000000d9a84 : jo 0xd9acf ; mov ebx, eax ; mov edx, r8d ; jmp 0xd9a94
0x00000000000ec277 : jo 0xec26f ; ret 0x4840
0x00000000000ec2a4 : jo 0xec301 ; ret
0x00000000000ec88e : jo 0xec8eb ; ret
0x00000000000f16a6 : jo 0xf16c9 ; ret
0x0000000000107055 : jp 0x1070a7 ; mov rsi, rdx ; call rax
0x000000000011c9c4 : jp 0x11c9f0 ; add byte ptr [rdx], al ; add rsp, 8 ; ret
0x000000000012287d : jp 0x1228d7 ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000128402 : jp 0x12840c ; ret
0x000000000012841a : jp 0x128424 ; ret
0x0000000000128c62 : jp 0x128c6c ; ret
0x0000000000128c7a : jp 0x128c84 ; ret
0x0000000000128caa : jp 0x128cb4 ; ret
0x00000000001740bf : jp 0x1740e1 ; xor ebp, ebp ; dec dword ptr [rax] ; xor ebp, ebp ; call rax
0x0000000000178b5c : jp 0x178b30 ; out dx, al ; jmp rbx
0x0000000000188311 : jp 0x18830f ; call qword ptr [rax]
0x0000000000188391 : jp 0x18838f ; jmp rdx
0x0000000000188511 : jp 0x18850f ; jmp qword ptr [rax + 0x20fffc81]
0x000000000018854d : jp 0x18854b ; inc dword ptr [rax] ; pop rbp ; cld ; jmp qword ptr [rax]
0x0000000000195d44 : jp 0x195db5 ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000196574 : jp 0x1965e9 ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000196ae5 : jp 0x196ad4 ; jmp qword ptr [rdx]
0x0000000000196b65 : jp 0x196b54 ; jmp qword ptr [rdx]
0x000000000019962c : jp 0x1995e7 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019bf2c : jp 0x19bf62 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a6ca5 : jp 0x1a6ca8 ; add byte ptr [rax], ch ; mov ch, -0xc ; call rdi
0x00000000001ae8ac : jp 0x1ae833 ; cmc ; jmp qword ptr [rdx]
0x00000000001b4ac1 : jp 0x1b4aba ; call qword ptr [rdx]
0x0000000000002545 : jp 0x2527 ; jmp qword ptr [rbx]
0x0000000000003902 : jp 0x3975 ; xchg eax, ebx ; and cl, ah ; ret
0x0000000000070fc4 : jp 0x71021 ; pop rbp ; mov rax, rdx ; pop r12 ; ret
0x000000000008745c : jp 0x87491 ; add byte ptr [rax + 0xffffffffffffff89], cl ; and al, 8 ; call qword ptr [rdx]
0x0000000000087524 : jp 0x87559 ; add byte ptr [rax + 0xffffffffffffff89], cl ; and al, 8 ; call qword ptr [rdx]
0x000000000008d2a5 : jp 0x8d29d ; ret 0x7401
0x00000000000a52b7 : jp 0xa52ea ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000108d23 : jrcxz 0x108ce0 ; cmp r11d, 0xa ; je 0x108d2c ; ret
0x000000000014d41a : jrcxz 0x14d40f ; movq qword ptr [rdi + 0xfffffffffffffff0], mm1 ; ret
0x000000000014feea : jrcxz 0x14fedf ; movq qword ptr [rdi + 0xfffffffffffffff0], mm1 ; ret
0x0000000000152a0a : jrcxz 0x1529ff ; movq qword ptr [rdi + 0xfffffffffffffff0], mm1 ; ret
0x00000000001746e5 : jrcxz 0x17473d ; ret
0x00000000001791a1 : jrcxz 0x179194 ; call qword ptr [rax]
0x00000000001792f1 : jrcxz 0x1792f0 ; jmp rax
0x0000000000187745 : jrcxz 0x187742 ; jmp rax
0x00000000001877a5 : jrcxz 0x1877a2 ; jmp qword ptr [rax]
0x000000000018c5a5 : jrcxz 0x18c5a8 ; add byte ptr [rsi + rbx*4 + 0xfffffffffffffff6], dh ; jmp rsp
0x00000000001945dc : jrcxz 0x194596 ; jmp 0x1945df
0x0000000000197914 : jrcxz 0x197897 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019a954 : jrcxz 0x19a940 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019d56d : jrcxz 0x19d56f ; add byte ptr [rax + 0xffffffffffffff8b], dl ; cld ; call qword ptr [rdx]
0x000000000019d5a5 : jrcxz 0x19d5a7 ; add byte ptr [rax], bh ; xchg eax, ebp ; out dx, al ; call qword ptr [rdx]
0x00000000001ac381 : jrcxz 0x1ac378 ; call qword ptr [rax]
0x00000000001ac399 : jrcxz 0x1ac390 ; jmp rbx
0x00000000001aef6c : jrcxz 0x1aeef6 ; cmc ; jmp qword ptr [rdx]
0x00000000001b1fe1 : jrcxz 0x1b1fd9 ; call qword ptr [rdi]
0x0000000000045f51 : jrcxz 0x45f52 ; inc dword ptr [rcx + 0xf] ; mov dh, 0x7d ; add cl, ch ; ret -0x1f
0x00000000000976fc : jrcxz 0x976f1 ; ret
0x00000000000c115e : jrcxz 0xc1148 ; ret
0x00000000000d153c : jrcxz 0xd1586 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000f41b5 : jrcxz 0xf41e3 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000f41ef : jrcxz 0xf421d ; add byte ptr [rax + 0xffffffff89480038], al ; ret
0x00000000000a19b8 : js -0x12c5ddeb ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a1966 : js -0x12c5e23d ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a1938 : js -0x12c5e46b ; mov byte ptr [rdi + 3], ch ; ret
0x00000000001049f2 : js 0x10496c ; sub eax, ecx ; ret
0x00000000001049aa : js 0x104a00 ; nop dword ptr [rax] ; sub eax, r8d ; ret
0x00000000001085fb : js 0x108605 ; jne 0x1085f0 ; mov rax, qword ptr [rax + 0x30] ; ret
0x000000000010d1e4 : js 0x10d1f0 ; mov eax, edi ; and eax, 0xffffff ; ret
0x000000000010d264 : js 0x10d270 ; mov eax, edi ; shr eax, 0x18 ; ret
0x0000000000136503 : js 0x136510 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000017a330 : js 0x17a2c4 ; hlt ; jmp qword ptr [rsi]
0x0000000000187a10 : js 0x187a3d ; cld ; inc dword ptr [rax + 0x2d] ; cld ; jmp qword ptr [rax]
0x000000000018fb38 : js 0x18fb99 ; std ; jmp qword ptr [rdx]
0x0000000000194165 : js 0x194171 ; ret
0x0000000000198668 : js 0x198626 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019bfbc : js 0x19bff5 ; out dx, al ; jmp qword ptr [rdx]
0x000000000019cf99 : js 0x19cf89 ; jmp qword ptr [rcx]
0x000000000019efb8 : js 0x19f001 ; sti ; call qword ptr [rax]
0x000000000019f0a8 : js 0x19f090 ; out dx, eax ; jmp qword ptr [rbx]
0x00000000001a6269 : js 0x1a625f ; jmp qword ptr [rcx]
0x00000000001a6299 : js 0x1a628f ; jmp qword ptr [rcx]
0x00000000001a62c9 : js 0x1a62bf ; jmp qword ptr [rcx]
0x00000000001a6268 : js 0x1a62e2 ; hlt ; jmp qword ptr [rcx]
0x00000000001a6df8 : js 0x1a6db3 ; hlt ; jmp qword ptr [rbx]
0x00000000001a7048 : js 0x1a7008 ; hlt ; jmp qword ptr [rcx]
0x00000000001a8a98 : js 0x1a8ac5 ; cmc ; jmp qword ptr [rcx]
0x00000000001a8cd8 : js 0x1a8d08 ; cmc ; jmp qword ptr [rcx]
0x00000000001a8e58 : js 0x1a8e8a ; cmc ; jmp qword ptr [rcx]
0x00000000001ab7d8 : js 0x1ab7ae ; cmc ; jmp qword ptr [rsi]
0x00000000001ad4b8 : js 0x1ad4b4 ; cmc ; jmp rsp
0x00000000001ada7d : js 0x1ada74 ; jmp qword ptr [rdx]
0x00000000001adac5 : js 0x1adabc ; jmp qword ptr [rdx]
0x00000000001adb25 : js 0x1adb1c ; jmp qword ptr [rdx]
0x00000000001adb6d : js 0x1adb64 ; jmp qword ptr [rdx]
0x00000000001adbb5 : js 0x1adbac ; jmp qword ptr [rdx]
0x00000000001adbfd : js 0x1adbf4 ; jmp qword ptr [rdx]
0x00000000001adc45 : js 0x1adc3c ; jmp qword ptr [rdx]
0x00000000001adc8d : js 0x1adc84 ; jmp qword ptr [rdx]
0x00000000001add25 : js 0x1add1c ; jmp qword ptr [rdx]
0x00000000000233a0 : js 0x233ba ; mov qword ptr [rbp + 0xffffffffffffff98], rax ; call rcx
0x00000000000280c2 : js 0x2810c ; mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x0000000000002f61 : js 0x2f11 ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000002fcc1 : js 0x2fc46 ; loopne 0x2fccd ; movzx eax, ax ; ret
0x000000000002fd01 : js 0x2fc86 ; loopne 0x2fd07 ; movzx eax, ax ; ret
0x000000000002fda1 : js 0x2fd26 ; loopne 0x2fda9 ; movzx eax, ax ; ret
0x000000000002fe81 : js 0x2fe06 ; loopne 0x2fe86 ; ret
0x000000000002fefa : js 0x2fe7f ; loopne 0x2feff ; ret
0x000000000002ff0a : js 0x2fe8f ; loopne 0x2ff16 ; movzx eax, ax ; ret
0x000000000002ff4a : js 0x2fecf ; loopne 0x2ff50 ; movzx eax, ax ; ret
0x000000000002ffea : js 0x2ff6f ; loopne 0x2fff2 ; movzx eax, ax ; ret
0x0000000000032d88 : js 0x32d92 ; dec dword ptr [rdi] ; xchg eax, ebp ; ret -0x6417
0x000000000003d981 : js 0x3d9c5 ; cmp dword ptr [rdx + rsi*4], 0x40 ; jle 0x3d940 ; jmp 0x3d94d
0x0000000000075a90 : js 0x75ac2 ; add byte ptr [rbx + rcx + 0x5b], dh ; pop rbp ; pop r12 ; ret
0x0000000000076009 : js 0x7604b ; jmp 0x75fd0
0x0000000000087694 : js 0x876c9 ; add byte ptr [rax + 0xffffffffffffff89], cl ; and al, 8 ; call qword ptr [rdx]
0x00000000000922e4 : js 0x9234e ; add byte ptr [rax], al ; ret
0x00000000000e1994 : js 0xe1970 ; rep dec dword ptr [rax + 0xffffffffffffff85] ; ror byte ptr [rdi], -0x7c ; ret
0x00000000000e1cec : js 0xe1d27 ; ret 0x1472
0x00000000000e3baa : js 0xe3b94 ; sar byte ptr [rax + 0xffffffffbc80fff3], 0x24 ; ret
0x00000000000e517c : js 0xe51c6 ; mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000e5ad9 : js 0xe5b23 ; mov dword ptr [rdi + 0x100], edx ; ret
0x00000000000f16d5 : js 0xf16e0 ; mov eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000000f1e48 : js 0xf1e70 ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f3de2 : js 0xf3dec ; mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x00000000000f6a3c : js 0xf6a4a ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000000fe340 : js 0xfe2c5 ; loopne 0xfe34c ; movzx eax, ax ; ret
0x00000000000fe480 : js 0xfe405 ; loopne 0xfe485 ; ret
0x00000000000fe520 : js 0xfe4a5 ; loopne 0xfe526 ; movzx eax, ax ; ret
0x00000000000fe830 : js 0xfe7b5 ; loopne 0xfe838 ; movzx eax, ax ; ret
0x00000000000fec59 : js 0xfebde ; loopne 0xfec65 ; movzx eax, ax ; ret
0x00000000000fed79 : js 0xfecfe ; loopne 0xfed7e ; ret
0x00000000000fedf9 : js 0xfed7e ; loopne 0xfedff ; movzx eax, ax ; ret
0x00000000000ff0b9 : js 0xff03e ; loopne 0xff0c1 ; movzx eax, ax ; ret
0x000000000008c4fd : lahf ; add al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x3fcf
0x000000000018e305 : lahf ; add al, byte ptr [rax] ; mov ah, -0x59 ; stc ; jmp rsp
0x0000000000189555 : lahf ; add byte ptr [rax], al ; and edi, dword ptr [rdx] ; jmp 0x18955b
0x00000000001a91e5 : lahf ; add dword ptr [rax], eax ; call 0x221a8725
0x00000000001a916d : lahf ; add dword ptr [rax], eax ; jo 0x1a91aa ; cmc ; jmp qword ptr [rcx]
0x00000000001a9185 : lahf ; add dword ptr [rax], eax ; mov byte ptr [rax], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a9155 : lahf ; add dword ptr [rax], eax ; pop rax ; cmp ch, dh ; jmp qword ptr [rcx]
0x000000000017926d : lahf ; cld ; push qword ptr [rax + 0xffffffffffffffa0] ; cld ; jmp rax
0x000000000017a370 : lahf ; cwde ; hlt ; call qword ptr [rsi]
0x000000000019a63c : lahf ; fsubr st(5) ; jmp qword ptr [rdx]
0x0000000000196c11 : lahf ; in eax, dx ; call rbx
0x0000000000176dc3 : lahf ; mov dh, -0x39 ; ret -0x18e1
0x00000000001067f1 : lahf ; mov ebp, dword ptr [rbx] ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret 0x2b49
0x000000000013eabd : lahf ; or byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000018a0b9 : lahf ; out dx, al ; jmp rsp
0x00000000000f6182 : lahf ; ret
0x000000000017461d : lahf ; ret -0x78e2
0x00000000000d1978 : lahf ; ret -0x7d15
0x00000000000f6189 : lahf ; ret 0x3845
0x00000000000d5ba8 : lahf ; ret 0xee9
0x0000000000065d7d : lahf ; rol byte ptr [rsi + 0xffffffffffffff89], 0x2c ; cmp dword ptr [rcx], ebp ; ret
0x000000000013f14d : lar eax, word ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000018cf4d : lar eax, word ptr [rax] ; retf -0x895 ; call rsp
0x000000000018cf4c : lar eax, word ptr fs:[rax] ; retf -0x895 ; call rsp
0x00000000001ae296 : lcall 0x1cfff57f, 0x110d ; jg 0x1ae294 ; jmp qword ptr [rdx]
0x00000000001aec8e : lcall 0x1cfff588, 0x1d0d ; mov ch, dh ; jmp qword ptr [rdx]
0x00000000001889cc : lcall 0x2afffca0, -0x360 ; call rax
0x000000000017a50d : lcall 0x9ab9fff4, -0xc ; ret
0x0000000000179caf : lcall ptr [rax + 0x57fff3bd] ; ret
0x000000000017a2bf : lcall ptr [rax + 0xbfff40d] ; sbb esp, esi ; jmp rdi
0x000000000017a468 : lcall ptr [rax + 0xffffffff9909fff4] ; hlt ; call qword ptr [rbx]
0x000000000018768f : lcall ptr [rax + 0xffffffffffffffdb] ; sti ; jmp qword ptr [rax]
0x0000000000179d3b : lcall ptr [rbp + 0x7dfff3c9] ; ret
0x0000000000189c4b : lcall ptr [rbp + rcx*8 + 0x5c5f0000] ; out dx, al ; jmp rsp
0x00000000000a2417 : lcall ptr [rbx + 0x5d] ; mov eax, dword ptr [r9 + 4] ; pop r12 ; ret
0x0000000000083951 : lcall ptr [rbx + 0x5d] ; pop r12 ; jmp rax
0x0000000000076613 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000003bfd6 : lcall ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x000000000002c22b : lcall ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000778c8 : lcall ptr [rbx + 0x5d] ; ret
0x00000000000d2ff8 : lcall ptr [rbx + 0x5d] ; xor eax, eax ; pop r12 ; ret
0x000000000006e674 : lcall ptr [rbx + 0xffffffffffffff89] ; call -0x3c9cd827
0x000000000018ab33 : lcall ptr [rbx + rbp + 0xffffffffcae80001] ; out dx, eax ; jmp rsp
0x000000000018da63 : lcall ptr [rbx + rbx*2 + 2] ; add byte ptr [rbp + rsi*2 + 0xfffffffffffffff8], dh ; jmp rsp
0x00000000001898f3 : lcall ptr [rbx + rsi*4 + 0x98f0000] ; in al, dx ; jmp rsp
0x000000000017d05f : lcall ptr [rbx + rsi*4 + 0xffffffffbd0cfffa] ; cli ; call rsp
0x000000000018aa6b : lcall ptr [rcx + rax*2 + 0xffffffffa9540001] ; out dx, eax ; jmp rsp
0x000000000018a0d3 : lcall ptr [rcx + rsi*8 + 0xffffffffa1440000] ; out dx, al ; jmp rsp
0x000000000018e433 : lcall ptr [rdi + 0xffffffffcb040002] ; stc ; call rsp
0x000000000018e8c3 : lcall ptr [rdi + rax*8 + 0x55e40002] ; cli ; call rsp
0x000000000018a933 : lcall ptr [rdi + rbx + 0x4d090001] ; out dx, eax ; jmp rsp
0x0000000000187417 : lcall ptr [rsi + 0xffffffffa0fffda5] ; cmpsb byte ptr [rsi], byte ptr es:[rdi] ; std ; call rcx
0x000000000018d3db : lcall ptr [rsi + rbp + 0x4b40002] ; clc ; jmp rsp
0x000000000018e0b3 : lcall ptr [rsi + rcx*4 + 2] ; add byte ptr [rsi], dh ; stc ; jmp rsp
0x000000000017a0ff : lcall ptr [rsi] ; div bl ; call rsp
0x000000000018d733 : lcall ptr [rsp + rax*2 + 0x3c6b0002] ; clc ; jmp rsp
0x000000000018ac33 : lcall ptr [rsp + rsi + 0xffffffffce950001] ; out dx, eax ; jmp rsp
0x000000000014daa6 : lddqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x0000000000075d8f : lea eax, dword ptr [r8 + 0xffffffffffffffff] ; ret
0x0000000000075d90 : lea eax, dword ptr [rax + 0xffffffffffffffff] ; ret
0x00000000000b0d18 : lea eax, dword ptr [rax + rax + 0xffffffffffffffff] ; ret
0x000000000008ca84 : lea eax, dword ptr [rax + rdi + 0x10] ; ret
0x000000000008ca94 : lea eax, dword ptr [rax + rdi + 0x20] ; ret
0x0000000000097c34 : lea eax, dword ptr [rax + rdi + 0x30] ; ret
0x000000000008ca64 : lea eax, dword ptr [rax + rdi + 0xfffffffffffffff0] ; ret
0x00000000000bd7a2 : lea eax, dword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000049586 : lea eax, dword ptr [rbp + 2] ; mov rdx, r8 ; jmp 0x495a1
0x000000000012235b : lea eax, dword ptr [rbx + 0x2260] ; pop rbx ; ret
0x00000000000a4541 : lea eax, dword ptr [rbx + 0xfffffffffffffffc] ; pop rbx ; ret
0x000000000009873a : lea eax, dword ptr [rbx + 0xffffffffffffffff] ; pop rbx ; ret
0x00000000000c700a : lea eax, dword ptr [rbx + 2] ; pop rbx ; pop rbp ; ret
0x00000000000c6f0a : lea eax, dword ptr [rbx + 8] ; pop rbx ; pop rbp ; ret
0x0000000000118aee : lea eax, dword ptr [rbx + rbp] ; pop rbx ; pop rbp ; ret
0x00000000000a20d4 : lea eax, dword ptr [rcx + 0xffffffffffffffff] ; ret
0x00000000000a246e : lea eax, dword ptr [rcx + 1] ; pop r12 ; ret
0x000000000008b53d : lea eax, dword ptr [rcx + rsi] ; ret
0x000000000009f1fc : lea eax, dword ptr [rdi + 0x10] ; ret
0x000000000009f211 : lea eax, dword ptr [rdi + 0x11] ; ret
0x000000000009f22f : lea eax, dword ptr [rdi + 0x12] ; ret
0x000000000009f24f : lea eax, dword ptr [rdi + 0x13] ; ret
0x000000000009f272 : lea eax, dword ptr [rdi + 0x14] ; ret
0x000000000009f291 : lea eax, dword ptr [rdi + 0x15] ; ret
0x000000000009f2b1 : lea eax, dword ptr [rdi + 0x16] ; ret
0x000000000009f2d1 : lea eax, dword ptr [rdi + 0x17] ; ret
0x000000000009f2f4 : lea eax, dword ptr [rdi + 0x18] ; ret
0x000000000009f319 : lea eax, dword ptr [rdi + 0x19] ; ret
0x000000000009f337 : lea eax, dword ptr [rdi + 0x1a] ; ret
0x000000000009f357 : lea eax, dword ptr [rdi + 0x1b] ; ret
0x000000000009f373 : lea eax, dword ptr [rdi + 0x1c] ; ret
0x000000000009f393 : lea eax, dword ptr [rdi + 0x1d] ; ret
0x000000000009f3b3 : lea eax, dword ptr [rdi + 0x1e] ; ret
0x000000000009f3d3 : lea eax, dword ptr [rdi + 0x1f] ; ret
0x00000000000a0223 : lea eax, dword ptr [rdi + 0x20] ; ret
0x00000000000a0489 : lea eax, dword ptr [rdi + 0x40] ; ret
0x000000000009f14d : lea eax, dword ptr [rdi + 0xa] ; ret
0x000000000009f16d : lea eax, dword ptr [rdi + 0xb] ; ret
0x000000000009f18f : lea eax, dword ptr [rdi + 0xc] ; ret
0x000000000009f1af : lea eax, dword ptr [rdi + 0xd] ; ret
0x000000000009f1cf : lea eax, dword ptr [rdi + 0xe] ; ret
0x000000000009f1e9 : lea eax, dword ptr [rdi + 0xf] ; ret
0x00000000000a401e : lea eax, dword ptr [rdi + 0xfffffffffffffff0] ; ret
0x00000000000a4181 : lea eax, dword ptr [rdi + 0xfffffffffffffff4] ; ret
0x00000000000a4191 : lea eax, dword ptr [rdi + 0xfffffffffffffff8] ; ret
0x00000000000a41a1 : lea eax, dword ptr [rdi + 0xfffffffffffffffc] ; ret
0x00000000000975d4 : lea eax, dword ptr [rdi + 1] ; ret
0x00000000000975e8 : lea eax, dword ptr [rdi + 2] ; ret
0x00000000000975f3 : lea eax, dword ptr [rdi + 3] ; ret
0x0000000000097607 : lea eax, dword ptr [rdi + 4] ; ret
0x0000000000097617 : lea eax, dword ptr [rdi + 5] ; ret
0x0000000000097627 : lea eax, dword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009f0fb : lea eax, dword ptr [rdi + 6] ; ret
0x00000000000975c7 : lea eax, dword ptr [rdi + 7] ; ret
0x000000000009f11a : lea eax, dword ptr [rdi + 8] ; ret
0x00000000001183d0 : lea eax, dword ptr [rdi + 9] ; and eax, -8 ; add eax, 0x10 ; ret
0x000000000009f12f : lea eax, dword ptr [rdi + 9] ; ret
0x000000000008cab9 : lea eax, dword ptr [rdi + rax + 0x10] ; ret
0x000000000008cac9 : lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x000000000008c9b3 : lea eax, dword ptr [rdi + rax + 0x30] ; ret
0x0000000000094697 : lea eax, dword ptr [rdi + rax] ; ret
0x000000000013dc94 : lea eax, dword ptr [rdi + rcx] ; sub rax, rdx ; ret
0x0000000000118e20 : lea eax, dword ptr [rdi + rsi + 8] ; ret
0x000000000008b439 : lea eax, dword ptr [rdi + rsi] ; ret
0x000000000009f083 : lea eax, dword ptr [rdi] ; ret
0x000000000015d88d : lea eax, dword ptr [rdx + 0xa] ; ret
0x000000000015d8ad : lea eax, dword ptr [rdx + 0xb] ; ret
0x000000000015d8cf : lea eax, dword ptr [rdx + 0xc] ; ret
0x000000000015d8ef : lea eax, dword ptr [rdx + 0xd] ; ret
0x000000000015d90f : lea eax, dword ptr [rdx + 0xe] ; ret
0x000000000015d79f : lea eax, dword ptr [rdx + 0xf] ; ret
0x00000000000840f1 : lea eax, dword ptr [rdx + 0xfffffffffffffff0] ; add rsp, 8 ; ret
0x000000000015d7c7 : lea eax, dword ptr [rdx + 1] ; ret
0x000000000015d7dd : lea eax, dword ptr [rdx + 2] ; ret
0x000000000015d7f5 : lea eax, dword ptr [rdx + 3] ; ret
0x000000000015d80b : lea eax, dword ptr [rdx + 4] ; ret
0x000000000015d81d : lea eax, dword ptr [rdx + 5] ; ret
0x000000000015d83b : lea eax, dword ptr [rdx + 6] ; ret
0x000000000015d747 : lea eax, dword ptr [rdx + 7] ; ret
0x000000000015d84d : lea eax, dword ptr [rdx + 8] ; ret
0x000000000015d86d : lea eax, dword ptr [rdx + 9] ; ret
0x00000000001187e0 : lea eax, dword ptr [rdx + rax + 2] ; cmp rcx, rax ; sbb eax, eax ; ret
0x0000000000075d7e : lea eax, dword ptr [rdx + rdi] ; ret
0x00000000000a27bc : lea eax, dword ptr [rdx + rdx] ; pop rbx ; and eax, 0x7ff80000 ; ret
0x000000000002f930 : lea eax, dword ptr [rdx + rsi*4] ; mov eax, dword ptr [rdi + rax] ; ret
0x00000000000f71c7 : lea eax, dword ptr [rdx] ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x000000000015d7b5 : lea eax, dword ptr [rdx] ; ret
0x0000000000089a65 : lea eax, dword ptr [rip + 0x10f35] ; ret
0x00000000000877e5 : lea eax, dword ptr [rip + 0x11595] ; ret
0x0000000000021fb1 : lea eax, dword ptr [rip + 0x15b18c] ; ret
0x0000000000021fc1 : lea eax, dword ptr [rip + 0x15d163] ; ret
0x000000000008cb0b : lea eax, dword ptr [rip + 0x1f] ; ret
0x000000000011fb39 : lea eax, dword ptr [rip + 0x2a4b61] ; pop rbx ; ret
0x000000000011fb01 : lea eax, dword ptr [rip + 0x2a4b99] ; pop rbx ; ret
0x000000000011fa42 : lea eax, dword ptr [rip + 0x2a4c58] ; pop rbx ; ret
0x00000000000fa1e0 : lea eax, dword ptr [rip + 0x2c85d2] ; ret
0x00000000000fa020 : lea eax, dword ptr [rip + 0x2c8792] ; ret
0x000000000007f0fc : lea eax, dword ptr [rip + 0x34065e] ; ret
0x000000000005dba3 : lea eax, dword ptr [rip + 0x363d87] ; pop rbx ; pop rbp ; ret
0x00000000000223eb : lea eax, dword ptr [rip + 0x3a280f] ; ret
0x0000000000109625 : lea eax, dword ptr [rip + 0x42045] ; ret
0x00000000001096c5 : lea eax, dword ptr [rip + 0x44a75] ; ret
0x00000000000922e2 : lea eax, dword ptr [rip + 0x6878] ; ret
0x000000000008d8e1 : lea eax, dword ptr [rip + 0x79] ; ret
0x00000000000922f6 : lea eax, dword ptr [rip + 0xb1464] ; ret
0x000000000008b9f2 : lea eax, dword ptr [rip + 0xb2258] ; ret
0x000000000008b662 : lea eax, dword ptr [rip + 0xb24c8] ; ret
0x00000000000891d2 : lea eax, dword ptr [rip + 0xb4818] ; ret
0x00000000000a38b3 : lea eax, dword ptr [rip + 0xbccb7] ; ret
0x00000000000a446f : lea eax, dword ptr [rip + 0xbddbb] ; ret
0x00000000000a4477 : lea eax, dword ptr [rip + 0xc0673] ; ret
0x000000000008d285 : lea eax, dword ptr [rip + 0xc0ec5] ; ret
0x00000000000a445b : lea eax, dword ptr [rip + 0xc84f] ; ret
0x000000000008b345 : lea eax, dword ptr [rip + 0xce245] ; ret
0x000000000008d775 : lea eax, dword ptr [rip + 0xce995] ; ret
0x00000000000890c5 : lea eax, dword ptr [rip + 0xced15] ; ret
0x000000000008d895 : lea eax, dword ptr [rip + 0xd0085] ; ret
0x000000000008cb1f : lea eax, dword ptr [rip + 0xd40cb] ; ret
0x00000000000a38ab : lea eax, dword ptr [rip + 0xd48f] ; ret
0x000000000008cb27 : lea eax, dword ptr [rip + 0xd6853] ; ret
0x00000000000879d2 : lea eax, dword ptr [rip + 0xdb688] ; ret
0x000000000009382b : lea eax, dword ptr [rip + 0xfffffffffffffaef] ; ret
0x0000000000087c35 : lea eax, dword ptr [rip + 5] ; ret
0x000000000008d944 : lea eax, dword ptr [rip + 6] ; ret
0x0000000000089ab1 : lea eax, dword ptr [rip + 9] ; ret
0x00000000001ab184 : lea eax, dword ptr [rsi + rcx*4] ; add ecx, dword ptr [rdi + 0x14b0302] ; ret
0x00000000000c8315 : lea eax, dword ptr [rsi + rcx*8] ; jmp 0xc82dd
0x00000000000b13b1 : lea eax, dword ptr [rsi + rdx] ; add rsp, 0x18 ; ret
0x00000000000f859b : lea eax, dword ptr [rsp + 0xffffffffffffffff] ; jmp 0xf8564
0x0000000000106685 : lea ebp, dword ptr [rbx] ; add al, ch ; ret
0x00000000001066f1 : lea ebx, dword ptr [rax + 0xffffffff89480007] ; ret -0x76b4
0x00000000000513ee : lea ebx, dword ptr [rdi + rdi*8 + 0xffffffffffffffff] ; dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x5617
0x0000000000050b9c : lea ebx, dword ptr [rdi + rdi*8 + 0xffffffffffffffff] ; dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x7a75
0x0000000000174ed1 : lea ebx, dword ptr [rsi + 0xfffffffffcd8e0cd] ; test al, -0x69 ; xchg eax, esp ; ret
0x00000000000a470a : lea ecx, dword ptr [rax + 1] ; call rbx
0x00000000000a4852 : lea ecx, dword ptr [rax + 4] ; call rbx
0x00000000001437e0 : lea ecx, dword ptr [rbx + rcx] ; jmp r9
0x000000000009d93e : lea ecx, dword ptr [rbx + rcx] ; jmp rcx
0x000000000004bebc : lea ecx, dword ptr [rbx + rdx] ; add rdx, r12 ; call qword ptr [r11 + rax*8]
0x0000000000061ca4 : lea ecx, dword ptr [rbx + rdx] ; add rdx, r14 ; call qword ptr [r11 + rax*8]
0x000000000015b096 : lea ecx, dword ptr [rdx + 0x10] ; jne 0x15b5e0 ; ret
0x000000000015b394 : lea ecx, dword ptr [rdx + 0xa] ; jne 0x15b5e0 ; ret
0x000000000015b3b4 : lea ecx, dword ptr [rdx + 0xb] ; jne 0x15b5e0 ; ret
0x000000000015b3d4 : lea ecx, dword ptr [rdx + 0xc] ; jne 0x15b5e0 ; ret
0x000000000015b3f6 : lea ecx, dword ptr [rdx + 0xd] ; jne 0x15b5e0 ; ret
0x000000000015b416 : lea ecx, dword ptr [rdx + 0xe] ; jne 0x15b5e0 ; ret
0x000000000015b436 : lea ecx, dword ptr [rdx + 0xf] ; jne 0x15b5e0 ; ret
0x000000000015b28c : lea ecx, dword ptr [rdx + 1] ; jne 0x15b5e0 ; ret
0x000000000015b2ae : lea ecx, dword ptr [rdx + 2] ; jne 0x15b5e0 ; ret
0x000000000015b2d4 : lea ecx, dword ptr [rdx + 3] ; jne 0x15b5e0 ; ret
0x000000000015b2ec : lea ecx, dword ptr [rdx + 4] ; jne 0x15b5e0 ; ret
0x00000000000752e1 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000078356 : lea ecx, dword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x000000000015b312 : lea ecx, dword ptr [rdx + 5] ; jne 0x15b5e0 ; ret
0x000000000015b334 : lea ecx, dword ptr [rdx + 6] ; jne 0x15b5e0 ; ret
0x000000000015b352 : lea ecx, dword ptr [rdx + 7] ; jne 0x15b5e0 ; ret
0x000000000015b02e : lea ecx, dword ptr [rdx + 8] ; jne 0x15b5e0 ; ret
0x000000000015b374 : lea ecx, dword ptr [rdx + 9] ; jne 0x15b5e0 ; ret
0x00000000000384f0 : lea ecx, dword ptr [rdx] ; jmp 0x38540
0x0000000000039c80 : lea ecx, dword ptr [rdx] ; jmp 0x39cd0
0x00000000000a4c0b : lea ecx, dword ptr [rsp + 0x28] ; call rbx
0x00000000000a4c99 : lea ecx, dword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x000000000012534e : lea edi, dword ptr [rbp + 0x10] ; call rax
0x0000000000128da2 : lea edi, dword ptr [rbx + 0x58] ; call rax
0x0000000000128372 : lea edi, dword ptr [rbx + 0x68] ; call rax
0x0000000000124795 : lea edi, dword ptr [rbx + 0xc8] ; call rax
0x000000000008d316 : lea edi, dword ptr [rdi + 0x10] ; jne 0x8d300 ; mov rax, rdi ; ret
0x000000000009e4ad : lea edi, dword ptr [rdi + 0x10] ; jne 0x9eb80 ; ret
0x000000000009fb91 : lea edi, dword ptr [rdi + 0x10] ; jne 0xa0390 ; ret
0x000000000009e4d0 : lea edi, dword ptr [rdi + 0x11] ; jne 0x9eb80 ; ret
0x000000000009fbb4 : lea edi, dword ptr [rdi + 0x11] ; jne 0xa0390 ; ret
0x000000000009e4f5 : lea edi, dword ptr [rdi + 0x12] ; jne 0x9eb80 ; ret
0x000000000009fbd9 : lea edi, dword ptr [rdi + 0x12] ; jne 0xa0390 ; ret
0x000000000009e513 : lea edi, dword ptr [rdi + 0x13] ; jne 0x9eb80 ; ret
0x000000000009fc07 : lea edi, dword ptr [rdi + 0x13] ; jne 0xa0390 ; ret
0x000000000009e533 : lea edi, dword ptr [rdi + 0x14] ; jne 0x9eb80 ; ret
0x000000000009fc37 : lea edi, dword ptr [rdi + 0x14] ; jne 0xa0390 ; ret
0x000000000009e556 : lea edi, dword ptr [rdi + 0x15] ; jne 0x9eb80 ; ret
0x000000000009fc6a : lea edi, dword ptr [rdi + 0x15] ; jne 0xa0390 ; ret
0x000000000009e575 : lea edi, dword ptr [rdi + 0x16] ; jne 0x9eb80 ; ret
0x000000000009fc99 : lea edi, dword ptr [rdi + 0x16] ; jne 0xa0390 ; ret
0x000000000009e595 : lea edi, dword ptr [rdi + 0x17] ; jne 0x9eb80 ; ret
0x000000000009fcc9 : lea edi, dword ptr [rdi + 0x17] ; jne 0xa0390 ; ret
0x000000000009e5b5 : lea edi, dword ptr [rdi + 0x18] ; jne 0x9eb80 ; ret
0x000000000009fcf9 : lea edi, dword ptr [rdi + 0x18] ; jne 0xa0390 ; ret
0x000000000009e5d8 : lea edi, dword ptr [rdi + 0x19] ; jne 0x9eb80 ; ret
0x000000000009fd2c : lea edi, dword ptr [rdi + 0x19] ; jne 0xa0390 ; ret
0x000000000009e60d : lea edi, dword ptr [rdi + 0x1a] ; jne 0x9eb80 ; ret
0x000000000009fd61 : lea edi, dword ptr [rdi + 0x1a] ; jne 0xa0390 ; ret
0x000000000009e63b : lea edi, dword ptr [rdi + 0x1b] ; jne 0x9eb80 ; ret
0x000000000009fd8f : lea edi, dword ptr [rdi + 0x1b] ; jne 0xa0390 ; ret
0x000000000009e66b : lea edi, dword ptr [rdi + 0x1c] ; jne 0x9eb80 ; ret
0x000000000009fdbf : lea edi, dword ptr [rdi + 0x1c] ; jne 0xa0390 ; ret
0x000000000009e697 : lea edi, dword ptr [rdi + 0x1d] ; jne 0x9eb80 ; ret
0x000000000009fdeb : lea edi, dword ptr [rdi + 0x1d] ; jne 0xa0390 ; ret
0x000000000009e6c7 : lea edi, dword ptr [rdi + 0x1e] ; jne 0x9eb80 ; ret
0x000000000009fe1b : lea edi, dword ptr [rdi + 0x1e] ; jne 0xa0390 ; ret
0x000000000009e6f7 : lea edi, dword ptr [rdi + 0x1f] ; jne 0x9eb80 ; ret
0x000000000009fe4b : lea edi, dword ptr [rdi + 0x1f] ; jne 0xa0390 ; ret
0x000000000009e727 : lea edi, dword ptr [rdi + 0x20] ; jne 0x9eb80 ; ret
0x000000000009fe7b : lea edi, dword ptr [rdi + 0x20] ; jne 0xa0390 ; ret
0x000000000009e3f3 : lea edi, dword ptr [rdi + 0xa] ; jne 0x9eb80 ; ret
0x000000000009fa97 : lea edi, dword ptr [rdi + 0xa] ; jne 0xa0390 ; ret
0x000000000009e411 : lea edi, dword ptr [rdi + 0xb] ; jne 0x9eb80 ; ret
0x000000000009fac5 : lea edi, dword ptr [rdi + 0xb] ; jne 0xa0390 ; ret
0x000000000009e431 : lea edi, dword ptr [rdi + 0xc] ; jne 0x9eb80 ; ret
0x000000000009fae5 : lea edi, dword ptr [rdi + 0xc] ; jne 0xa0390 ; ret
0x000000000009e453 : lea edi, dword ptr [rdi + 0xd] ; jne 0x9eb80 ; ret
0x000000000009fb07 : lea edi, dword ptr [rdi + 0xd] ; jne 0xa0390 ; ret
0x000000000009e473 : lea edi, dword ptr [rdi + 0xe] ; jne 0x9eb80 ; ret
0x000000000009fb37 : lea edi, dword ptr [rdi + 0xe] ; jne 0xa0390 ; ret
0x000000000009e493 : lea edi, dword ptr [rdi + 0xf] ; jne 0x9eb80 ; ret
0x000000000009fb67 : lea edi, dword ptr [rdi + 0xf] ; jne 0xa0390 ; ret
0x000000000009e2c7 : lea edi, dword ptr [rdi + 1] ; jne 0x9eb80 ; ret
0x000000000009f96a : lea edi, dword ptr [rdi + 1] ; jne 0xa0390 ; ret
0x000000000009e2eb : lea edi, dword ptr [rdi + 2] ; jne 0x9eb80 ; ret
0x000000000009f98f : lea edi, dword ptr [rdi + 2] ; jne 0xa0390 ; ret
0x000000000009e30e : lea edi, dword ptr [rdi + 3] ; jne 0x9eb80 ; ret
0x000000000009f9b2 : lea edi, dword ptr [rdi + 3] ; jne 0xa0390 ; ret
0x000000000009e329 : lea edi, dword ptr [rdi + 4] ; jne 0x9eb80 ; ret
0x000000000009f9cd : lea edi, dword ptr [rdi + 4] ; jne 0xa0390 ; ret
0x000000000009e34c : lea edi, dword ptr [rdi + 5] ; jne 0x9eb80 ; ret
0x000000000009f9f0 : lea edi, dword ptr [rdi + 5] ; jne 0xa0390 ; ret
0x000000000009e371 : lea edi, dword ptr [rdi + 6] ; jne 0x9eb80 ; ret
0x000000000009fa15 : lea edi, dword ptr [rdi + 6] ; jne 0xa0390 ; ret
0x000000000009e38f : lea edi, dword ptr [rdi + 7] ; jne 0x9eb80 ; ret
0x000000000009fa33 : lea edi, dword ptr [rdi + 7] ; jne 0xa0390 ; ret
0x000000000009e3ab : lea edi, dword ptr [rdi + 8] ; jne 0x9eb80 ; ret
0x000000000009fa4f : lea edi, dword ptr [rdi + 8] ; jne 0xa0390 ; ret
0x000000000009e3ce : lea edi, dword ptr [rdi + 9] ; jne 0x9eb80 ; ret
0x000000000009fa72 : lea edi, dword ptr [rdi + 9] ; jne 0xa0390 ; ret
0x000000000004601e : lea edi, dword ptr [rdi + rbp*8] ; call 0x92310
0x0000000000112da1 : lea edi, dword ptr [rip + 0x2b11d9] ; call rax
0x00000000001124d6 : lea edi, dword ptr [rip + 0x2b1a44] ; call rax
0x000000000010b9ae : lea edi, dword ptr [rip + 0xfffffffffffffe8c] ; call rax
0x0000000000021f5c : lea edi, dword ptr [rsi + rdx] ; call rax
0x0000000000037c89 : lea edx, dword ptr [rax + 1] ; mov dword ptr [rip + 0x38740e], edx ; ret
0x000000000004e7ff : lea edx, dword ptr [rax + 8] ; mov qword ptr [r15 + 8], rdx ; jmp 0x4e7ca
0x00000000001438b4 : lea edx, dword ptr [rbx + rdx] ; jmp rdx
0x0000000000097931 : lea edx, dword ptr [rcx + 1] ; mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x0000000000143ca8 : lea edx, dword ptr [rdx + 0xffffffffffffffc0] ; jmp r9
0x00000000000fe247 : lea edx, dword ptr [rdx + rcx*4] ; add eax, dword ptr [rsi + rdx] ; ret
0x0000000000087cc6 : lea edx, dword ptr [rdx + rcx] ; jmp r10
0x0000000000121ee1 : lea edx, dword ptr [rip + 0x29cc99] ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x000000000007523c : lea edx, dword ptr [rsi + 4] ; mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00000000000f8923 : lea esi, dword ptr [rbp + 0xffffffffffffffb0] ; mov qword ptr [rbp + 0xffffffffffffff98], rax ; mov rdx, rax ; jmp 0xf8954
0x00000000000f89f4 : lea esi, dword ptr [rbp + 0xffffffffffffffb0] ; mov qword ptr [rbp + 0xffffffffffffff98], rax ; mov rdx, rax ; jmp 0xf8a26
0x0000000000078f40 : lea esi, dword ptr [rcx + 4] ; mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x0000000000048aa0 : lea esi, dword ptr [rdi] ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000002eb2 : lea esi, dword ptr [rdi] ; ret 0x793b
0x00000000000463e5 : lea esi, dword ptr [rip + 0x195] ; call rax
0x000000000007044a : lea esi, dword ptr [rip + 0x30] ; call rax
0x000000000007d11a : lea esi, dword ptr [rip + 0xffffffffffffe480] ; call rax
0x000000000007cd1a : lea esi, dword ptr [rip + 0xffffffffffffe880] ; call rax
0x000000000007ba6a : lea esi, dword ptr [rip + 0xfffffffffffffb30] ; call rax
0x00000000000707a6 : lea esi, dword ptr [rip + 0xfffffffffffffcd4] ; call rax
0x000000000007b802 : lea esi, dword ptr [rip + 0xfffffffffffffd98] ; call rax
0x000000000012e405 : lea esi, dword ptr [rsp + 0x10] ; call qword ptr [rax]
0x000000000012de02 : lea esi, dword ptr [rsp + 0x10] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000001227b5 : lea esi, dword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000006dc38 : lea esp, dword ptr [rbp + 0xffffffffffffffe8] ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000003b97e : lea esp, dword ptr [rbp + 0xfffffffffffffff0] ; pop rbx ; pop r12 ; pop rbp ; ret
0x00000000000b4925 : lea esp, dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x0000000000087cc5 : lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000001437df : lea r9, qword ptr [r11 + r9] ; jmp r9
0x00000000000384ef : lea r9, qword ptr [rdx] ; jmp 0x38540
0x0000000000039c7f : lea r9, qword ptr [rdx] ; jmp 0x39cd0
0x00000000000a4c0a : lea r9, qword ptr [rsp + 0x28] ; call rbx
0x00000000000a4c98 : lea r9, qword ptr [rsp + 0x28] ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000f859a : lea rax, qword ptr [r12 + 0xffffffffffffffff] ; jmp 0xf8564
0x00000000000a246d : lea rax, qword ptr [r9 + 1] ; pop r12 ; ret
0x00000000000c3371 : lea rax, qword ptr [rax + rax + 0xffffffffffffffff] ; ret
0x000000000008ca83 : lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x000000000008ca93 : lea rax, qword ptr [rax + rdi + 0x20] ; ret
0x0000000000097c33 : lea rax, qword ptr [rax + rdi + 0x30] ; ret
0x000000000008ca63 : lea rax, qword ptr [rax + rdi + 0xfffffffffffffff0] ; ret
0x00000000000bd7a1 : lea rax, qword ptr [rax + rdx*8] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000049585 : lea rax, qword ptr [rbp + 2] ; mov rdx, r8 ; jmp 0x495a1
0x000000000012235a : lea rax, qword ptr [rbx + 0x2260] ; pop rbx ; ret
0x00000000000a4540 : lea rax, qword ptr [rbx + 0xfffffffffffffffc] ; pop rbx ; ret
0x0000000000098739 : lea rax, qword ptr [rbx + 0xffffffffffffffff] ; pop rbx ; ret
0x00000000000c7009 : lea rax, qword ptr [rbx + 2] ; pop rbx ; pop rbp ; ret
0x00000000000c6f09 : lea rax, qword ptr [rbx + 8] ; pop rbx ; pop rbp ; ret
0x00000000000a20d3 : lea rax, qword ptr [rcx + 0xffffffffffffffff] ; ret
0x000000000008b53c : lea rax, qword ptr [rcx + rsi] ; ret
0x000000000009f1fb : lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000009f210 : lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000009f22e : lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000009f24e : lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000009f271 : lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000009f290 : lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000009f2b0 : lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000009f2d0 : lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000009f2f3 : lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000009f318 : lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000009f336 : lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000009f356 : lea rax, qword ptr [rdi + 0x1b] ; ret
0x000000000009f372 : lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000009f392 : lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000009f3b2 : lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000009f3d2 : lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a0222 : lea rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a0488 : lea rax, qword ptr [rdi + 0x40] ; ret
0x000000000009f14c : lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000009f16c : lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000009f18e : lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000009f1ae : lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000009f1ce : lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000009f1e8 : lea rax, qword ptr [rdi + 0xf] ; ret
0x00000000000a401d : lea rax, qword ptr [rdi + 0xfffffffffffffff0] ; ret
0x00000000000a4180 : lea rax, qword ptr [rdi + 0xfffffffffffffff4] ; ret
0x00000000000a4190 : lea rax, qword ptr [rdi + 0xfffffffffffffff8] ; ret
0x00000000000a41a0 : lea rax, qword ptr [rdi + 0xfffffffffffffffc] ; ret
0x00000000000975d3 : lea rax, qword ptr [rdi + 1] ; ret
0x00000000000975e7 : lea rax, qword ptr [rdi + 2] ; ret
0x00000000000975f2 : lea rax, qword ptr [rdi + 3] ; ret
0x0000000000097606 : lea rax, qword ptr [rdi + 4] ; ret
0x0000000000097616 : lea rax, qword ptr [rdi + 5] ; ret
0x0000000000097626 : lea rax, qword ptr [rdi + 6] ; mov byte ptr [rdi + 6], 0 ; ret
0x000000000009f0fa : lea rax, qword ptr [rdi + 6] ; ret
0x00000000000975c6 : lea rax, qword ptr [rdi + 7] ; ret
0x000000000009f119 : lea rax, qword ptr [rdi + 8] ; ret
0x000000000009f12e : lea rax, qword ptr [rdi + 9] ; ret
0x000000000008cab8 : lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008cac8 : lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008c9b2 : lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x0000000000094696 : lea rax, qword ptr [rdi + rax] ; ret
0x000000000013dc93 : lea rax, qword ptr [rdi + rcx] ; sub rax, rdx ; ret
0x0000000000118e1f : lea rax, qword ptr [rdi + rsi + 8] ; ret
0x000000000008b438 : lea rax, qword ptr [rdi + rsi] ; ret
0x000000000009f082 : lea rax, qword ptr [rdi] ; ret
0x000000000015d88c : lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000015d8ac : lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000015d8ce : lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000015d8ee : lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000015d90e : lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000015d79e : lea rax, qword ptr [rdx + 0xf] ; ret
0x00000000000840f0 : lea rax, qword ptr [rdx + 0xfffffffffffffff0] ; add rsp, 8 ; ret
0x000000000015d7c6 : lea rax, qword ptr [rdx + 1] ; ret
0x000000000015d7dc : lea rax, qword ptr [rdx + 2] ; ret
0x000000000015d7f4 : lea rax, qword ptr [rdx + 3] ; ret
0x000000000015d80a : lea rax, qword ptr [rdx + 4] ; ret
0x000000000015d81c : lea rax, qword ptr [rdx + 5] ; ret
0x000000000015d83a : lea rax, qword ptr [rdx + 6] ; ret
0x000000000015d746 : lea rax, qword ptr [rdx + 7] ; ret
0x000000000015d84c : lea rax, qword ptr [rdx + 8] ; ret
0x000000000015d86c : lea rax, qword ptr [rdx + 9] ; ret
0x000000000002f92f : lea rax, qword ptr [rdx + rsi*4] ; mov eax, dword ptr [rdi + rax] ; ret
0x000000000015d7b4 : lea rax, qword ptr [rdx] ; ret
0x0000000000089a64 : lea rax, qword ptr [rip + 0x10f35] ; ret
0x00000000000877e4 : lea rax, qword ptr [rip + 0x11595] ; ret
0x0000000000021fb0 : lea rax, qword ptr [rip + 0x15b18c] ; ret
0x0000000000021fc0 : lea rax, qword ptr [rip + 0x15d163] ; ret
0x000000000008cb0a : lea rax, qword ptr [rip + 0x1f] ; ret
0x000000000011fb38 : lea rax, qword ptr [rip + 0x2a4b61] ; pop rbx ; ret
0x000000000011fb00 : lea rax, qword ptr [rip + 0x2a4b99] ; pop rbx ; ret
0x000000000011fa41 : lea rax, qword ptr [rip + 0x2a4c58] ; pop rbx ; ret
0x00000000000fa1df : lea rax, qword ptr [rip + 0x2c85d2] ; ret
0x00000000000fa01f : lea rax, qword ptr [rip + 0x2c8792] ; ret
0x000000000007f0fb : lea rax, qword ptr [rip + 0x34065e] ; ret
0x000000000005dba2 : lea rax, qword ptr [rip + 0x363d87] ; pop rbx ; pop rbp ; ret
0x00000000000223ea : lea rax, qword ptr [rip + 0x3a280f] ; ret
0x0000000000109624 : lea rax, qword ptr [rip + 0x42045] ; ret
0x00000000001096c4 : lea rax, qword ptr [rip + 0x44a75] ; ret
0x00000000000922e1 : lea rax, qword ptr [rip + 0x6878] ; ret
0x000000000008d8e0 : lea rax, qword ptr [rip + 0x79] ; ret
0x00000000000922f5 : lea rax, qword ptr [rip + 0xb1464] ; ret
0x000000000008b9f1 : lea rax, qword ptr [rip + 0xb2258] ; ret
0x000000000008b661 : lea rax, qword ptr [rip + 0xb24c8] ; ret
0x00000000000891d1 : lea rax, qword ptr [rip + 0xb4818] ; ret
0x00000000000a38b2 : lea rax, qword ptr [rip + 0xbccb7] ; ret
0x00000000000a446e : lea rax, qword ptr [rip + 0xbddbb] ; ret
0x00000000000a4476 : lea rax, qword ptr [rip + 0xc0673] ; ret
0x000000000008d284 : lea rax, qword ptr [rip + 0xc0ec5] ; ret
0x00000000000a445a : lea rax, qword ptr [rip + 0xc84f] ; ret
0x000000000008b344 : lea rax, qword ptr [rip + 0xce245] ; ret
0x000000000008d774 : lea rax, qword ptr [rip + 0xce995] ; ret
0x00000000000890c4 : lea rax, qword ptr [rip + 0xced15] ; ret
0x000000000008d894 : lea rax, qword ptr [rip + 0xd0085] ; ret
0x000000000008cb1e : lea rax, qword ptr [rip + 0xd40cb] ; ret
0x00000000000a38aa : lea rax, qword ptr [rip + 0xd48f] ; ret
0x000000000008cb26 : lea rax, qword ptr [rip + 0xd6853] ; ret
0x00000000000879d1 : lea rax, qword ptr [rip + 0xdb688] ; ret
0x000000000009382a : lea rax, qword ptr [rip + 0xfffffffffffffaef] ; ret
0x0000000000087c34 : lea rax, qword ptr [rip + 5] ; ret
0x000000000008d943 : lea rax, qword ptr [rip + 6] ; ret
0x0000000000089ab0 : lea rax, qword ptr [rip + 9] ; ret
0x00000000000c8314 : lea rax, qword ptr [rsi + rcx*8] ; jmp 0xc82dd
0x00000000000b13b0 : lea rax, qword ptr [rsi + rdx] ; add rsp, 0x18 ; ret
0x00000000000a4159 : lea rax, qword ptr es:[rdi + 0xfffffffffffffff0] ; ret
0x000000000009d93d : lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a4709 : lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000000a4851 : lea rcx, qword ptr [rax + 4] ; call rbx
0x0000000000078355 : lea rcx, qword ptr [rdx + 4] ; mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x0000000000021f5b : lea rdi, qword ptr [r14 + rdx] ; call rax
0x000000000004601d : lea rdi, qword ptr [r15 + rbp*8] ; call 0x92310
0x000000000012534d : lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000128da1 : lea rdi, qword ptr [rbx + 0x58] ; call rax
0x0000000000128371 : lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000124794 : lea rdi, qword ptr [rbx + 0xc8] ; call rax
0x000000000008d315 : lea rdi, qword ptr [rdi + 0x10] ; jne 0x8d300 ; mov rax, rdi ; ret
0x0000000000112da0 : lea rdi, qword ptr [rip + 0x2b11d9] ; call rax
0x00000000001124d5 : lea rdi, qword ptr [rip + 0x2b1a44] ; call rax
0x000000000010b9ad : lea rdi, qword ptr [rip + 0xfffffffffffffe8c] ; call rax
0x00000000001438b3 : lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x000000000004e7fe : lea rdx, qword ptr [rax + 8] ; mov qword ptr [r15 + 8], rdx ; jmp 0x4e7ca
0x0000000000143ca7 : lea rdx, qword ptr [rdx + 0xffffffffffffffc0] ; jmp r9
0x00000000000fe246 : lea rdx, qword ptr [rdx + rcx*4] ; add eax, dword ptr [rsi + rdx] ; ret
0x00000000000463e4 : lea rsi, qword ptr [rip + 0x195] ; call rax
0x0000000000070449 : lea rsi, qword ptr [rip + 0x30] ; call rax
0x000000000007d119 : lea rsi, qword ptr [rip + 0xffffffffffffe480] ; call rax
0x000000000007cd19 : lea rsi, qword ptr [rip + 0xffffffffffffe880] ; call rax
0x000000000007ba69 : lea rsi, qword ptr [rip + 0xfffffffffffffb30] ; call rax
0x00000000000707a5 : lea rsi, qword ptr [rip + 0xfffffffffffffcd4] ; call rax
0x000000000007b801 : lea rsi, qword ptr [rip + 0xfffffffffffffd98] ; call rax
0x000000000012e404 : lea rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x000000000012de01 : lea rsi, qword ptr [rsp + 0x10] ; mov rdi, rbx ; call qword ptr [rax]
0x00000000001227b4 : lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000003b97d : lea rsp, qword ptr [rbp + 0xfffffffffffffff0] ; pop rbx ; pop r12 ; pop rbp ; ret
0x000000000007fe82 : leave ; add dword ptr [rax + 0x39], ecx ; ret
0x00000000001abafd : leave ; add dword ptr [rax], eax ; loopne 0x1abaa9 ; sti ; jmp qword ptr [rsi]
0x000000000008b706 : leave ; cmove rax, rdx ; ret
0x000000000013da99 : leave ; cmp ch, byte ptr [rcx] ; ret -0x35c7
0x000000000002d506 : leave ; je 0x2d50b ; call rcx
0x00000000000986aa : leave ; je 0x98668 ; mov byte ptr [r10 + 1], 0 ; ret
0x00000000000bdb4f : leave ; jmp 0xbdb15
0x00000000000a1eb0 : leave ; jne 0xa1ea0 ; ret
0x00000000000a1f60 : leave ; jne 0xa1f50 ; ret
0x00000000000a2220 : leave ; jne 0xa2210 ; sub rax, 1 ; ret
0x0000000000104a16 : leave ; jns 0x1049e8 ; mov eax, edx ; sub eax, r9d ; ret
0x0000000000104b98 : leave ; jns 0x104bce ; mov eax, r8d ; sub eax, r9d ; ret
0x000000000013dc92 : leave ; lea rax, qword ptr [rdi + rcx] ; sub rax, rdx ; ret
0x000000000009d421 : leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x00000000000974ff : leave ; movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x0000000000039b4e : leave ; ret
0x0000000000108713 : leave ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108720 ; xor eax, eax ; ret
0x0000000000108743 : leave ; sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108750 ; xor eax, eax ; ret
0x000000000007a886 : les r11d, ptr [rbx + 0x5d] ; pop r12 ; ret
0x0000000000192cf0 : ljmp 0x10d1cff, -0x1575 ; jmp qword ptr [rdx]
0x00000000001926c8 : ljmp 0x1a0d1cff, -0x157a ; jmp qword ptr [rdx]
0x000000000019a67e : ljmp 0x1cffedf7, -0x67f3 ; fsubr st(5) ; jmp qword ptr [rdx]
0x00000000001a0af6 : ljmp 0x1cfff0db, -0x7af3 ; sal al, cl ; jmp qword ptr [rdx]
0x00000000001b6b6e : ljmp 0x1cfff734, -0x51f3 ; xor al, -9 ; jmp qword ptr [rdx]
0x00000000000b9112 : ljmp 0x245c8b4c, 0xf50 ; ret 0x144
0x0000000000192710 : ljmp 0x290d1cff, -0x157a ; jmp qword ptr [rdx]
0x0000000000192ca8 : ljmp 0x2f0d1cff, -0x1575 ; jmp qword ptr [rdx]
0x0000000000190d80 : ljmp 0x320d1cff, -0x15ff ; jmp qword ptr [rdx]
0x0000000000080c65 : ljmp 0x39480033, 0xfd3 ; xchg eax, ebp ; ret -0x7cb8
0x0000000000087561 : ljmp 0x3f8c148, 0x148 ; ret 0x6348
0x0000000000192ea0 : ljmp 0x420d1cff, -0x1576 ; jmp qword ptr [rdx]
0x0000000000092935 : ljmp 0x48d0094c, 0x789 ; pop rbx ; pop rbp ; ret
0x000000000002079c : ljmp 0x48da2948, -0x3d01 ; jmp 0x207a9
0x000000000012b29d : ljmp 0x48e6894c, -0x1077 ; call rax
0x00000000000e0c61 : ljmp 0x4cee8948, 0x658b ; add al, ch ; ret 0x15
0x00000000001233af : ljmp 0x4cee894c, -0x1877 ; call rax
0x0000000000038cb8 : ljmp 0x4dc47304, -0x52f1 ; ret
0x0000000000038ba8 : ljmp 0x4dc47304, -0x5af1 ; ret
0x0000000000192680 : ljmp 0x50d1cff, -0x157b ; jmp qword ptr [rdx]
0x0000000000191020 : ljmp 0x5f0d1cff, -0x15f3 ; jmp qword ptr [rdx]
0x0000000000190fd8 : ljmp 0x690d1cff, -0x15f3 ; jmp qword ptr [rdx]
0x0000000000192e58 : ljmp 0x6d0d1cff, -0x1576 ; jmp qword ptr [rdx]
0x000000000002f8fa : ljmp 0x7204573b, -0xcf8 ; ret
0x00000000001929f0 : ljmp 0x720d1cff, -0x1578 ; jmp qword ptr [rdx]
0x0000000000192380 : ljmp 0x720d1cff, -0x1593 ; jmp qword ptr [rdx]
0x00000000000feb8c : ljmp 0x7304563b, -0x7cc2 ; ret -0x74fb
0x00000000000fe21c : ljmp 0x7304563b, -0x7cca ; ret -0x74fb
0x000000000002f8b7 : ljmp 0x7304573b, -0x7cd2 ; ret -0x74fb
0x0000000000192638 : ljmp 0x740d1cff, -0x157c ; jmp qword ptr [rdx]
0x0000000000104994 : ljmp 0x74d2841f, -0x76f7 ; ret -0x153f
0x00000000000e4f73 : ljmp 0x75d2841f, 0x39e5 ; ret
0x0000000000188e92 : ljmp 0x7cccff, -0x3c00 ; jno 0x188e85 ; jmp rsp
0x0000000000188ee2 : ljmp 0x7dbcff, 0x400 ; jae 0x188ed5 ; call rsp
0x0000000000021a0b : ljmp 0x7e28305, 0x3944 ; ret -0x7bf1
0x0000000000188f92 : ljmp 0x7fccff, -0x6c00 ; jne 0x188f85 ; jmp rsp
0x0000000000191120 : ljmp 0x800d1cff, -0x15d8 ; jmp qword ptr [rdx]
0x00000000000f3031 : ljmp 0x8348fffc, 0x18c4 ; ret
0x0000000000116fc9 : ljmp 0x8348ffff, 0x18c4 ; ret
0x00000000000e4f71 : ljmp 0x841feac1, 0x75d2 ; in eax, 0x39 ; ret
0x0000000000190c60 : ljmp 0x890d1cff, -0x1607 ; jmp qword ptr [rdx]
0x000000000005f042 : ljmp 0x89480011, -0x7621 ; ret -0x3fcf
0x0000000000189152 : ljmp 0x8abcff, -0x3c00 ; fldl2e ; call rsp
0x00000000001891aa : ljmp 0x8bccff, 0x400 ; fsubp st(2) ; jmp rsp
0x000000000011ce8d : ljmp 0x8c48348, 0x5d5b ; ret
0x000000000018925a : ljmp 0x8eb4ff, -0x4c00 ; in eax, -0x16 ; call rsp
0x0000000000192e10 : ljmp 0x960d1cff, -0x1576 ; jmp qword ptr [rdx]
0x0000000000190d38 : ljmp 0x9d0d1cff, -0x1600 ; jmp qword ptr [rdx]
0x00000000001923c8 : ljmp 0xa0d1cff, -0x1592 ; jmp qword ptr [rdx]
0x000000000008d082 : ljmp 0xab60f01, 0x394c ; ret 0xc88
0x0000000000192dc8 : ljmp 0xad0d1cff, -0x1576 ; jmp qword ptr [rdx]
0x00000000000382a3 : ljmp 0xb8e17501, 1 ; add byte ptr [rax], al ; ret
0x0000000000192758 : ljmp 0xbe0d1cff, -0x1579 ; jmp qword ptr [rdx]
0x0000000000192d80 : ljmp 0xbf0d1cff, -0x1576 ; jmp qword ptr [rdx]
0x00000000001927a0 : ljmp 0xc00d1cff, -0x1579 ; jmp qword ptr [rdx]
0x0000000000126265 : ljmp 0xc1894d02, 0x314c ; ret -0x1d7f
0x00000000001aa61f : ljmp 0xd1cfff4, -0x15b2 ; hlt ; jmp qword ptr [rdx]
0x00000000001aa547 : ljmp 0xd1cfff4, -0x167b ; hlt ; jmp qword ptr [rdx]
0x00000000001aa4ff : ljmp 0xd1cfff4, -0x16e8 ; hlt ; jmp qword ptr [rdx]
0x00000000001aa1f7 : ljmp 0xd1cfff4, -0x1731 ; hlt ; jmp qword ptr [rdx]
0x00000000001aa1af : ljmp 0xd1cfff4, -0x189b ; hlt ; jmp qword ptr [rdx]
0x0000000000161c2c : ljmp 0xd1ef0f66, 0xf66 ; cmp byte ptr [rdi], dl ; ret -0x7cf1
0x0000000000192d38 : ljmp 0xe00d1cff, -0x1576 ; jmp qword ptr [rdx]
0x0000000000192a38 : ljmp 0xe10d1cff, -0x1578 ; jmp qword ptr [rdx]
0x00000000001927e8 : ljmp 0xe20d1cff, -0x1579 ; jmp qword ptr [rdx]
0x000000000003e3be : ljmp 0xea854c01, -0x6af1 ; ret -0x1f7d
0x000000000003e2af : ljmp 0xea854c01, -0x6af1 ; ret -0x49f1
0x0000000000190ca8 : ljmp 0xf20d1cff, -0x1605 ; jmp qword ptr [rdx]
0x0000000000145b9b : ljmp 0xf24f8948, -0x76b8 ; push rdi ; clc ; ret
0x0000000000192410 : ljmp 0xf30d1cff, -0x1593 ; jmp qword ptr [rdx]
0x00000000001910d8 : ljmp 0xfa0d1cff, -0x15d9 ; jmp qword ptr [rdx]
0x0000000000190cf0 : ljmp 0xfa0d1cff, -0x1604 ; jmp qword ptr [rdx]
0x000000000003cd0d : ljmp 0xfa29fad1, 0x6348 ; ret -0x72b8
0x0000000000190dc8 : ljmp 0xfd0d1cff, -0x1600 ; jmp qword ptr [rdx]
0x00000000001260ef : ljmp 0xfe58316, -0x7cb7 ; ret
0x00000000000222ea : ljmp 0xfe6830c, -0x76bf ; ret -0x187d
0x0000000000022443 : ljmp 0xfe6830c, -0x76bf ; ret -0x7cbf
0x00000000001aa4fe : ljmp 0xfff4, 0xd1c ; sbb cl, ch ; hlt ; jmp qword ptr [rdx]
0x0000000000089b13 : ljmp 0xffff, -0x7af1 ; ret 0x17
0x000000000017a753 : ljmp ptr [rax + 0xfffffffff8fff498] ; cwde ; hlt ; call qword ptr [rsi]
0x000000000017a75f : ljmp ptr [rax + 0xffffffffffffff98] ; hlt ; call qword ptr [rsi]
0x0000000000189a93 : ljmp ptr [rax + rax*8 + 0x4de40000] ; in eax, dx ; jmp rsp
0x000000000018e613 : ljmp ptr [rax + rdi*4 + 0x1ec40002] ; cli ; call rsp
0x000000000017a76b : ljmp ptr [rax] ; cdq ; hlt ; call qword ptr [rsi]
0x000000000017a2ff : ljmp ptr [rbp + 0x7cfff420] ; sbb al, -0xc ; jmp qword ptr [rsi]
0x000000000017a2cb : ljmp ptr [rbp + 0x7dfff418] ; sbb ah, dh ; call qword ptr [rdi]
0x000000000017d027 : ljmp ptr [rbx + rsi*4 + 0xffffffffb3ccfffa] ; cli ; jmp rsp
0x000000000017a52f : ljmp ptr [rcx + 0x17fff498] ; wait ; hlt ; jmp qword ptr [rcx]
0x000000000017a72f : ljmp ptr [rcx + 0xffffffffa9fff498] ; cwde ; hlt ; call qword ptr [rsi]
0x000000000017a3b7 : ljmp ptr [rcx + 0xffffffffa9fff498] ; cwde ; hlt ; jmp rsp
0x000000000017ac15 : ljmp ptr [rcx + 0xffffffffc3fffb00] ; add dh, bh ; jmp rdi
0x000000000001f6a3 : ljmp ptr [rcx] ; salc ; add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x1f67a
0x000000000018e303 : ljmp ptr [rdi + rbx*4 + 0xffffffffa7b40002] ; stc ; jmp rsp
0x0000000000187fcb : ljmp ptr [rdx + 0x3afffc54] ; push rsp ; cld ; jmp rax
0x000000000018838b : ljmp ptr [rdx + rdi*2 + 0x7a3cfffc] ; cld ; jmp rdx
0x0000000000189efb : ljmp ptr [rsp + 0xffffffff88cd0000] ; out dx, al ; call rsp
0x0000000000187e8f : ljmp ptr [rsp + rdx*2 + 0xfffffffffffffffc] ; call qword ptr [rdx]
0x000000000014d288 : lock ; lock movdqu xmmword ptr [rdi + 0xfffffffffffffff0], xmm0 ; ret
0x0000000000058c88 : lock add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x0000000000160fce : lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret -0x7cf1
0x000000000019e285 : lock add byte ptr [rax], al ; cmp byte ptr [rsi + 0xffffffffffffffef], al ; jmp qword ptr [rsi]
0x000000000018a0b5 : lock add byte ptr [rax], al ; hlt ; lahf ; out dx, al ; jmp rsp
0x000000000007496a : lock add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff81], cl ; ret
0x00000000001b61c0 : lock add edi, ebx ; jmp qword ptr [rdx]
0x00000000000840f3 : lock add rsp, 8 ; ret
0x00000000001872e0 : lock and bl, bh ; jmp rax
0x0000000000036a4c : lock and eax, 0x8000 ; ret
0x000000000010d233 : lock bswap eax ; ret
0x0000000000039b48 : lock call 0x392e0 ; leave ; ret
0x0000000000039b86 : lock call 0x397b0 ; leave ; ret
0x00000000000716e8 : lock call 0x7bdb0 ; mov edx, eax ; jmp 0x716aa
0x0000000000187a58 : lock cld ; call rax
0x0000000000187b4c : lock cld ; jmp qword ptr [rax + 0xffffffffe0fffc10]
0x00000000001ad3d0 : lock cli ; cmc ; call qword ptr [rax]
0x00000000001ad020 : lock cmc ; cmc ; call qword ptr [rcx]
0x00000000001aceec : lock cmc ; jmp qword ptr [rdx]
0x0000000000047332 : lock cmp ecx, 0x2f ; jmp r8
0x000000000019edd0 : lock cwde ; out dx, eax ; jmp rdi
0x0000000000128114 : lock dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x4015
0x00000000001280d5 : lock dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x72b8
0x00000000001876d4 : lock fdiv st(3), st(0) ; call rax
0x00000000001876b8 : lock fdivp st(3) ; call rax
0x0000000000177765 : lock ficomp word ptr [rdx + 0xffffffffffffffe7] ; cmc ; mov ch, -0x55 ; ret
0x00000000000f463c : lock fild qword ptr [rax + rax] ; add rsp, 8 ; ret
0x00000000000368c8 : lock fld xword ptr [rsp + 0xffffffffffffffe8] ; fstp xword ptr [rdi] ; ret
0x00000000001aaad5 : lock hlt ; jmp qword ptr [rdx]
0x00000000000b226d : lock imul esi, edx ; add eax, esi ; ret
0x000000000019ab4d : lock in eax, dx ; jmp qword ptr [rdx]
0x000000000019cd90 : lock insb byte ptr es:[rdi], dx ; out dx, al ; call qword ptr [rsi]
0x00000000001a0fc0 : lock int1 ; call rsi
0x0000000000098b9b : lock ja 0x98bb0 ; mov rax, rdi ; ret
0x00000000000a2724 : lock je 0xa2712 ; movzx eax, cl ; pop rbx ; ret
0x00000000000a274c : lock je 0xa2712 ; movzx eax, dl ; pop rbx ; ret
0x00000000000360ca : lock jg 0x36115 ; sub eax, edx ; shr rax, 0x3f ; ret
0x00000000001a1090 : lock jl 0x1a1084 ; call qword ptr [rax]
0x0000000000038c1c : lock jmp 0x38c96 ; shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000164fbc : lock jne 0x1650f0 ; ret
0x00000000000977a0 : lock jne 0x97790 ; mov rax, rdi ; ret
0x00000000000a412a : lock jne 0xa4180 ; lea rax, qword ptr [rdi + 0xfffffffffffffff0] ; ret
0x000000000017919c : lock loop 0x179190 ; inc dword ptr [rax] ; jrcxz 0x179194 ; call qword ptr [rax]
0x000000000001f5e7 : lock mov byte ptr [rdi], 0 ; ret
0x00000000000f12ef : lock mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x0000000000036982 : lock mov dword ptr [rdi], eax ; fld xword ptr [rsp + 0xffffffffffffffe8] ; ret
0x0000000000145077 : lock mov qword ptr [rdi + 0xfffffffffffffff8], rcx ; ret
0x00000000001450b5 : lock mov qword ptr [rdi + 0xfffffffffffffff8], rdx ; ret
0x0000000000039dac : lock mov qword ptr [rdi], rax ; mov eax, 1 ; ret
0x0000000000036bb7 : lock mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x000000000014d28a : lock movdqu xmmword ptr [rdi + 0xfffffffffffffff0], xmm0 ; ret
0x00000000000b1427 : lock movsd xmm0, qword ptr [rsp + 0xfffffffffffffff0] ; ret
0x00000000000bae43 : lock movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00000000001645a3 : lock movzx edx, byte ptr [rsi + 0xfffffffffffffff0] ; sub eax, edx ; ret
0x000000000004989d : lock nop ; ret
0x000000000018785c : lock or ah, bh ; call rax
0x00000000000fb1b6 : lock or rax, rdi ; ret
0x00000000001ac830 : lock out -0xb, al ; call qword ptr [rax]
0x000000000010a436 : lock pop r12 ; ret
0x0000000000071b6b : lock pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000758af : lock pop r14 ; pop r15 ; ret
0x00000000000bdf9e : lock pop r14 ; ret
0x000000000003b980 : lock pop rbx ; pop r12 ; pop rbp ; ret
0x0000000000082426 : lock pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c3475 : lock pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003c40b : lock pop rbx ; pop rbp ; ret
0x0000000000049792 : lock pop rbx ; ret
0x0000000000179638 : lock push -0xe ; call qword ptr [rax]
0x0000000000118c4c : lock shl eax, 4 ; add eax, 8 ; ret
0x00000000001879a1 : lock sti ; call qword ptr [rax]
0x00000000001a3000 : lock sti ; int1 ; jmp qword ptr [rcx]
0x0000000000187a74 : lock sub al, -4 ; call rax
0x00000000001645a7 : lock sub eax, edx ; ret
0x00000000001a8ae0 : lock sub esi, ebp ; jmp qword ptr [rcx]
0x0000000000179158 : lock xchg eax, esi ; int1 ; dec dword ptr [rax] ; xchg eax, edi ; int1 ; jmp qword ptr [rax]
0x0000000000187a3c : lock xor ah, bh ; call rax
0x000000000002f62b : lock xor ebp, ebp ; jmp 0x2f633
0x0000000000138b80 : lodsb al, byte ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x0000000000164560 : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; add dh, dh ; ret 0x7501
0x00000000001897ad : lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; je 0x189788 ; jmp 0x1897b3
0x000000000018bcdd : lodsb al, byte ptr [rsi] ; add dword ptr [rax], eax ; xor al, -0xc ; jmp rsp
0x00000000001a3a9c : lodsb al, byte ptr [rsi] ; add qword ptr [rax], rax ; mov sil, dl ; call qword ptr [rdx]
0x00000000001a179c : lodsb al, byte ptr [rsi] ; and eax, 0xc7700001 ; int1 ; call qword ptr [rbx]
0x0000000000188601 : lodsb al, byte ptr [rsi] ; cld ; call qword ptr [rax]
0x00000000001887fd : lodsb al, byte ptr [rsi] ; cld ; jmp qword ptr [rax]
0x00000000001886c1 : lodsb al, byte ptr [rsi] ; cld ; jmp rdx
0x0000000000189efc : lodsb al, byte ptr [rsi] ; in al, 0 ; add ch, cl ; mov dh, ch ; call rsp
0x0000000000197b39 : lodsb al, byte ptr [rsi] ; in eax, dx ; call qword ptr [rcx]
0x000000000018b354 : lodsb al, byte ptr [rsi] ; insb byte ptr es:[rdi], dx ; add dword ptr [rax], eax ; ret -0xf
0x000000000018e304 : lodsb al, byte ptr [rsi] ; lahf ; add al, byte ptr [rax] ; mov ah, -0x59 ; stc ; jmp rsp
0x00000000001ad39c : lodsb al, byte ptr [rsi] ; loope 0x1ad3a0 ; add byte ptr [rax], al ; sti ; cmc ; call qword ptr [rax]
0x000000000017d028 : lodsb al, byte ptr [rsi] ; mov bl, -6 ; dec esp ; mov bl, -6 ; jmp rsp
0x000000000018e614 : lodsb al, byte ptr [rsi] ; mov eax, 0x1ec40002 ; cli ; call rsp
0x000000000007be64 : lodsb al, byte ptr [rsi] ; nop dword ptr [rax] ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00000000001391a4 : lodsb al, byte ptr [rsi] ; or al, 0 ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x000000000017755d : lodsb al, byte ptr [rsi] ; or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x000000000019d89c : lodsb al, byte ptr [rsi] ; out 0, al ; add al, ah ; sahf ; out dx, al ; jmp qword ptr [rcx]
0x0000000000117d90 : lodsb al, byte ptr [rsi] ; ret 0x2a
0x0000000000189a94 : lodsb al, byte ptr [rsi] ; rol byte ptr [rax], 0 ; in al, 0x4d ; in eax, dx ; jmp rsp
0x0000000000187489 : lodsb al, byte ptr [rsi] ; std ; call qword ptr [rcx]
0x0000000000047dec : lodsd eax, dword ptr [rsi] ; add byte ptr [rax + 0x63], cl ; ror byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x000000000003def4 : lodsd eax, dword ptr [rsi] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x00000000000be41f : lodsd eax, dword ptr [rsi] ; and al, 0x30 ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x1917
0x00000000001887f9 : lodsd eax, dword ptr [rsi] ; cld ; call qword ptr [rax + 0x20fffcac]
0x0000000000188639 : lodsd eax, dword ptr [rsi] ; cld ; call rsi
0x0000000000188635 : lodsd eax, dword ptr [rsi] ; cld ; inc dword ptr [rsi + 0xffffffffffffffad] ; cld ; call rsi
0x00000000001a6951 : lodsd eax, dword ptr [rsi] ; hlt ; jmp qword ptr [rdi]
0x0000000000192dcc : lodsd eax, dword ptr [rsi] ; mov ch, dl ; jmp qword ptr [rdx]
0x000000000010121f : lodsd eax, dword ptr [rsi] ; mov edx, eax ; jmp 0x101214
0x000000000013cd10 : lodsd eax, dword ptr [rsi] ; or al, 0 ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x0000000000038c82 : lodsd eax, dword ptr [rsi] ; ret
0x0000000000187491 : lodsd eax, dword ptr [rsi] ; std ; jmp qword ptr [rsi]
0x00000000000a60f5 : lodsq rax, qword ptr [rsi] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x0000000000117251 : loop 0x1171de ; or cl, byte ptr [rax + 0xffffffffffffff83] ; ret -0x72fc
0x000000000011c06f : loop 0x11c068 ; ret -0x3fff
0x0000000000126a7c : loop 0x126afd ; movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x00000000001371eb : loop 0x13723a ; add ecx, ebx ; call rax
0x000000000014d38a : loop 0x14d37f ; movq qword ptr [rdi + 0xfffffffffffffff0], mm1 ; ret
0x000000000014fe5a : loop 0x14fe4f ; movq qword ptr [rdi + 0xfffffffffffffff0], mm1 ; ret
0x000000000015297a : loop 0x15296f ; movq qword ptr [rdi + 0xfffffffffffffff0], mm1 ; ret
0x00000000001778fa : loop 0x177948 ; add ch, byte ptr [ebp + ebp*2 + 0x5b] ; ret 0x6f9
0x0000000000177f7d : loop 0x177f6c ; dec dword ptr [rdx] ; in eax, dx ; jmp rdi
0x0000000000177f81 : loop 0x177f70 ; jmp rdi
0x0000000000179195 : loop 0x179188 ; jmp rax
0x000000000017919d : loop 0x179190 ; inc dword ptr [rax] ; jrcxz 0x179194 ; call qword ptr [rax]
0x0000000000187721 : loop 0x18771e ; jmp qword ptr [rax]
0x0000000000187741 : loop 0x18773e ; jmp rax
0x00000000001877c5 : loop 0x1877c2 ; call rax
0x0000000000196434 : loop 0x1964a7 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001acddc : loop 0x1ace45 ; cmc ; jmp qword ptr [rdx]
0x00000000001ad4b5 : loop 0x1ad4b8 ; add byte ptr [rax + 0xfffffffffffffffa], bh ; cmc ; jmp rsp
0x0000000000021f59 : loop 0x21f5f ; lea rdi, qword ptr [r14 + rdx] ; call rax
0x00000000000025c5 : loop 0x259d ; ret 0x23cb
0x00000000000376e9 : loop 0x376ec ; jne 0x376f8 ; xor eax, eax ; nop ; ret
0x000000000003c977 : loop 0x3c999 ; mov eax, eax ; or rax, rdx ; ret
0x000000000004bec1 : loop 0x4bf04 ; call qword ptr [rbx + rax*8]
0x000000000004db62 : loop 0x4db66 ; add byte ptr [rbx + 0xffffffff850f01c0], al ; ret -4
0x000000000005ec32 : loop 0x5ebbf ; or cl, byte ptr [rax + 0xffffffffffffff83] ; ret -0x72fc
0x0000000000063766 : loop 0x63751 ; scasb al, byte ptr es:[rdi] ; ret
0x000000000008546f : loop 0x85470 ; dec dword ptr [rax + 0xffffffffffffff89] ; ret 0xcb8
0x00000000000861b4 : loop 0x86202 ; mov edi, edi ; call rax
0x0000000000098b4d : loop 0x98b80 ; shr byte ptr [rcx], -0x38 ; ret
0x000000000009e59a : loop 0x9e5a1 ; add byte ptr [rax], al ; ret
0x00000000000bb076 : loop 0xbb087 ; ret 0x144
0x00000000000bb341 : loop 0xbb304 ; cli ; add ch, byte ptr [rcx] ; ret 0x48d
0x00000000000c6158 : loop 0xc6142 ; ret -0x57
0x00000000000c6d92 : loop 0xc6dc5 ; rol byte ptr [rbx + 0xffffffff940f01fa], -0x40 ; ret
0x00000000000dc7cc : loop 0xdc7d0 ; xor esi, esi ; call 0x8d150
0x00000000000e4d40 : loop 0xe4d43 ; je 0xe4d47 ; mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x00000000000e5010 : loop 0xe5013 ; je 0xe5017 ; mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x0000000000136d64 : loope 0x136dae ; add esp, 0x58 ; ret
0x000000000014d2fa : loope 0x14d2ef ; movq qword ptr [rdi + 0xfffffffffffffff0], mm1 ; ret
0x000000000014fdca : loope 0x14fdbf ; movq qword ptr [rdi + 0xfffffffffffffff0], mm1 ; ret
0x00000000001528ea : loope 0x1528df ; movq qword ptr [rdi + 0xfffffffffffffff0], mm1 ; ret
0x000000000015b3fb : loope 0x15b3fe ; add byte ptr [rax], al ; ret
0x000000000016328b : loope 0x16328d ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xf] ; ret
0x0000000000165d6e : loope 0x165dcb ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001792ed : loope 0x1792ec ; jmp qword ptr [rax + 0xffffffffe0fffde3]
0x000000000017a961 : loope 0x17a957 ; call rsp
0x000000000017b689 : loope 0x17b68b ; add byte ptr [rcx], al ; adc byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x00000000001877a1 : loope 0x18779e ; jmp qword ptr [rax]
0x00000000001877c1 : loope 0x1877be ; call rax
0x000000000018ad51 : loope 0x18ad42 ; jmp rsp
0x000000000018d251 : loope 0x18d24a ; jmp rsp
0x000000000018ece5 : loope 0x18ece9 ; add ah, al ; ret -6
0x000000000018eced : loope 0x18ecf1 ; add byte ptr [rsp + rax*8 + 0xfffffffffffffffa], al ; jmp rsp
0x000000000018f1d9 : loope 0x18f1d8 ; jmp rsp
0x00000000001a9d5d : loope 0x1a9d53 ; jmp qword ptr [rdx]
0x00000000001a9da5 : loope 0x1a9d9b ; jmp qword ptr [rdx]
0x00000000001a9ded : loope 0x1a9de3 ; jmp qword ptr [rdx]
0x00000000001a9e35 : loope 0x1a9e2b ; jmp qword ptr [rdx]
0x00000000001a9ec5 : loope 0x1a9ebb ; jmp qword ptr [rdx]
0x00000000001ac231 : loope 0x1ac228 ; call qword ptr [rcx]
0x00000000001ad385 : loope 0x1ad388 ; add byte ptr [rax], cl ; sti ; cmc ; call qword ptr [rax]
0x00000000001ad39d : loope 0x1ad3a0 ; add byte ptr [rax], al ; sti ; cmc ; call qword ptr [rax]
0x00000000001ad3b5 : loope 0x1ad3b8 ; add al, bh ; cli ; cmc ; call qword ptr [rax]
0x00000000001ad3cd : loope 0x1ad3d0 ; add al, dh ; cli ; cmc ; call qword ptr [rax]
0x00000000001b6bce : loope 0x1b6c04 ; idiv edi ; sbb al, 0xd ; xchg eax, ebx ; xor al, -9 ; jmp qword ptr [rdx]
0x000000000002350f : loope 0x23559 ; mov edx, ebp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x0000000000023763 : loope 0x23779 ; cmp al, byte ptr [rax] ; ret
0x00000000000382a6 : loope 0x38260 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000038386 : loope 0x38340 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000038b17 : loope 0x38b65 ; mov dword ptr [rdi], ecx ; ret
0x0000000000038b48 : loope 0x38b96 ; mov dword ptr [rdi + 0xfffffffffffffff8], ecx ; ret
0x0000000000038bbd : loope 0x38c0b ; mov dword ptr [rdi + 0xfffffffffffffff0], ecx ; ret
0x000000000003fcc7 : loope 0x3fcc8 ; dec dword ptr [rax + 0xffffffffffffff89] ; ret
0x0000000000070ecb : loope 0x70f15 ; mov eax, dword ptr [rax + 0x48] ; xor edx, edx ; pop r12 ; jmp rax
0x0000000000071e11 : loope 0x71de2 ; mov dword ptr [rdi], ecx ; ret
0x000000000009278b : loope 0x92794 ; movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x00000000000a1da9 : loope 0xa1e11 ; nop dword ptr [rax + rax] ; ret
0x00000000000a253e : loope 0xa253f ; add eax, dword ptr [rax] ; add byte ptr [rdi], cl ; scasd eax, dword ptr es:[rdi] ; ret -0x7cbf
0x00000000000a27e7 : loope 0xa27a1 ; adc byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000000a3b2e : loope 0xa3b3f ; je 0xa3b50 ; ret
0x00000000000be01d : loope 0xbdfa8 ; ret -0x9cf
0x00000000000e1627 : loope 0xe162a ; ret
0x00000000000f4445 : loope 0xf4473 ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000010865b : loopne 0x10865e ; ret
0x0000000000108d88 : loopne 0x108d96 ; cmp eax, 4 ; je 0x108d90 ; ret
0x0000000000108ed7 : loopne 0x108ee5 ; pop r12 ; ret
0x000000000010d230 : loopne 0x10d23a ; or eax, esi ; bswap eax ; ret
0x000000000010d241 : loopne 0x10d253 ; movzx esi, si ; or eax, esi ; bswap eax ; ret
0x00000000001153d8 : loopne 0x115435 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000115477 : loopne 0x1154d4 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000001183d4 : loopne 0x1183ce ; add eax, 0x10 ; ret
0x0000000000118c4e : loopne 0x118c54 ; add eax, 8 ; ret
0x0000000000118deb : loopne 0x118df0 ; cdqe ; shr rax, 4 ; ret
0x000000000011e22d : loopne 0x11e231 ; pop r12 ; sub eax, 1 ; pop r13 ; ret
0x000000000012b9b7 : loopne 0x12b9b9 ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x0000000000143d01 : loopne 0x143d12 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x0000000000143e51 : loopne 0x143e62 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x0000000000143fa1 : loopne 0x143fb2 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x00000000001440f1 : loopne 0x144102 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x0000000000144241 : loopne 0x144252 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x0000000000144391 : loopne 0x1443a2 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x00000000001444e1 : loopne 0x1444f2 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x000000000014462f : loopne 0x144640 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x0000000000144781 : loopne 0x144792 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x00000000001448d1 : loopne 0x1448e2 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x0000000000144a21 : loopne 0x144a32 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x0000000000144b71 : loopne 0x144b82 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x0000000000144cc1 : loopne 0x144cd2 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x0000000000144e11 : loopne 0x144e22 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x0000000000144f61 : loopne 0x144f72 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x00000000001466d1 : loopne 0x1466e2 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x0000000000146821 : loopne 0x146832 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x0000000000146971 : loopne 0x146982 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x0000000000146ac1 : loopne 0x146ad2 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x0000000000146c11 : loopne 0x146c22 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x0000000000146d61 : loopne 0x146d72 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x0000000000146eb1 : loopne 0x146ec2 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x0000000000146fff : loopne 0x147010 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x0000000000147151 : loopne 0x147162 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x00000000001472a1 : loopne 0x1472b2 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x00000000001473f1 : loopne 0x147402 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x0000000000147541 : loopne 0x147552 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x0000000000147691 : loopne 0x1476a2 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x00000000001477e1 : loopne 0x1477f2 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x0000000000147931 : loopne 0x147942 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x00000000001490a1 : loopne 0x1490b2 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x00000000001491f1 : loopne 0x149202 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x0000000000149341 : loopne 0x149352 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x0000000000149491 : loopne 0x1494a2 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x00000000001495e1 : loopne 0x1495f2 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x0000000000149731 : loopne 0x149742 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x0000000000149881 : loopne 0x149892 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x00000000001499cf : loopne 0x1499e0 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x0000000000149b21 : loopne 0x149b32 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x0000000000149c71 : loopne 0x149c82 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x0000000000149dc1 : loopne 0x149dd2 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x0000000000149f11 : loopne 0x149f22 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x000000000014a061 : loopne 0x14a072 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x000000000014a1b1 : loopne 0x14a1c2 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x000000000014a301 : loopne 0x14a312 ; sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x0000000000174ed4 : loopne 0x174eae ; cld ; test al, -0x69 ; xchg eax, esp ; ret
0x00000000001790cc : loopne 0x1790d8 ; int1 ; jmp qword ptr [rax]
0x0000000000179224 : loopne 0x1791ac ; cld ; inc dword ptr [rax] ; mov ah, bh ; jmp qword ptr [rax]
0x0000000000179204 : loopne 0x179283 ; cld ; inc dword ptr [rax] ; jg 0x179207 ; jmp qword ptr [rax]
0x00000000001792c4 : loopne 0x179290 ; std ; jmp qword ptr [rax]
0x00000000001792d4 : loopne 0x1792a9 ; std ; jmp qword ptr [rax]
0x00000000001792e4 : loopne 0x1792c2 ; std ; jmp qword ptr [rax]
0x00000000001792f4 : loopne 0x1792db ; std ; jmp qword ptr [rax]
0x000000000017957c : loopne 0x1795e2 ; repne inc dword ptr [rax] ; jmp qword ptr gs:[rax]
0x0000000000179614 : loopne 0x17967f ; repne inc dword ptr [rax] ; push -0xe ; jmp qword ptr [rax]
0x00000000001872e4 : loopne 0x187307 ; sti ; call rax
0x0000000000187388 : loopne 0x1873ed ; sti ; call qword ptr [rax]
0x000000000018771d : loopne 0x18771a ; inc dword ptr [rax + 0xffffffffffffffe2] ; sti ; jmp qword ptr [rax]
0x0000000000187744 : loopne 0x187729 ; sti ; jmp rax
0x0000000000187748 : loopne 0x18772f ; sti ; jmp rax
0x000000000018773d : loopne 0x18773a ; call qword ptr [rax]
0x0000000000187984 : loopne 0x187990 ; cld ; jmp rax
0x0000000000187988 : loopne 0x187996 ; cld ; jmp rax
0x000000000018798c : loopne 0x18799c ; cld ; call qword ptr [rax + 0xffffffffd0fffbe8]
0x0000000000187a20 : loopne 0x187a54 ; cld ; jmp rax
0x0000000000187a24 : loopne 0x187a5a ; cld ; jmp rax
0x0000000000187a28 : loopne 0x187a60 ; cld ; jmp rax
0x000000000019c3f4 : loopne 0x19c436 ; out dx, al ; jmp qword ptr [rdx]
0x000000000019d8a0 : loopne 0x19d840 ; out dx, al ; jmp qword ptr [rcx]
0x00000000001a0f20 : loopne 0x1a0f61 ; int1 ; jmp qword ptr [rcx]
0x00000000001a6120 : loopne 0x1a6136 ; stc ; call qword ptr [rax]
0x00000000001a82e0 : loopne 0x1a82ed ; cmc ; jmp qword ptr [rcx]
0x00000000001a8bd0 : loopne 0x1a8bfe ; cmc ; jmp qword ptr [rcx]
0x00000000001a8f60 : loopne 0x1a8f94 ; cmc ; jmp qword ptr [rcx]
0x00000000001a9040 : loopne 0x1a9077 ; cmc ; jmp qword ptr [rax]
0x00000000001a9e7d : loopne 0x1a9e73 ; jmp qword ptr [rdx]
0x00000000001ab520 : loopne 0x1ab4f4 ; cmc ; jmp qword ptr [rsi]
0x00000000001abb00 : loopne 0x1abaa9 ; sti ; jmp qword ptr [rsi]
0x00000000001ac5b0 : loopne 0x1ac597 ; cmc ; call qword ptr [rax]
0x00000000001ad2cd : loopne 0x1ad2d0 ; add byte ptr [rax], dl ; cli ; cmc ; call qword ptr [rax]
0x00000000001ad2e5 : loopne 0x1ad2e8 ; add byte ptr [rax], cl ; cli ; cmc ; call qword ptr [rax]
0x00000000001b0015 : loopne 0x1b000c ; jmp qword ptr [rdx]
0x00000000001b00ad : loopne 0x1b00a4 ; jmp qword ptr [rdx]
0x00000000001b00f5 : loopne 0x1b00ec ; jmp qword ptr [rdx]
0x00000000001b0155 : loopne 0x1b014c ; jmp qword ptr [rdx]
0x00000000001b019d : loopne 0x1b0194 ; jmp qword ptr [rdx]
0x00000000001b1190 : loopne 0x1b11e3 ; sti ; call rsi
0x000000000002fcc3 : loopne 0x2fccd ; movzx eax, ax ; ret
0x000000000002fd03 : loopne 0x2fd07 ; movzx eax, ax ; ret
0x000000000002fda3 : loopne 0x2fda9 ; movzx eax, ax ; ret
0x000000000002fe83 : loopne 0x2fe86 ; ret
0x000000000002fefc : loopne 0x2feff ; ret
0x000000000002ff0c : loopne 0x2ff16 ; movzx eax, ax ; ret
0x000000000002ff4c : loopne 0x2ff50 ; movzx eax, ax ; ret
0x000000000002fed3 : loopne 0x2ff54 ; ret
0x000000000002ffec : loopne 0x2fff2 ; movzx eax, ax ; ret
0x0000000000036705 : loopne 0x3670f ; ret
0x0000000000037844 : loopne 0x3788e ; or dword ptr [rdi], eax ; xor eax, eax ; ret
0x00000000000385cd : loopne 0x385d1 ; sub eax, 1 ; ret
0x0000000000038956 : loopne 0x38999 ; pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000006d5d5 : loopne 0x6d632 ; pop rbp ; pop r12 ; ret
0x000000000006d9a1 : loopne 0x6d9e4 ; pop rsp ; ret
0x000000000006e1b9 : loopne 0x6e216 ; pop rbp ; pop r12 ; ret
0x000000000006e1d9 : loopne 0x6e21c ; pop rsp ; ret
0x000000000006f08f : loopne 0x6f091 ; add byte ptr [rax], al ; jmp rax
0x000000000006f0bb : loopne 0x6f0bd ; add byte ptr [rax], al ; call rax
0x000000000006f0ed : loopne 0x6f0ef ; add byte ptr [rax], al ; call rax
0x000000000006f12f : loopne 0x6f131 ; add byte ptr [rax], al ; jmp rax
0x0000000000070de4 : loopne 0x70e1a ; add byte ptr [rax + 0xffffffffffffffc7], cl ; ret -1
0x00000000000731f6 : loopne 0x73253 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000073267 : loopne 0x732c4 ; pop rbp ; pop r12 ; ret
0x0000000000074276 : loopne 0x74279 ; ret
0x0000000000074286 : loopne 0x74289 ; ret
0x0000000000079f8a : loopne 0x79fcd ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000007a038 : loopne 0x7a07b ; pop rsp ; pop r13 ; pop r14 ; ret
0x000000000007ce1d : loopne 0x7ce7a ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007dd98 : loopne 0x7ddf5 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000080d46 : loopne 0x80ccd ; rol byte ptr [rcx + 0xf], -0x6c ; ret
0x0000000000086bb8 : loopne 0x86c15 ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000086d8d : loopne 0x86dea ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008d20f : loopne 0x8d204 ; ret
0x00000000000929fc : loopne 0x92a05 ; movsxd r8, dword ptr [rax + r8*4] ; add rax, r8 ; jmp rax
0x000000000009493c : loopne 0x9497f ; pop rsp ; ret
0x0000000000094937 : loopne 0x94994 ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x000000000009e69c : loopne 0x9e6a2 ; add byte ptr [rax], al ; ret
0x00000000000a279d : loopne 0xa27ae ; movsxd rsi, dword ptr [rdx + rax*4] ; add rdx, rsi ; jmp rdx
0x00000000000a27dd : loopne 0xa27ee ; movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x00000000000a82d8 : loopne 0xa82e9 ; xchg eax, esp ; ret 0x294c
0x00000000000ad4da : loopne 0xad4eb ; xchg eax, esp ; ret 0x294c
0x00000000000af884 : loopne 0xaf8c7 ; pop rsp ; ret
0x00000000000af956 : loopne 0xaf999 ; pop rsp ; pop r13 ; ret
0x00000000000b231c : loopne 0xb235f ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000b2308 : loopne 0xb2365 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000b3546 : loopne 0xb3549 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000c048f : loopne 0xc0496 ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x74b8
0x000000000000c280 : loopne 0xc264 ; adc al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000000c2e30 : loopne 0xc2e8d ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x00000000000d2932 : loopne 0xd2936 ; pop rbp ; ret
0x00000000000d2a19 : loopne 0xd2a1c ; nop dword ptr [rax + rax] ; pop rbx ; ret
0x00000000000ec5e6 : loopne 0xec643 ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f27f8 : loopne 0xf2855 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000f45c9 : loopne 0xf45f7 ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x3015
0x00000000000f599e : loopne 0xf5929 ; ret
0x00000000000f8ca6 : loopne 0xf8d03 ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000fe342 : loopne 0xfe34c ; movzx eax, ax ; ret
0x00000000000fe482 : loopne 0xfe485 ; ret
0x00000000000fe522 : loopne 0xfe526 ; movzx eax, ax ; ret
0x00000000000fe832 : loopne 0xfe838 ; movzx eax, ax ; ret
0x00000000000fec5b : loopne 0xfec65 ; movzx eax, ax ; ret
0x00000000000fed7b : loopne 0xfed7e ; ret
0x00000000000fedfb : loopne 0xfedff ; movzx eax, ax ; ret
0x00000000000ff0bb : loopne 0xff0c1 ; movzx eax, ax ; ret
0x0000000000123fb7 : mov ah, -0x11 ; dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x76b7
0x0000000000189f9c : mov ah, -0x18 ; add byte ptr [rax], al ; xchg eax, esp ; nop ; out dx, al ; jmp rsp
0x000000000018e450 : mov ah, -0x31 ; stc ; call rsp
0x000000000019b4a4 : mov ah, -0x3e ; add byte ptr [rax], al ; sub byte ptr [rax], ch ; out dx, al ; call qword ptr [rdx]
0x000000000018983c : mov ah, -0x50 ; add byte ptr [rax], al ; xor al, -0x1a ; jmp 0x189843
0x0000000000188760 : mov ah, -0x51 ; cld ; inc dword ptr [rdi + rbp*4 + 0xfffffffffffffffc] ; call rsp
0x000000000018e308 : mov ah, -0x59 ; stc ; jmp rsp
0x0000000000174d90 : mov ah, -0x5b ; ret
0x00000000001a8ca4 : mov ah, -0x66 ; add dword ptr [rax], eax ; sbb byte ptr [rsi], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a89a4 : mov ah, -0x69 ; add dword ptr [rax], eax ; test al, 0x2a ; cmc ; jmp qword ptr [rcx]
0x00000000001a88a4 : mov ah, -0x6a ; add dword ptr [rax], eax ; fsubr dword ptr [rax] ; cmc ; call qword ptr [rax]
0x0000000000189f38 : mov ah, -0x76 ; out dx, al ; call rsp
0x0000000000188268 : mov ah, -0x78 ; cld ; inc dword ptr [rax + rcx*4 + 0xfffffffffffffffc] ; call rsp
0x000000000018a314 : mov ah, -1 ; add byte ptr [rax], al ; push rsp ; ret
0x000000000019f0a4 : mov ah, -2 ; add byte ptr [rax], al ; js 0x19f090 ; out dx, eax ; jmp qword ptr [rbx]
0x000000000018e568 : mov ah, -4 ; stc ; call rsp
0x000000000018f134 : mov ah, -8 ; add dword ptr [rax], eax ; xor al, -0x29 ; std ; jmp rsp
0x00000000001247ff : mov ah, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x00000000000ad7ab : mov ah, 0 ; or eax, 0x3d8d4800 ; ret 0xd3e
0x00000000001748ea : mov ah, 0x13 ; ret
0x000000000018d5a0 : mov ah, 0x20 ; clc ; call rsp
0x00000000000e2a77 : mov ah, 0x24 ; ret 0
0x000000000018bf40 : mov ah, 0x2a ; cmc ; jmp rsp
0x000000000018d4a4 : mov ah, 0x32 ; add al, byte ptr [rax] ; adc r15b, al ; call rsp
0x000000000018e758 : mov ah, 0x33 ; cli ; jmp rsp
0x000000000018a758 : mov ah, 0x36 ; out dx, eax ; call rsp
0x00000000001a30a4 : mov ah, 0x3e ; add dword ptr [rax], eax ; cmp ah, bh ; int1 ; jmp qword ptr [rcx]
0x00000000001a37a4 : mov ah, 0x45 ; add dword ptr [rax], eax ; xchg rdx, rsi ; jmp qword ptr [rcx]
0x000000000018ad4c : mov ah, 0x4a ; add dword ptr [rax], eax ; adc al, -0x1f ; out dx, eax ; jmp rsp
0x000000000018e860 : mov ah, 0x4f ; cli ; jmp rsp
0x0000000000187d7c : mov ah, 0x60 ; cld ; inc dword ptr [rax + 0xfffffffffffffffc] ; call rsp
0x000000000018ea20 : mov ah, 0x69 ; cli ; jmp rsp
0x000000000018def4 : mov ah, 0x7c ; add al, byte ptr [rax] ; xor al, 0x12 ; stc ; jmp rsp
0x000000000018bd98 : mov ah, 0x7d ; hlt ; jmp rsp
0x00000000001af4a4 : mov ah, 2 ; add al, byte ptr [rax] ; clc ; sub dh, dh ; jmp qword ptr [rcx]
0x00000000000f7260 : mov ah, 2 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000018d3e0 : mov ah, 4 ; clc ; jmp rsp
0x00000000001b888c : mov ah, 5 ; add byte ptr [rax], al ; ret
0x00000000001b019c : mov ah, al ; cmc ; jmp qword ptr [rdx]
0x0000000000188131 : mov ah, bh ; call qword ptr [rsi + 0x26fffc87]
0x000000000018826d : mov ah, bh ; call rsp
0x0000000000188269 : mov ah, bh ; inc dword ptr [rax + rcx*4 + 0xfffffffffffffffc] ; call rsp
0x0000000000179229 : mov ah, bh ; jmp qword ptr [rax]
0x00000000001746e4 : mov ah, bl ; push rsi ; ret
0x000000000018a1c9 : mov al, -0x12 ; call rsp
0x0000000000176b96 : mov al, -0x12 ; fcmovb st(0), st(3) ; ret
0x00000000001a79b0 : mov al, -0x23 ; hlt ; jmp qword ptr [rcx]
0x00000000001ab4f0 : mov al, -0x2e ; cmc ; jmp qword ptr [rsi]
0x00000000001a19e0 : mov al, -0x36 ; int1 ; jmp qword ptr [rax]
0x00000000001885ec : mov al, -0x52 ; cld ; inc dword ptr [rax + 0xffffffffffffffae] ; cld ; call rax
0x0000000000188804 : mov al, -0x55 ; cld ; inc dword ptr [rax + 0xffffffffffffffab] ; cld ; call rax
0x0000000000188818 : mov al, -0x59 ; cld ; jmp qword ptr [rax]
0x0000000000188a04 : mov al, -0x5f ; cld ; jmp qword ptr [rax]
0x000000000019eeb0 : mov al, -0x64 ; out dx, eax ; call qword ptr [rdi]
0x0000000000179260 : mov al, -0x66 ; cld ; jmp qword ptr [rax]
0x0000000000179180 : mov al, -0x67 ; int1 ; call rax
0x00000000001880f4 : mov al, -0x79 ; cld ; inc dword ptr [rax + 0xffffffffffffff87] ; cld ; call rax
0x00000000001981d4 : mov al, -0x7a ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001885e1 : mov al, -4 ; call qword ptr [rax + 0x20fffcaf]
0x00000000001887d9 : mov al, -4 ; call qword ptr [rax]
0x000000000018869d : mov al, -4 ; call rdx
0x0000000000188699 : mov al, -4 ; inc dword ptr [rdx + 0xffffffffffffffb0] ; cld ; call rdx
0x000000000018861d : mov al, -4 ; jmp rsi
0x000000000018dc91 : mov al, -8 ; jmp rsp
0x00000000000cd771 : mov al, 0 ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x76b4
0x000000000018983d : mov al, 0 ; add byte ptr [rsi], dh ; jmp 0x189843
0x00000000001790c8 : mov al, 0x20 ; int1 ; jmp rax
0x000000000012220c : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; jmp rcx
0x00000000001221c5 : mov al, 0x23 ; add byte ptr [rax], al ; xor eax, eax ; pop rbp ; jmp rcx
0x00000000001a8760 : mov al, 0x27 ; cmc ; jmp qword ptr [rcx]
0x000000000019b430 : mov al, 0x27 ; out dx, al ; call qword ptr [rsi]
0x0000000000128c19 : mov al, 0x48 ; add eax, ecx ; jmp rax
0x0000000000064e7f : mov al, 0x48 ; add eax, edx ; jmp rax
0x00000000001283b9 : mov al, 0x48 ; add eax, esi ; jmp rax
0x00000000000f8925 : mov al, 0x48 ; mov dword ptr [rbp + 0xffffffffffffff98], eax ; mov rdx, rax ; jmp 0xf8954
0x00000000000f89f6 : mov al, 0x48 ; mov dword ptr [rbp + 0xffffffffffffff98], eax ; mov rdx, rax ; jmp 0xf8a26
0x000000000012fc48 : mov al, 0x48 ; shr edx, 3 ; add rax, rcx ; jmp rax
0x0000000000104857 : mov al, 0x4c ; mov edx, dword ptr [rbp + 0xffffffffffffffb8] ; sete dl ; jmp 0x1047ea
0x0000000000178ed8 : mov al, 0x52 ; out dx, eax ; inc eax ; push rdx ; out dx, eax ; call qword ptr [rax]
0x0000000000188044 : mov al, 0x55 ; cld ; jmp qword ptr [rax]
0x0000000000187e40 : mov al, 0x56 ; cld ; jmp qword ptr [rax]
0x00000000001790f4 : mov al, 0x5d ; int1 ; inc eax ; pop rdi ; int1 ; call rax
0x0000000000187c08 : mov al, 0x5f ; cld ; inc dword ptr [rax + 0x5f] ; cld ; call rsi
0x0000000000187de0 : mov al, 0x63 ; cld ; inc dword ptr [rax + 0x63] ; cld ; call rax
0x00000000001795c0 : mov al, 0x67 ; repne jmp rax ; call qword ptr [eax]
0x00000000001a5fe0 : mov al, 0x6c ; hlt ; jmp qword ptr [rcx]
0x0000000000195af4 : mov al, 0x6e ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001923c6 : mov al, 0x6f ; ljmp 0xa0d1cff, -0x1592 ; jmp qword ptr [rdx]
0x00000000001a82b0 : mov al, 0xb ; cmc ; jmp qword ptr [rcx]
0x000000000012ef57 : mov al, 1 ; ret
0x000000000018e57d : mov al, 2 ; add ah, al ; add dl, bh ; jmp rsp
0x000000000009e6cc : mov al, 4 ; add byte ptr [rax], al ; ret
0x00000000000f6e44 : mov al, 6 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x000000000009e2cc : mov al, 8 ; add byte ptr [rax], al ; ret
0x0000000000189155 : mov al, byte ptr [rax] ; add ah, al ; fldl2e ; call rsp
0x00000000000fe249 : mov al, byte ptr [rbx] ; add al, 0x16 ; ret
0x000000000009a7fb : mov al, byte ptr [rcx + 2] ; mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000009a829 : mov al, byte ptr [rcx + 4] ; mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000009a8ad : mov al, byte ptr [rcx + 8] ; mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x000000000015d7b0 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x000000000009a7d5 : mov al, byte ptr [rcx] ; mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000009a7e5 : mov ax, word ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000001983b1 : mov bh, -0x13 ; jmp qword ptr [rdx]
0x000000000019aa2c : mov bh, -0x14 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000010121d : mov bh, -0x15 ; lodsd eax, dword ptr [rsi] ; mov edx, eax ; jmp 0x101214
0x000000000003d988 : mov bh, -0x15 ; ret 0x1f0f
0x00000000000a38b5 : mov bh, -0x34 ; or eax, dword ptr [rax] ; ret
0x000000000002fcc6 : mov bh, -0x40 ; ret
0x0000000000175bc4 : mov bh, -0x4c ; mov edi, dword ptr [rdx] ; ret
0x00000000001aebb4 : mov bh, -0x79 ; cmc ; jmp qword ptr [rdx]
0x000000000010d244 : mov bh, -0xa ; or eax, esi ; bswap eax ; ret
0x00000000001a6d31 : mov bh, -0xc ; call rdi
0x0000000000003748 : mov bh, -6 ; add ebx, ebp ; in al, -0x12 ; jne 0x372a ; ret 0x975
0x000000000014e0c1 : mov bh, 0x16 ; mov word ptr [rdi], dx ; ret
0x00000000000bdf87 : mov bh, 0x43 ; adc byte ptr [rax + rcx*4 + 0x63], al ; adc cl, byte ptr [rax + 1] ; ret
0x0000000000034c03 : mov bh, 0x48 ; add edx, edi ; jmp rdx
0x0000000000163128 : mov bh, 0x48 ; lea eax, dword ptr [rdi + 7] ; ret
0x00000000001a1974 : mov bh, 0x75 ; int1 ; jmp qword ptr [rdx]
0x00000000000d2fe3 : mov bh, 0x79 ; ret 0x6348
0x000000000002fcbf : mov bh, 4 ; js 0x2fc46 ; loopne 0x2fccd ; movzx eax, ax ; ret
0x000000000002fcff : mov bh, 4 ; js 0x2fc86 ; loopne 0x2fd07 ; movzx eax, ax ; ret
0x000000000002fd9f : mov bh, 4 ; js 0x2fd26 ; loopne 0x2fda9 ; movzx eax, ax ; ret
0x000000000002fe7f : mov bh, 4 ; js 0x2fe06 ; loopne 0x2fe86 ; ret
0x000000000002fef8 : mov bh, 4 ; js 0x2fe7f ; loopne 0x2feff ; ret
0x000000000002ff08 : mov bh, 4 ; js 0x2fe8f ; loopne 0x2ff16 ; movzx eax, ax ; ret
0x000000000002ff48 : mov bh, 4 ; js 0x2fecf ; loopne 0x2ff50 ; movzx eax, ax ; ret
0x000000000002ffe8 : mov bh, 4 ; js 0x2ff6f ; loopne 0x2fff2 ; movzx eax, ax ; ret
0x00000000000fe33e : mov bh, 4 ; js 0xfe2c5 ; loopne 0xfe34c ; movzx eax, ax ; ret
0x00000000000fe47e : mov bh, 4 ; js 0xfe405 ; loopne 0xfe485 ; ret
0x00000000000fe51e : mov bh, 4 ; js 0xfe4a5 ; loopne 0xfe526 ; movzx eax, ax ; ret
0x00000000000fe82e : mov bh, 4 ; js 0xfe7b5 ; loopne 0xfe838 ; movzx eax, ax ; ret
0x00000000000fec57 : mov bh, 4 ; js 0xfebde ; loopne 0xfec65 ; movzx eax, ax ; ret
0x00000000000fed77 : mov bh, 4 ; js 0xfecfe ; loopne 0xfed7e ; ret
0x00000000000fedf7 : mov bh, 4 ; js 0xfed7e ; loopne 0xfedff ; movzx eax, ax ; ret
0x00000000000ff0b7 : mov bh, 4 ; js 0xff03e ; loopne 0xff0c1 ; movzx eax, ax ; ret
0x00000000001772d3 : mov bh, 6 ; movsd dword ptr es:[rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000f1705 : mov bh, 7 ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x00000000000e5191 : mov bh, 7 ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000188199 : mov bh, ah ; jmp qword ptr [rdx]
0x00000000001880dd : mov bh, ah ; jmp rax
0x00000000001b4f39 : mov bh, dh ; call qword ptr [rdx]
0x0000000000178fcd : mov bl, -0x10 ; call rax
0x0000000000001b0f : mov bl, -0x12 ; enter 0x59e7, 0x5b ; ret 0x2a63
0x00000000000dc7fc : mov bl, -0x60 ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret -0x72b8
0x0000000000176ca3 : mov bl, -0x72 ; ret -0x2327
0x00000000001a2854 : mov bl, -0x78 ; int1 ; jmp qword ptr [rdx]
0x00000000000fa439 : mov bl, -0x7d ; sub al, 0 ; add rsp, 8 ; ret
0x00000000000e145b : mov bl, -0x80 ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret -0x72b8
0x00000000001b0c19 : mov bl, -0xa ; call qword ptr [rax]
0x000000000017d029 : mov bl, -6 ; dec esp ; mov bl, -6 ; jmp rsp
0x000000000017d02d : mov bl, -6 ; jmp rsp
0x0000000000003aa1 : mov bl, -9 ; adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000164a1e : mov bl, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000008676d : mov bl, 0x33 ; add byte ptr [rcx], al ; add byte ptr [rax], al ; add byte ptr [rcx + 0x5c], al ; ret
0x00000000000fc88c : mov bl, 0x66 ; nop ; xor eax, eax ; ret
0x0000000000195aac : mov bl, 0x6e ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000f6889 : mov bl, 0xa ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, rbp ; call rbx
0x00000000001ab5c8 : mov bl, dl ; cmc ; jmp qword ptr [rsi]
0x0000000000192ea4 : mov bpl, dl ; jmp qword ptr [rdx]
0x00000000000986ad : mov byte ptr [r10 + 1], 0 ; ret
0x0000000000109b1d : mov byte ptr [r11 + 1], 0 ; mov rax, rdi ; pop rbx ; ret
0x0000000000130c45 : mov byte ptr [r8 + 1], r9b ; ret
0x00000000000cb9b1 : mov byte ptr [r9 + 0xffffffffffffff89], r8b ; ret -0x247c
0x00000000000f3e92 : mov byte ptr [r9 + 0xffffffffffffffff], 0 ; ret
0x00000000000f599a : mov byte ptr [r9 + r15 + 0xffffffffffffffe0], -0x77 ; ret
0x00000000000311e9 : mov byte ptr [rax + 0x29], cl ; ret -0x7cb8
0x000000000002ecac : mov byte ptr [rax + 0x39], cl ; ret 0xf48
0x00000000000cf122 : mov byte ptr [rax + 0x63], cl ; ret -0x76b8
0x0000000000130c46 : mov byte ptr [rax + 1], cl ; ret
0x00000000000b1554 : mov byte ptr [rax + 1], cl ; ret -0x72b8
0x00000000000498ee : mov byte ptr [rax + 8], 0 ; ret
0x000000000012713c : mov byte ptr [rax + rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x0000000000083554 : mov byte ptr [rax + rbx], dh ; pop rbx ; ret
0x0000000000083553 : mov byte ptr [rax + rbx], sil ; pop rbx ; ret
0x0000000000189b7d : mov byte ptr [rax], 0 ; stosb byte ptr es:[rdi], al ; pop rbp ; in eax, dx ; call rsp
0x00000000000f7a5e : mov byte ptr [rax], 0xa ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000372ff : mov byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; pop rbp ; ret
0x0000000000037384 : mov byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001a9188 : mov byte ptr [rax], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001a8848 : mov byte ptr [rax], ch ; cmc ; jmp qword ptr [rcx]
0x000000000004e20a : mov byte ptr [rax], cl ; jmp 0x4a485
0x000000000009d422 : mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x0000000000118dcb : mov byte ptr [rbp + 3], bh ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000109b1e : mov byte ptr [rbx + 1], 0 ; mov rax, rdi ; pop rbx ; ret
0x00000000000f2f06 : mov byte ptr [rbx], 0 ; mov rax, rbx ; pop rbx ; ret
0x0000000000002f5e : mov byte ptr [rbx], cl ; and bh, byte ptr [rax + 0xffffffffffffffae] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000cb9b2 : mov byte ptr [rcx + 0xffffffffffffff89], al ; ret -0x247c
0x00000000001962ec : mov byte ptr [rcx + 0xffffffffffffffed], dh ; jmp qword ptr [rdx]
0x00000000000f3e93 : mov byte ptr [rcx + 0xffffffffffffffff], 0 ; ret
0x000000000015b473 : mov byte ptr [rcx + 2], dl ; ret
0x000000000015b492 : mov byte ptr [rcx + 4], dl ; ret
0x000000000015b4d3 : mov byte ptr [rcx + 8], dl ; ret
0x0000000000097503 : mov byte ptr [rcx + rax + 0xffffffffffffffc8], cl ; jmp rax
0x000000000002689d : mov byte ptr [rcx + rax], cl ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4101
0x00000000000f599b : mov byte ptr [rcx + rdi + 0xffffffffffffffe0], -0x77 ; ret
0x0000000000096639 : mov byte ptr [rcx], -0x7d ; ret -0x7cff
0x00000000000e20ef : mov byte ptr [rcx], -0x7d ; ret 0x4840
0x0000000000095323 : mov byte ptr [rcx], 0 ; add byte ptr [rcx + 0xffffffffffffff89], cl ; ret
0x0000000000097934 : mov byte ptr [rcx], 0 ; mov qword ptr [rdi], rdx ; ret
0x0000000000097860 : mov byte ptr [rcx], 0 ; mov rcx, rdi ; mov qword ptr [rdx], rcx ; ret
0x000000000009875f : mov byte ptr [rcx], 0xf ; mov dh, 0x46 ; dec dword ptr [rax + 0xffffffffffffff83] ; ret
0x0000000000098867 : mov byte ptr [rcx], al ; jne 0x98850 ; mov rax, rbx ; pop rbx ; ret
0x000000000019dfb0 : mov byte ptr [rcx], al ; ret
0x00000000000717aa : mov byte ptr [rcx], bh ; movzx eax, dil ; ret
0x00000000000717a9 : mov byte ptr [rcx], dil ; movzx eax, dil ; ret
0x000000000015b450 : mov byte ptr [rcx], dl ; ret
0x0000000000098866 : mov byte ptr [rcx], r8b ; jne 0x98850 ; mov rax, rbx ; pop rbx ; ret
0x00000000000a1a9a : mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a003b : mov byte ptr [rdi + 0x10], cl ; lea rax, qword ptr [rdi + 0x11] ; ret
0x000000000009e85b : mov byte ptr [rdi + 0x10], cl ; ret
0x00000000000a1aab : mov byte ptr [rdi + 0x10], cl ; xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x000000000009f1f8 : mov byte ptr [rdi + 0x10], dh ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000009db88 : mov byte ptr [rdi + 0x10], dh ; ret
0x00000000000a1ab0 : mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a1ad2 : mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a1af0 : mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a1b10 : mov byte ptr [rdi + 0x14], ch ; ret
0x000000000009f26e : mov byte ptr [rdi + 0x14], dh ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000009dbde : mov byte ptr [rdi + 0x14], dh ; ret
0x00000000000a00c1 : mov byte ptr [rdi + 0x14], dl ; lea rax, qword ptr [rdi + 0x15] ; ret
0x000000000009e8b1 : mov byte ptr [rdi + 0x14], dl ; ret
0x00000000000a1b31 : mov byte ptr [rdi + 0x14], dl ; xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a1b36 : mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a1b52 : mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a1b72 : mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a1b92 : mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a0143 : mov byte ptr [rdi + 0x18], cl ; lea rax, qword ptr [rdi + 0x19] ; ret
0x000000000009e933 : mov byte ptr [rdi + 0x18], cl ; ret
0x00000000000a1bb3 : mov byte ptr [rdi + 0x18], cl ; xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x000000000009f2f0 : mov byte ptr [rdi + 0x18], dh ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000009dc60 : mov byte ptr [rdi + 0x18], dh ; ret
0x00000000000a1bb8 : mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a1bda : mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a1bf8 : mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a1c18 : mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a1c34 : mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a1c54 : mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a1c74 : mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a1c94 : mov byte ptr [rdi + 0x20], ch ; ret
0x000000000009ea35 : mov byte ptr [rdi + 0x20], cl ; ret
0x00000000000a1cb5 : mov byte ptr [rdi + 0x20], cl ; xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a1cba : mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a1d0a : mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a19e0 : mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a19fe : mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a1a1e : mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a1a40 : mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a1a60 : mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a1a80 : mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000974de : mov byte ptr [rdi + 0xffffffffffffffff], al ; mov dword ptr [rdi + 0xfffffffffffffff9], eax ; mov rax, rdi ; ret
0x000000000014532b : mov byte ptr [rdi + 0xffffffffffffffff], dl ; ret
0x00000000000a1916 : mov byte ptr [rdi + 1], ch ; ret
0x0000000000118942 : mov byte ptr [rdi + 1], dh ; ret
0x0000000000118941 : mov byte ptr [rdi + 1], sil ; ret
0x00000000000975e3 : mov byte ptr [rdi + 2], 0 ; lea rax, qword ptr [rdi + 2] ; ret
0x0000000000097543 : mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x00000000000a1928 : mov byte ptr [rdi + 2], ch ; ret
0x000000000009f0a6 : mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009daa6 : mov byte ptr [rdi + 2], dh ; ret
0x000000000009fec9 : mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000009e779 : mov byte ptr [rdi + 2], dl ; ret
0x00000000000a1939 : mov byte ptr [rdi + 2], dl ; xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a193e : mov byte ptr [rdi + 3], ch ; ret
0x0000000000097602 : mov byte ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000097562 : mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000a1956 : mov byte ptr [rdi + 4], ch ; ret
0x000000000009f0c2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009dac2 : mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000009fef7 : mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000009e797 : mov byte ptr [rdi + 4], dl ; ret
0x00000000000a1967 : mov byte ptr [rdi + 4], dl ; xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a196c : mov byte ptr [rdi + 5], ch ; ret
0x0000000000097589 : mov byte ptr [rdi + 6], 0 ; ret
0x00000000000a197e : mov byte ptr [rdi + 6], ch ; ret
0x0000000000126a82 : mov byte ptr [rdi + 7], al ; ret
0x00000000000a199c : mov byte ptr [rdi + 7], ch ; ret
0x00000000000d17d0 : mov byte ptr [rdi + 8], 0x15 ; mov eax, 1 ; ret
0x00000000000d1796 : mov byte ptr [rdi + 8], 0x16 ; mov eax, 1 ; ret
0x00000000000d1800 : mov byte ptr [rdi + 8], 0x19 ; mov eax, 1 ; ret
0x00000000000d1827 : mov byte ptr [rdi + 8], 0x1a ; mov eax, 2 ; ret
0x00000000000d1870 : mov byte ptr [rdi + 8], 0x1c ; mov eax, 2 ; ret
0x00000000000d185d : mov byte ptr [rdi + 8], 0x1e ; mov eax, 2 ; ret
0x00000000000d17c0 : mov byte ptr [rdi + 8], 1 ; mov eax, 1 ; ret
0x00000000000d17a0 : mov byte ptr [rdi + 8], 2 ; xor eax, eax ; ret
0x00000000000a19a8 : mov byte ptr [rdi + 8], ch ; ret
0x000000000009db03 : mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000009ff49 : mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000009e7d9 : mov byte ptr [rdi + 8], dl ; ret
0x00000000000a19b9 : mov byte ptr [rdi + 8], dl ; xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a19be : mov byte ptr [rdi + 9], ch ; ret
0x0000000000098700 : mov byte ptr [rdi + rcx], -0x4a ; dec dword ptr [rax + 0xffffffffffffff83] ; ret
0x0000000000118abd : mov byte ptr [rdi + rdx], 0 ; pop rbx ; ret
0x0000000000097510 : mov byte ptr [rdi], 0 ; mov rax, rdi ; ret
0x000000000001f5e8 : mov byte ptr [rdi], 0 ; ret
0x00000000000376f8 : mov byte ptr [rdi], 0 ; xor eax, eax ; ret
0x00000000000d17f0 : mov byte ptr [rdi], 0x5b ; mov eax, 1 ; ret
0x000000000010981b : mov byte ptr [rdi], al ; jne 0x109808 ; mov rax, rdi ; ret
0x00000000001099db : mov byte ptr [rdi], al ; jne 0x1099c8 ; mov rax, r10 ; ret
0x00000000000d1849 : mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x000000000019bd7c : mov byte ptr [rdi], ch ; out dx, al ; jmp qword ptr [rdx]
0x00000000000a1902 : mov byte ptr [rdi], ch ; ret
0x0000000000068f7b : mov byte ptr [rdi], cl ; xchg dword ptr [rbx + 0xffffffff89000035], esp ; ret 0x348
0x0000000000097449 : mov byte ptr [rdi], dh ; add rdi, 1 ; mov rax, rdi ; ret
0x000000000009f080 : mov byte ptr [rdi], dh ; lea rax, qword ptr [rdi] ; ret
0x000000000009da80 : mov byte ptr [rdi], dh ; ret
0x000000000009fea2 : mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009e752 : mov byte ptr [rdi], dl ; ret
0x00000000000a1912 : mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x000000000009d5aa : mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x00000000000986ae : mov byte ptr [rdx + 1], 0 ; ret
0x000000000015d7d9 : mov byte ptr [rdx + 2], al ; lea rax, qword ptr [rdx + 2] ; ret
0x000000000009a7fe : mov byte ptr [rdx + 2], al ; mov rax, rdi ; ret
0x000000000015d807 : mov byte ptr [rdx + 4], al ; lea rax, qword ptr [rdx + 4] ; ret
0x000000000009a82c : mov byte ptr [rdx + 4], al ; mov rax, rdi ; ret
0x000000000009d540 : mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x000000000009a8b0 : mov byte ptr [rdx + 8], al ; mov rax, rdi ; ret
0x0000000000111d52 : mov byte ptr [rdx], 0 ; pop r12 ; ret
0x00000000000f8b91 : mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000015d7b2 : mov byte ptr [rdx], al ; lea rax, qword ptr [rdx] ; ret
0x000000000009a7d7 : mov byte ptr [rdx], al ; mov rax, rdi ; ret
0x000000000019e1b8 : mov byte ptr [rdx], bl ; out dx, eax ; call qword ptr [rax]
0x000000000002ef08 : mov byte ptr [rip + 0x391d6f], dl ; ret
0x000000000000245c : mov byte ptr [rip + 0xffffffffdd410018], dh ; out -0x57, al ; ret -0x42f9
0x0000000000081ddd : mov byte ptr [rsi + rbx], bh ; mov rax, rsi ; pop rbx ; ret
0x0000000000081ddc : mov byte ptr [rsi + rbx], dil ; mov rax, rsi ; pop rbx ; ret
0x0000000000049a53 : mov byte ptr [rsi], al ; jne 0x49a30 ; mov rax, rsi ; ret
0x00000000000499cf : mov byte ptr [rsi], dl ; jne 0x499b8 ; mov rax, rsi ; ret
0x0000000000003747 : mov ch, -0x49 ; cli ; add ebx, ebp ; in al, -0x12 ; jne 0x372a ; ret 0x975
0x000000000017776a : mov ch, -0x55 ; ret
0x0000000000176dbf : mov ch, -0x67 ; in eax, -1 ; lahf ; mov dh, -0x39 ; ret -0x18e1
0x00000000000b017a : mov ch, -0x77 ; ret -0x1d7d
0x00000000000d2d72 : mov ch, -0x7d ; ret -0x76ff
0x00000000001b0c81 : mov ch, -0xa ; call qword ptr [rdi]
0x00000000001a6ca9 : mov ch, -0xc ; call rdi
0x00000000001746e2 : mov ch, 0x31 ; mov ah, bl ; push rsi ; ret
0x0000000000175a23 : mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000193f04 : mov ch, 0x37 ; jmp 0x193f07
0x0000000000025493 : mov ch, 0x39 ; add al, ch ; add eax, 0xe9fffff4 ; ret
0x000000000018e67d : mov ch, 2 ; add byte ptr [rbx], bh ; and edx, edi ; call rsp
0x00000000001b8f60 : mov ch, 4 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 7
0x0000000000161b46 : mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000013573e : mov ch, bl ; add byte ptr [rax], al ; add dh, dh ; ret
0x000000000019831d : mov ch, ch ; jmp qword ptr [rdx]
0x0000000000189f39 : mov ch, dh ; call rsp
0x00000000001aec95 : mov ch, dh ; jmp qword ptr [rdx]
0x0000000000192d3d : mov ch, dl ; jmp qword ptr [rdx]
0x00000000001aa2d4 : mov cl, -0x18 ; hlt ; jmp qword ptr [rdx]
0x000000000019a5ac : mov cl, -0x28 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000290fb : mov cl, -0x35 ; adc eax, 0x358d4800 ; ret
0x000000000018747c : mov cl, -0x56 ; std ; inc dword ptr [rcx + 0xffffffffffffffab] ; std ; call rcx
0x000000000019828c : mov cl, -0x7a ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000134643 : mov cl, -0x7c ; sub byte ptr [rax], al ; pop r12 ; jmp rax
0x00000000001b0ac9 : mov cl, -0xa ; call qword ptr [rcx]
0x00000000001b0ae1 : mov cl, -0xa ; jmp qword ptr [rcx]
0x00000000001a6b61 : mov cl, -0xc ; jmp qword ptr [rcx]
0x00000000001885d5 : mov cl, -4 ; jmp rax
0x000000000018ebc9 : mov cl, -6 ; call rsp
0x000000000008ca1b : mov cl, 0 ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000003b54 : mov cl, 0x22 ; xchg eax, ebp ; ret
0x0000000000117de0 : mov cl, 0x35 ; pop rdx ; ret 0x2a
0x0000000000117def : mov cl, 0x35 ; ret 0x2a
0x000000000010f1f8 : mov cl, 0x35 ; ret 0x2b48
0x0000000000083598 : mov cl, 0x35 ; ret 0x33c1
0x000000000012b933 : mov cl, 0x36 ; sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x000000000019c004 : mov cl, 0x37 ; out dx, al ; jmp qword ptr [rdx]
0x000000000012078b : mov cl, 0x3f ; sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x0000000000087693 : mov cl, 0x78 ; xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x0000000000108e9b : mov cl, 5 ; xchg eax, edi ; mov edi, 0x3948002b ; ret -0x258b
0x00000000001b7988 : mov cl, 6 ; add byte ptr [rax], al ; fld dword ptr [rbx] ; add byte ptr [rax], al ; ret
0x00000000000fc585 : mov cl, byte ptr [rax + 0xffffffffffffff83] ; ret
0x000000000008fb65 : mov cl, byte ptr [rbx + 0xffffffffc8298204] ; ret
0x0000000000087cc4 : mov cl, byte ptr [rdi + 0xffffffffffffff8d] ; adc al, 0xa ; jmp r10
0x0000000000176b92 : mov cl, byte ptr [rip + 0xffffffffeeb0f650] ; fcmovb st(0), st(3) ; ret
0x00000000001a2d38 : mov cl, dh ; int1 ; jmp qword ptr [rdx]
0x00000000001a2595 : mov cl, dh ; jmp qword ptr [rdx]
0x00000000000a3b2b : mov cl, dl ; and cl, 0xf ; je 0xa3b50 ; ret
0x000000000006ddd6 : mov cs, dword ptr [rax + 1] ; into ; jmp rsi
0x000000000002a215 : mov cs, dword ptr [rax] ; add eax, 0x29480000 ; ret -0x74b7
0x00000000001ab9bc : mov cs, dword ptr [rdi + 0xfffffffffffffff5] ; jmp qword ptr [rdx]
0x000000000013e5ce : mov cs, dword ptr [rip + 0xffffffff83480000] ; ret -0x16f0
0x0000000000176e4c : mov cs, edi ; ret -0x74ca
0x00000000000d6ff2 : mov cs, esi ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret -0x74b8
0x000000000009daa0 : mov cx, word ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000001a03ed : mov dh, -0x10 ; jmp qword ptr [rdx]
0x000000000019d9b9 : mov dh, -0x12 ; call qword ptr [rax]
0x00000000000d509c : mov dh, -0x13 ; movsxd rcx, dword ptr [rax + r13*4] ; add rax, rcx ; jmp rax
0x0000000000054c43 : mov dh, -0x25 ; movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x00000000000b5909 : mov dh, -0x2e ; movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x000000000008cc2a : mov dh, -0x2e ; sub eax, edx ; ret
0x00000000000e257c : mov dh, -0x38 ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x00000000000717ae : mov dh, -0x39 ; ret
0x0000000000176dc4 : mov dh, -0x39 ; ret -0x18e1
0x00000000000b8f21 : mov dh, -0x3a ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000007b3b6 : mov dh, -0x3b ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a2750 : mov dh, -0x3e ; pop rbx ; ret
0x00000000000a2728 : mov dh, -0x3f ; pop rbx ; ret
0x0000000000122738 : mov dh, -0x40 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012ea5c : mov dh, -0x40 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001222ed : mov dh, -0x40 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b0d16 : mov dh, -0x40 ; lea eax, dword ptr [rax + rax + 0xffffffffffffffff] ; ret
0x00000000000c336f : mov dh, -0x40 ; lea rax, qword ptr [rax + rax + 0xffffffffffffffff] ; ret
0x0000000000036afd : mov dh, -0x40 ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000006d3a8 : mov dh, -0x40 ; movsxd rax, dword ptr [r8 + rax*4] ; add rax, r8 ; jmp rax
0x00000000000d514c : mov dh, -0x40 ; movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x00000000000c88f5 : mov dh, -0x40 ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x0000000000054b13 : mov dh, -0x40 ; movsxd rax, dword ptr [rsi + rax*4] ; add rsi, rax ; jmp rsi
0x0000000000102af1 : mov dh, -0x40 ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005e20d : mov dh, -0x40 ; neg eax ; pop rbx ; ret
0x0000000000022c29 : mov dh, -0x40 ; neg eax ; ret
0x0000000000126ce4 : mov dh, -0x40 ; pop r12 ; ret
0x000000000012358e : mov dh, -0x40 ; pop rbp ; ret
0x0000000000048b03 : mov dh, -0x40 ; pop rbx ; neg eax ; pop rbp ; ret
0x00000000000f588d : mov dh, -0x40 ; pop rbx ; ret
0x000000000003766a : mov dh, -0x40 ; ret
0x0000000000188634 : mov dh, -0x53 ; cld ; inc dword ptr [rsi + 0xffffffffffffffad] ; cld ; call rsi
0x000000000018813c : mov dh, -0x7a ; cld ; inc dword ptr [rsi + 0xffffffffffffff86] ; cld ; call rsi
0x00000000000e3a2c : mov dh, -0x7c ; and al, -0x60 ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret -0x1d3f
0x0000000000075aff : mov dh, -0xa ; ret 0x7508
0x000000000010d22d : mov dh, -0xa ; shl eax, 8 ; or eax, esi ; bswap eax ; ret
0x000000000007b256 : mov dh, 0 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007be69 : mov dh, 0 ; pop rbx ; ret
0x00000000000742d3 : mov dh, 0 ; ret
0x000000000014e131 : mov dh, 0x16 ; mov byte ptr [rdi], dl ; ret
0x000000000008cc04 : mov dh, 0x16 ; sub eax, edx ; ret
0x00000000000864bc : mov dh, 0x33 ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x76b8
0x000000000005659f : mov dh, 0x38 ; add r12, 1 ; jmp 0x56569
0x00000000000b8e36 : mov dh, 0x40 ; add dword ptr [rax + 0xffffffffffffff83], ecx ; ret
0x0000000000049c1d : mov dh, 0x41 ; dec dword ptr [rax + 0xffffffffffffff83] ; ret -0x77ff
0x00000000000c480e : mov dh, 0x42 ; add cl, byte ptr [rax + 0xffffffffffffff83] ; ret -0x7cff
0x00000000000c447a : mov dh, 0x42 ; add dword ptr [rax + 0xffffffffffffff83], ecx ; ret -0x7bff
0x0000000000109aff : mov dh, 0x42 ; dec dword ptr [rcx + 0xffffffffffffff83] ; ret
0x0000000000047eed : mov dh, 0x43 ; add dword ptr [rax + 0xffffffffffffff83], ecx ; ret
0x000000000005b727 : mov dh, 0x45 ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x000000000011b332 : mov dh, 0x45 ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x3108
0x00000000000604fe : mov dh, 0x45 ; or al, -0x77 ; ret -0x1540
0x0000000000096f86 : mov dh, 0x45 ; ret
0x0000000000096f73 : mov dh, 0x45 ; ret -0x7cb7
0x000000000009719b : mov dh, 0x45 ; ret -0x7cb8
0x0000000000098703 : mov dh, 0x46 ; dec dword ptr [rax + 0xffffffffffffff83] ; ret
0x00000000001645f1 : mov dh, 0x47 ; cmc ; movzx edx, byte ptr [rsi + 0xfffffffffffffff5] ; sub eax, edx ; ret
0x00000000001645e1 : mov dh, 0x47 ; hlt ; movzx edx, byte ptr [rsi + 0xfffffffffffffff4] ; sub eax, edx ; ret
0x00000000001645b1 : mov dh, 0x47 ; int1 ; movzx edx, byte ptr [rsi + 0xfffffffffffffff1] ; sub eax, edx ; ret
0x00000000001645a1 : mov dh, 0x47 ; lock movzx edx, byte ptr [rsi + 0xfffffffffffffff0] ; sub eax, edx ; ret
0x00000000001645c1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi + 0xfffffffffffffff2] ; sub eax, edx ; ret
0x00000000001645d1 : mov dh, 0x47 ; movzx edx, byte ptr [rsi + 0xfffffffffffffff3] ; sub eax, edx ; ret
0x0000000000027975 : mov dh, 0x48 ; dec dword ptr [rcx + 0xffffffffffffff83] ; ret
0x00000000000e2f95 : mov dh, 0x48 ; xor byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x680
0x0000000000098696 : mov dh, 0x49 ; dec dword ptr [rcx + 0xffffffffffffff83] ; ret -0x7bff
0x00000000000279bf : mov dh, 0x4a ; dec dword ptr [rax + 0xffffffffffffff83] ; ret 0x4101
0x000000000002a973 : mov dh, 0x4a ; inc dword ptr [rcx + 0xffffffffffffff88] ; add rcx, qword ptr [r9 + 0x39] ; ret
0x0000000000175b82 : mov dh, 0x4e ; ret 0x474c
0x0000000000118b5d : mov dh, 0x52 ; add dword ptr [rcx + 0xffffffffffffff83], ecx ; ret 0x4102
0x0000000000033a82 : mov dh, 0x53 ; add dword ptr [rax + 0xffffffffffffff83], ecx ; ret
0x000000000006d9d4 : mov dh, 0x53 ; or al, -0xa ; ret 0x7404
0x000000000006e111 : mov dh, 0x53 ; or al, -0xa ; ret 0xf04
0x00000000000e8310 : mov dh, 0x54 ; add eax, 0xbe0f4101 ; ret -0x177d
0x00000000001645f5 : mov dh, 0x56 ; cmc ; sub eax, edx ; ret
0x00000000001645e5 : mov dh, 0x56 ; hlt ; sub eax, edx ; ret
0x00000000001645b5 : mov dh, 0x56 ; int1 ; sub eax, edx ; ret
0x00000000001645a5 : mov dh, 0x56 ; lock sub eax, edx ; ret
0x000000000005031f : mov dh, 0x56 ; or al, -0x7b ; sal byte ptr [rbp + 5], -0xa ; ret 0x7450
0x00000000001645d5 : mov dh, 0x56 ; rep sub eax, edx ; ret
0x00000000001645c5 : mov dh, 0x56 ; repne sub eax, edx ; ret
0x00000000000f6241 : mov dh, 0x57 ; sbb byte ptr [rcx + 0xfffffffffffffff6], al ; ret 0x7401
0x00000000000c8cfd : mov dh, 0x7b ; dec dword ptr [rcx + 0xffffffffffffff83] ; ret 0x4101
0x0000000000045f56 : mov dh, 0x7d ; add cl, ch ; ret -0x1f
0x0000000000177e40 : mov dh, 0xb ; add byte ptr [rax], al ; ret -3
0x00000000000875d5 : mov dh, 0xc ; adc dword ptr [rax + 0xffffffffffffff83], ecx ; ret 0x4201
0x0000000000190d36 : mov dh, 0xc ; ljmp 0x9d0d1cff, -0x1600 ; jmp qword ptr [rdx]
0x0000000000089071 : mov dh, 0xe ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000160c24 : mov dh, 0xe ; sub eax, ecx ; ret
0x000000000007b261 : mov dh, 2 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c56b9 : mov dh, 2 ; jmp 0xc4e52
0x00000000000e1c8f : mov dh, 4 ; or byte ptr [rcx], bh ; ret 0x1472
0x0000000000160c21 : mov dh, 7 ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008cc01 : mov dh, 7 ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000089074 : mov dh, 7 ; sub eax, ecx ; ret
0x000000000018ba61 : mov dh, bl ; jmp rsp
0x00000000000a28fe : mov dh, byte ptr [rdi + rbx*8 + 0xfffffffffffffff3] ; ret
0x0000000000189f01 : mov dh, ch ; call rsp
0x00000000001a3991 : mov dh, dl ; call qword ptr [rcx]
0x00000000001a3a51 : mov dh, dl ; call qword ptr [rdi]
0x00000000001a3aa1 : mov dh, dl ; call qword ptr [rdx]
0x000000000011fcbd : mov dl, -0x15 ; or dword ptr [rax + 0xffffffffffffff83], ecx ; ret 0x3904
0x00000000000c33a5 : mov dl, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000188698 : mov dl, -0x50 ; cld ; inc dword ptr [rdx + 0xffffffffffffffb0] ; cld ; call rdx
0x0000000000188690 : mov dl, -0x56 ; cld ; jmp qword ptr [rdx]
0x000000000002f932 : mov dl, -0x75 ; add al, 7 ; ret
0x00000000001881a0 : mov dl, -0x77 ; cld ; inc dword ptr [rdx + 0xffffffffffffff89] ; cld ; call rdx
0x00000000001a6c01 : mov dl, -0xc ; call qword ptr [rsi]
0x00000000001a6c19 : mov dl, -0xc ; jmp qword ptr [rcx]
0x000000000018b2c9 : mov dl, -0xf ; call rsp
0x0000000000003a4c : mov dl, 0x1e ; ret
0x000000000003d985 : mov dl, 0x40 ; jle 0x3d940 ; jmp 0x3d94d
0x000000000002e29f : mov dl, 0x4d ; add esi, edx ; jmp r14
0x0000000000187cb4 : mov dl, 0x61 ; cld ; inc dword ptr [rdx + 0x61] ; cld ; call rdx
0x00000000001664bd : mov dl, 0x66 ; nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000115504 : mov dl, 2 ; cmove eax, edx ; ret
0x00000000000f70c2 : mov dl, 4 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000000f6fe2 : mov dl, 5 ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000001453b0 : mov dl, byte ptr [rsi + 0xffffffffffffffff] ; mov byte ptr [rdi + 0xffffffffffffffff], dl ; ret
0x000000000009e773 : mov dl, byte ptr [rsi + 2] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x000000000009e792 : mov dl, byte ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009e7d3 : mov dl, byte ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000009fea0 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009e750 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x00000000000a1910 : mov dl, byte ptr [rsi] ; mov byte ptr [rdi], dl ; xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000001929f5 : mov dl, ch ; jmp qword ptr [rdx]
0x00000000000e5762 : mov dl, dl ; std ; dec dword ptr [rax + 0xffffffffffffffc7] ; ret -1
0x00000000000fb002 : mov dword ptr [0x2d0], eax ; pop rax ; pop rdi ; call rax
0x00000000000c29d3 : mov dword ptr [0x2d0], esi ; mov eax, esi ; ret
0x00000000000f16a4 : mov dword ptr [r8 + 0x21], esi ; ret
0x00000000000f169f : mov dword ptr [r8 + 0x38], edx ; mov word ptr [r8 + 0x21], si ; ret
0x00000000001248b9 : mov dword ptr [r8 + 0x6c], eax ; mov eax, 1 ; ret
0x00000000001248ca : mov dword ptr [r8], eax ; mov eax, 1 ; ret
0x0000000000118c08 : mov dword ptr [r8], edi ; mov qword ptr [r9], rcx ; ret
0x0000000000118b64 : mov dword ptr [r8], edx ; mov qword ptr [r9], r10 ; ret
0x0000000000020bf0 : mov dword ptr [r9 + rcx*4], esi ; inc dword ptr [rdi + 4] ; ret
0x0000000000109468 : mov dword ptr [r9], r8d ; xor eax, eax ; ret
0x0000000000128d4c : mov dword ptr [rax + 0x10], edx ; mov eax, 1 ; ret
0x0000000000074d59 : mov dword ptr [rax + 0x10], edx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000074d99 : mov dword ptr [rax + 0x10], esi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000075bf9 : mov dword ptr [rax + 0x18], edx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x00000000000c49b4 : mov dword ptr [rax + 0x18], esi ; jmp 0xc4401
0x0000000000073bb9 : mov dword ptr [rax + 0x20], edx ; pop rbx ; ret
0x00000000000d2bfb : mov dword ptr [rax + 0x20], edx ; xor eax, eax ; ret
0x00000000000d2c2d : mov dword ptr [rax + 0x20], esi ; xor eax, eax ; ret
0x00000000000f16a5 : mov dword ptr [rax + 0x21], esi ; ret
0x00000000001a8a7c : mov dword ptr [rax + 0x2b600001], ds ; cmc ; jmp qword ptr [rcx]
0x00000000000f16a0 : mov dword ptr [rax + 0x38], edx ; mov word ptr [r8 + 0x21], si ; ret
0x0000000000074d5d : mov dword ptr [rax + 0x40], ecx ; ret
0x0000000000075c97 : mov dword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000003c8ce : mov dword ptr [rax + 0x60], edx ; call qword ptr [rbx]
0x00000000001248ba : mov dword ptr [rax + 0x6c], eax ; mov eax, 1 ; ret
0x0000000000128c2c : mov dword ptr [rax + 0xc], edx ; mov eax, 1 ; ret
0x00000000000d47cb : mov dword ptr [rax + 0xffffffffffffff85], cs ; rol byte ptr [rcx + 0xf], -0x6b ; ret -0x7bf1
0x0000000000081ddb : mov dword ptr [rax + 0xffffffffffffff88], 0x89481e3c ; lock pop rbx ; ret
0x000000000005e33b : mov dword ptr [rax + 4], 1 ; xor eax, eax ; ret
0x000000000005e2c5 : mov dword ptr [rax + 8], ecx ; add dword ptr [rdx + 4], 1 ; ret
0x0000000000124834 : mov dword ptr [rax + 8], edx ; mov eax, 1 ; ret
0x0000000000104967 : mov dword ptr [rax + rax + 0xffffffffc1290000], eax ; mov eax, ecx ; ret
0x00000000000e26e0 : mov dword ptr [rax + rax*4], edx ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000d77e2 : mov dword ptr [rax + rax*4], fs ; add byte ptr [rax], al ; add byte ptr [rax + 1], cl ; ret -0x72b8
0x00000000000f9e50 : mov dword ptr [rax + rax], ebp ; add rsp, 8 ; ret
0x000000000008d232 : mov dword ptr [rax + rdx + 0xfffffffffffffffe], ecx ; ret
0x000000000012f6bd : mov dword ptr [rax], 0 ; pop rbx ; ret
0x000000000004e03e : mov dword ptr [rax], 0x16 ; jmp 0x4a263
0x00000000000f2638 : mov dword ptr [rax], 0x16 ; mov eax, edi ; ret
0x0000000000036f75 : mov dword ptr [rax], 0x16 ; or eax, -1 ; ret
0x00000000000f58d8 : mov dword ptr [rax], 0x16 ; pop rbx ; ret
0x00000000000f5899 : mov dword ptr [rax], 0x16 ; xor eax, eax ; pop rbx ; ret
0x00000000000b1258 : mov dword ptr [rax], 0x16 ; xor eax, eax ; ret
0x0000000000070325 : mov dword ptr [rax], 0x89480000 ; ret -0x74b8
0x0000000000081e00 : mov dword ptr [rax], 0xc ; xor eax, eax ; pop rbx ; ret
0x0000000000081fc0 : mov dword ptr [rax], 0xc ; xor eax, eax ; ret
0x00000000000f1df8 : mov dword ptr [rax], 0xffffffff ; xor eax, eax ; ret
0x00000000000bda65 : mov dword ptr [rax], 2 ; xor eax, eax ; ret
0x0000000000022c36 : mov dword ptr [rax], 9 ; mov eax, edi ; ret
0x000000000009e2f0 : mov dword ptr [rax], cs ; add byte ptr [rax], al ; ret
0x00000000000a37e3 : mov dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000004bff1 : mov dword ptr [rax], eax ; jmp 0x4bfb8
0x0000000000061dd1 : mov dword ptr [rax], eax ; jmp 0x61d98
0x00000000001248cb : mov dword ptr [rax], eax ; mov eax, 1 ; ret
0x00000000000cc09f : mov dword ptr [rax], eax ; or eax, -1 ; ret
0x00000000000e26c6 : mov dword ptr [rax], ebp ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000026fc5 : mov dword ptr [rax], ebx ; jmp 0x26f8b
0x0000000000029c07 : mov dword ptr [rax], ebx ; mov eax, dword ptr [rsp + 0x1c] ; jmp 0x29bd1
0x000000000002add7 : mov dword ptr [rax], ebx ; mov eax, dword ptr [rsp + 0x24] ; jmp 0x2ada1
0x00000000000498ec : mov dword ptr [rax], ecx ; mov byte ptr [rax + 8], 0 ; ret
0x000000000002652f : mov dword ptr [rax], ecx ; mov eax, 7 ; jmp 0x264fa
0x00000000000752e5 : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x000000000007835a : mov dword ptr [rax], ecx ; mov eax, dword ptr [rdx] ; ret
0x00000000000fa331 : mov dword ptr [rax], edi ; mov eax, 0xffffffff ; ret
0x0000000000118c09 : mov dword ptr [rax], edi ; mov qword ptr [r9], rcx ; ret
0x00000000000832c6 : mov dword ptr [rax], edi ; ret
0x00000000000bf362 : mov dword ptr [rax], edx ; add rsp, 0x18 ; ret
0x00000000000faed3 : mov dword ptr [rax], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000075240 : mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x0000000000118b65 : mov dword ptr [rax], edx ; mov qword ptr [r9], r10 ; ret
0x00000000000f16b3 : mov dword ptr [rax], edx ; or eax, -1 ; ret
0x00000000000f229f : mov dword ptr [rax], edx ; or rax, -1 ; jmp 0xf226a
0x00000000000f24ff : mov dword ptr [rax], edx ; or rax, -1 ; jmp 0xf24ca
0x000000000002fa04 : mov dword ptr [rax], edx ; ret
0x00000000000bf4ef : mov dword ptr [rax], esi ; add rsp, 0x40 ; mov eax, edx ; pop rbx ; ret
0x00000000000bece3 : mov dword ptr [rax], esi ; mov rax, rdx ; add rsp, 8 ; ret
0x00000000000df4cc : mov dword ptr [rax], esp ; xor eax, eax ; jmp 0xdf494
0x00000000000df4cb : mov dword ptr [rax], r12d ; xor eax, eax ; jmp 0xdf494
0x00000000000cc09e : mov dword ptr [rax], r8d ; or eax, -1 ; ret
0x000000000018a564 : mov dword ptr [rax], ss ; add dword ptr [rax], eax ; add bpl, r15b ; call rsp
0x00000000001897e4 : mov dword ptr [rbp + 0xffffffffdbde0000], gs ; jmp 0x1897eb
0x000000000005f571 : mov dword ptr [rbp + 0xffffffffffffee60], ecx ; jmp rax
0x0000000000063112 : mov dword ptr [rbp + 0xffffffffffffeea8], edx ; call 0x1f410
0x000000000004a0b9 : mov dword ptr [rbp + 0xfffffffffffffa50], ecx ; jmp rax
0x000000000005c449 : mov dword ptr [rbp + 0xfffffffffffffd30], edx ; call 0x1086a0
0x0000000000058fb4 : mov dword ptr [rbp + 0xffffffffffffff08], eax ; jmp 0x58f7e
0x0000000000050b1e : mov dword ptr [rbp + 0xffffffffffffff50], eax ; mov rdi, rbx ; call rax
0x0000000000108580 : mov dword ptr [rbp + 0xffffffffffffff80], eax ; call r8
0x0000000000107b45 : mov dword ptr [rbp + 0xffffffffffffff80], edx ; mov rdx, r12 ; call rax
0x0000000000107ed0 : mov dword ptr [rbp + 0xffffffffffffff80], edx ; mov rdx, r13 ; call rax
0x000000000010834c : mov dword ptr [rbp + 0xffffffffffffff80], edx ; mov rdx, r14 ; call rax
0x0000000000107f50 : mov dword ptr [rbp + 0xffffffffffffff80], edx ; mov rdx, rbx ; call rax
0x00000000001082c8 : mov dword ptr [rbp + 0xffffffffffffff90], edx ; mov rdx, r14 ; call rax
0x00000000000233a3 : mov dword ptr [rbp + 0xffffffffffffff98], eax ; call rcx
0x00000000000f8927 : mov dword ptr [rbp + 0xffffffffffffff98], eax ; mov rdx, rax ; jmp 0xf8954
0x00000000000f89f8 : mov dword ptr [rbp + 0xffffffffffffff98], eax ; mov rdx, rax ; jmp 0xf8a26
0x00000000001a5f7c : mov dword ptr [rbp + 1], gs ; add byte ptr [rax], ah ; insb byte ptr es:[rdi], dx ; hlt ; jmp qword ptr [rcx]
0x000000000018da9c : mov dword ptr [rbp + 2], ds ; add byte ptr [rdx], dl ; jge 0x18da9b ; call rsp
0x00000000000e4e52 : mov dword ptr [rbp + 4], edx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000114062 : mov dword ptr [rbp], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000114061 : mov dword ptr [rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002ca87 : mov dword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000136cd6 : mov dword ptr [rbx + 0x10], eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000079487 : mov dword ptr [rbx + 0x10], eax ; mov rax, rbx ; pop rbx ; ret
0x00000000000bdb48 : mov dword ptr [rbx + 0x10], eax ; mov rdx, rbp ; xor ecx, ecx ; jmp 0xbdb15
0x0000000000079999 : mov dword ptr [rbx + 0x10], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000102ba4 : mov dword ptr [rbx + 0x10], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007fa8e : mov dword ptr [rbx + 0x14], eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012f352 : mov dword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x0000000000136c83 : mov dword ptr [rbx + 0x18], eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000102bd4 : mov dword ptr [rbx + 0x18], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007bd33 : mov dword ptr [rbx + 0x20], eax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000012f3a9 : mov dword ptr [rbx + 0x20], esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e473b : mov dword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x0000000000073be5 : mov dword ptr [rbx + 0x28], eax ; pop rbx ; ret
0x00000000000873f7 : mov dword ptr [rbx + 0x30], eax ; call rcx
0x0000000000111f81 : mov dword ptr [rbx + 0x30], eax ; mov eax, 1 ; pop rbx ; ret
0x00000000000d593e : mov dword ptr [rbx + 0x30], eax ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000873f1 : mov dword ptr [rbx + 0x40], eax ; mov qword ptr [rbx], rdi ; mov dword ptr [rbx + 0x30], eax ; call rcx
0x0000000000036aff : mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x000000000007c15f : mov dword ptr [rbx + 0x40], esp ; mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f1176 : mov dword ptr [rbx + 0x48], eax ; pop rbx ; ret
0x00000000000874b2 : mov dword ptr [rbx + 0x48], ecx ; mov rdi, r9 ; call rcx
0x000000000007bd9b : mov dword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000075dda : mov dword ptr [rbx + 0x60], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007a772 : mov dword ptr [rbx + 0x70], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000074dee : mov dword ptr [rbx + 0x74], eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000075ac1 : mov dword ptr [rbx + 0x74], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000079377 : mov dword ptr [rbx + 0x90], eax ; pop rbx ; ret
0x000000000007931b : mov dword ptr [rbx + 0xc0], eax ; mov edx, r8d ; jmp 0x792bb
0x000000000007931a : mov dword ptr [rbx + 0xc0], r8d ; mov edx, r8d ; jmp 0x792bb
0x000000000002caa7 : mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x0000000000102b74 : mov dword ptr [rbx + 8], ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000037555 : mov dword ptr [rbx + 8], edx ; add rsp, 0x40 ; pop rbx ; ret
0x000000000007bfbd : mov dword ptr [rbx + 8], edx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000008776d : mov dword ptr [rbx + 8], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000daa0f : mov dword ptr [rbx + rdi + 0x24], 0x39da7fbe ; ret -0x3e77
0x00000000000dace0 : mov dword ptr [rbx + rdi + 0x24], 0x39ec7fbe ; ret -0x3e77
0x00000000000dc218 : mov dword ptr [rbx + rdi + 4], 0x39da7fbe ; ret -0x3e77
0x000000000012f6b2 : mov dword ptr [rbx], 0 ; call 0x12b970
0x00000000000f58c2 : mov dword ptr [rbx], 0 ; pop rbx ; ret
0x00000000001b7fcc : mov dword ptr [rbx], 0x6c50000 ; add byte ptr [rax], al ; ret
0x0000000000122d11 : mov dword ptr [rbx], eax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x0000000000136efe : mov dword ptr [rbx], eax ; add rsp, 0x10 ; pop rbx ; ret
0x00000000000874af : mov dword ptr [rbx], eax ; mov qword ptr [rbx + 0x48], r9 ; mov rdi, r9 ; call rcx
0x000000000007c162 : mov dword ptr [rbx], eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012b882 : mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000000f5887 : mov dword ptr [rbx], eax ; setne al ; movzx eax, al ; pop rbx ; ret
0x000000000012a4a8 : mov dword ptr [rbx], eax ; xor eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x0000000000075bfc : mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x00000000000873f5 : mov dword ptr [rbx], edi ; mov dword ptr [rbx + 0x30], eax ; call rcx
0x000000000007c0c0 : mov dword ptr [rbx], edx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000745cc : mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007bd36 : mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x000000000006f1c8 : mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012481c : mov dword ptr [rcx + 0x10], edx ; mov eax, 1 ; ret
0x00000000001895e4 : mov dword ptr [rcx + 0x40c30000], fs ; jmp 0x1895eb
0x0000000000128468 : mov dword ptr [rcx + 0x48], eax ; mov eax, 1 ; ret
0x00000000001283c5 : mov dword ptr [rcx + 0x54], eax ; mov eax, 1 ; ret
0x0000000000128495 : mov dword ptr [rcx + 0x58], eax ; mov eax, 1 ; ret
0x000000000000044d : mov dword ptr [rcx + 0x7c05000c], eax ; adc byte ptr [rsp + rcx], bl ; ret 0x4412
0x00000000001945d6 : mov dword ptr [rcx + 0xd1cffeb], edi ; jrcxz 0x194596 ; jmp 0x1945df
0x000000000010d4c8 : mov dword ptr [rcx + 0xffffffffffffff89], es ; xor cl, byte ptr [rcx + 0xffffffffffffff83] ; ret 0x4d04
0x000000000015b4b2 : mov dword ptr [rcx + 3], edx ; ret
0x000000000015b4a3 : mov dword ptr [rcx + 4], edx ; ret
0x000000000015b514 : mov dword ptr [rcx + 5], edx ; ret
0x000000000015b524 : mov dword ptr [rcx + 6], edx ; ret
0x000000000015b4f3 : mov dword ptr [rcx + 7], edx ; ret
0x000000000015b4e4 : mov dword ptr [rcx + 8], edx ; ret
0x0000000000097496 : mov dword ptr [rcx + rcx*4], 0x8948fc47 ; clc ; ret
0x0000000000020bf1 : mov dword ptr [rcx + rcx*4], esi ; inc dword ptr [rdi + 4] ; ret
0x00000000000da9fd : mov dword ptr [rcx + rdi + 0x24], 0x39ec7cbe ; ret -0x3e77
0x00000000000dc206 : mov dword ptr [rcx + rdi + 4], 0x39ec7cbe ; ret -0x3e77
0x00000000000a3e46 : mov dword ptr [rcx], eax ; jne 0xa3e30 ; mov rax, rbx ; pop rbx ; ret
0x0000000000036fca : mov dword ptr [rcx], eax ; or rax, -1 ; ret
0x0000000000078f47 : mov dword ptr [rcx], eax ; ret
0x0000000000077e54 : mov dword ptr [rcx], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000109469 : mov dword ptr [rcx], eax ; xor eax, eax ; ret
0x0000000000118c0c : mov dword ptr [rcx], ecx ; ret
0x0000000000078d91 : mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000118bd8 : mov dword ptr [rcx], edi ; ret
0x000000000008c777 : mov dword ptr [rcx], edx ; add rsp, 0x100 ; ret
0x000000000015b471 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000015b490 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 4], dl ; ret
0x000000000015b4d1 : mov dword ptr [rcx], edx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000015b4b0 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 3], edx ; ret
0x000000000015b4f1 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000015b501 : mov dword ptr [rcx], edx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000015b511 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000015b521 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000015b531 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000015b541 : mov dword ptr [rcx], edx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000015b4a0 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 4], dx ; ret
0x000000000015b4e1 : mov dword ptr [rcx], edx ; mov word ptr [rcx + 8], dx ; ret
0x0000000000118b68 : mov dword ptr [rcx], edx ; ret
0x00000000000a3e45 : mov dword ptr [rcx], r8d ; jne 0xa3e30 ; mov rax, rbx ; pop rbx ; ret
0x00000000000e5adb : mov dword ptr [rdi + 0x100], edx ; ret
0x00000000000e5b12 : mov dword ptr [rdi + 0x108], eax ; xor eax, eax ; ret
0x000000000009f20d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a005d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000009f24b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x00000000000a009b : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x14] ; ret
0x000000000009f2cd : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a011d : mov dword ptr [rdi + 0x10], ecx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000009dbdb : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009e8ae : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x000000000009dc5d : mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x18], dh ; ret
0x0000000000038ccf : mov dword ptr [rdi + 0x10], ecx ; ret
0x00000000000a1acd : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a1b0b : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a1b8d : mov dword ptr [rdi + 0x10], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x000000000009e930 : mov dword ptr [rdi + 0x10], edx ; mov byte ptr [rdi + 0x18], cl ; ret
0x000000000009dca0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009dcc0 : mov dword ptr [rdi + 0x10], edx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009dc81 : mov dword ptr [rdi + 0x10], edx ; mov word ptr [rdi + 0x18], cx ; ret
0x00000000000e5b00 : mov dword ptr [rdi + 0x10c], esi ; xor al, al ; ret
0x000000000009f333 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x00000000000a0183 : mov dword ptr [rdi + 0x17], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x000000000009dca3 : mov dword ptr [rdi + 0x17], ecx ; ret
0x00000000000a1bf3 : mov dword ptr [rdi + 0x17], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x000000000007bcc3 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000073f77 : mov dword ptr [rdi + 0x18], eax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x0000000000092c0a : mov dword ptr [rdi + 0x18], eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000009f315 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a0165 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000009f353 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1b] ; ret
0x00000000000a01a3 : mov dword ptr [rdi + 0x18], ecx ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x000000000009dc85 : mov dword ptr [rdi + 0x18], ecx ; ret
0x00000000000a1bd5 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a1c13 : mov dword ptr [rdi + 0x18], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000012ef51 : mov dword ptr [rdi + 0x18], esi ; mov dword ptr [rdi + 0x28], edx ; mov al, 1 ; ret
0x000000000012ef76 : mov dword ptr [rdi + 0x18], esi ; ret
0x000000000012ef54 : mov dword ptr [rdi + 0x28], edx ; mov al, 1 ; ret
0x0000000000128c8c : mov dword ptr [rdi + 0x28], edx ; mov eax, 1 ; ret
0x000000000012f0e1 : mov dword ptr [rdi + 0x28], edx ; mov qword ptr [rdi + 8], rax ; ret
0x00000000000d286a : mov dword ptr [rdi + 0x2c], eax ; mov dword ptr [rdi + 0x30], eax ; ret
0x00000000000d286d : mov dword ptr [rdi + 0x30], eax ; ret
0x0000000000128c44 : mov dword ptr [rdi + 0x38], edx ; mov eax, 1 ; ret
0x000000000007bcf3 : mov dword ptr [rdi + 0x48], edx ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000037809 : mov dword ptr [rdi + 0x78], 0xffffffff ; ret
0x00000000000e517e : mov dword ptr [rdi + 0x80], edx ; ret
0x00000000001183f5 : mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x000000000009f28d : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a00dd : mov dword ptr [rdi + 0xe], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000009dbfd : mov dword ptr [rdi + 0xe], ecx ; ret
0x00000000000a1b4d : mov dword ptr [rdi + 0xe], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x000000000009f22b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x00000000000a007b : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x13] ; ret
0x000000000009f2ad : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a00fd : mov dword ptr [rdi + 0xf], ecx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000009dbbb : mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a1aeb : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a1b6d : mov dword ptr [rdi + 0xf], ecx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000001a797c : mov dword ptr [rdi + 0xffffffffdd800001], es ; hlt ; jmp qword ptr [rcx]
0x0000000000145075 : mov dword ptr [rdi + 0xfffffffffffffff0], ebx ; mov qword ptr [rdi + 0xfffffffffffffff8], rcx ; ret
0x00000000001450b3 : mov dword ptr [rdi + 0xfffffffffffffff0], ebx ; mov qword ptr [rdi + 0xfffffffffffffff8], rdx ; ret
0x0000000000038bbf : mov dword ptr [rdi + 0xfffffffffffffff0], ecx ; ret
0x0000000000145d9d : mov dword ptr [rdi + 0xfffffffffffffff1], ecx ; mov qword ptr [rdi + 0xfffffffffffffff8], rdx ; ret
0x000000000014d319 : mov dword ptr [rdi + 0xfffffffffffffff1], edx ; mov qword ptr [rdi + 0xfffffffffffffff8], rcx ; ret
0x0000000000145b9d : mov dword ptr [rdi + 0xfffffffffffffff2], ecx ; mov qword ptr [rdi + 0xfffffffffffffff8], rdx ; ret
0x000000000014d3a9 : mov dword ptr [rdi + 0xfffffffffffffff2], edx ; mov qword ptr [rdi + 0xfffffffffffffff8], rcx ; ret
0x000000000014599d : mov dword ptr [rdi + 0xfffffffffffffff3], ecx ; mov qword ptr [rdi + 0xfffffffffffffff8], rdx ; ret
0x000000000014d439 : mov dword ptr [rdi + 0xfffffffffffffff3], edx ; mov qword ptr [rdi + 0xfffffffffffffff8], rcx ; ret
0x00000000001457cc : mov dword ptr [rdi + 0xfffffffffffffff4], ecx ; mov dword ptr [rdi + 0xfffffffffffffffc], edx ; ret
0x000000000014d4c8 : mov dword ptr [rdi + 0xfffffffffffffff4], edx ; mov dword ptr [rdi + 0xfffffffffffffffc], ecx ; ret
0x00000000001455dc : mov dword ptr [rdi + 0xfffffffffffffff5], ecx ; mov dword ptr [rdi + 0xfffffffffffffffc], edx ; ret
0x000000000014d548 : mov dword ptr [rdi + 0xfffffffffffffff5], edx ; mov dword ptr [rdi + 0xfffffffffffffffc], ecx ; ret
0x00000000001453fc : mov dword ptr [rdi + 0xfffffffffffffff6], ecx ; mov dword ptr [rdi + 0xfffffffffffffffc], edx ; ret
0x000000000014d5c8 : mov dword ptr [rdi + 0xfffffffffffffff6], edx ; mov dword ptr [rdi + 0xfffffffffffffffc], ecx ; ret
0x000000000014522c : mov dword ptr [rdi + 0xfffffffffffffff7], eax ; mov dword ptr [rdi + 0xfffffffffffffffc], edx ; ret
0x0000000000145328 : mov dword ptr [rdi + 0xfffffffffffffff7], ecx ; mov byte ptr [rdi + 0xffffffffffffffff], dl ; ret
0x0000000000145274 : mov dword ptr [rdi + 0xfffffffffffffff7], ecx ; mov dword ptr [rdi + 0xfffffffffffffffc], edx ; ret
0x000000000014d648 : mov dword ptr [rdi + 0xfffffffffffffff7], edx ; mov dword ptr [rdi + 0xfffffffffffffffc], ecx ; ret
0x0000000000038b4a : mov dword ptr [rdi + 0xfffffffffffffff8], ecx ; ret
0x00000000001450b7 : mov dword ptr [rdi + 0xfffffffffffffff8], edx ; ret
0x00000000000974e1 : mov dword ptr [rdi + 0xfffffffffffffff9], eax ; mov rax, rdi ; ret
0x0000000000145f56 : mov dword ptr [rdi + 0xfffffffffffffff9], edx ; mov dword ptr [rdi + 0xfffffffffffffffc], ecx ; ret
0x00000000000974c5 : mov dword ptr [rdi + 0xfffffffffffffffa], eax ; mov rax, rdi ; ret
0x0000000000145d56 : mov dword ptr [rdi + 0xfffffffffffffffa], edx ; mov dword ptr [rdi + 0xfffffffffffffffc], ecx ; ret
0x00000000000974ab : mov dword ptr [rdi + 0xfffffffffffffffb], eax ; mov rax, rdi ; ret
0x0000000000145b56 : mov dword ptr [rdi + 0xfffffffffffffffb], edx ; mov dword ptr [rdi + 0xfffffffffffffffc], ecx ; ret
0x0000000000097467 : mov dword ptr [rdi + 0xfffffffffffffffc], eax ; mov rax, rdi ; ret
0x0000000000145b59 : mov dword ptr [rdi + 0xfffffffffffffffc], ecx ; ret
0x000000000014522f : mov dword ptr [rdi + 0xfffffffffffffffc], edx ; ret
0x0000000000145779 : mov dword ptr [rdi + 0xfffffffffffffffd], edx ; mov word ptr [rdi + 0xfffffffffffffffe], cx ; ret
0x000000000014577d : mov dword ptr [rdi + 0xfffffffffffffffe], ecx ; ret
0x0000000000145595 : mov dword ptr [rdi + 0xfffffffffffffffe], edx ; ret
0x000000000009ea70 : mov dword ptr [rdi + 0xffffffffffffffff], edx ; ret
0x000000000014df75 : mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000014ddb8 : mov dword ptr [rdi + 1], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000014e058 : mov dword ptr [rdi + 1], edx ; mov word ptr [rdi], cx ; ret
0x000000000014df05 : mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000014dd48 : mov dword ptr [rdi + 2], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000003d460 : mov dword ptr [rdi + 2], edx ; ret
0x000000000009f0f7 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000009ff27 : mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000014de95 : mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000014dcd8 : mov dword ptr [rdi + 3], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009dae7 : mov dword ptr [rdi + 3], edx ; ret
0x00000000000a1997 : mov dword ptr [rdi + 3], edx ; xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000975c3 : mov dword ptr [rdi + 4], eax ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000097523 : mov dword ptr [rdi + 4], eax ; mov rax, rdi ; ret
0x000000000003d45a : mov dword ptr [rdi + 4], eax ; xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x0000000000097613 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000009ff09 : mov dword ptr [rdi + 4], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000014dc68 : mov dword ptr [rdi + 4], edx ; mov qword ptr [rdi], rcx ; ret
0x0000000000097573 : mov dword ptr [rdi + 4], edx ; mov rax, rdi ; ret
0x000000000009dad9 : mov dword ptr [rdi + 4], edx ; ret
0x00000000000a1979 : mov dword ptr [rdi + 4], edx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000e51d0 : mov dword ptr [rdi + 4], esi ; xor eax, eax ; ret
0x00000000000975c2 : mov dword ptr [rdi + 4], r8d ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000097522 : mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x000000000009f18b : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000009ffcb : mov dword ptr [rdi + 5], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000014dbf8 : mov dword ptr [rdi + 5], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009db4b : mov dword ptr [rdi + 5], edx ; ret
0x00000000000a1a3b : mov dword ptr [rdi + 5], edx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x000000000009f1ab : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000009ffeb : mov dword ptr [rdi + 6], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000014db88 : mov dword ptr [rdi + 6], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009db5b : mov dword ptr [rdi + 6], edx ; ret
0x00000000000a1a5b : mov dword ptr [rdi + 6], edx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x000000000009f149 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000009ff89 : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000009f1cb : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a000b : mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000014db18 : mov dword ptr [rdi + 7], edx ; mov qword ptr [rdi], rcx ; ret
0x000000000009db29 : mov dword ptr [rdi + 7], edx ; ret
0x00000000000a19f9 : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a1a7b : mov dword ptr [rdi + 7], edx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000f3df8 : mov dword ptr [rdi + 8], 0 ; ret
0x000000000007bcc7 : mov dword ptr [rdi + 8], eax ; ret
0x00000000000f12f0 : mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x0000000000038c54 : mov dword ptr [rdi + 8], ecx ; ret
0x000000000004e803 : mov dword ptr [rdi + 8], edx ; jmp 0x4e7ca
0x000000000009ff6b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000009f169 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000009ffa9 : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000009f12b : mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 9] ; ret
0x0000000000038454 : mov dword ptr [rdi + 8], edx ; mov eax, ecx ; adc eax, eax ; ret
0x00000000000742cf : mov dword ptr [rdi + 8], edx ; movzx eax, byte ptr [rax] ; ret
0x000000000003cdca : mov dword ptr [rdi + 8], edx ; ret
0x00000000000a19db : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a1a19 : mov dword ptr [rdi + 8], edx ; xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000f3de8 : mov dword ptr [rdi + 8], esi ; ret
0x000000000008d242 : mov dword ptr [rdi + rdx + 0xfffffffffffffff8], ecx ; ret
0x000000000008d239 : mov dword ptr [rdi + rdx + 0xfffffffffffffffc], ecx ; ret
0x00000000000488c0 : mov dword ptr [rdi], 0 ; xor eax, eax ; pop rbx ; ret
0x000000000019417c : mov dword ptr [rdi], cs ; add byte ptr [rax], dh ; push rdi ; jmp 0x194183
0x0000000000036983 : mov dword ptr [rdi], eax ; fld xword ptr [rsp + 0xffffffffffffffe8] ; ret
0x0000000000039dae : mov dword ptr [rdi], eax ; mov eax, 1 ; ret
0x00000000000f3de5 : mov dword ptr [rdi], eax ; mov qword ptr [rdi + 8], rsi ; ret
0x000000000009293a : mov dword ptr [rdi], eax ; pop rbx ; pop rbp ; ret
0x0000000000038b44 : mov dword ptr [rdi], eax ; shl r9, cl ; mov qword ptr [rdi + 0xfffffffffffffff8], r9 ; ret
0x0000000000038c4e : mov dword ptr [rdi], eax ; shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000037b26 : mov dword ptr [rdi], eax ; xor eax, eax ; ret
0x0000000000053916 : mov dword ptr [rdi], ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000097472 : mov dword ptr [rdi], ecx ; add rdi, 2 ; mov rax, rdi ; ret
0x00000000000975f0 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000009f0c5 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009f117 : mov dword ptr [rdi], ecx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000009f0a4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009daa4 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000009fec7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000009e777 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 2], dl ; ret
0x0000000000097560 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x000000000009fef5 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000009e795 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009ff47 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000009e7d7 : mov dword ptr [rdi], ecx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000009f0f5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 6] ; ret
0x000000000009ff25 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000009dae5 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x0000000000097520 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 4], r8d ; mov rax, rdi ; ret
0x000000000009f147 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000009ff87 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000009db27 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009f167 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xb] ; ret
0x000000000009ffa7 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000009db37 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000008d237 : mov dword ptr [rdi], ecx ; mov dword ptr [rdi + rdx + 0xfffffffffffffffc], ecx ; ret
0x000000000009db48 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009db58 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000009db68 : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000003cdda : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + 8], rdx ; ret
0x000000000008d23f : mov dword ptr [rdi], ecx ; mov qword ptr [rdi + rdx + 0xfffffffffffffff8], rcx ; ret
0x0000000000097550 : mov dword ptr [rdi], ecx ; mov rax, rdi ; ret
0x0000000000097570 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x000000000009dad6 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000009db18 : mov dword ptr [rdi], ecx ; mov word ptr [rdi + 8], dx ; ret
0x0000000000038b19 : mov dword ptr [rdi], ecx ; ret
0x000000000009f094 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009feb4 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009f0b2 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000009fee2 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009f104 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000009ff34 : mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000009ea90 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 4], dl ; ret
0x000000000009ead1 : mov dword ptr [rdi], edx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000009eaf1 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009eb01 : mov dword ptr [rdi], edx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000009eb11 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009eb21 : mov dword ptr [rdi], edx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000009eaa0 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 4], dx ; ret
0x000000000009eae1 : mov dword ptr [rdi], edx ; mov word ptr [rdi + 8], dx ; ret
0x000000000001fc28 : mov dword ptr [rdi], edx ; ret
0x00000000000a1924 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a1952 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a19a4 : mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x000000000019f97c : mov dword ptr [rdi], es ; add dword ptr [rax], eax ; rcr byte ptr [rbp + 0xfffffffffffffff0] ; call qword ptr [rax]
0x00000000000975d1 : mov dword ptr [rdi], esi ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000097541 : mov dword ptr [rdi], esi ; mov byte ptr [rdi + 2], 0 ; mov rax, rdi ; ret
0x0000000000039d8f : mov dword ptr [rdi], esi ; mov eax, 1 ; mov dword ptr [rdx], ecx ; ret
0x0000000000097531 : mov dword ptr [rdi], esi ; mov rax, rdi ; ret
0x00000000000e51b1 : mov dword ptr [rdi], esi ; xor al, al ; ret
0x000000000018aba4 : mov dword ptr [rdi], gs ; add dword ptr [rax], eax ; jnp 0x18ab76 ; out dx, eax ; call rsp
0x0000000000118cfb : mov dword ptr [rdx + 0x10], eax ; xor eax, eax ; ret
0x00000000000794e5 : mov dword ptr [rdx + 0x140], edi ; pop rbx ; ret
0x0000000000078d8e : mov dword ptr [rdx + 0x20], eax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000078f44 : mov dword ptr [rdx + 0x20], esi ; mov dword ptr [rcx], eax ; ret
0x00000000001228a0 : mov dword ptr [rdx + 0x20], esi ; ret
0x0000000000025729 : mov dword ptr [rdx + 0x50], ecx ; mov dword ptr [rdx + 0x54], eax ; ret
0x000000000002572c : mov dword ptr [rdx + 0x54], eax ; ret
0x000000000012287c : mov dword ptr [rdx + 0x58], edi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x0000000000122880 : mov dword ptr [rdx + 0x68], ecx ; ret
0x000000000019d3ec : mov dword ptr [rdx + 0xffffffffffffffee], ds ; jmp qword ptr [rdx]
0x000000000015d837 : mov dword ptr [rdx + 3], eax ; lea rax, qword ptr [rdx + 6] ; ret
0x000000000009a86c : mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x000000000015d819 : mov dword ptr [rdx + 4], eax ; lea rax, qword ptr [rdx + 5] ; ret
0x000000000009a84e : mov dword ptr [rdx + 4], eax ; mov rax, rdi ; ret
0x000000000015d8cb : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000015d849 : mov dword ptr [rdx + 5], eax ; lea rax, qword ptr [rdx + 8] ; ret
0x00000000001594f9 : mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x000000000015d8eb : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000015d869 : mov dword ptr [rdx + 6], eax ; lea rax, qword ptr [rdx + 9] ; ret
0x0000000000159509 : mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000015d889 : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xa] ; ret
0x000000000015d90b : mov dword ptr [rdx + 7], eax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000009a8f0 : mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000015d8a9 : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xb] ; ret
0x000000000015d79b : mov dword ptr [rdx + 8], eax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000009a8d2 : mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x0000000000128401 : mov dword ptr [rdx + 8], edi ; ret
0x000000000018e8c5 : mov dword ptr [rdx], 0xfa55e400 ; call rsp
0x000000000018a8a4 : mov dword ptr [rdx], ds ; add dword ptr [rax], eax ; dec dword ptr [rdx + 0xffffffffffffffef] ; call rsp
0x000000000015d7c4 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 1] ; ret
0x000000000015d7f2 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x000000000015d744 : mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 7] ; ret
0x00000000000ec812 : mov dword ptr [rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000039e43 : mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000009a7e9 : mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x0000000000036cf4 : mov dword ptr [rdx], eax ; or rax, -1 ; ret
0x000000000007eb2b : mov dword ptr [rdx], eax ; xor al, 0 ; xor edi, edi ; mov r14, rdx ; call qword ptr [rax]
0x000000000007296f : mov dword ptr [rdx], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000118094 : mov dword ptr [rdx], ebp ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x76b8
0x00000000000cbdf1 : mov dword ptr [rdx], ecx ; add rsp, 0x10 ; pop rbx ; ret
0x000000000003cdfc : mov dword ptr [rdx], ecx ; mov dword ptr [rsi], ecx ; ret
0x00000000000750d6 : mov dword ptr [rdx], ecx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000039d96 : mov dword ptr [rdx], ecx ; ret
0x00000000000e3e6b : mov dword ptr [rdx], edi ; ret
0x00000000001283fe : mov dword ptr [rdx], esi ; mov qword ptr [rdx + 8], rdi ; ret
0x0000000000092e2f : mov dword ptr [rdx], esp ; mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010b948 : mov dword ptr [rip + 0x2b7e72], edx ; pop rbp ; ret
0x00000000000fd2c0 : mov dword ptr [rip + 0x2c203a], ebx ; pop rbx ; ret
0x00000000000f31b5 : mov dword ptr [rip + 0x2cd765], eax ; mov rdx, rax ; jmp 0xf314f
0x00000000000f45c6 : mov dword ptr [rip + 0x2ce064], eax ; mov rdx, rax ; jmp 0xf45a0
0x000000000019e242 : mov dword ptr [rip + 0x3068345], es ; mov byte ptr [rcx], al ; ret
0x000000000008b722 : mov dword ptr [rip + 0x336548], eax ; ret
0x0000000000037ca3 : mov dword ptr [rip + 0x3873e7], eax ; mov eax, edx ; ret
0x0000000000037c8c : mov dword ptr [rip + 0x38740e], edx ; ret
0x0000000000021a9b : mov dword ptr [rip + 0x39d78f], eax ; pop r12 ; ret
0x000000000001f570 : mov dword ptr [rip + 0x3a14da], eax ; pop rax ; pop rbx ; pop rbp ; ret
0x000000000002257d : mov dword ptr [rip + 0x3a267d], edi ; pop rbx ; ret
0x00000000000221a2 : mov dword ptr [rip + 0x3a2a58], eax ; pop rbx ; ret
0x00000000000221a1 : mov dword ptr [rip + 0x3a2a58], r8d ; pop rbx ; ret
0x00000000000e4c04 : mov dword ptr [rsi + 0x10], eax ; ret
0x000000000003d386 : mov dword ptr [rsi + 0x10], eax ; xor eax, eax ; ret
0x000000000003cd34 : mov dword ptr [rsi + 0x10], ecx ; mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x000000000003cd38 : mov dword ptr [rsi + 0x28], eax ; xor eax, eax ; ret
0x00000000000ca9f9 : mov dword ptr [rsi + 0x30], ebp ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000f0996 : mov dword ptr [rsi + 0x66], edx ; xor eax, eax ; ret
0x00000000000e50ef : mov dword ptr [rsi + 0x78], eax ; xor eax, eax ; ret
0x000000000003d3d0 : mov dword ptr [rsi + 0xc], eax ; xor eax, eax ; ret
0x000000000003d417 : mov dword ptr [rsi + 0xe], eax ; xor eax, eax ; ret
0x00000000000a3ca4 : mov dword ptr [rsi + 4], 0 ; ret
0x00000000000e4be7 : mov dword ptr [rsi + 8], 0 ; ret
0x0000000000121a01 : mov dword ptr [rsi + 8], eax ; ret
0x00000000000e4c00 : mov dword ptr [rsi + 8], ecx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x0000000000121a1f : mov dword ptr [rsi], 0 ; ret
0x00000000000fb389 : mov dword ptr [rsi], 0x16 ; ret
0x00000000000974c3 : mov dword ptr [rsi], 0x48fa4789 ; mov eax, edi ; ret
0x0000000000121a90 : mov dword ptr [rsi], 0xa ; ret
0x0000000000121a80 : mov dword ptr [rsi], 0xb ; ret
0x0000000000121ad0 : mov dword ptr [rsi], 0xc ; ret
0x00000000000a612e : mov dword ptr [rsi], 1 ; xor ebp, ebp ; mov edx, eax ; jmp 0xa60e0
0x00000000000a896e : mov dword ptr [rsi], 1 ; xor ebp, ebp ; mov edx, eax ; jmp 0xa8920
0x00000000000ab01e : mov dword ptr [rsi], 1 ; xor ebp, ebp ; mov edx, eax ; jmp 0xaafd0
0x0000000000121ac0 : mov dword ptr [rsi], 8 ; ret
0x000000000007e19b : mov dword ptr [rsi], eax ; mov rax, r8 ; ret
0x00000000000fb37c : mov dword ptr [rsi], eax ; or rax, -1 ; ret
0x0000000000073f7b : mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000003cdfe : mov dword ptr [rsi], ecx ; ret
0x00000000001188e0 : mov dword ptr [rsi], ecx ; xor eax, eax ; ret
0x00000000001183f9 : mov dword ptr [rsi], edi ; ret
0x000000000010d149 : mov dword ptr [rsi], edi ; xor eax, eax ; ret
0x0000000000195762 : mov dword ptr [rsi], es ; add dword ptr [rdi], 3 ; ret
0x00000000000367c5 : mov dword ptr [rsp + 0x10], eax ; fld xword ptr [rsp + 8] ; ret
0x00000000000815fc : mov dword ptr [rsp + 0x10], ecx ; call qword ptr [rax]
0x00000000000816d0 : mov dword ptr [rsp + 0x10], ecx ; call rdx
0x00000000000816cb : mov dword ptr [rsp + 0x20], eax ; mov qword ptr [rsp + 0x10], rcx ; call rdx
0x0000000000106b5d : mov dword ptr [rsp + 0x28], eax ; call 0x72d90
0x00000000000814e2 : mov dword ptr [rsp + 0x28], ebx ; call rax
0x00000000000814a9 : mov dword ptr [rsp + 0x28], esi ; mov rdi, r14 ; call qword ptr [rax]
0x00000000000814e1 : mov dword ptr [rsp + 0x28], r11d ; call rax
0x00000000000814dd : mov dword ptr [rsp + 0x30], edx ; mov dword ptr [rsp + 0x28], r11d ; call rax
0x0000000000039f36 : mov dword ptr [rsp + 0xffffffffffffffec], eax ; fld xword ptr [rsp + 0xffffffffffffffe8] ; ret
0x0000000000036a75 : mov dword ptr [rsp + 0xfffffffffffffffe], edi ; fldcw word ptr [rsp + 0xfffffffffffffffe] ; ret
0x000000000012066a : mov dword ptr [rsp + 8], 0 ; call qword ptr [rax]
0x0000000000087460 : mov dword ptr [rsp + 8], eax ; call qword ptr [rdx]
0x0000000000028b22 : mov dword ptr [rsp + 8], eax ; call r12
0x0000000000025b5f : mov dword ptr [rsp + 8], eax ; call r14
0x00000000000264ae : mov dword ptr [rsp + 8], eax ; call r15
0x0000000000025a66 : mov dword ptr [rsp + 8], eax ; call rbx
0x000000000012e6e5 : mov dword ptr [rsp + 8], eax ; lea rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x000000000012f46c : mov dword ptr [rsp + 8], eax ; xor eax, eax ; call rdx
0x000000000007eb83 : mov dword ptr [rsp + 8], ecx ; call qword ptr [rax]
0x000000000012a8a0 : mov dword ptr [rsp + 8], edi ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000027ea2 : mov dword ptr [rsp + 8], esi ; mov rsi, qword ptr [rsp + 0x50] ; call rax
0x00000000001210f8 : mov dword ptr [rsp], eax ; call qword ptr [r11]
0x00000000000278c2 : mov dword ptr [rsp], eax ; call qword ptr [rbx]
0x00000000000235b5 : mov dword ptr [rsp], eax ; call rbx
0x000000000011e7d4 : mov dword ptr [rsp], ecx ; call r12
0x00000000000be88d : mov dword ptr [rsp], edx ; mov rdx, qword ptr [rsp + 0x28] ; call rax
0x000000000004e03d : mov dword ptr fs:[rax], 0x16 ; jmp 0x4a263
0x00000000000f2637 : mov dword ptr fs:[rax], 0x16 ; mov eax, edi ; ret
0x00000000000f58d7 : mov dword ptr fs:[rax], 0x16 ; pop rbx ; ret
0x00000000000b1257 : mov dword ptr fs:[rax], 0x16 ; xor eax, eax ; ret
0x0000000000081fbf : mov dword ptr fs:[rax], 0xc ; xor eax, eax ; ret
0x00000000000bda64 : mov dword ptr fs:[rax], 2 ; xor eax, eax ; ret
0x0000000000022c35 : mov dword ptr fs:[rax], 9 ; mov eax, edi ; ret
0x00000000000fa330 : mov dword ptr fs:[rax], edi ; mov eax, 0xffffffff ; ret
0x00000000000bf361 : mov dword ptr fs:[rax], edx ; add rsp, 0x18 ; ret
0x00000000000f16b2 : mov dword ptr fs:[rax], edx ; or eax, -1 ; ret
0x00000000000f229e : mov dword ptr fs:[rax], edx ; or rax, -1 ; jmp 0xf226a
0x00000000000f24fe : mov dword ptr fs:[rax], edx ; or rax, -1 ; jmp 0xf24ca
0x00000000000cc09d : mov dword ptr fs:[rax], r8d ; or eax, -1 ; ret
0x0000000000114060 : mov dword ptr fs:[rbp], r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000036fc9 : mov dword ptr fs:[rcx], eax ; or rax, -1 ; ret
0x00000000000ec811 : mov dword ptr fs:[rdx], eax ; mov eax, 0xffffffff ; ret
0x0000000000036cf3 : mov dword ptr fs:[rdx], eax ; or rax, -1 ; ret
0x00000000000fb388 : mov dword ptr fs:[rsi], 0x16 ; ret
0x00000000000fb37b : mov dword ptr fs:[rsi], eax ; or rax, -1 ; ret
0x00000000000f9e4f : mov dword ptr gs:[rax + rax], ebp ; add rsp, 8 ; ret
0x0000000000145590 : mov dx, word ptr [rsi + 0xfffffffffffffffe] ; mov word ptr [rdi + 0xfffffffffffffffe], dx ; ret
0x000000000009da90 : mov dx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x00000000001200f4 : mov eax, 0x10 ; pop rbx ; pop rbp ; ret
0x00000000000a27e8 : mov eax, 0x10 ; pop rbx ; ret
0x000000000011551a : mov eax, 0x100 ; nop ; ret
0x0000000000115514 : mov eax, 0x101 ; ret
0x0000000000115521 : mov eax, 0x102 ; ret
0x000000000011550c : mov eax, 0x104 ; ret
0x000000000017a324 : mov eax, 0x10fff492 ; xchg eax, ebx ; hlt ; jmp qword ptr [rsi]
0x0000000000085437 : mov eax, 0x16 ; je 0x85440 ; ret
0x000000000003e0f9 : mov eax, 0x1b8 ; add byte ptr [rax + 1], cl ; ret
0x00000000000cc2e8 : mov eax, 0x1c ; syscall ; neg eax ; ret
0x000000000018e615 : mov eax, 0x1ec40002 ; cli ; call rsp
0x00000000000a280b : mov eax, 0x20 ; pop rbx ; ret
0x00000000000c3250 : mov eax, 0x20 ; ret
0x000000000002fea7 : mov eax, 0x200 ; ret
0x00000000000a2804 : mov eax, 0x30 ; pop rbx ; ret
0x00000000000c1c71 : mov eax, 0x3948fffb ; ret
0x00000000000d6fe5 : mov eax, 0x39c77f04 ; ret -0x3e77
0x00000000000d6fcd : mov eax, 0x39df7f04 ; ret -0x3e77
0x0000000000098139 : mov eax, 0x3d ; jmp 0x98103
0x00000000000a27fd : mov eax, 0x40 ; pop rbx ; ret
0x00000000000c32a0 : mov eax, 0x40 ; ret
0x0000000000174cdb : mov eax, 0x45155e93 ; ret 0x591c
0x000000000008d6ea : mov eax, 0x48fffffb ; mov eax, edi ; ret
0x000000000012a119 : mov eax, 0x5b000000 ; pop rbp ; ret
0x00000000000ec060 : mov eax, 0x5f ; syscall ; ret
0x00000000000a27f6 : mov eax, 0x60 ; pop rbx ; ret
0x00000000000c29f0 : mov eax, 0x66 ; syscall ; ret
0x00000000000c2a10 : mov eax, 0x68 ; syscall ; ret
0x00000000000c2a00 : mov eax, 0x6b ; syscall ; ret
0x00000000000c2a20 : mov eax, 0x6c ; syscall ; ret
0x00000000000c29e0 : mov eax, 0x6e ; syscall ; ret
0x00000000000c2c20 : mov eax, 0x6f ; syscall ; ret
0x00000000000c3159 : mov eax, 0x7d00 ; ret
0x00000000000c3188 : mov eax, 0x7e ; ret
0x00000000000c30db : mov eax, 0x7f ; ret
0x00000000000a27ef : mov eax, 0x80 ; pop rbx ; ret
0x00000000000c1c38 : mov eax, 0x8948fffb ; ret
0x00000000000ec766 : mov eax, 0x894c1f74 ; ret 0x6348
0x0000000000124947 : mov eax, 0xb8000000 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000010d138 : mov eax, 0xca ; add rsp, 0x28 ; ret
0x0000000000108cf2 : mov eax, 0xca ; syscall ; pop rdx ; pop rsi ; ret
0x000000000012b9b6 : mov eax, 0xe0 ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x00000000000fb480 : mov eax, 0xe4 ; syscall ; ret
0x00000000000c317f : mov eax, 0xfa ; ret
0x00000000000c31a0 : mov eax, 0xfc17 ; ret
0x00000000000c3190 : mov eax, 0xfffa ; ret
0x00000000000c160c : mov eax, 0xfffffff2 ; ret
0x00000000001094d1 : mov eax, 0xffffffff ; add rsp, 8 ; ret
0x00000000000257e7 : mov eax, 0xffffffff ; cmovns eax, edx ; ret
0x0000000000074667 : mov eax, 0xffffffff ; pop r12 ; ret
0x00000000001184ff : mov eax, 0xffffffff ; pop r14 ; ret
0x0000000000076b05 : mov eax, 0xffffffff ; pop r15 ; ret
0x00000000000775bd : mov eax, 0xffffffff ; pop rbp ; ret
0x000000000002c227 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000778c4 : mov eax, 0xffffffff ; pop rbx ; pop rbp ; ret
0x000000000003577e : mov eax, 0xffffffff ; pop rbx ; ret
0x0000000000036c87 : mov eax, 0xffffffff ; ret
0x0000000000048822 : mov eax, 0xffffffff ; test edx, edx ; cmovns eax, edx ; pop rbx ; ret
0x00000000000f330e : mov eax, 1 ; add rsp, 8 ; ret
0x00000000001650f0 : mov eax, 1 ; jg 0x165100 ; neg eax ; ret
0x00000000000a3870 : mov eax, 1 ; jg 0xa3879 ; neg eax ; ret
0x0000000000163046 : mov eax, 1 ; jl 0x163050 ; neg eax ; ret
0x000000000012f5f2 : mov eax, 1 ; jne 0x12f600 ; ret
0x000000000012f632 : mov eax, 1 ; jne 0x12f640 ; ret
0x0000000000039d91 : mov eax, 1 ; mov dword ptr [rdx], ecx ; ret
0x0000000000074650 : mov eax, 1 ; pop r12 ; ret
0x000000000005392d : mov eax, 1 ; pop r13 ; ret
0x000000000005385f : mov eax, 1 ; pop r14 ; ret
0x0000000000075b8b : mov eax, 1 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001028cd : mov eax, 1 ; pop rbx ; pop rbp ; ret
0x00000000000f9cb2 : mov eax, 1 ; pop rbx ; ret
0x000000000002bfd0 : mov eax, 1 ; ret
0x00000000000a3b91 : mov eax, 2 ; ret
0x0000000000046ef0 : mov eax, 3 ; jmp 0x46eba
0x00000000000f9096 : mov eax, 3 ; pop rbx ; pop rbp ; ret
0x00000000000a3ba1 : mov eax, 3 ; ret
0x00000000001143b3 : mov eax, 3 ; syscall ; ret
0x00000000000a3bb1 : mov eax, 4 ; ret
0x00000000000e5efd : mov eax, 5 ; pop r12 ; ret
0x00000000000a3bc1 : mov eax, 5 ; ret
0x00000000000a3bd1 : mov eax, 6 ; ret
0x0000000000026531 : mov eax, 7 ; jmp 0x264fa
0x0000000000106cdc : mov eax, 7 ; pop rbx ; pop rbp ; ret
0x00000000000a3be1 : mov eax, 7 ; ret
0x00000000000a2812 : mov eax, 8 ; pop rbx ; ret
0x00000000000e4f5e : mov eax, 9 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001aca7c : mov eax, ds ; add dword ptr [rax], eax ; in eax, dx ; cmc ; call qword ptr [rax]
0x00000000000c82cb : mov eax, dword ptr [r12 + 8] ; xor r12d, r12d ; jmp 0xc8298
0x000000000010857c : mov eax, dword ptr [r14 + 0xffffffffffffffd0] ; mov dword ptr [rbp + 0xffffffffffffff80], eax ; call r8
0x00000000000a241a : mov eax, dword ptr [r9 + 4] ; pop r12 ; ret
0x0000000000136ce8 : mov eax, dword ptr [rax + 0x108] ; jmp rax
0x00000000000fd9a0 : mov eax, dword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x000000000007510c : mov eax, dword ptr [rax + 0x18] ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x00000000000fd750 : mov eax, dword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x000000000007bdcc : mov eax, dword ptr [rax + 0x18] ; jmp rax
0x000000000011ce47 : mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x11ce50 ; ret
0x00000000000754ac : mov eax, dword ptr [rax + 0x20] ; jmp rax
0x00000000000752b1 : mov eax, dword ptr [rax + 0x28] ; jmp rax
0x0000000000108600 : mov eax, dword ptr [rax + 0x30] ; ret
0x00000000000fe0b7 : mov eax, dword ptr [rax + 0x38] ; ret
0x000000000007c318 : mov eax, dword ptr [rax + 0x40] ; jmp rax
0x0000000000128314 : mov eax, dword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000070c03 : mov eax, dword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000007c72c : mov eax, dword ptr [rax + 0x48] ; jmp rax
0x0000000000070ecd : mov eax, dword ptr [rax + 0x48] ; xor edx, edx ; pop r12 ; jmp rax
0x00000000000717f4 : mov eax, dword ptr [rax + 0x4c] ; ret
0x0000000000128bc4 : mov eax, dword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000048856 : mov eax, dword ptr [rax + 0x58] ; ret
0x000000000002ccee : mov eax, dword ptr [rax + 0xa8] ; ret
0x00000000000f8f81 : mov eax, dword ptr [rax + 0xc8] ; ret
0x0000000000136bef : mov eax, dword ptr [rax + 0xe8] ; jmp rax
0x000000000012dd05 : mov eax, dword ptr [rax + 8] ; jmp rax
0x00000000000f8f5a : mov eax, dword ptr [rax + 8] ; ret
0x00000000001090c7 : mov eax, dword ptr [rax + 8] ; test r8, r8 ; jne 0x109090 ; leave ; ret
0x000000000002d17a : mov eax, dword ptr [rax + rbx*8] ; test rax, rax ; je 0x2d184 ; call rax
0x000000000002fea5 : mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x0000000000030067 : mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000002fa4f : mov eax, dword ptr [rax + rdi*8 + 0x80] ; ret
0x0000000000121065 : mov eax, dword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x000000000012dcfa : mov eax, dword ptr [rax] ; jmp rax
0x000000000002ccec : mov eax, dword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000004bfee : mov eax, dword ptr [rax] ; mov qword ptr [r8], rax ; jmp 0x4bfb8
0x0000000000061dce : mov eax, dword ptr [rax] ; mov qword ptr [r8], rax ; jmp 0x61d98
0x000000000002fe7c : mov eax, dword ptr [rax] ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000048853 : mov eax, dword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000011d129 : mov eax, dword ptr [rax] ; ret
0x0000000000084444 : mov eax, dword ptr [rax] ; test rax, rax ; je 0x8444d ; call rax
0x00000000000d28e8 : mov eax, dword ptr [rbp + 0x4c] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000023f71 : mov eax, dword ptr [rbp + 0xffffffffffffffa0] ; call rax
0x00000000000be50b : mov eax, dword ptr [rbp + 0xffffffffffffffa8] ; call rax
0x00000000000f6445 : mov eax, dword ptr [rbp + 0xffffffffffffffb8] ; call rax
0x000000000012e849 : mov eax, dword ptr [rbp + 8] ; mov rsi, rsp ; mov rdi, rbp ; call qword ptr [rax]
0x0000000000073be1 : mov eax, dword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x0000000000122821 : mov eax, dword ptr [rbx + 8] ; mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x00000000000c1b48 : mov eax, dword ptr [rbx + 8] ; test rax, rax ; je 0xc1b52 ; call rax
0x000000000012b84a : mov eax, dword ptr [rbx] ; test rax, rax ; je 0x12b858 ; pop rbx ; ret
0x000000000012b8b6 : mov eax, dword ptr [rbx] ; test rax, rax ; je 0x12b86c ; pop rbx ; ret
0x00000000000c1d55 : mov eax, dword ptr [rcx + 0x10] ; test rax, rax ; je 0xc1d63 ; call rax
0x000000000009a869 : mov eax, dword ptr [rcx + 3] ; mov dword ptr [rdx + 3], eax ; mov rax, rdi ; ret
0x00000000000a241b : mov eax, dword ptr [rcx + 4] ; pop r12 ; ret
0x00000000001594f6 : mov eax, dword ptr [rcx + 5] ; mov dword ptr [rdx + 5], eax ; mov rax, rdi ; ret
0x0000000000159506 : mov eax, dword ptr [rcx + 6] ; mov dword ptr [rdx + 6], eax ; mov rax, rdi ; ret
0x000000000009a8ed : mov eax, dword ptr [rcx + 7] ; mov dword ptr [rdx + 7], eax ; mov rax, rdi ; ret
0x000000000009a90d : mov eax, dword ptr [rcx + 8] ; mov dword ptr [rdx + 8], eax ; mov rax, rdi ; ret
0x000000000013a0ea : mov eax, dword ptr [rcx + rax*4] ; mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x000000000013b9c2 : mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000015d7f0 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; lea rax, qword ptr [rdx + 3] ; ret
0x0000000000128420 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x000000000009a815 : mov eax, dword ptr [rcx] ; mov dword ptr [rdx], eax ; mov rax, rdi ; ret
0x000000000015d741 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000159411 : mov eax, dword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000015d7c1 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x000000000009a7e6 : mov eax, dword ptr [rcx] ; mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x0000000000075e8f : mov eax, dword ptr [rdi + 0x10] ; shr rdx, 2 ; sub eax, edx ; ret
0x000000000007d230 : mov eax, dword ptr [rdi + 0x10] ; sub eax, dword ptr [rsi + 0x10] ; ret
0x000000000007d258 : mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000012f37c : mov eax, dword ptr [rdi + 0x18] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012ef11 : mov eax, dword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000001219fe : mov eax, dword ptr [rdi + 0x20] ; mov dword ptr [rsi + 8], eax ; ret
0x00000000000bdec1 : mov eax, dword ptr [rdi + 0x20] ; ret
0x00000000000a37f0 : mov eax, dword ptr [rdi + 0x24] ; cmp eax, dword ptr [rsi + 0x24] ; jne 0xa3870 ; ret
0x00000000000a3805 : mov eax, dword ptr [rdi + 0x28] ; cmp eax, dword ptr [rsi + 0x28] ; jne 0xa3870 ; ret
0x0000000000121a77 : mov eax, dword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000012f2f0 : mov eax, dword ptr [rdi + 0x28] ; ret
0x0000000000073c21 : mov eax, dword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000a3810 : mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xa3870 ; ret
0x00000000000a382b : mov eax, dword ptr [rdi + 0x30] ; cmp eax, dword ptr [rsi + 0x30] ; jne 0xa3870 ; ret
0x00000000000a3840 : mov eax, dword ptr [rdi + 0x34] ; cmp eax, dword ptr [rsi + 0x34] ; jne 0xa3870 ; ret
0x00000000000a3855 : mov eax, dword ptr [rdi + 0x38] ; cmp eax, dword ptr [rsi + 0x38] ; jne 0xa3870 ; ret
0x00000000000a3860 : mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xa3870 ; ret
0x0000000000121aaf : mov eax, dword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000073b11 : mov eax, dword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x00000000000717f1 : mov eax, dword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007d501 : mov eax, dword ptr [rdi + 0x68] ; ret
0x000000000007922e : mov eax, dword ptr [rdi + 0xc0] ; pop rbx ; ret
0x00000000000e51c0 : mov eax, dword ptr [rdi + 4] ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000000f12a0 : mov eax, dword ptr [rdi + 8] ; and eax, 0x100f ; ret
0x000000000012e401 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x00000000001227b1 : mov eax, dword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000012ed19 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000012ed29 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000012dd01 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000012dcf6 : mov eax, dword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x000000000012c019 : mov eax, dword ptr [rdi + 8] ; mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x0000000000122741 : mov eax, dword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000002f933 : mov eax, dword ptr [rdi + rax] ; ret
0x0000000000073b80 : mov eax, dword ptr [rdi] ; and eax, 0x200 ; ret
0x0000000000073b50 : mov eax, dword ptr [rdi] ; and eax, 0x804 ; ret
0x0000000000128cb0 : mov eax, dword ptr [rdi] ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000108dd5 : mov eax, dword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x00000000000bdfc0 : mov eax, dword ptr [rdi] ; ret
0x0000000000074270 : mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x0000000000074280 : mov eax, dword ptr [rdi] ; shr eax, 5 ; and eax, 1 ; ret
0x0000000000125554 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x125560 ; ret
0x000000000012c7e4 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x12c7f0 ; ret
0x00000000000a42d4 : mov eax, dword ptr [rdi] ; test eax, eax ; jne 0xa42c8 ; xor eax, eax ; ret
0x00000000000717cb : mov eax, dword ptr [rdx + 0x48] ; cmp eax, dword ptr [rdx + 0x4c] ; cmovne eax, ecx ; ret
0x00000000000356f3 : mov eax, dword ptr [rdx + rax*4 + 8] ; add rax, qword ptr [rdi + 0x20] ; pop rbx ; ret
0x000000000008fb66 : mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000121ee8 : mov eax, dword ptr [rdx + rax*8] ; jmp rax
0x00000000000775c8 : mov eax, dword ptr [rdx] ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000000e3e68 : mov eax, dword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x00000000000752e7 : mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000076050 : mov eax, dword ptr [rdx] ; ret
0x0000000000134691 : mov eax, dword ptr [rip + 0x288469] ; jmp rax
0x0000000000134641 : mov eax, dword ptr [rip + 0x2884b1] ; pop r12 ; jmp rax
0x00000000001345e1 : mov eax, dword ptr [rip + 0x288509] ; pop r12 ; jmp rax
0x00000000001361b2 : mov eax, dword ptr [rip + 0x28a6d8] ; call qword ptr [rax]
0x00000000001346f2 : mov eax, dword ptr [rip + 0x28c198] ; call qword ptr [rax]
0x0000000000112ea1 : mov eax, dword ptr [rip + 0x2adb49] ; ret
0x00000000000fe0b1 : mov eax, dword ptr [rip + 0x2c0da9] ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000832bf : mov eax, dword ptr [rip + 0x33bc0b] ; mov qword ptr [rax], rdi ; ret
0x0000000000081708 : mov eax, dword ptr [rip + 0x33d6aa] ; xor edi, edi ; call qword ptr [rax]
0x000000000007d4e1 : mov eax, dword ptr [rip + 0x342cb9] ; ret
0x0000000000037c60 : mov eax, dword ptr [rip + 0x38742a] ; ret
0x0000000000037c50 : mov eax, dword ptr [rip + 0x38744a] ; ret
0x000000000002f9fd : mov eax, dword ptr [rip + 0x38f3d5] ; mov qword ptr [rax], rdx ; ret
0x000000000002c0e1 : mov eax, dword ptr [rip + 0x3949d9] ; ret
0x0000000000023761 : mov eax, dword ptr [rip + 0x3a14e1] ; ret
0x0000000000023751 : mov eax, dword ptr [rip + 0x3a1501] ; ret
0x0000000000030061 : mov eax, dword ptr [rsi + 0x70] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x0000000000030071 : mov eax, dword ptr [rsi + 0x78] ; movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x000000000010857d : mov eax, dword ptr [rsi + 0xffffffffffffffd0] ; mov dword ptr [rbp + 0xffffffffffffff80], eax ; call r8
0x00000000000d2c29 : mov eax, dword ptr [rsi + 8] ; mov qword ptr [rax + 0x20], rsi ; xor eax, eax ; ret
0x0000000000118cf7 : mov eax, dword ptr [rsi + 8] ; mov qword ptr [rdx + 0x10], rax ; xor eax, eax ; ret
0x000000000002ef61 : mov eax, dword ptr [rsi + rdx*8 + 0x80] ; ret
0x0000000000075242 : mov eax, dword ptr [rsi] ; pop rbx ; ret
0x00000000000afa74 : mov eax, dword ptr [rsp + 0x10] ; add rsp, 0x20 ; pop rbx ; ret
0x00000000000f611a : mov eax, dword ptr [rsp + 0x10] ; call rax
0x00000000000220f6 : mov eax, dword ptr [rsp + 0x18] ; add rsp, 0x28 ; jmp rax
0x0000000000021ebf : mov eax, dword ptr [rsp + 0x18] ; call rax
0x0000000000029c09 : mov eax, dword ptr [rsp + 0x1c] ; jmp 0x29bd1
0x000000000002add9 : mov eax, dword ptr [rsp + 0x24] ; jmp 0x2ada1
0x0000000000026fc0 : mov eax, dword ptr [rsp + 0x28] ; mov qword ptr [rax], rbx ; jmp 0x26f8b
0x000000000002a4dc : mov eax, dword ptr [rsp + 0x50] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000000286c0 : mov eax, dword ptr [rsp + 0x58] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000000280bf : mov eax, dword ptr [rsp + 0x78] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000000c1834 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x28 ; ret
0x0000000000136ea6 : mov eax, dword ptr [rsp + 0xc] ; add rsp, 0x48 ; ret
0x0000000000037076 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000f1f66 : mov eax, dword ptr [rsp + 8] ; add rsp, 0x28 ; ret
0x00000000000c82cc : mov eax, dword ptr [rsp + 8] ; xor r12d, r12d ; jmp 0xc8298
0x00000000001349b4 : mov eax, dword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000125c24 : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000f16d7 : mov eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000000fe113 : mov eax, dword ptr [rsp] ; add rsp, 0x38 ; ret
0x00000000000fe174 : mov eax, dword ptr [rsp] ; add rsp, 0x40 ; ret
0x00000000000518c8 : mov eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000082172 : mov eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000022aea : mov eax, eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000003c979 : mov eax, eax ; or rax, rdx ; ret
0x000000000004f2ba : mov eax, eax ; ret
0x0000000000104b9c : mov eax, eax ; sub eax, r9d ; ret
0x000000000007a0fa : mov eax, ebp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000745ca : mov eax, ebp ; mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000af9d9 : mov eax, ebp ; pop r13 ; pop r14 ; ret
0x0000000000073089 : mov eax, ebp ; pop r13 ; ret
0x0000000000070269 : mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006e676 : mov eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000004f203 : mov eax, ebp ; pop rbp ; ret
0x00000000000f5b40 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000006fa25 : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ca46d : mov eax, ebp ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000004f185 : mov eax, ebp ; pop rbx ; pop rbp ; ret
0x0000000000038593 : mov eax, ebx ; adc rax, rdx ; pop rbp ; pop rbx ; ret
0x000000000012b411 : mov eax, ebx ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x00000000000b1218 : mov eax, ebx ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000092d17 : mov eax, ebx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000be682 : mov eax, ebx ; call rax
0x000000000019a5f4 : mov eax, ebx ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000118abb : mov eax, ebx ; mov byte ptr [rdi + rdx], 0 ; pop rbx ; ret
0x00000000000f8b8f : mov eax, ebx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000002cbf6 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000001f664 : mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003400f : mov eax, ebx ; pop rbx ; pop rbp ; ret
0x000000000003cb1b : mov eax, ebx ; pop rbx ; ret
0x0000000000038457 : mov eax, ecx ; adc eax, eax ; ret
0x0000000000094009 : mov eax, ecx ; jmp 0x93e62
0x00000000000f1472 : mov eax, ecx ; pop r12 ; ret
0x00000000000306e3 : mov eax, ecx ; pop r13 ; ret
0x0000000000085dc2 : mov eax, ecx ; pop r14 ; ret
0x0000000000030669 : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000f1546 : mov eax, ecx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003570f : mov eax, ecx ; pop rbx ; ret
0x0000000000035719 : mov eax, ecx ; ret
0x00000000001049e9 : mov eax, ecx ; sub eax, edx ; ret
0x000000000010987f : mov eax, edi ; add rsp, 8 ; ret
0x000000000002fed0 : mov eax, edi ; and eax, 0x7f ; ret
0x000000000010d1e6 : mov eax, edi ; and eax, 0xffffff ; ret
0x000000000010d1c0 : mov eax, edi ; bswap eax ; ret
0x00000000000497c9 : mov eax, edi ; cmovae rax, rsi ; pop rbx ; ret
0x00000000000498a5 : mov eax, edi ; cmovae rax, rsi ; ret
0x000000000003c981 : mov eax, edi ; cqo ; idiv rsi ; ret
0x000000000007864a : mov eax, edi ; jmp 0x78610
0x00000000000f3f0a : mov eax, edi ; mov byte ptr [r9 + 0xffffffffffffffff], 0 ; ret
0x0000000000097587 : mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x0000000000102a5c : mov eax, edi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007e610 : mov eax, edi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000109ab1 : mov eax, edi ; pop rbx ; ret
0x0000000000022c3c : mov eax, edi ; ret
0x000000000010d1d0 : mov eax, edi ; ror ax, 8 ; ret
0x000000000003c922 : mov eax, edi ; sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x000000000010b76a : mov eax, edi ; sar rax, 6 ; ret
0x000000000010d266 : mov eax, edi ; shr eax, 0x18 ; ret
0x0000000000104bc0 : mov eax, edi ; sub eax, esi ; ret
0x00000000000f2ff9 : mov eax, edx ; add rsp, 0x48 ; ret
0x00000000000b56ac : mov eax, edx ; add rsp, 8 ; ret
0x000000000005e650 : mov eax, edx ; pop r12 ; ret
0x0000000000094dfc : mov eax, edx ; pop r14 ; ret
0x000000000005371b : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000493ff : mov eax, edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005e4eb : mov eax, edx ; pop rbx ; pop rbp ; ret
0x00000000000391d5 : mov eax, edx ; pop rbx ; ret
0x0000000000037ca9 : mov eax, edx ; ret
0x0000000000104a19 : mov eax, edx ; sub eax, r9d ; ret
0x0000000000036bb6 : mov eax, esi ; mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x00000000000bae42 : mov eax, esi ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x000000000004989c : mov eax, esi ; nop ; ret
0x000000000010a435 : mov eax, esi ; pop r12 ; ret
0x00000000000bdf9d : mov eax, esi ; pop r14 ; ret
0x00000000000c3474 : mov eax, esi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003c40a : mov eax, esi ; pop rbx ; pop rbp ; ret
0x0000000000049791 : mov eax, esi ; pop rbx ; ret
0x00000000000499d4 : mov eax, esi ; ret
0x0000000000118c4b : mov eax, esi ; shl eax, 4 ; add eax, 8 ; ret
0x00000000000b231b : mov eax, esp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000af955 : mov eax, esp ; pop r12 ; pop r13 ; ret
0x000000000006d9a0 : mov eax, esp ; pop r12 ; ret
0x000000000007ce1c : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006d5d4 : mov eax, esp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000af954 : mov eax, r12d ; pop r12 ; pop r13 ; ret
0x00000000000af882 : mov eax, r12d ; pop r12 ; ret
0x000000000007ce1b : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000073265 : mov eax, r12d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000af9d8 : mov eax, r13d ; pop r13 ; pop r14 ; ret
0x0000000000073088 : mov eax, r13d ; pop r13 ; ret
0x00000000000e5da5 : mov eax, r13d ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000518c7 : mov eax, r8d ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x000000000004f2b9 : mov eax, r8d ; ret
0x0000000000104b9b : mov eax, r8d ; sub eax, r9d ; ret
0x00000000000f1471 : mov eax, r9d ; pop r12 ; ret
0x00000000000f1545 : mov eax, r9d ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001049e8 : mov eax, r9d ; sub eax, edx ; ret
0x000000000017a0b4 : mov ebp, 0x15fff3f8 ; add dh, ah ; call rcx
0x000000000018e755 : mov ebp, 0x33b40002 ; cli ; jmp rsp
0x00000000001090e8 : mov ebp, 0x3948002b ; ret -0x7bf1
0x0000000000097c21 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x0000000000097c31 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dh ; ret
0x0000000000097c11 : mov ebp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000000f5eaf : mov ebp, 0x49fff295 ; mov edi, dword ptr [rbp] ; call rbx
0x000000000013dad1 : mov ebp, 0x63480003 ; ret 0xf66
0x000000000017389d : mov ebp, 0xc1c0bfbe ; ret -0x3b3d
0x0000000000179cf1 : mov ebp, 0xc2c4fff3 ; rep jmp qword ptr [rdi] ; ret -0xd
0x000000000012a085 : mov ebp, 0xe8000186 ; ret -0x27
0x0000000000097c91 : mov ebp, 0xea8348c0 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x0000000000097c71 : mov ebp, 0xea8348c0 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x0000000000097c51 : mov ebp, 0xea8348c0 ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x0000000000097d42 : mov ebp, 0xf80148c0 ; add rax, r8 ; ret
0x000000000008b3a8 : mov ebp, 0xf80148c0 ; ret
0x000000000008b62c : mov ebp, 0xf80148c6 ; ret
0x0000000000175906 : mov ebp, 0xfb67d10d ; ret
0x00000000000c4960 : mov ebp, 0xfffffbd0 ; call r15
0x0000000000113284 : mov ebp, 0xfffffdfc ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret -0x2ee0
0x00000000000c6014 : mov ebp, 0xfffffe30 ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret 0x775
0x00000000000cd2e0 : mov ebp, 0xffffff58 ; call rbx
0x00000000000d9a82 : mov ebp, dword ptr [rax + 0x70] ; mov r11, rax ; mov edx, r8d ; jmp 0xd9a94
0x0000000000112058 : mov ebp, dword ptr [rbx + 0x50] ; call 0x11e270
0x00000000001067f2 : mov ebp, dword ptr [rbx] ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret 0x2b49
0x0000000000001bed : mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x00000000000f087d : mov ebp, dword ptr [rsi] ; call 0xecae0
0x00000000000ac89e : mov ebp, eax ; call 0x38ac0
0x000000000005a37d : mov ebp, eax ; jmp 0x56602
0x000000000012bb79 : mov ebp, eax ; mov r12d, dword ptr [rax] ; jmp 0x12bb84
0x00000000001959f9 : mov ebp, ebp ; call qword ptr [rax]
0x0000000000195859 : mov ebp, ebp ; call qword ptr [rdx]
0x00000000001986dd : mov ebp, ebp ; jmp qword ptr [rdx]
0x00000000001158dd : mov ebp, ebx ; pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000036bbc : mov ebp, ecx ; jmp rdx
0x0000000000192cad : mov ebp, edx ; jmp qword ptr [rdx]
0x000000000006f0b6 : mov ebp, edx ; mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x00000000000a6895 : mov ebp, esi ; setne dl ; jmp 0xa68a8
0x00000000000ab745 : mov ebp, esi ; setne dl ; jmp 0xab758
0x000000000011e8e5 : mov ebp, esp ; call r15
0x000000000010b834 : mov ebp, esp ; pop rbp ; ret
0x00000000000986ac : mov ebx, 0x142c641 ; add bl, al ; mov r10, r8 ; jmp 0x986a9
0x000000000018e6f5 : mov ebx, 0x2df40002 ; cli ; jmp rsp
0x00000000000e4e11 : mov ebx, 0x39fffde9 ; ret
0x000000000009391f : mov ebx, 0x8948fff8 ; ret
0x00000000000d95c5 : mov ebx, 0x8dfffffd ; add dword ptr [r8 + 0xffffffffffffff83], ecx ; ret
0x00000000000d1971 : mov ebx, 0xa4 ; add dword ptr [rdi], ecx ; lahf ; ret -0x7d15
0x00000000000d5ba1 : mov ebx, 0xa4 ; add dword ptr [rdi], ecx ; lahf ; ret 0xee9
0x0000000000108d24 : mov ebx, 0xafb8341 ; je 0x108d2c ; ret
0x0000000000187659 : mov ebx, 0xbb01fffd ; std ; call rax
0x0000000000187599 : mov ebx, 0xbb01fffd ; std ; jmp qword ptr [rcx]
0x000000000017389b : mov ebx, 0xbfbebdbc ; rol cl, -0x3e ; ret
0x0000000000124796 : mov ebx, 0xc8 ; call rax
0x0000000000199047 : mov ebx, 0xd1cffed ; push rsi ; cmpsb byte ptr [rsi], byte ptr es:[rdi] ; in eax, dx ; jmp qword ptr [rdx]
0x000000000018768d : mov ebx, 0xdb58fffd ; sti ; jmp qword ptr [rax]
0x00000000000badc2 : mov ebx, 1 ; jmp 0xbad8b
0x00000000001031df : mov ebx, dword ptr [rdi] ; mov edi, 0x20 ; call 0x1f410
0x000000000012237b : mov ebx, eax ; jne 0x122312 ; xor eax, eax ; pop rbx ; ret
0x00000000000d9a86 : mov ebx, eax ; mov edx, r8d ; jmp 0xd9a94
0x00000000000f1a1f : mov ebx, eax ; mov rax, rbx ; pop rbx ; ret
0x000000000012f729 : mov ebx, eax ; test r14d, r14d ; jle 0x12f768 ; call 0x12b940
0x000000000007c10a : mov ebx, edi ; je 0x7c118 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000101f59 : mov ebx, edi ; jmp 0x101c9b
0x00000000000a9071 : mov ebx, edi ; setne dl ; jmp 0xa9087
0x000000000002e7a6 : mov ebx, edi ; test rax, rax ; je 0x2e7af ; call rax
0x00000000001ab57c : mov ebx, es ; add dword ptr [rax], eax ; sal ebp, cl ; jmp qword ptr [rsi]
0x00000000000c126e : mov ebx, esp ; call 0x3d4b0
0x00000000001aa88c : mov ebx, gs ; hlt ; jmp qword ptr [rdx]
0x00000000000519ea : mov ecx, 0x1480001 ; ret
0x0000000000020943 : mov ecx, 0x89000a7e ; ret -0x3fcf
0x0000000000173899 : mov ecx, 0xbdbcbbba ; mov esi, 0xc2c1c0bf ; ret
0x00000000001945d7 : mov ecx, 0xd1cffeb ; jrcxz 0x194596 ; jmp 0x1945df
0x000000000019973f : mov ecx, 0xd1cffed ; jge 0x1996ff ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001994df : mov ecx, 0xd1cffed ; jl 0x19949f ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000199627 : mov ecx, 0xd1cffed ; jp 0x1995e7 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000000314c : mov ecx, 0xd4a3e95a ; pop rsp ; ret 0x52c0
0x000000000018bead : mov ecx, 0xd7e40001 ; hlt ; jmp rsp
0x0000000000082679 : mov ecx, 0xf6000005 ; ret
0x000000000002d501 : mov ecx, dword ptr [rax + rdi*8] ; test rcx, rcx ; je 0x2d50b ; call rcx
0x0000000000128f36 : mov ecx, dword ptr [rbp + 0xfffffffffffffe98] ; call rcx
0x0000000000104855 : mov ecx, dword ptr [rbp + 0xffffffffffffffb0] ; mov r10, qword ptr [rbp + 0xffffffffffffffb8] ; sete dl ; jmp 0x1047ea
0x000000000011f917 : mov ecx, dword ptr [rcx + 0x18] ; jmp rcx
0x00000000001122e4 : mov ecx, dword ptr [rcx] ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x0000000000047256 : mov ecx, dword ptr [rdi + 0x30] ; mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x00000000001437de : mov ecx, dword ptr [rdi + 0xffffffffffffff8d] ; or al, 0xb ; jmp r9
0x000000000007d221 : mov ecx, dword ptr [rdi] ; mov qword ptr [rdx], rcx ; ret
0x000000000008fb63 : mov ecx, dword ptr [rdx + rcx*4] ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x00000000001371e7 : mov ecx, dword ptr [rdx] ; mov rdx, r12 ; add r9, r11 ; call rax
0x0000000000047596 : mov ecx, dword ptr [rsi + 0x30] ; mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x0000000000145f53 : mov ecx, dword ptr [rsi + 0xfffffffffffffffc] ; mov dword ptr [rdi + 0xfffffffffffffff9], edx ; mov dword ptr [rdi + 0xfffffffffffffffc], ecx ; ret
0x0000000000145d53 : mov ecx, dword ptr [rsi + 0xfffffffffffffffc] ; mov dword ptr [rdi + 0xfffffffffffffffa], edx ; mov dword ptr [rdi + 0xfffffffffffffffc], ecx ; ret
0x0000000000145b53 : mov ecx, dword ptr [rsi + 0xfffffffffffffffc] ; mov dword ptr [rdi + 0xfffffffffffffffb], edx ; mov dword ptr [rdi + 0xfffffffffffffffc], ecx ; ret
0x000000000009dac0 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 4], dh ; mov dword ptr [rdi], ecx ; ret
0x000000000009db01 : mov ecx, dword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x000000000014df73 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 1], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000014df03 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 2], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000014de93 : mov ecx, dword ptr [rsi] ; mov dword ptr [rdi + 3], edx ; mov dword ptr [rdi], ecx ; ret
0x000000000014ddb5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014dd45 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014dcd5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014dc65 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014dbf5 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014db85 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014db15 : mov ecx, dword ptr [rsi] ; mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014e055 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000009daa1 : mov ecx, dword ptr [rsi] ; mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x00000000000a4f89 : mov ecx, dword ptr [rsp + 0x10] ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x0000000000124c95 : mov ecx, dword ptr [rsp + 0x18] ; call rcx
0x00000000000b046b : mov ecx, dword ptr [rsp + 0x18] ; mov rdi, qword ptr [r13] ; call r12
0x0000000000124a9e : mov ecx, dword ptr [rsp + 0x20] ; call rcx
0x00000000001216ae : mov ecx, dword ptr [rsp + 8] ; call rcx
0x000000000003d7a4 : mov ecx, eax ; jmp 0x3d684
0x0000000000121a58 : mov ecx, eax ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x00000000000f1552 : mov ecx, eax ; pop rbp ; mov eax, r9d ; pop r12 ; ret
0x0000000000097876 : mov ecx, eax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000011ecf5 : mov ecx, ebp ; call rbx
0x00000000000a5142 : mov ecx, ebp ; mov rdi, rbp ; call rbx
0x000000000019a7a4 : mov ecx, ebx ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000974fe : mov ecx, ecx ; movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x0000000000097864 : mov ecx, edi ; mov qword ptr [rdx], rcx ; ret
0x0000000000071b51 : mov ecx, edi ; mov rdi, r13 ; xor r8d, r8d ; call r12
0x000000000003dc1b : mov ecx, edx ; jmp 0x3db44
0x000000000007c727 : mov ecx, edx ; xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000179141 : mov ecx, esi ; jmp qword ptr [rax]
0x00000000000f3e90 : mov ecx, esi ; mov byte ptr [r9 + 0xffffffffffffffff], 0 ; ret
0x0000000000085435 : mov ecx, esi ; mov eax, 0x16 ; je 0x85440 ; ret
0x00000000000a49eb : mov ecx, esi ; mov rdi, qword ptr [r13] ; call r12
0x00000000000f3114 : mov edi, 0x1000 ; call 0x1f410
0x00000000001031e1 : mov edi, 0x20 ; call 0x1f410
0x0000000000102de8 : mov edi, 0x2000004 ; call rax
0x0000000000108e9e : mov edi, 0x3948002b ; ret -0x258b
0x000000000018e7b5 : mov edi, 0x3ac40002 ; cli ; jmp rsp
0x000000000003d1d3 : mov edi, 0x4800387b ; add esp, 8 ; ret
0x00000000000b8ed0 : mov edi, 0x487c8d44 ; ror byte ptr [rax + 0xffffffffffffff83], 1 ; ret
0x00000000001ab16d : mov edi, 0x97500001 ; cmc ; call rsp
0x00000000000d7039 : mov edi, 0xb8643b45 ; add al, 0x7f ; fistp qword ptr [rcx] ; ret -0x3e77
0x00000000000d6fc9 : mov edi, 0xb86c3b41 ; add al, 0x7f ; fistp qword ptr [rcx] ; ret -0x3e77
0x0000000000179190 : mov edi, 0xb8fff1e2 ; loop 0x179188 ; jmp rax
0x00000000000dc975 : mov edi, 0xbe443b44 ; add al, 0x7f ; fistp qword ptr [rcx] ; ret -0x3e77
0x00000000001792b1 : mov edi, 0xc150fffd ; std ; call qword ptr [rax + 0xffffffffffffffc3]
0x000000000006f0ba : mov edi, 0xe0 ; call rax
0x000000000006f08e : mov edi, 0xe0 ; jmp rax
0x00000000001037ee : mov edi, 0xe8000001 ; stc ; ret
0x00000000000a26d4 : mov edi, 0xf000000 ; popfq ; ret -0x157f
0x00000000000c4d22 : mov edi, 0xf6000000 ; ret
0x00000000001201c4 : mov edi, 1 ; call 0x12c460
0x00000000000efaf5 : mov edi, 1 ; call 0xebd70
0x00000000000e562b : mov edi, 7 ; call 0xf18e0
0x000000000002339f : mov edi, dword ptr [rax + 0x18] ; mov qword ptr [rbp + 0xffffffffffffff98], rax ; call rcx
0x0000000000076008 : mov edi, dword ptr [rax + 0x40] ; jmp 0x75fd0
0x00000000000f5ff3 : mov edi, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x0000000000070822 : mov edi, dword ptr [rbp + 0x70] ; cmp edi, ebx ; je 0x7082e ; call 0xecae9
0x00000000000c495f : mov edi, dword ptr [rbp + 0xfffffffffffffbd0] ; call r15
0x00000000000cd2df : mov edi, dword ptr [rbp + 0xffffffffffffff58] ; call rbx
0x00000000000cb715 : mov edi, dword ptr [rbp + 0xffffffffffffff90] ; movsx esi, byte ptr [rax] ; call 0x879e0
0x00000000000be595 : mov edi, dword ptr [rbp + 0xffffffffffffff98] ; call r14
0x00000000000a49ee : mov edi, dword ptr [rbp] ; call r12
0x00000000000f5c4a : mov edi, dword ptr [rbp] ; call rbx
0x00000000000236ea : mov edi, dword ptr [rbx + 0x18] ; call rax
0x00000000001123dd : mov edi, dword ptr [rbx + 0x48] ; test rdi, rdi ; jne 0x1123d0 ; pop rbx ; ret
0x00000000000f7738 : mov edi, dword ptr [rbx] ; call r12
0x0000000000125551 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x125560 ; ret
0x000000000012c7e1 : mov edi, dword ptr [rdi + 0x40] ; mov eax, dword ptr [rdi] ; test eax, eax ; jne 0x12c7f0 ; ret
0x000000000004725a : mov edi, dword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000006f0b9 : mov edi, dword ptr [rdi + 0xe0] ; call rax
0x000000000006f08d : mov edi, dword ptr [rdi + 0xe0] ; jmp rax
0x00000000000f5bf8 : mov edi, dword ptr [rdi] ; call rbx
0x0000000000107054 : mov edi, dword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x0000000000175bc6 : mov edi, dword ptr [rdx] ; ret
0x00000000000f5bb7 : mov edi, dword ptr [rsi] ; call rbx
0x000000000002bf6d : mov edi, dword ptr [rsp + 0x10] ; call r15
0x0000000000025b5b : mov edi, dword ptr [rsp + 0x40] ; mov dword ptr [rsp + 8], eax ; call r14
0x00000000000264aa : mov edi, dword ptr [rsp + 0x40] ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000025a62 : mov edi, dword ptr [rsp + 0x40] ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000029eb0 : mov edi, dword ptr [rsp + 0x48] ; mov dword ptr [rsp + 8], eax ; call r14
0x0000000000028499 : mov edi, dword ptr [rsp + 0x48] ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000028b1e : mov edi, dword ptr [rsp + 0x50] ; mov dword ptr [rsp + 8], eax ; call r12
0x0000000000029534 : mov edi, dword ptr [rsp + 0x50] ; mov dword ptr [rsp + 8], eax ; call r15
0x0000000000027792 : mov edi, dword ptr [rsp + 0x58] ; mov dword ptr [rsp + 8], eax ; call rbx
0x00000000000278bd : mov edi, dword ptr [rsp + 0x70] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000000220a4 : mov edi, dword ptr [rsp + 8] ; add rsp, 0x18 ; jmp rax
0x00000000000f6115 : mov edi, dword ptr [rsp + 8] ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000000f6040 : mov edi, dword ptr [rsp] ; call rbx
0x00000000000a4706 : mov edi, dword ptr [rsp] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000000ecb0e : mov edi, dword ptr [rsp] ; mov rdx, rax ; call 0x108d60
0x000000000012a2a7 : mov edi, eax ; call qword ptr [r10]
0x00000000000cdaf8 : mov edi, eax ; call rbx
0x00000000000be161 : mov edi, eax ; je 0xbe190 ; mov rdi, r15 ; call r14
0x00000000000499cd : mov edi, eax ; mov byte ptr [rsi], dl ; jne 0x499b8 ; mov rax, rsi ; ret
0x000000000011f914 : mov edi, eax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000039237 : mov edi, ebp ; call 0x384b0
0x00000000000707e7 : mov edi, ebp ; call 0xecae9
0x0000000000120bfb : mov edi, ebp ; call qword ptr [rax]
0x000000000012241a : mov edi, ebp ; call qword ptr [rbx]
0x00000000000f7841 : mov edi, ebp ; call r14
0x00000000001203aa : mov edi, ebp ; call rax
0x00000000000f7389 : mov edi, ebp ; call rbx
0x000000000012f111 : mov edi, ebp ; call rcx
0x0000000000086d2b : mov edi, ebp ; call rdx
0x000000000012e70c : mov edi, ebp ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x0000000000112055 : mov edi, ebp ; mov rbp, qword ptr [rbx + 0x50] ; call 0x11e270
0x00000000000c126b : mov edi, ebp ; mov rbx, rsp ; call 0x3d4b0
0x0000000000128f33 : mov edi, ebp ; mov rcx, qword ptr [rbp + 0xfffffffffffffe98] ; call rcx
0x0000000000124c92 : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000124a9b : mov edi, ebp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000011ecf2 : mov edi, ebp ; mov rcx, r13 ; call rbx
0x0000000000022e85 : mov edi, ebp ; mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x000000000012188e : mov edi, ebp ; xor eax, eax ; pop rbp ; jmp rdx
0x0000000000071b54 : mov edi, ebp ; xor r8d, r8d ; call r12
0x000000000010c813 : mov edi, ebx ; call 0x78b10
0x0000000000122828 : mov edi, ebx ; call qword ptr [rax]
0x000000000002c097 : mov edi, ebx ; call r12
0x00000000000238ed : mov edi, ebx ; call r15
0x000000000006e3c0 : mov edi, ebx ; call r8
0x0000000000050b25 : mov edi, ebx ; call rax
0x000000000011e7d1 : mov edi, ebx ; mov qword ptr [rsp], rcx ; call r12
0x000000000011e8e2 : mov edi, ebx ; mov r13, rsp ; call r15
0x00000000000f0879 : mov edi, ebx ; mov r13d, dword ptr fs:[r14] ; call 0xecae0
0x00000000001367a3 : mov edi, ebx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000000f5b3d : mov edi, ebx ; mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x00000000001216ab : mov edi, ebx ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x0000000000086456 : mov edi, ebx ; mov rdx, r15 ; call rax
0x00000000000754a8 : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000000752ad : mov edi, ebx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000135f8a : mov edi, ebx ; pop rbx ; mov rsi, rbp ; pop rbp ; jmp rax
0x000000000012db80 : mov edi, ebx ; pop rbx ; pop rbp ; jmp rax
0x00000000000874b6 : mov edi, ecx ; call rcx
0x00000000000815f9 : mov edi, ecx ; mov qword ptr [rsp + 0x10], rcx ; call qword ptr [rax]
0x00000000000e96e2 : mov edi, edi ; call 0x1f470
0x0000000000075906 : mov edi, edi ; call 0x71b80
0x0000000000070812 : mov edi, edi ; call 0xecae9
0x00000000001209f3 : mov edi, edi ; call qword ptr [rax]
0x00000000000be166 : mov edi, edi ; call r14
0x00000000000861b6 : mov edi, edi ; call rax
0x00000000000f691e : mov edi, edi ; call rbx
0x0000000000086c53 : mov edi, edi ; mov rdx, rbx ; mov rsi, r13 ; call rax
0x00000000000fed74 : mov edi, edi ; movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x0000000000108dd8 : mov edi, edx ; jmp rax
0x0000000000049a51 : mov edi, edx ; mov byte ptr [rsi], al ; jne 0x49a30 ; mov rax, rsi ; ret
0x00000000001065c2 : mov edi, esi ; call 0x1028b0
0x000000000010669b : mov edi, esi ; call 0x102960
0x00000000000e33d0 : mov edi, esi ; call 0xdf670
0x00000000000814ae : mov edi, esi ; call qword ptr [rax]
0x0000000000121448 : mov edi, esi ; call rax
0x00000000000f68fe : mov edi, esi ; call rbx
0x0000000000023f6e : mov edi, esi ; mov rax, qword ptr [rbp + 0xffffffffffffffa0] ; call rax
0x00000000000f6442 : mov edi, esi ; mov rax, qword ptr [rbp + 0xffffffffffffffb8] ; call rax
0x00000000001066f9 : mov edi, esi ; xor eax, eax ; call 0x102960
0x000000000001ff62 : mov edi, esp ; call qword ptr [r14]
0x0000000000188195 : mov edi, esp ; call qword ptr [rdx + 0x22fffc8a]
0x000000000019d571 : mov edi, esp ; call qword ptr [rdx]
0x000000000008403a : mov edi, esp ; call rax
0x00000000000f68b5 : mov edi, esp ; call rbx
0x0000000000121f79 : mov edi, esp ; call rdx
0x000000000019ea81 : mov edi, gs ; jmp qword ptr [rax]
0x000000000019eab1 : mov edi, gs ; jmp qword ptr [rdx]
0x00000000000707e6 : mov edi, r13d ; call 0xecae9
0x0000000000070811 : mov edi, r15d ; call 0xecae9
0x00000000001154ca : mov edx, 0x104 ; cmove eax, edx ; ret
0x00000000001154ac : mov edx, 0x107 ; cmove eax, edx ; ret
0x000000000019acdd : mov edx, 0x10d00000 ; out dx, al ; jmp qword ptr [rcx]
0x00000000000048f8 : mov edx, 0x1200002a ; add byte ptr [rax + rax], cl ; nop ; ret 3
0x00000000000794e6 : mov edx, 0x140 ; pop rbx ; ret
0x000000000018e6d5 : mov edx, 0x29540002 ; cli ; call rsp
0x00000000000869d2 : mov edx, 0x480033b1 ; add esp, 0x18 ; ret
0x0000000000128112 : mov edx, 0x48fff084 ; mov edx, eax ; jmp 0x1280da
0x00000000001882cc : mov edx, 0x60fffc84 ; test bh, ah ; call rax
0x00000000000d2d5f : mov edx, 0x75cf3840 ; ret
0x00000000001199b2 : mov edx, 0x83fffffe ; ret -0x7cfd
0x000000000017507e : mov edx, 0xcac982a4 ; call -0x5126110a
0x00000000001996af : mov edx, 0xd1cffed ; jge 0x19966f ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000199497 : mov edx, 0xd1cffed ; jnp 0x199457 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001990d7 : mov edx, 0xd1cffed ; movsd dword ptr es:[rdi], dword ptr [rsi] ; stosb byte ptr es:[rdi], al ; in eax, dx ; jmp qword ptr [rdx]
0x000000000008d0f0 : mov edx, 0xf48000b ; ret -0x7cb8
0x00000000000c3129 : mov edx, 0xffffffff ; cmovne rax, rdx ; ret
0x0000000000100de0 : mov edx, 0xffffffff ; mov eax, edx ; ret
0x000000000012e6c4 : mov edx, 0xffffffff ; xor eax, eax ; call r8
0x000000000012e70e : mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x00000000000e4fc3 : mov edx, dword ptr [r12 + 4] ; jmp 0xe4f8c
0x0000000000073bb5 : mov edx, dword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000c1ccd : mov edx, dword ptr [rax + 0x18] ; test rdx, rdx ; je 0xc1cdb ; call rdx
0x00000000000e73c1 : mov edx, dword ptr [rax] ; call 0xc1ec0
0x00000000000750d8 : mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x0000000000021ebc : mov edx, dword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000007f200 : mov edx, dword ptr [rax] ; test rdx, rdx ; je 0x7f209 ; call rdx
0x0000000000107d10 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp + 0xffffffffffffff80], edx ; mov rdx, r12 ; call rax
0x0000000000108349 : mov edx, dword ptr [rbp + 0x18] ; mov dword ptr [rbp + 0xffffffffffffff80], edx ; mov rdx, r14 ; call rax
0x0000000000132244 : mov edx, dword ptr [rbp + 0xffffffffffffff40] ; jmp 0x13220f
0x0000000000104859 : mov edx, dword ptr [rbp + 0xffffffffffffffb8] ; sete dl ; jmp 0x1047ea
0x000000000007985e : mov edx, dword ptr [rbx + 0x40] ; sub rdx, rsi ; mov rdi, rbx ; call rax
0x000000000010c9df : mov edx, dword ptr [rbx] ; jmp 0x10c9a6
0x000000000013b9bf : mov edx, dword ptr [rcx + rdx*4] ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x000000000013a0ed : mov edx, dword ptr [rcx + rdx*4] ; sub eax, edx ; ret
0x0000000000108fca : mov edx, dword ptr [rcx] ; test rdx, rdx ; jne 0x108fc0 ; leave ; ret
0x0000000000165cd9 : mov edx, dword ptr [rdi + 0x20] ; test rdx, rdx ; je 0x165ce8 ; call rdx
0x0000000000108dd1 : mov edx, dword ptr [rdi + 8] ; mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x0000000000173a44 : mov edx, dword ptr [rdi] ; in al, dx ; dec dword ptr [rax + 0x18] ; in al, dx ; call rcx
0x0000000000037a26 : mov edx, dword ptr [rdi] ; xor eax, eax ; test edx, edx ; sete al ; ret
0x0000000000165bd0 : mov edx, dword ptr [rdx + rbp*8] ; test rdx, rdx ; je 0x165bda ; call rdx
0x0000000000107b42 : mov edx, dword ptr [rsi + 0x18] ; mov dword ptr [rbp + 0xffffffffffffff80], edx ; mov rdx, r12 ; call rax
0x00000000000d2bf7 : mov edx, dword ptr [rsi + 0x20] ; mov qword ptr [rax + 0x20], rdx ; xor eax, eax ; ret
0x00000000001081c0 : mov edx, dword ptr [rsi + 0xffffffffffffffd0] ; mov dword ptr [rbp + 0xffffffffffffff80], edx ; mov rdx, r12 ; call rax
0x00000000001451e1 : mov edx, dword ptr [rsi + 0xfffffffffffffff8] ; mov qword ptr [rdi + 0xfffffffffffffff8], rdx ; ret
0x0000000000145950 : mov edx, dword ptr [rsi + 0xfffffffffffffffc] ; mov dword ptr [rdi + 0xfffffffffffffffc], edx ; ret
0x0000000000145591 : mov edx, dword ptr [rsi + 0xfffffffffffffffe] ; mov word ptr [rdi + 0xfffffffffffffffe], dx ; ret
0x000000000009dae2 : mov edx, dword ptr [rsi + 3] ; mov dword ptr [rdi], ecx ; mov dword ptr [rdi + 3], edx ; ret
0x000000000009dad3 : mov edx, dword ptr [rsi + 4] ; mov dword ptr [rdi], ecx ; mov word ptr [rdi + 4], dx ; ret
0x000000000009db23 : mov edx, dword ptr [rsi + 7] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009db33 : mov edx, dword ptr [rsi + 8] ; mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000009f0b0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000009fee0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 4] ; ret
0x000000000009dab0 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000a1950 : mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x000000000009f101 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000009ff31 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000009daf1 : mov edx, dword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x000000000009f091 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009feb1 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009da91 : mov edx, dword ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x0000000000102de4 : mov edx, dword ptr [rsp + 0x18] ; mov edi, 0x2000004 ; call rax
0x0000000000102ce7 : mov edx, dword ptr [rsp + 0x18] ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000000be891 : mov edx, dword ptr [rsp + 0x28] ; call rax
0x00000000000e4fc4 : mov edx, dword ptr [rsp + 4] ; jmp 0xe4f8c
0x00000000000ecb12 : mov edx, eax ; call 0x108d60
0x0000000000101220 : mov edx, eax ; jmp 0x101214
0x000000000010d528 : mov edx, eax ; jmp 0x10d4c2
0x0000000000128117 : mov edx, eax ; jmp 0x1280da
0x000000000004958a : mov edx, eax ; jmp 0x495a1
0x000000000004c6a9 : mov edx, eax ; jmp 0x4c6de
0x000000000004c80d : mov edx, eax ; jmp 0x4c82c
0x00000000000716ee : mov edx, eax ; jmp 0x716aa
0x0000000000072159 : mov edx, eax ; jmp 0x72118
0x000000000007273e : mov edx, eax ; jmp 0x72701
0x00000000000728aa : mov edx, eax ; jmp 0x72863
0x0000000000072b99 : mov edx, eax ; jmp 0x72b58
0x00000000000780e1 : mov edx, eax ; jmp 0x78086
0x00000000000782a7 : mov edx, eax ; jmp 0x7826a
0x0000000000078442 : mov edx, eax ; jmp 0x783fc
0x0000000000078cd3 : mov edx, eax ; jmp 0x78c93
0x0000000000078e7d : mov edx, eax ; jmp 0x78e35
0x0000000000079322 : mov edx, eax ; jmp 0x792bb
0x00000000000986b4 : mov edx, eax ; jmp 0x986a9
0x00000000000a6113 : mov edx, eax ; jmp 0xa60e0
0x00000000000a82c8 : mov edx, eax ; jmp 0xa82f0
0x00000000000a8953 : mov edx, eax ; jmp 0xa8920
0x00000000000ab003 : mov edx, eax ; jmp 0xaafd0
0x00000000000c4e81 : mov edx, eax ; jmp 0xc4e9e
0x00000000000c5412 : mov edx, eax ; jmp 0xc53b0
0x00000000000d9a89 : mov edx, eax ; jmp 0xd9a94
0x00000000000e58b4 : mov edx, eax ; jmp 0xe58a6
0x00000000000f31bc : mov edx, eax ; jmp 0xf314f
0x00000000000f45cd : mov edx, eax ; jmp 0xf45a0
0x00000000000f892b : mov edx, eax ; jmp 0xf8954
0x00000000000f89fc : mov edx, eax ; jmp 0xf8a26
0x00000000001066f6 : mov edx, eax ; mov rdi, r14 ; xor eax, eax ; call 0x102960
0x0000000000107ed4 : mov edx, ebp ; call rax
0x00000000000a4e3a : mov edx, ebp ; mov rdi, rbp ; call rbx
0x0000000000023511 : mov edx, ebp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000012b29c : mov edx, ebp ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x00000000001233ae : mov edx, ebp ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x000000000010d0b6 : mov edx, ebp ; pop r12 ; pop r13 ; jmp rax
0x000000000002079b : mov edx, ebp ; sub rdx, rbx ; inc rdx ; jmp 0x207a9
0x00000000000bdb4c : mov edx, ebp ; xor ecx, ecx ; jmp 0xbdb15
0x0000000000107f54 : mov edx, ebx ; call rax
0x0000000000086c56 : mov edx, ebx ; mov rsi, r13 ; call rax
0x0000000000086e12 : mov edx, ebx ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x0000000000086459 : mov edx, edi ; call rax
0x0000000000111b1a : mov edx, edi ; mov rdi, r12 ; call rax
0x00000000001082cc : mov edx, esi ; call rax
0x00000000001a3919 : mov edx, esi ; jmp qword ptr [rdi]
0x000000000018b5f1 : mov edx, esi ; jmp rsp
0x00000000000771e2 : mov edx, esi ; mov rdi, rbx ; call rax
0x00000000001234b1 : mov edx, esi ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x00000000001371ea : mov edx, esp ; add r9, r11 ; call rax
0x0000000000107b49 : mov edx, esp ; call rax
0x00000000000861b3 : mov edx, esp ; mov rdi, r15 ; call rax
0x000000000010d0b5 : mov edx, r13d ; pop r12 ; pop r13 ; jmp rax
0x0000000000079321 : mov edx, r8d ; jmp 0x792bb
0x00000000000d9a88 : mov edx, r8d ; jmp 0xd9a94
0x00000000001ab186 : mov es, dword ptr [rbx] ; pop qword ptr [rdx] ; add ecx, dword ptr [rbx + 1] ; ret
0x000000000006095b : mov es, dword ptr [rdx] ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x47b8
0x000000000018e0b5 : mov es, dword ptr [rdx] ; add byte ptr [rsi], dh ; stc ; jmp rsp
0x000000000009fcfe : mov es, dword ptr [rsi] ; add byte ptr [rax], al ; ret
0x0000000000075569 : mov es, edx ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000109191 : mov esi, 0x1002b ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000004e5ca : mov esi, 0x31e9ffff ; ret -1
0x0000000000108f4e : mov esi, 0x3948002b ; ret -0x258b
0x0000000000086a13 : mov esi, 0x3948feda ; ret 0x3574
0x00000000000dc991 : mov esi, 0x39c77f04 ; ret -0x3e77
0x00000000000dc979 : mov esi, 0x39df7f04 ; ret -0x3e77
0x000000000003deef : mov esi, 0x448d4813 ; lodsd eax, dword ptr [rsi] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x00000000000a40be : mov esi, 0x48000000 ; lea eax, dword ptr [rdi + 0xfffffffffffffff0] ; ret
0x0000000000025726 : mov esi, 0x4a890b40 ; push rax ; mov dword ptr [rdx + 0x54], eax ; ret
0x000000000004f2b3 : mov esi, 0x77cf390e ; fild word ptr [rcx + rcx*4 + 0xffffffffffffffc0] ; ret
0x00000000001119d7 : mov esi, 0x8348014f ; cli ; add al, 0xf ; xchg eax, esi ; ret
0x0000000000040a22 : mov esi, 0x8349016b ; ret
0x00000000000976f5 : mov esi, 0x84450704 ; sal byte ptr [rbp + 0xffffffffffffffe3], -0xd ; ret
0x000000000008621c : mov esi, 0x8948feda ; and byte ptr [r8 + 0x31], r9b ; ret -0x6c42
0x0000000000085d95 : mov esi, 0x8948feda ; and byte ptr [rax + 0x31], cl ; ret -0x6c42
0x000000000012aa25 : mov esi, 0xa ; mov rdi, rax ; call qword ptr [r10]
0x00000000000977ed : mov esi, 0xc0844507 ; jne 0x977d8 ; xor eax, eax ; ret
0x000000000017389e : mov esi, 0xc2c1c0bf ; ret
0x000000000008935b : mov esi, 0xc3d089d6 ; xor edx, edx ; mov eax, edx ; ret
0x0000000000102b22 : mov esi, 0xc48348c5 ; or byte ptr [rbx + 0x5d], bl ; ret
0x000000000017a414 : mov esi, 0xc8fff496 ; xchg eax, esi ; hlt ; call rdx
0x00000000000f6940 : mov esi, 1 ; call rbx
0x00000000000f6b2d : mov esi, 1 ; mov rdi, r12 ; call rbx
0x00000000000f69f9 : mov esi, 1 ; mov rdi, r13 ; call rbx
0x00000000000f6971 : mov esi, 1 ; mov rdi, r14 ; call rbx
0x00000000001209ed : mov esi, 1 ; mov rdi, r15 ; call qword ptr [rax]
0x000000000012a2a1 : mov esi, 1 ; mov rdi, rax ; call qword ptr [r10]
0x00000000000f6db7 : mov esi, 1 ; mov rdi, rbp ; call rbx
0x000000000006e3ba : mov esi, 1 ; mov rdi, rbx ; call r8
0x000000000006da3f : mov esi, 1 ; mov rdi, rbx ; call rax
0x00000000000f6dab : mov esi, 2 ; mov rdi, r12 ; call rbx
0x00000000000f6b1e : mov esi, 2 ; mov rdi, r13 ; call rbx
0x00000000000f69ea : mov esi, 2 ; mov rdi, r14 ; call rbx
0x00000000000f6962 : mov esi, 2 ; mov rdi, r15 ; call rbx
0x000000000012a460 : mov esi, 2 ; mov rdi, rax ; call qword ptr [r10]
0x00000000000f730c : mov esi, 3 ; mov rdi, r12 ; call rbx
0x00000000000f7363 : mov esi, 3 ; mov rdi, r13 ; call rbx
0x00000000000f73e3 : mov esi, 3 ; mov rdi, r14 ; call rbx
0x000000000012b6f4 : mov esi, 3 ; mov rdi, r15 ; call qword ptr [rax]
0x00000000000f74e3 : mov esi, 3 ; mov rdi, r15 ; call rbx
0x000000000012a540 : mov esi, 3 ; mov rdi, rax ; call qword ptr [r10]
0x0000000000120cfe : mov esi, 4 ; mov rdi, rbp ; call qword ptr [rax]
0x000000000012a67b : mov esi, 6 ; mov rdi, rax ; call qword ptr [r10]
0x000000000012a7ab : mov esi, 7 ; mov rdi, rax ; call qword ptr [r10]
0x000000000012a951 : mov esi, 8 ; mov rdi, rax ; call qword ptr [r10]
0x000000000012a37b : mov esi, 9 ; mov rdi, rax ; call qword ptr [r10]
0x00000000000be591 : mov esi, dword ptr [rbp + 0xffffffffffffffa8] ; mov rdi, qword ptr [rbp + 0xffffffffffffff98] ; call r14
0x0000000000022e88 : mov esi, dword ptr [rdx + rbx + 0x20] ; call rax
0x000000000006612b : mov esi, dword ptr [rip + 0x358e2f] ; call rax
0x0000000000064843 : mov esi, dword ptr [rip + 0x35a717] ; call rax
0x000000000005f3c7 : mov esi, dword ptr [rip + 0x35fb93] ; call rax
0x0000000000056055 : mov esi, dword ptr [rip + 0x368f05] ; call rax
0x000000000004f083 : mov esi, dword ptr [rip + 0x36fed7] ; call rax
0x0000000000049f3f : mov esi, dword ptr [rip + 0x37501b] ; call rax
0x000000000004759a : mov esi, dword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x00000000001201a8 : mov esi, dword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x0000000000023514 : mov esi, dword ptr [rsp + 0x18] ; call rbx
0x000000000008340b : mov esi, dword ptr [rsp + 0x18] ; pop rdx ; pop rbx ; pop rbp ; jmp rax
0x0000000000084035 : mov esi, dword ptr [rsp + 0x28] ; mov rdi, r12 ; call rax
0x0000000000027ea7 : mov esi, dword ptr [rsp + 0x50] ; call rax
0x0000000000102cec : mov esi, dword ptr [rsp + 8] ; call rax
0x0000000000083a5b : mov esi, dword ptr [rsp] ; jmp rax
0x00000000000949da : mov esi, dword ptr [rsp] ; test rsi, rsi ; jne 0x949ec ; jmp 0x949a6
0x0000000000078e76 : mov esi, eax ; call 0x750e0
0x00000000000efaf3 : mov esi, eax ; mov edi, 1 ; call 0xebd70
0x00000000000ac89b : mov esi, eax ; mov r13, rax ; call 0x38ac0
0x00000000000df980 : mov esi, eax ; movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x00000000001200dd : mov esi, ebp ; add rdi, 0x18 ; xor eax, eax ; pop rbp ; jmp rcx
0x000000000003a2f3 : mov esi, ebp ; call r12
0x0000000000086c59 : mov esi, ebp ; call rax
0x0000000000189f21 : mov esi, ebp ; jmp rsp
0x00000000000a484f : mov esi, ebp ; lea rcx, qword ptr [rax + 4] ; call rbx
0x0000000000086e15 : mov esi, ebp ; mov rdi, r12 ; call rax
0x000000000010c810 : mov esi, ebp ; mov rdi, rbx ; call 0x78b10
0x0000000000086fcd : mov esi, ebp ; mov rdi, rbx ; call rax
0x0000000000135f8e : mov esi, ebp ; pop rbp ; jmp rax
0x00000000000f783e : mov esi, ebx ; mov rdi, r13 ; call r14
0x0000000000086d28 : mov esi, ebx ; mov rdi, r13 ; call rdx
0x000000000012c01d : mov esi, ebx ; mov rdi, r15 ; call qword ptr [rax]
0x000000000012f10e : mov esi, ebx ; mov rdi, rbp ; call rcx
0x00000000000e33cd : mov esi, edi ; mov rdi, r14 ; call 0xdf670
0x00000000001252ea : mov esi, edx ; add rdi, 0x10 ; jmp rcx
0x000000000007eb32 : mov esi, edx ; call qword ptr [rax]
0x0000000000107058 : mov esi, edx ; call rax
0x0000000000001beb : mov esi, edx ; mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x0000000000189b7c : mov esi, es ; add byte ptr [rax], al ; stosb byte ptr es:[rdi], al ; pop rbp ; in eax, dx ; call rsp
0x0000000000085d35 : mov esi, esi ; call rax
0x0000000000128c14 : mov esi, esi ; movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x00000000000c3549 : mov esi, esi ; movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x00000000001283b4 : mov esi, esi ; movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x000000000017a0fc : mov esi, esi ; rep lcall ptr [rsi] ; div bl ; call rsp
0x00000000000dc90f : mov esi, esi ; ret 0x7408
0x0000000000073102 : mov esi, esp ; call 0x49cf0
0x00000000000cc30a : mov esi, esp ; call 0xf18e0
0x0000000000122745 : mov esi, esp ; call qword ptr [rax]
0x000000000010d0b3 : mov esi, esp ; mov edx, r13d ; pop r12 ; pop r13 ; jmp rax
0x000000000012e84d : mov esi, esp ; mov rdi, rbp ; call qword ptr [rax]
0x000000000012b29f : mov esi, esp ; mov rdi, rbp ; call rax
0x000000000011ecef : mov esi, esp ; mov rdi, rbp ; mov rcx, r13 ; call rbx
0x0000000000122825 : mov esi, esp ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000085fa3 : mov esi, esp ; mov rdi, rbx ; call rax
0x000000000011e8df : mov esi, esp ; mov rdi, rbx ; mov r13, rsp ; call r15
0x0000000000078e75 : mov esi, r8d ; call 0x750e0
0x000000000000ed59 : mov esp, 0x12 ; add byte ptr [rax], al ; ret 0
0x000000000019ae95 : mov esp, 0x17680000 ; out dx, al ; call qword ptr [rdi]
0x000000000019aec5 : mov esp, 0x18580000 ; out dx, al ; call qword ptr [rcx]
0x000000000011bda2 : mov esp, 0x2186b ; add al, ch ; ret
0x000000000017b4fc : mov esp, 0x22fff6d0 ; sal dh, cl ; jmp qword ptr [rdx]
0x000000000018de8c : mov esp, 0x24000279 ; add bh, cl ; call rsp
0x0000000000166187 : mov esp, 0x25 ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000019c7ac : mov esp, 0x300000d5 ; and ebp, esi ; jmp rcx
0x0000000000188ee4 : mov esp, 0x400007d ; jae 0x188ed5 ; call rsp
0x00000000000f3ba3 : mov esp, 0x401f0f ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000008d727 : mov esp, 0x440f48c7 ; ret -0x3f7d
0x000000000012c2d2 : mov esp, 0x440f49dd ; fisttp qword ptr [rax + 0xffffffffffffff83] ; ret
0x000000000008ca61 : mov esp, 0x448d48c0 ; cmp al, dh ; ret
0x000000000008ca91 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], ah ; ret
0x000000000008ca81 : mov esp, 0x448d48c0 ; cmp byte ptr [rax], dl ; ret
0x00000000001a5fac : mov esp, 0x5000016d ; insb byte ptr es:[rdi], dx ; hlt ; jmp qword ptr [rcx]
0x000000000018a1c4 : mov esp, 0x640000f8 ; mov al, -0x12 ; call rsp
0x000000000018cc6c : mov esp, 0x64000202 ; xor dh, bh ; call rsp
0x00000000001983ac : mov esp, 0x70000091 ; mov bh, -0x13 ; jmp qword ptr [rdx]
0x00000000001a2aac : mov esp, 0x70000138 ; in eax, -0xf ; jmp rsi
0x00000000001ab5ac : mov esp, 0x700001c3 ; sal ebp, cl ; jmp qword ptr [rsi]
0x000000000018ef84 : mov esp, 0x84000166 ; push rdx ; sti ; call rsp
0x000000000018cb6c : mov esp, 0x840001ff ; sub esi, edi ; call rsp
0x0000000000028eee : mov esp, 0x89fffffc ; ret -0x1d7d
0x00000000000450e6 : mov esp, 0x9024 ; add bl, ch ; ret -0x6f9a
0x000000000018b2c4 : mov esp, 0x94000169 ; mov dl, -0xf ; call rsp
0x000000000019eaac : mov esp, 0xa00000f8 ; mov edi, gs ; jmp qword ptr [rdx]
0x000000000018c98c : mov esp, 0xa40001f7 ; add esi, edi ; call rsp
0x000000000018df44 : mov esp, 0xa400027f ; xor ecx, edi ; call rsp
0x000000000018e9b4 : mov esp, 0xa40002cd ; cli ; jmp rsp
0x000000000019eeac : mov esp, 0xb00000fc ; pushfq ; out dx, eax ; call qword ptr [rdi]
0x00000000001a82ac : mov esp, 0xb0000190 ; or esi, ebp ; jmp qword ptr [rcx]
0x000000000018d59c : mov esp, 0xb400023a ; and al, bh ; call rsp
0x000000000016ef60 : mov esp, 0xbf00000f ; sldt word ptr [rax] ; ret 0xf
0x000000000008d716 : mov esp, 0xc2440fc7 ; add eax, 1 ; ret
0x0000000000189154 : mov esp, 0xc400008a ; fldl2e ; call rsp
0x000000000018e29c : mov esp, 0xc400029c ; popfq ; stc ; call rsp
0x00000000000897fb : mov esp, 0xd00148d2 ; sub rax, rdi ; ret
0x0000000000189434 : mov esp, 0xd4000097 ; adc ebp, ebx ; call rsp
0x00000000001ac5ac : mov esp, 0xe00001d3 ; in eax, -0xb ; call qword ptr [rax]
0x000000000009449b : mov esp, 0xf80148c0 ; add rax, rcx ; ret
0x000000000008ca71 : mov esp, 0xf80148c0 ; ret
0x000000000004fdd8 : mov esp, 0xfc239c1 ; ret -0x46bf
0x000000000012bb7c : mov esp, dword ptr [rax] ; jmp 0x12bb84
0x000000000006886f : mov esp, dword ptr [rbp + 0xfffffffffffffe90] ; jmp 0x64a9f
0x0000000000021ac1 : mov esp, eax ; call 0xa26c0
0x0000000000036bb9 : mov esp, eax ; mov rbp, r9 ; jmp rdx
0x00000000000a82c5 : mov esp, ebx ; mov r10, rax ; jmp 0xa82f0
0x00000000001880e9 : mov esp, edi ; call qword ptr [rax + 0x20fffc88]
0x00000000001882e1 : mov esp, edi ; call qword ptr [rax]
0x00000000001881a5 : mov esp, edi ; call rdx
0x00000000001881a1 : mov esp, edi ; inc dword ptr [rdx + 0xffffffffffffff89] ; cld ; call rdx
0x0000000000188125 : mov esp, edi ; jmp rsi
0x0000000000028e12 : mov fs, ecx ; add al, byte ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000188ba1 : mov gs, ecx ; call rsp
0x0000000000189f89 : mov gs, esi ; jmp rsp
0x000000000004e802 : mov qword ptr [r15 + 8], rdx ; jmp 0x4e7ca
0x0000000000124833 : mov qword ptr [r8 + 8], rdx ; mov eax, 1 ; ret
0x000000000004bff0 : mov qword ptr [r8], rax ; jmp 0x4bfb8
0x0000000000061dd0 : mov qword ptr [r8], rax ; jmp 0x61d98
0x0000000000124902 : mov qword ptr [r8], rax ; mov eax, 1 ; ret
0x0000000000118b67 : mov qword ptr [r9], r10 ; ret
0x0000000000118c0b : mov qword ptr [r9], rcx ; ret
0x0000000000118bd7 : mov qword ptr [r9], rdi ; ret
0x0000000000074d58 : mov qword ptr [rax + 0x10], rdx ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000074d98 : mov qword ptr [rax + 0x10], rsi ; mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000075bf8 : mov qword ptr [rax + 0x18], rdx ; mov dword ptr [rbx], ecx ; xor eax, eax ; pop rbx ; ret
0x0000000000073bb8 : mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000d2bfa : mov qword ptr [rax + 0x20], rdx ; xor eax, eax ; ret
0x00000000000d2c2c : mov qword ptr [rax + 0x20], rsi ; xor eax, eax ; ret
0x0000000000074d5c : mov qword ptr [rax + 0x40], rcx ; ret
0x0000000000075c96 : mov qword ptr [rax + 0x48], 0 ; pop rbx ; ret
0x000000000003c8cd : mov qword ptr [rax + 0x60], rdx ; call qword ptr [rbx]
0x000000000005e2c4 : mov qword ptr [rax + 8], r9 ; add dword ptr [rdx + 4], 1 ; ret
0x00000000000f1df7 : mov qword ptr [rax], -1 ; xor eax, eax ; ret
0x0000000000026fc4 : mov qword ptr [rax], rbx ; jmp 0x26f8b
0x0000000000029c06 : mov qword ptr [rax], rbx ; mov eax, dword ptr [rsp + 0x1c] ; jmp 0x29bd1
0x000000000002add6 : mov qword ptr [rax], rbx ; mov eax, dword ptr [rsp + 0x24] ; jmp 0x2ada1
0x00000000000498eb : mov qword ptr [rax], rcx ; mov byte ptr [rax + 8], 0 ; ret
0x00000000000752e4 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; pop rbx ; ret
0x0000000000078359 : mov qword ptr [rax], rcx ; mov eax, dword ptr [rdx] ; ret
0x00000000000832c5 : mov qword ptr [rax], rdi ; ret
0x00000000000faed2 : mov qword ptr [rax], rdx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007523f : mov qword ptr [rax], rdx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000002fa03 : mov qword ptr [rax], rdx ; ret
0x000000000005f570 : mov qword ptr [rbp + 0xffffffffffffee60], rcx ; jmp rax
0x0000000000063111 : mov qword ptr [rbp + 0xffffffffffffeea8], rdx ; call 0x1f410
0x000000000004a0b8 : mov qword ptr [rbp + 0xfffffffffffffa50], rcx ; jmp rax
0x000000000005c448 : mov qword ptr [rbp + 0xfffffffffffffd30], r10 ; call 0x1086a0
0x0000000000058fb3 : mov qword ptr [rbp + 0xffffffffffffff08], rax ; jmp 0x58f7e
0x00000000001082c7 : mov qword ptr [rbp + 0xffffffffffffff90], rdx ; mov rdx, r14 ; call rax
0x00000000000233a2 : mov qword ptr [rbp + 0xffffffffffffff98], rax ; call rcx
0x00000000000f8926 : mov qword ptr [rbp + 0xffffffffffffff98], rax ; mov rdx, rax ; jmp 0xf8954
0x00000000000f89f7 : mov qword ptr [rbp + 0xffffffffffffff98], rax ; mov rdx, rax ; jmp 0xf8a26
0x000000000002ca86 : mov qword ptr [rbx + 0x10], 0 ; pop rbx ; ret
0x0000000000136cd5 : mov qword ptr [rbx + 0x10], rax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000079486 : mov qword ptr [rbx + 0x10], rax ; mov rax, rbx ; pop rbx ; ret
0x0000000000079998 : mov qword ptr [rbx + 0x10], rax ; xor eax, eax ; pop rbx ; ret
0x000000000012f351 : mov qword ptr [rbx + 0x18], 0 ; pop rbx ; ret
0x0000000000136c82 : mov qword ptr [rbx + 0x18], rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012f3a8 : mov qword ptr [rbx + 0x20], r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007bd32 : mov qword ptr [rbx + 0x20], rax ; mov dword ptr [rbx], edx ; xor eax, eax ; pop rbx ; ret
0x00000000000e473a : mov qword ptr [rbx + 0x28], 0 ; pop rbx ; ret
0x0000000000073be4 : mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x00000000000874b1 : mov qword ptr [rbx + 0x48], r9 ; mov rdi, r9 ; call rcx
0x00000000000f1175 : mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000007bd9a : mov qword ptr [rbx + 0x50], 0 ; pop rbx ; ret
0x0000000000079376 : mov qword ptr [rbx + 0x90], rax ; pop rbx ; ret
0x000000000007bfbc : mov qword ptr [rbx + 8], rdx ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000008776c : mov qword ptr [rbx + 8], rsi ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012f6b1 : mov qword ptr [rbx], 0 ; call 0x12b970
0x00000000000f58c1 : mov qword ptr [rbx], 0 ; pop rbx ; ret
0x0000000000136efd : mov qword ptr [rbx], rax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012b881 : mov qword ptr [rbx], rax ; pop rbx ; ret
0x00000000000873f4 : mov qword ptr [rbx], rdi ; mov dword ptr [rbx + 0x30], eax ; call rcx
0x000000000012481b : mov qword ptr [rcx + 0x10], rdx ; mov eax, 1 ; ret
0x000000000015b513 : mov qword ptr [rcx + 5], rdx ; ret
0x000000000015b523 : mov qword ptr [rcx + 6], rdx ; ret
0x000000000015b533 : mov qword ptr [rcx + 7], rdx ; ret
0x000000000015b543 : mov qword ptr [rcx + 8], rdx ; ret
0x0000000000077e53 : mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x000000000015b4d0 : mov qword ptr [rcx], rdx ; mov byte ptr [rcx + 8], dl ; ret
0x000000000015b4f0 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 7], edx ; ret
0x000000000015b500 : mov qword ptr [rcx], rdx ; mov dword ptr [rcx + 8], edx ; ret
0x000000000015b510 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 5], rdx ; ret
0x000000000015b520 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 6], rdx ; ret
0x000000000015b530 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 7], rdx ; ret
0x000000000015b540 : mov qword ptr [rcx], rdx ; mov qword ptr [rcx + 8], rdx ; ret
0x000000000015b4e0 : mov qword ptr [rcx], rdx ; mov word ptr [rcx + 8], dx ; ret
0x000000000015b4c0 : mov qword ptr [rcx], rdx ; ret
0x00000000000e5ada : mov qword ptr [rdi + 0x100], rdx ; ret
0x0000000000038cce : mov qword ptr [rdi + 0x10], r9 ; ret
0x000000000009f2cc : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x00000000000a011c : mov qword ptr [rdi + 0x10], rcx ; lea rax, qword ptr [rdi + 0x18] ; ret
0x000000000009dc5c : mov qword ptr [rdi + 0x10], rcx ; mov byte ptr [rdi + 0x18], dh ; ret
0x000000000009dc3c : mov qword ptr [rdi + 0x10], rcx ; ret
0x00000000000a1b8c : mov qword ptr [rdi + 0x10], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x000000000009e92f : mov qword ptr [rdi + 0x10], rdx ; mov byte ptr [rdi + 0x18], cl ; ret
0x000000000009dc9f : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x17], ecx ; ret
0x000000000009dcbf : mov qword ptr [rdi + 0x10], rdx ; mov dword ptr [rdi + 0x18], ecx ; ret
0x000000000009dc80 : mov qword ptr [rdi + 0x10], rdx ; mov word ptr [rdi + 0x18], cx ; ret
0x000000000007bcc2 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000073f76 : mov qword ptr [rdi + 0x18], rax ; mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x000000000012ef50 : mov qword ptr [rdi + 0x18], rsi ; mov dword ptr [rdi + 0x28], edx ; mov al, 1 ; ret
0x000000000012ef75 : mov qword ptr [rdi + 0x18], rsi ; ret
0x0000000000128c8b : mov qword ptr [rdi + 0x28], rdx ; mov eax, 1 ; ret
0x0000000000128c43 : mov qword ptr [rdi + 0x38], rdx ; mov eax, 1 ; ret
0x000000000007bcf2 : mov qword ptr [rdi + 0x48], rdx ; mov qword ptr [rdi + 8], rax ; ret
0x0000000000037808 : mov qword ptr [rdi + 0x78], -1 ; ret
0x00000000000e517d : mov qword ptr [rdi + 0x80], rdx ; ret
0x000000000009f28c : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x15] ; ret
0x00000000000a00dc : mov qword ptr [rdi + 0xe], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x000000000009dbfc : mov qword ptr [rdi + 0xe], rcx ; ret
0x00000000000a1b4c : mov qword ptr [rdi + 0xe], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x000000000009f2ac : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x16] ; ret
0x00000000000a00fc : mov qword ptr [rdi + 0xf], rcx ; lea rax, qword ptr [rdi + 0x17] ; ret
0x000000000009dc1c : mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a1b6c : mov qword ptr [rdi + 0xf], rcx ; xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x0000000000145074 : mov qword ptr [rdi + 0xfffffffffffffff0], r11 ; mov qword ptr [rdi + 0xfffffffffffffff8], rcx ; ret
0x00000000001450b2 : mov qword ptr [rdi + 0xfffffffffffffff0], r11 ; mov qword ptr [rdi + 0xfffffffffffffff8], rdx ; ret
0x0000000000038bbe : mov qword ptr [rdi + 0xfffffffffffffff0], r9 ; ret
0x0000000000145d9c : mov qword ptr [rdi + 0xfffffffffffffff1], rcx ; mov qword ptr [rdi + 0xfffffffffffffff8], rdx ; ret
0x000000000014d318 : mov qword ptr [rdi + 0xfffffffffffffff1], rdx ; mov qword ptr [rdi + 0xfffffffffffffff8], rcx ; ret
0x0000000000145b9c : mov qword ptr [rdi + 0xfffffffffffffff2], rcx ; mov qword ptr [rdi + 0xfffffffffffffff8], rdx ; ret
0x000000000014d3a8 : mov qword ptr [rdi + 0xfffffffffffffff2], rdx ; mov qword ptr [rdi + 0xfffffffffffffff8], rcx ; ret
0x000000000014599c : mov qword ptr [rdi + 0xfffffffffffffff3], rcx ; mov qword ptr [rdi + 0xfffffffffffffff8], rdx ; ret
0x000000000014d438 : mov qword ptr [rdi + 0xfffffffffffffff3], rdx ; mov qword ptr [rdi + 0xfffffffffffffff8], rcx ; ret
0x00000000001457cb : mov qword ptr [rdi + 0xfffffffffffffff4], rcx ; mov dword ptr [rdi + 0xfffffffffffffffc], edx ; ret
0x000000000014d4c7 : mov qword ptr [rdi + 0xfffffffffffffff4], rdx ; mov dword ptr [rdi + 0xfffffffffffffffc], ecx ; ret
0x00000000001455db : mov qword ptr [rdi + 0xfffffffffffffff5], rcx ; mov dword ptr [rdi + 0xfffffffffffffffc], edx ; ret
0x000000000014d547 : mov qword ptr [rdi + 0xfffffffffffffff5], rdx ; mov dword ptr [rdi + 0xfffffffffffffffc], ecx ; ret
0x00000000001453fb : mov qword ptr [rdi + 0xfffffffffffffff6], rcx ; mov dword ptr [rdi + 0xfffffffffffffffc], edx ; ret
0x000000000014d5c7 : mov qword ptr [rdi + 0xfffffffffffffff6], rdx ; mov dword ptr [rdi + 0xfffffffffffffffc], ecx ; ret
0x000000000014522b : mov qword ptr [rdi + 0xfffffffffffffff7], r8 ; mov dword ptr [rdi + 0xfffffffffffffffc], edx ; ret
0x0000000000145327 : mov qword ptr [rdi + 0xfffffffffffffff7], rcx ; mov byte ptr [rdi + 0xffffffffffffffff], dl ; ret
0x0000000000145273 : mov qword ptr [rdi + 0xfffffffffffffff7], rcx ; mov dword ptr [rdi + 0xfffffffffffffffc], edx ; ret
0x000000000014d647 : mov qword ptr [rdi + 0xfffffffffffffff7], rdx ; mov dword ptr [rdi + 0xfffffffffffffffc], ecx ; ret
0x0000000000038b49 : mov qword ptr [rdi + 0xfffffffffffffff8], r9 ; ret
0x0000000000145078 : mov qword ptr [rdi + 0xfffffffffffffff8], rcx ; ret
0x00000000001450b6 : mov qword ptr [rdi + 0xfffffffffffffff8], rdx ; ret
0x000000000009eab0 : mov qword ptr [rdi + 0xffffffffffffffff], rdx ; ret
0x000000000014ddb7 : mov qword ptr [rdi + 1], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014dd47 : mov qword ptr [rdi + 2], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014dcd7 : mov qword ptr [rdi + 3], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000014dc67 : mov qword ptr [rdi + 4], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009f18a : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xc] ; ret
0x000000000009ffca : mov qword ptr [rdi + 5], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000014dbf7 : mov qword ptr [rdi + 5], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009db4a : mov qword ptr [rdi + 5], rdx ; ret
0x00000000000a1a3a : mov qword ptr [rdi + 5], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x000000000009f1aa : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xd] ; ret
0x000000000009ffea : mov qword ptr [rdi + 6], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x000000000014db87 : mov qword ptr [rdi + 6], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009db5a : mov qword ptr [rdi + 6], rdx ; ret
0x00000000000a1a5a : mov qword ptr [rdi + 6], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x000000000009f1ca : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xe] ; ret
0x00000000000a000a : mov qword ptr [rdi + 7], rdx ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000014db17 : mov qword ptr [rdi + 7], rdx ; mov qword ptr [rdi], rcx ; ret
0x000000000009db6a : mov qword ptr [rdi + 7], rdx ; ret
0x00000000000a1a7a : mov qword ptr [rdi + 7], rdx ; xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000f3df7 : mov qword ptr [rdi + 8], 0 ; ret
0x0000000000038453 : mov qword ptr [rdi + 8], r10 ; mov eax, ecx ; adc eax, eax ; ret
0x0000000000038c53 : mov qword ptr [rdi + 8], r9 ; ret
0x000000000007bcc6 : mov qword ptr [rdi + 8], rax ; ret
0x00000000000742ce : mov qword ptr [rdi + 8], rdx ; movzx eax, byte ptr [rax] ; ret
0x000000000003cdc9 : mov qword ptr [rdi + 8], rdx ; ret
0x00000000000f3de7 : mov qword ptr [rdi + 8], rsi ; ret
0x000000000008d241 : mov qword ptr [rdi + rdx + 0xfffffffffffffff8], rcx ; ret
0x0000000000053915 : mov qword ptr [rdi], r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000038b18 : mov qword ptr [rdi], r9 ; ret
0x0000000000039dad : mov qword ptr [rdi], rax ; mov eax, 1 ; ret
0x00000000000f3de4 : mov qword ptr [rdi], rax ; mov qword ptr [rdi + 8], rsi ; ret
0x0000000000092939 : mov qword ptr [rdi], rax ; pop rbx ; pop rbp ; ret
0x0000000000037b25 : mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000009f116 : mov qword ptr [rdi], rcx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000009e7d6 : mov qword ptr [rdi], rcx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000009db26 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009db36 : mov qword ptr [rdi], rcx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000009db47 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009db57 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000009db67 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 7], rdx ; ret
0x000000000003cdd9 : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 8], rdx ; ret
0x000000000008d23e : mov qword ptr [rdi], rcx ; mov qword ptr [rdi + rdx + 0xfffffffffffffff8], rcx ; ret
0x000000000009db17 : mov qword ptr [rdi], rcx ; mov word ptr [rdi + 8], dx ; ret
0x000000000009db06 : mov qword ptr [rdi], rcx ; ret
0x000000000009f103 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 7] ; ret
0x000000000009ff33 : mov qword ptr [rdi], rdx ; lea rax, qword ptr [rdi + 8] ; ret
0x000000000009ead0 : mov qword ptr [rdi], rdx ; mov byte ptr [rdi + 8], dl ; ret
0x000000000009eaf0 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 7], edx ; ret
0x000000000009eb00 : mov qword ptr [rdi], rdx ; mov dword ptr [rdi + 8], edx ; ret
0x000000000009eb10 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 5], rdx ; ret
0x000000000009eb20 : mov qword ptr [rdi], rdx ; mov qword ptr [rdi + 6], rdx ; ret
0x000000000009eae0 : mov qword ptr [rdi], rdx ; mov word ptr [rdi + 8], dx ; ret
0x000000000001fc27 : mov qword ptr [rdi], rdx ; ret
0x00000000000a19a3 : mov qword ptr [rdi], rdx ; xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x0000000000118cfa : mov qword ptr [rdx + 0x10], rax ; xor eax, eax ; ret
0x00000000000794e4 : mov qword ptr [rdx + 0x140], rdi ; pop rbx ; ret
0x0000000000078d8d : mov qword ptr [rdx + 0x20], rax ; mov dword ptr [rcx], edi ; mov eax, edi ; ret
0x0000000000078f43 : mov qword ptr [rdx + 0x20], rsi ; mov dword ptr [rcx], eax ; ret
0x000000000012289f : mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000012287b : mov qword ptr [rdx + 0x58], rdi ; mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000012287f : mov qword ptr [rdx + 0x68], rcx ; ret
0x000000000015d8ca : mov qword ptr [rdx + 5], rax ; lea rax, qword ptr [rdx + 0xc] ; ret
0x000000000015953a : mov qword ptr [rdx + 5], rax ; mov rax, rdi ; ret
0x000000000015d8ea : mov qword ptr [rdx + 6], rax ; lea rax, qword ptr [rdx + 0xd] ; ret
0x000000000015955a : mov qword ptr [rdx + 6], rax ; mov rax, rdi ; ret
0x000000000015d90a : mov qword ptr [rdx + 7], rax ; lea rax, qword ptr [rdx + 0xe] ; ret
0x000000000015957a : mov qword ptr [rdx + 7], rax ; mov rax, rdi ; ret
0x000000000015d79a : mov qword ptr [rdx + 8], rax ; lea rax, qword ptr [rdx + 0xf] ; ret
0x000000000015946a : mov qword ptr [rdx + 8], rax ; mov rax, rdi ; ret
0x0000000000128400 : mov qword ptr [rdx + 8], rdi ; ret
0x000000000015d743 : mov qword ptr [rdx], rax ; lea rax, qword ptr [rdx + 7] ; ret
0x0000000000128457 : mov qword ptr [rdx], rax ; mov eax, 1 ; ret
0x0000000000159413 : mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000007296e : mov qword ptr [rdx], rax ; xor eax, eax ; pop rbx ; ret
0x00000000000750d5 : mov qword ptr [rdx], rcx ; mov edx, dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000007d223 : mov qword ptr [rdx], rcx ; ret
0x00000000000e3e6a : mov qword ptr [rdx], rdi ; ret
0x00000000001283fd : mov qword ptr [rdx], rsi ; mov qword ptr [rdx + 8], rdi ; ret
0x000000000010b947 : mov qword ptr [rip + 0x2b7e72], rdx ; pop rbp ; ret
0x00000000000fd2bf : mov qword ptr [rip + 0x2c203a], rbx ; pop rbx ; ret
0x00000000000f31b4 : mov qword ptr [rip + 0x2cd765], rax ; mov rdx, rax ; jmp 0xf314f
0x00000000000f45c5 : mov qword ptr [rip + 0x2ce064], rax ; mov rdx, rax ; jmp 0xf45a0
0x000000000008b721 : mov qword ptr [rip + 0x336548], rax ; ret
0x0000000000021a9a : mov qword ptr [rip + 0x39d78f], rax ; pop r12 ; ret
0x00000000000e4c03 : mov qword ptr [rsi + 0x10], r8 ; ret
0x0000000000121a3e : mov qword ptr [rsi + 0x10], rax ; ret
0x000000000003d385 : mov qword ptr [rsi + 0x10], rax ; xor eax, eax ; ret
0x000000000003cd37 : mov qword ptr [rsi + 0x28], rax ; xor eax, eax ; ret
0x00000000000e50ee : mov qword ptr [rsi + 0x78], rax ; xor eax, eax ; ret
0x00000000000e4be6 : mov qword ptr [rsi + 8], 0 ; ret
0x0000000000121a0e : mov qword ptr [rsi + 8], rax ; ret
0x00000000000e4bff : mov qword ptr [rsi + 8], rcx ; mov qword ptr [rsi + 0x10], r8 ; ret
0x000000000007e19a : mov qword ptr [rsi], rax ; mov rax, r8 ; ret
0x0000000000073f7a : mov qword ptr [rsi], rax ; xor eax, eax ; ret
0x00000000001188df : mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x00000000001183f8 : mov qword ptr [rsi], rdi ; ret
0x000000000010d148 : mov qword ptr [rsi], rdi ; xor eax, eax ; ret
0x00000000000815fb : mov qword ptr [rsp + 0x10], rcx ; call qword ptr [rax]
0x00000000000816cf : mov qword ptr [rsp + 0x10], rcx ; call rdx
0x00000000000814a8 : mov qword ptr [rsp + 0x28], r14 ; mov rdi, r14 ; call qword ptr [rax]
0x0000000000106b5c : mov qword ptr [rsp + 0x28], rax ; call 0x72d90
0x0000000000120669 : mov qword ptr [rsp + 8], 0 ; call qword ptr [rax]
0x000000000008745f : mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x0000000000029eb3 : mov qword ptr [rsp + 8], rax ; call r14
0x000000000002849c : mov qword ptr [rsp + 8], rax ; call rbx
0x000000000012f46b : mov qword ptr [rsp + 8], rax ; xor eax, eax ; call rdx
0x000000000007eb82 : mov qword ptr [rsp + 8], rcx ; call qword ptr [rax]
0x000000000012a89f : mov qword ptr [rsp + 8], rdi ; mov rdi, rbx ; call qword ptr [rax]
0x00000000001210f7 : mov qword ptr [rsp], rax ; call qword ptr [r11]
0x00000000000278c1 : mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000000cd6b6 : mov qword ptr [rsp], rax ; call rbx
0x000000000011e7d3 : mov qword ptr [rsp], rcx ; call r12
0x00000000000be88c : mov qword ptr [rsp], rdx ; mov rdx, qword ptr [rsp + 0x28] ; call rax
0x000000000003014c : mov qword ptr fs:[rax], rdx ; ret
0x000000000012b880 : mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x0000000000104858 : mov r10, qword ptr [rbp + 0xffffffffffffffb8] ; sete dl ; jmp 0x1047ea
0x00000000000986b3 : mov r10, r8 ; jmp 0x986a9
0x00000000000a82c7 : mov r10, rax ; jmp 0xa82f0
0x000000000017507d : mov r10d, 0xcac982a4 ; call -0x5126110a
0x0000000000132243 : mov r10d, dword ptr [rbp + 0xffffffffffffff40] ; jmp 0x13220f
0x00000000000d9a85 : mov r11, rax ; mov edx, r8d ; jmp 0xd9a94
0x00000000000fc88b : mov r11b, 0x66 ; nop ; xor eax, eax ; ret
0x00000000000badc1 : mov r11d, 1 ; jmp 0xbad8b
0x000000000006886e : mov r12, qword ptr [rbp + 0xfffffffffffffe90] ; jmp 0x64a9f
0x00000000000a82c4 : mov r12, r11 ; mov r10, rax ; jmp 0xa82f0
0x0000000000021ac0 : mov r12, rax ; call 0xa26c0
0x000000000012bb7b : mov r12d, dword ptr [rax] ; jmp 0x12bb84
0x00000000000d9a81 : mov r13, qword ptr [rax + 0x70] ; mov r11, rax ; mov edx, r8d ; jmp 0xd9a94
0x00000000000a6894 : mov r13, r14 ; setne dl ; jmp 0xa68a8
0x00000000000ab744 : mov r13, r14 ; setne dl ; jmp 0xab758
0x00000000000ac89d : mov r13, rax ; call 0x38ac0
0x000000000005a37c : mov r13, rax ; jmp 0x56602
0x000000000011e8e4 : mov r13, rsp ; call r15
0x00000000000f087c : mov r13d, dword ptr [r14] ; call 0xecae0
0x00000000000f087b : mov r13d, dword ptr fs:[r14] ; call 0xecae0
0x000000000007eb31 : mov r14, rdx ; call qword ptr [rax]
0x000000000018ba60 : mov r14b, bl ; jmp rsp
0x00000000000be160 : mov r15, rax ; je 0xbe190 ; mov rdi, r15 ; call r14
0x00000000000f6441 : mov r15d, r14d ; mov rax, qword ptr [rbp + 0xffffffffffffffb8] ; call rax
0x00000000000220f5 : mov r8, qword ptr [rsp + 0x18] ; add rsp, 0x28 ; jmp rax
0x00000000000792f5 : mov r8, rdx ; pop rbx ; ret
0x00000000000cd770 : mov r8b, 0 ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x76b4
0x0000000000104856 : mov r8b, 0x4c ; mov edx, dword ptr [rbp + 0xffffffffffffffb8] ; sete dl ; jmp 0x1047ea
0x0000000000098138 : mov r8d, 0x3d ; jmp 0x98103
0x0000000000071f08 : mov r8d, esi ; ret
0x00000000000f3e8f : mov r9, rsi ; mov byte ptr [r9 + 0xffffffffffffffff], 0 ; ret
0x00000000001371e6 : mov r9d, dword ptr [rdx] ; mov rdx, r12 ; add r9, r11 ; call rax
0x00000000000f1551 : mov r9d, eax ; pop rbp ; mov eax, r9d ; pop r12 ; ret
0x00000000000c160b : mov rax, -0xe ; ret
0x0000000000079380 : mov rax, -1 ; pop rbx ; ret
0x0000000000036c86 : mov rax, -1 ; ret
0x00000000000a3b80 : mov rax, 1 ; ret
0x00000000000a3b90 : mov rax, 2 ; ret
0x00000000000a3ba0 : mov rax, 3 ; ret
0x00000000000a3bb0 : mov rax, 4 ; ret
0x00000000000a3bc0 : mov rax, 5 ; ret
0x00000000000a3bd0 : mov rax, 6 ; ret
0x00000000000a3be0 : mov rax, 7 ; ret
0x0000000000136ce7 : mov rax, qword ptr [rax + 0x108] ; jmp rax
0x00000000000fd99f : mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000000fd74f : mov rax, qword ptr [rax + 0x18] ; add word ptr [rax], 1 ; ret
0x000000000007bdcb : mov rax, qword ptr [rax + 0x18] ; jmp rax
0x00000000000754ab : mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000000752b0 : mov rax, qword ptr [rax + 0x28] ; jmp rax
0x00000000001085ff : mov rax, qword ptr [rax + 0x30] ; ret
0x000000000007c317 : mov rax, qword ptr [rax + 0x40] ; jmp rax
0x0000000000128313 : mov rax, qword ptr [rax + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000070c02 : mov rax, qword ptr [rax + 0x48] ; add rsp, 0x10 ; pop rbx ; jmp rax
0x000000000007c72b : mov rax, qword ptr [rax + 0x48] ; jmp rax
0x0000000000070ecc : mov rax, qword ptr [rax + 0x48] ; xor edx, edx ; pop r12 ; jmp rax
0x00000000000717f3 : mov rax, qword ptr [rax + 0x4c] ; ret
0x0000000000128bc3 : mov rax, qword ptr [rax + 0x50] ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000f8f78 : mov rax, qword ptr [rax + 0x58] ; ret
0x00000000000f8f80 : mov rax, qword ptr [rax + 0xc8] ; ret
0x0000000000136bee : mov rax, qword ptr [rax + 0xe8] ; jmp rax
0x000000000012dd04 : mov rax, qword ptr [rax + 8] ; jmp rax
0x00000000000f8f59 : mov rax, qword ptr [rax + 8] ; ret
0x000000000002d179 : mov rax, qword ptr [rax + rbx*8] ; test rax, rax ; je 0x2d184 ; call rax
0x000000000002fec4 : mov rax, qword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000002fa4e : mov rax, qword ptr [rax + rdi*8 + 0x80] ; ret
0x000000000012dcf9 : mov rax, qword ptr [rax] ; jmp rax
0x000000000002cceb : mov rax, qword ptr [rax] ; mov eax, dword ptr [rax + 0xa8] ; ret
0x000000000004bfed : mov rax, qword ptr [rax] ; mov qword ptr [r8], rax ; jmp 0x4bfb8
0x0000000000061dcd : mov rax, qword ptr [rax] ; mov qword ptr [r8], rax ; jmp 0x61d98
0x0000000000048852 : mov rax, qword ptr [rax] ; pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x000000000011d128 : mov rax, qword ptr [rax] ; ret
0x0000000000084443 : mov rax, qword ptr [rax] ; test rax, rax ; je 0x8444d ; call rax
0x0000000000023f70 : mov rax, qword ptr [rbp + 0xffffffffffffffa0] ; call rax
0x00000000000be50a : mov rax, qword ptr [rbp + 0xffffffffffffffa8] ; call rax
0x00000000000f6444 : mov rax, qword ptr [rbp + 0xffffffffffffffb8] ; call rax
0x0000000000073be0 : mov rax, qword ptr [rbx + 0x20] ; mov qword ptr [rbx + 0x28], rax ; pop rbx ; ret
0x00000000000c1b47 : mov rax, qword ptr [rbx + 8] ; test rax, rax ; je 0xc1b52 ; call rax
0x000000000012b849 : mov rax, qword ptr [rbx] ; test rax, rax ; je 0x12b858 ; pop rbx ; ret
0x000000000012b8b5 : mov rax, qword ptr [rbx] ; test rax, rax ; je 0x12b86c ; pop rbx ; ret
0x00000000000c1d54 : mov rax, qword ptr [rcx + 0x10] ; test rax, rax ; je 0xc1d63 ; call rax
0x0000000000159410 : mov rax, qword ptr [rcx] ; mov qword ptr [rdx], rax ; mov rax, rdi ; ret
0x000000000012f37b : mov rax, qword ptr [rdi + 0x18] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012ef10 : mov rax, qword ptr [rdi + 0x18] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x00000000000bdec0 : mov rax, qword ptr [rdi + 0x20] ; ret
0x0000000000121a76 : mov rax, qword ptr [rdi + 0x28] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000073c20 : mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000121aae : mov rax, qword ptr [rdi + 0x40] ; mov qword ptr [rsi + 0x10], rax ; ret
0x0000000000073b10 : mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x00000000000717f0 : mov rax, qword ptr [rdi + 0x48] ; mov eax, dword ptr [rax + 0x4c] ; ret
0x000000000007d500 : mov rax, qword ptr [rdi + 0x68] ; ret
0x000000000012e400 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 0x10] ; call qword ptr [rax]
0x00000000001227b0 : mov rax, qword ptr [rdi + 8] ; lea rsi, qword ptr [rsp + 8] ; call qword ptr [rax]
0x000000000012ed18 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x40] ; jmp rax
0x000000000012ed28 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000012dd00 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000012dcf5 : mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax] ; jmp rax
0x0000000000122740 : mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x0000000000108dd4 : mov rax, qword ptr [rdi] ; mov rdi, rdx ; jmp rax
0x0000000000121ee7 : mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x00000000000e3e67 : mov rax, qword ptr [rdx] ; mov qword ptr [rdx], rdi ; ret
0x0000000000134690 : mov rax, qword ptr [rip + 0x288469] ; jmp rax
0x0000000000134640 : mov rax, qword ptr [rip + 0x2884b1] ; pop r12 ; jmp rax
0x00000000001345e0 : mov rax, qword ptr [rip + 0x288509] ; pop r12 ; jmp rax
0x00000000001361b1 : mov rax, qword ptr [rip + 0x28a6d8] ; call qword ptr [rax]
0x00000000001346f1 : mov rax, qword ptr [rip + 0x28c198] ; call qword ptr [rax]
0x0000000000112ea0 : mov rax, qword ptr [rip + 0x2adb49] ; ret
0x0000000000081707 : mov rax, qword ptr [rip + 0x33d6aa] ; xor edi, edi ; call qword ptr [rax]
0x000000000007d4e0 : mov rax, qword ptr [rip + 0x342cb9] ; ret
0x000000000002c0e0 : mov rax, qword ptr [rip + 0x3949d9] ; ret
0x0000000000023760 : mov rax, qword ptr [rip + 0x3a14e1] ; ret
0x0000000000023750 : mov rax, qword ptr [rip + 0x3a1501] ; ret
0x000000000002ef60 : mov rax, qword ptr [rsi + rdx*8 + 0x80] ; ret
0x00000000000f6119 : mov rax, qword ptr [rsp + 0x10] ; call rax
0x0000000000021ebe : mov rax, qword ptr [rsp + 0x18] ; call rax
0x0000000000026fbf : mov rax, qword ptr [rsp + 0x28] ; mov qword ptr [rax], rbx ; jmp 0x26f8b
0x000000000002a4db : mov rax, qword ptr [rsp + 0x50] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000000286bf : mov rax, qword ptr [rsp + 0x58] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000000280be : mov rax, qword ptr [rsp + 0x78] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x000000000003d128 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000f1f65 : mov rax, qword ptr [rsp + 8] ; add rsp, 0x28 ; ret
0x00000000001349b3 : mov rax, qword ptr [rsp] ; add rsp, 0x10 ; pop rbx ; ret
0x00000000001344ec : mov rax, qword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000000fe112 : mov rax, qword ptr [rsp] ; add rsp, 0x38 ; ret
0x00000000000fe173 : mov rax, qword ptr [rsp] ; add rsp, 0x40 ; ret
0x000000000011d127 : mov rax, qword ptr fs:[rax] ; ret
0x00000000001099df : mov rax, r10 ; ret
0x0000000000092e31 : mov rax, r11 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b231a : mov rax, r12 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006d99f : mov rax, r12 ; pop r12 ; ret
0x000000000006d5d3 : mov rax, r12 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000006fa24 : mov rax, r13 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000bdf9c : mov rax, r14 ; pop r14 ; ret
0x0000000000082171 : mov rax, r8 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007e19d : mov rax, r8 ; ret
0x000000000007a0f9 : mov rax, rbp ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000745c9 : mov rax, rbp ; mov dword ptr [rbx], edx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000070268 : mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000700f2 : mov rax, rbp ; pop rbp ; pop r12 ; ret
0x00000000000f5b3f : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; jmp rax
0x000000000007023b : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000ca46c : mov rax, rbp ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000740ef : mov rax, rbp ; pop rbx ; pop rbp ; ret
0x00000000000b1217 : mov rax, rbx ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000092d16 : mov rax, rbx ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000be681 : mov rax, rbx ; call rax
0x00000000000f8b8e : mov rax, rbx ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000002cbf5 : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006f26e : mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000003400e : mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000003cb1a : mov rax, rbx ; pop rbx ; ret
0x00000000000306e2 : mov rax, rcx ; pop r13 ; ret
0x0000000000085dc1 : mov rax, rcx ; pop r14 ; ret
0x0000000000030668 : mov rax, rcx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003570e : mov rax, rcx ; pop rbx ; ret
0x0000000000035718 : mov rax, rcx ; ret
0x000000000010987e : mov rax, rdi ; add rsp, 8 ; ret
0x00000000000497c8 : mov rax, rdi ; cmovae rax, rsi ; pop rbx ; ret
0x00000000000498a4 : mov rax, rdi ; cmovae rax, rsi ; ret
0x000000000003c980 : mov rax, rdi ; cqo ; idiv rsi ; ret
0x0000000000078649 : mov rax, rdi ; jmp 0x78610
0x00000000000f3f09 : mov rax, rdi ; mov byte ptr [r9 + 0xffffffffffffffff], 0 ; ret
0x0000000000097586 : mov rax, rdi ; mov byte ptr [rdi + 6], 0 ; ret
0x0000000000102a5b : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000007e60f : mov rax, rdi ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000109ab0 : mov rax, rdi ; pop rbx ; ret
0x000000000007d510 : mov rax, rdi ; ret
0x000000000010b769 : mov rax, rdi ; sar rax, 6 ; ret
0x00000000000b56ab : mov rax, rdx ; add rsp, 8 ; ret
0x0000000000070fc7 : mov rax, rdx ; pop r12 ; ret
0x00000000000bdb82 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000070d89 : mov rax, rdx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007ed7e : mov rax, rdx ; pop rbx ; pop rbp ; ret
0x00000000000391d4 : mov rax, rdx ; pop rbx ; ret
0x0000000000085c37 : mov rax, rdx ; ret
0x000000000004989b : mov rax, rsi ; nop ; ret
0x00000000000c3473 : mov rax, rsi ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003c409 : mov rax, rsi ; pop rbx ; pop rbp ; ret
0x0000000000049790 : mov rax, rsi ; pop rbx ; ret
0x00000000000499d3 : mov rax, rsi ; ret
0x0000000000112057 : mov rbp, qword ptr [rbx + 0x50] ; call 0x11e270
0x0000000000036bbb : mov rbp, r9 ; jmp rdx
0x000000000010b833 : mov rbp, rsp ; pop rbp ; ret
0x00000000000a9070 : mov rbx, r15 ; setne dl ; jmp 0xa9087
0x000000000012237a : mov rbx, rax ; jne 0x122312 ; xor eax, eax ; pop rbx ; ret
0x00000000000f1a1e : mov rbx, rax ; mov rax, rbx ; pop rbx ; ret
0x000000000007c109 : mov rbx, rdi ; je 0x7c118 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002e7a5 : mov rbx, rdi ; test rax, rax ; je 0x2e7af ; call rax
0x00000000000c126d : mov rbx, rsp ; call 0x3d4b0
0x000000000002d500 : mov rcx, qword ptr [rax + r15*8] ; test rcx, rcx ; je 0x2d50b ; call rcx
0x0000000000128f35 : mov rcx, qword ptr [rbp + 0xfffffffffffffe98] ; call rcx
0x000000000011f916 : mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x000000000007d220 : mov rcx, qword ptr [rdi] ; mov qword ptr [rdx], rcx ; ret
0x000000000009db00 : mov rcx, qword ptr [rsi] ; mov byte ptr [rdi + 8], dh ; mov qword ptr [rdi], rcx ; ret
0x0000000000124c94 : mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000124a9d : mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x00000000001216ad : mov rcx, qword ptr [rsp + 8] ; call rcx
0x000000000003dc1a : mov rcx, r10 ; jmp 0x3db44
0x000000000011ecf4 : mov rcx, r13 ; call rbx
0x00000000000a5141 : mov rcx, r13 ; mov rdi, rbp ; call rbx
0x00000000000a49ea : mov rcx, r14 ; mov rdi, qword ptr [r13] ; call r12
0x000000000003d7a3 : mov rcx, rax ; jmp 0x3d684
0x0000000000097875 : mov rcx, rax ; xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x0000000000097863 : mov rcx, rdi ; mov qword ptr [rdx], rcx ; ret
0x00000000000f603f : mov rdi, qword ptr [r12] ; call rbx
0x00000000000a4705 : mov rdi, qword ptr [r12] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x00000000000a49ed : mov rdi, qword ptr [r13] ; call r12
0x00000000000f5c49 : mov rdi, qword ptr [r13] ; call rbx
0x00000000000f5bb6 : mov rdi, qword ptr [r14] ; call rbx
0x00000000000f5bf7 : mov rdi, qword ptr [r15] ; call rbx
0x000000000002339e : mov rdi, qword ptr [rax + 0x18] ; mov qword ptr [rbp + 0xffffffffffffff98], rax ; call rcx
0x0000000000076007 : mov rdi, qword ptr [rax + 0x40] ; jmp 0x75fd0
0x00000000000f5ff2 : mov rdi, qword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call rbx
0x00000000000c495e : mov rdi, qword ptr [rbp + 0xfffffffffffffbd0] ; call r15
0x00000000000cd2de : mov rdi, qword ptr [rbp + 0xffffffffffffff58] ; call rbx
0x00000000000cb714 : mov rdi, qword ptr [rbp + 0xffffffffffffff90] ; movsx esi, byte ptr [rax] ; call 0x879e0
0x00000000000be594 : mov rdi, qword ptr [rbp + 0xffffffffffffff98] ; call r14
0x00000000000f7728 : mov rdi, qword ptr [rbp] ; call r12
0x00000000000f5d7e : mov rdi, qword ptr [rbp] ; call rbx
0x00000000000236e9 : mov rdi, qword ptr [rbx + 0x18] ; call rax
0x00000000000f7737 : mov rdi, qword ptr [rbx] ; call r12
0x0000000000047259 : mov rdi, qword ptr [rdi + 0x68] ; xor eax, eax ; ret
0x000000000006f0b8 : mov rdi, qword ptr [rdi + 0xe0] ; call rax
0x000000000006f08c : mov rdi, qword ptr [rdi + 0xe0] ; jmp rax
0x0000000000107053 : mov rdi, qword ptr [rdx + 0x50] ; mov rsi, rdx ; call rax
0x000000000002bf6c : mov rdi, qword ptr [rsp + 0x10] ; call r15
0x0000000000025a61 : mov rdi, qword ptr [rsp + 0x40] ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000028498 : mov rdi, qword ptr [rsp + 0x48] ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000027791 : mov rdi, qword ptr [rsp + 0x58] ; mov dword ptr [rsp + 8], eax ; call rbx
0x00000000000278bc : mov rdi, qword ptr [rsp + 0x70] ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x00000000000220a3 : mov rdi, qword ptr [rsp + 8] ; add rsp, 0x18 ; jmp rax
0x00000000000ecb0d : mov rdi, qword ptr [rsp] ; mov rdx, rax ; call 0x108d60
0x000000000001ff61 : mov rdi, r12 ; call qword ptr [r14]
0x0000000000084039 : mov rdi, r12 ; call rax
0x00000000000f68b4 : mov rdi, r12 ; call rbx
0x0000000000121f78 : mov rdi, r12 ; call rdx
0x0000000000120bfa : mov rdi, r13 ; call qword ptr [rax]
0x00000000000f7840 : mov rdi, r13 ; call r14
0x00000000000f7388 : mov rdi, r13 ; call rbx
0x0000000000086d2a : mov rdi, r13 ; call rdx
0x0000000000112054 : mov rdi, r13 ; mov rbp, qword ptr [rbx + 0x50] ; call 0x11e270
0x0000000000022e84 : mov rdi, r13 ; mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x0000000000071b53 : mov rdi, r13 ; xor r8d, r8d ; call r12
0x00000000001065c1 : mov rdi, r14 ; call 0x1028b0
0x000000000010669a : mov rdi, r14 ; call 0x102960
0x00000000000e33cf : mov rdi, r14 ; call 0xdf670
0x00000000000814ad : mov rdi, r14 ; call qword ptr [rax]
0x0000000000121447 : mov rdi, r14 ; call rax
0x00000000000f68fd : mov rdi, r14 ; call rbx
0x0000000000023f6d : mov rdi, r14 ; mov rax, qword ptr [rbp + 0xffffffffffffffa0] ; call rax
0x00000000001066f8 : mov rdi, r14 ; xor eax, eax ; call 0x102960
0x00000000000e96e1 : mov rdi, r15 ; call 0x1f470
0x0000000000075905 : mov rdi, r15 ; call 0x71b80
0x00000000001209f2 : mov rdi, r15 ; call qword ptr [rax]
0x00000000000be165 : mov rdi, r15 ; call r14
0x00000000000861b5 : mov rdi, r15 ; call rax
0x00000000000f691d : mov rdi, r15 ; call rbx
0x0000000000086c52 : mov rdi, r15 ; mov rdx, rbx ; mov rsi, r13 ; call rax
0x00000000000874b5 : mov rdi, r9 ; call rcx
0x000000000012a2a6 : mov rdi, rax ; call qword ptr [r10]
0x00000000000cdaf7 : mov rdi, rax ; call rbx
0x000000000011f913 : mov rdi, rax ; mov rcx, qword ptr [rcx + 0x18] ; jmp rcx
0x0000000000120d03 : mov rdi, rbp ; call qword ptr [rax]
0x0000000000122419 : mov rdi, rbp ; call qword ptr [rbx]
0x00000000001201ac : mov rdi, rbp ; call r14
0x00000000001203a9 : mov rdi, rbp ; call rax
0x00000000000a4e3c : mov rdi, rbp ; call rbx
0x000000000012f110 : mov rdi, rbp ; call rcx
0x0000000000127439 : mov rdi, rbp ; call rdx
0x00000000000c126a : mov rdi, rbp ; mov rbx, rsp ; call 0x3d4b0
0x0000000000124c91 : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000124a9a : mov rdi, rbp ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000011ecf1 : mov rdi, rbp ; mov rcx, r13 ; call rbx
0x000000000012188d : mov rdi, rbp ; xor eax, eax ; pop rbp ; jmp rdx
0x000000000010c812 : mov rdi, rbx ; call 0x78b10
0x0000000000122827 : mov rdi, rbx ; call qword ptr [rax]
0x000000000002c096 : mov rdi, rbx ; call r12
0x00000000000238ec : mov rdi, rbx ; call r15
0x000000000006e3bf : mov rdi, rbx ; call r8
0x0000000000050b24 : mov rdi, rbx ; call rax
0x000000000011e7d0 : mov rdi, rbx ; mov qword ptr [rsp], rcx ; call r12
0x000000000011e8e1 : mov rdi, rbx ; mov r13, rsp ; call r15
0x00000000001367a2 : mov rdi, rbx ; mov rax, qword ptr [rsp + 0x10] ; call rax
0x00000000001216aa : mov rdi, rbx ; mov rcx, qword ptr [rsp + 8] ; call rcx
0x0000000000086455 : mov rdi, rbx ; mov rdx, r15 ; call rax
0x00000000000754a7 : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000000752ac : mov rdi, rbx ; pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000135f89 : mov rdi, rbx ; pop rbx ; mov rsi, rbp ; pop rbp ; jmp rax
0x000000000012db7f : mov rdi, rbx ; pop rbx ; pop rbp ; jmp rax
0x00000000000815f8 : mov rdi, rcx ; mov qword ptr [rsp + 0x10], rcx ; call qword ptr [rax]
0x0000000000108dd7 : mov rdi, rdx ; jmp rax
0x000000000011fa15 : mov rdi, rsp ; call rax
0x000000000012dbf0 : mov rdi, rsp ; call rdx
0x0000000000108fc9 : mov rdx, qword ptr [r9] ; test rdx, rdx ; jne 0x108fc0 ; leave ; ret
0x0000000000073bb4 : mov rdx, qword ptr [rax + 0x18] ; mov qword ptr [rax + 0x20], rdx ; pop rbx ; ret
0x00000000000c1ccc : mov rdx, qword ptr [rax + 0x18] ; test rdx, rdx ; je 0xc1cdb ; call rdx
0x00000000000e73c0 : mov rdx, qword ptr [rax] ; call 0xc1ec0
0x0000000000021ebb : mov rdx, qword ptr [rax] ; mov rax, qword ptr [rsp + 0x18] ; call rax
0x000000000007f1ff : mov rdx, qword ptr [rax] ; test rdx, rdx ; je 0x7f209 ; call rdx
0x0000000000165cd8 : mov rdx, qword ptr [rdi + 0x20] ; test rdx, rdx ; je 0x165ce8 ; call rdx
0x0000000000165bcf : mov rdx, qword ptr [rdx + rbp*8] ; test rdx, rdx ; je 0x165bda ; call rdx
0x00000000001451e0 : mov rdx, qword ptr [rsi + 0xfffffffffffffff8] ; mov qword ptr [rdi + 0xfffffffffffffff8], rdx ; ret
0x000000000009daf0 : mov rdx, qword ptr [rsi] ; mov qword ptr [rdi], rdx ; ret
0x00000000000be890 : mov rdx, qword ptr [rsp + 0x28] ; call rax
0x00000000001371e9 : mov rdx, r12 ; add r9, r11 ; call rax
0x0000000000107b48 : mov rdx, r12 ; call rax
0x00000000000861b2 : mov rdx, r12 ; mov rdi, r15 ; call rax
0x0000000000107ed3 : mov rdx, r13 ; call rax
0x00000000000a4e39 : mov rdx, r13 ; mov rdi, rbp ; call rbx
0x000000000012b29b : mov rdx, r13 ; mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000002079a : mov rdx, r13 ; sub rdx, rbx ; inc rdx ; jmp 0x207a9
0x00000000001082cb : mov rdx, r14 ; call rax
0x00000000000771e1 : mov rdx, r14 ; mov rdi, rbx ; call rax
0x00000000001234b0 : mov rdx, r14 ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x0000000000086458 : mov rdx, r15 ; call rax
0x0000000000111b19 : mov rdx, r15 ; mov rdi, r12 ; call rax
0x0000000000049589 : mov rdx, r8 ; jmp 0x495a1
0x00000000000ecb11 : mov rdx, rax ; call 0x108d60
0x0000000000128116 : mov rdx, rax ; jmp 0x1280da
0x000000000004c6a8 : mov rdx, rax ; jmp 0x4c6de
0x000000000004c80c : mov rdx, rax ; jmp 0x4c82c
0x00000000000c4e80 : mov rdx, rax ; jmp 0xc4e9e
0x00000000000c5411 : mov rdx, rax ; jmp 0xc53b0
0x00000000000f31bb : mov rdx, rax ; jmp 0xf314f
0x00000000000f45cc : mov rdx, rax ; jmp 0xf45a0
0x00000000000f892a : mov rdx, rax ; jmp 0xf8954
0x00000000000f89fb : mov rdx, rax ; jmp 0xf8a26
0x0000000000023510 : mov rdx, rbp ; mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x00000000001233ad : mov rdx, rbp ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x00000000000bdb4b : mov rdx, rbp ; xor ecx, ecx ; jmp 0xbdb15
0x0000000000107f53 : mov rdx, rbx ; call rax
0x0000000000086c55 : mov rdx, rbx ; mov rsi, r13 ; call rax
0x0000000000086e11 : mov rdx, rbx ; mov rsi, r13 ; mov rdi, r12 ; call rax
0x00000000000be590 : mov rsi, qword ptr [rbp + 0xffffffffffffffa8] ; mov rdi, qword ptr [rbp + 0xffffffffffffff98] ; call r14
0x0000000000022e87 : mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x000000000006612a : mov rsi, qword ptr [rip + 0x358e2f] ; call rax
0x0000000000064842 : mov rsi, qword ptr [rip + 0x35a717] ; call rax
0x000000000005f3c6 : mov rsi, qword ptr [rip + 0x35fb93] ; call rax
0x0000000000056054 : mov rsi, qword ptr [rip + 0x368f05] ; call rax
0x000000000004f082 : mov rsi, qword ptr [rip + 0x36fed7] ; call rax
0x0000000000049f3e : mov rsi, qword ptr [rip + 0x37501b] ; call rax
0x0000000000047599 : mov rsi, qword ptr [rsi + 0x70] ; xor eax, eax ; ret
0x00000000001201a7 : mov rsi, qword ptr [rsp + 0x10] ; mov rdi, rbp ; call r14
0x0000000000023513 : mov rsi, qword ptr [rsp + 0x18] ; call rbx
0x000000000008340a : mov rsi, qword ptr [rsp + 0x18] ; pop rdx ; pop rbx ; pop rbp ; jmp rax
0x0000000000084034 : mov rsi, qword ptr [rsp + 0x28] ; mov rdi, r12 ; call rax
0x0000000000027ea6 : mov rsi, qword ptr [rsp + 0x50] ; call rax
0x0000000000102ceb : mov rsi, qword ptr [rsp + 8] ; call rax
0x0000000000083a5a : mov rsi, qword ptr [rsp] ; jmp rax
0x000000000012b29e : mov rsi, r12 ; mov rdi, rbp ; call rax
0x000000000011ecee : mov rsi, r12 ; mov rdi, rbp ; mov rcx, r13 ; call rbx
0x0000000000085fa2 : mov rsi, r12 ; mov rdi, rbx ; call rax
0x0000000000086c58 : mov rsi, r13 ; call rax
0x00000000000a484e : mov rsi, r13 ; lea rcx, qword ptr [rax + 4] ; call rbx
0x0000000000086e14 : mov rsi, r13 ; mov rdi, r12 ; call rax
0x0000000000085d34 : mov rsi, r14 ; call rax
0x00000000000e33cc : mov rsi, r15 ; mov rdi, r14 ; call 0xdf670
0x00000000000ac89a : mov rsi, rax ; mov r13, rax ; call 0x38ac0
0x000000000003a2f2 : mov rsi, rbp ; call r12
0x000000000010c80f : mov rsi, rbp ; mov rdi, rbx ; call 0x78b10
0x0000000000086fcc : mov rsi, rbp ; mov rdi, rbx ; call rax
0x0000000000135f8d : mov rsi, rbp ; pop rbp ; jmp rax
0x00000000000f783d : mov rsi, rbx ; mov rdi, r13 ; call r14
0x0000000000086d27 : mov rsi, rbx ; mov rdi, r13 ; call rdx
0x000000000012c01c : mov rsi, rbx ; mov rdi, r15 ; call qword ptr [rax]
0x000000000012f10d : mov rsi, rbx ; mov rdi, rbp ; call rcx
0x00000000001252e9 : mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x0000000000107057 : mov rsi, rdx ; call rax
0x0000000000122744 : mov rsi, rsp ; call qword ptr [rax]
0x000000000012e84c : mov rsi, rsp ; mov rdi, rbp ; call qword ptr [rax]
0x0000000000122824 : mov rsi, rsp ; mov rdi, rbx ; call qword ptr [rax]
0x0000000000036bb8 : mov rsp, r8 ; mov rbp, r9 ; jmp rdx
0x00000000001a058c : mov sil, -0x10 ; jmp qword ptr [rdx]
0x00000000001a3aa0 : mov sil, dl ; call qword ptr [rdx]
0x000000000018826c : mov spl, r15b ; call rsp
0x000000000002b359 : mov ss, dword ptr [rax + 0x29480000] ; ret -0x74b7
0x00000000000f16a3 : mov word ptr [r8 + 0x21], si ; ret
0x000000000008d231 : mov word ptr [rax + rdx + 0xfffffffffffffffe], cx ; ret
0x00000000000fd73f : mov word ptr [rax], dx ; ret
0x000000000015b4a2 : mov word ptr [rcx + 4], dx ; ret
0x000000000015b4e3 : mov word ptr [rcx + 8], dx ; ret
0x000000000015b470 : mov word ptr [rcx], dx ; mov byte ptr [rcx + 2], dl ; ret
0x000000000015b460 : mov word ptr [rcx], dx ; ret
0x000000000009f20c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x11] ; ret
0x00000000000a005c : mov word ptr [rdi + 0x10], cx ; lea rax, qword ptr [rdi + 0x12] ; ret
0x000000000009db9c : mov word ptr [rdi + 0x10], cx ; ret
0x00000000000a1acc : mov word ptr [rdi + 0x10], cx ; xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x000000000009f314 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x19] ; ret
0x00000000000a0164 : mov word ptr [rdi + 0x18], cx ; lea rax, qword ptr [rdi + 0x1a] ; ret
0x000000000009dc84 : mov word ptr [rdi + 0x18], cx ; ret
0x00000000000a1bd4 : mov word ptr [rdi + 0x18], cx ; xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x0000000000145778 : mov word ptr [rdi + 0xfffffffffffffffd], dx ; mov word ptr [rdi + 0xfffffffffffffffe], cx ; ret
0x000000000014577c : mov word ptr [rdi + 0xfffffffffffffffe], cx ; ret
0x0000000000145594 : mov word ptr [rdi + 0xfffffffffffffffe], dx ; ret
0x000000000014e057 : mov word ptr [rdi + 1], dx ; mov word ptr [rdi], cx ; ret
0x000000000003d45f : mov word ptr [rdi + 2], dx ; ret
0x0000000000097612 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 5] ; ret
0x000000000009ff08 : mov word ptr [rdi + 4], dx ; lea rax, qword ptr [rdi + 6] ; ret
0x0000000000097572 : mov word ptr [rdi + 4], dx ; mov rax, rdi ; ret
0x000000000009dad8 : mov word ptr [rdi + 4], dx ; ret
0x00000000000a1978 : mov word ptr [rdi + 4], dx ; xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x000000000009ff6a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 0xa] ; ret
0x000000000009f12a : mov word ptr [rdi + 8], dx ; lea rax, qword ptr [rdi + 9] ; ret
0x000000000009db1a : mov word ptr [rdi + 8], dx ; ret
0x00000000000a19da : mov word ptr [rdi + 8], dx ; xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x000000000009daa3 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dh ; ret
0x000000000009e776 : mov word ptr [rdi], cx ; mov byte ptr [rdi + 2], dl ; ret
0x000000000014e05b : mov word ptr [rdi], cx ; ret
0x000000000009f093 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 1] ; ret
0x000000000009feb3 : mov word ptr [rdi], dx ; lea rax, qword ptr [rdi + 2] ; ret
0x000000000009da93 : mov word ptr [rdi], dx ; ret
0x00000000000a1923 : mov word ptr [rdi], dx ; xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000975d0 : mov word ptr [rdi], si ; lea rax, qword ptr [rdi + 1] ; ret
0x0000000000097530 : mov word ptr [rdi], si ; mov rax, rdi ; ret
0x00000000000e51b0 : mov word ptr [rdi], si ; xor al, al ; ret
0x000000000015d818 : mov word ptr [rdx + 4], ax ; lea rax, qword ptr [rdx + 5] ; ret
0x000000000009a84d : mov word ptr [rdx + 4], ax ; mov rax, rdi ; ret
0x000000000009a8d1 : mov word ptr [rdx + 8], ax ; mov rax, rdi ; ret
0x000000000015d7c3 : mov word ptr [rdx], ax ; lea rax, qword ptr [rdx + 1] ; ret
0x000000000009a7e8 : mov word ptr [rdx], ax ; mov rax, rdi ; ret
0x00000000000f0995 : mov word ptr [rsi + 0x66], dx ; xor eax, eax ; ret
0x000000000003d3cf : mov word ptr [rsi + 0xc], ax ; xor eax, eax ; ret
0x000000000003d416 : mov word ptr [rsi + 0xe], ax ; xor eax, eax ; ret
0x00000000000e5193 : mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000036a74 : mov word ptr [rsp + 0xfffffffffffffffe], di ; fldcw word ptr [rsp + 0xfffffffffffffffe] ; ret
0x0000000000022e83 : movabs al, byte ptr [0x201a748b48ef894c] ; call rax
0x000000000004242e : movabs al, byte ptr [0x293ff08348000000] ; ret -0x57f
0x00000000000659f7 : movabs al, byte ptr [0x840fc08548000000] ; ret
0x000000000003fcaf : movabs al, byte ptr [0x8948fe8944000000] ; ret -0x76b8
0x00000000000401fe : movabs al, byte ptr [0xc748c03145000000] ; ret
0x0000000000076003 : movabs al, byte ptr [0xeb40788b48000000] ; ret
0x0000000000006e60 : movabs byte ptr [0x70000c002200001c], al ; ret 0xf
0x000000000019d506 : movabs byte ptr [0xee5c800d1cffee5f], al ; jmp qword ptr [rdx]
0x00000000001ac28e : movabs byte ptr [0xf559350d1cfff55a], al ; jmp qword ptr [rdx]
0x00000000000d2a53 : movabs dword ptr [0x5bffffff67820fca], eax ; ret
0x00000000000e407e : movabs dword ptr [0x83305e8b49000003], eax ; ret
0x000000000007ae91 : movabs dword ptr [0x8341001f0ffffffc], eax ; ret 0x4101
0x0000000000020fcb : movabs dword ptr [0x8348c6ff411572c1], eax ; ret
0x0000000000199d4e : movabs dword ptr [0xedbb500d1cffedbb], eax ; jmp qword ptr [rdx]
0x000000000019bc56 : movabs dword ptr [0xee26010d1cffee60], eax ; jmp qword ptr [rdx]
0x00000000001aee06 : movabs dword ptr [0xf588850d1cfff589], eax ; jmp qword ptr [rdx]
0x00000000001ab8de : movabs dword ptr [0xfb24290d1cfffb24], eax ; jmp qword ptr [rdx]
0x000000000000087f : movabs eax, dword ptr [0x10c0449000e] ; ret 0x440c
0x000000000019474e : movabs eax, dword ptr [0xebd54b0d1cffebd7] ; jmp qword ptr [rdx]
0x0000000000196906 : movabs eax, dword ptr [0xed776c0d1cffed7a] ; jmp qword ptr [rdx]
0x00000000000f6d33 : movabs eax, dword ptr [0xff894cf631000008] ; call rbx
0x0000000000036256 : movapd xmm0, xmm1 ; ret
0x00000000000363d4 : movaps xmm0, xmm1 ; jne 0x363e0 ; add rsp, 8 ; ret
0x00000000000366af : movaps xmm0, xmm1 ; jne 0x366c0 ; add rsp, 8 ; ret
0x0000000000036257 : movaps xmm0, xmm1 ; ret
0x0000000000143cfe : movaps xmmword ptr [rdi + 0xffffffffffffffe0], xmm4 ; movaps xmmword ptr [rdi + 0xfffffffffffffff0], xmm5 ; jmp r9
0x0000000000143d02 : movaps xmmword ptr [rdi + 0xfffffffffffffff0], xmm5 ; jmp r9
0x0000000000143dac : movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000036366 : movd mm0, eax ; mov dword ptr [rdi], edx ; ret
0x0000000000036176 : movd mm0, eax ; ret
0x0000000000036365 : movd mm0, rax ; mov dword ptr [rdi], edx ; ret
0x0000000000036175 : movd mm0, rax ; ret
0x0000000000036592 : movd mm1, eax ; movaps xmm0, xmm1 ; ret
0x00000000000361df : movd mm1, eax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000036526 : movd mm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x0000000000036253 : movd mm1, edi ; movapd xmm0, xmm1 ; ret
0x00000000000361de : movd mm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000036252 : movd mm1, rdi ; movapd xmm0, xmm1 ; ret
0x00000000000364fc : movd xmm0, eax ; ret
0x0000000000036591 : movd xmm1, eax ; movaps xmm0, xmm1 ; ret
0x0000000000036525 : movd xmm1, eax ; movss dword ptr [rdi], xmm1 ; ret
0x000000000009db70 : movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000009f3cd : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a021d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x000000000009ea30 : movdqu xmmword ptr [rdi + 0x10], xmm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x000000000009dd3d : movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x00000000000a0483 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x000000000009ec73 : movdqu xmmword ptr [rdi + 0x30], xmm7 ; ret
0x000000000014dd2f : movdqu xmmword ptr [rdi + 0xa], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014dcbf : movdqu xmmword ptr [rdi + 0xb], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014dc4f : movdqu xmmword ptr [rdi + 0xc], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014dbdf : movdqu xmmword ptr [rdi + 0xd], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009f36d : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a01bd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000009dcdd : movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000014db6f : movdqu xmmword ptr [rdi + 0xe], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009f38d : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a01dd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000009dcfd : movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000014daff : movdqu xmmword ptr [rdi + 0xf], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009f3ad : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a01fd : movdqu xmmword ptr [rdi + 0xf], xmm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000009dd1d : movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000014d28b : movdqu xmmword ptr [rdi + 0xfffffffffffffff0], xmm0 ; ret
0x000000000014d2fb : movdqu xmmword ptr [rdi + 0xfffffffffffffff0], xmm1 ; ret
0x000000000009eb30 : movdqu xmmword ptr [rdi + 0xffffffffffffffff], xmm0 ; ret
0x000000000014e11f : movdqu xmmword ptr [rdi + 1], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014e0af : movdqu xmmword ptr [rdi + 2], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014e03f : movdqu xmmword ptr [rdi + 3], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014dfcf : movdqu xmmword ptr [rdi + 4], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014df5f : movdqu xmmword ptr [rdi + 5], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014deef : movdqu xmmword ptr [rdi + 6], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014de7f : movdqu xmmword ptr [rdi + 7], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014de0f : movdqu xmmword ptr [rdi + 8], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014dd9f : movdqu xmmword ptr [rdi + 9], xmm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000008d196 : movdqu xmmword ptr [rdi + rdx + 0xffffffffffffffe0], xmm8 ; ret
0x00000000000a0024 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000009f1e4 : movdqu xmmword ptr [rdi], xmm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000009e857 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009db84 : movdqu xmmword ptr [rdi], xmm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009dbc7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009dbb7 : movdqu xmmword ptr [rdi], xmm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009dc38 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009dbf8 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009dc18 : movdqu xmmword ptr [rdi], xmm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009db98 : movdqu xmmword ptr [rdi], xmm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009dd39 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009dcd9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009dcf9 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009dd19 : movdqu xmmword ptr [rdi], xmm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009db74 : movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000a1a94 : movdqu xmmword ptr [rdi], xmm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000014db04 : movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009a932 : movlpd qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x000000000009a952 : movlpd qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x000000000009a972 : movlpd qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x000000000009a7bc : movlpd qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x000000000009a766 : movlpd qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x000000000009a933 : movlps qword ptr [rdx + 5], xmm1 ; mov rax, rdi ; ret
0x000000000009a953 : movlps qword ptr [rdx + 6], xmm1 ; mov rax, rdi ; ret
0x000000000009a973 : movlps qword ptr [rdx + 7], xmm1 ; mov rax, rdi ; ret
0x000000000009a7bd : movlps qword ptr [rdx + 8], xmm1 ; mov rax, rdi ; ret
0x000000000009a767 : movlps qword ptr [rdx], xmm0 ; mov rax, rdi ; ret
0x000000000009db71 : movq mm0, qword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x00000000000fa96d : movq qword ptr [rax + rax], mm5 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000009f3ce : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x00000000000a021e : movq qword ptr [rdi + 0x10], mm2 ; lea rax, qword ptr [rdi + 0x20] ; ret
0x000000000009ea31 : movq qword ptr [rdi + 0x10], mm2 ; mov byte ptr [rdi + 0x20], cl ; ret
0x000000000009dd3e : movq qword ptr [rdi + 0x10], mm2 ; ret
0x00000000000a1c8e : movq qword ptr [rdi + 0x10], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a0484 : movq qword ptr [rdi + 0x30], mm7 ; lea rax, qword ptr [rdi + 0x40] ; ret
0x000000000009ec74 : movq qword ptr [rdi + 0x30], mm7 ; ret
0x00000000000a1d04 : movq qword ptr [rdi + 0x30], mm7 ; xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x000000000014dd30 : movq qword ptr [rdi + 0xa], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014dcc0 : movq qword ptr [rdi + 0xb], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014dc50 : movq qword ptr [rdi + 0xc], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014dbe0 : movq qword ptr [rdi + 0xd], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009f36e : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1c] ; ret
0x00000000000a01be : movq qword ptr [rdi + 0xd], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x000000000009dcde : movq qword ptr [rdi + 0xd], mm2 ; ret
0x00000000000a1c2e : movq qword ptr [rdi + 0xd], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x000000000014db70 : movq qword ptr [rdi + 0xe], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009f38e : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1d] ; ret
0x00000000000a01de : movq qword ptr [rdi + 0xe], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x000000000009dcfe : movq qword ptr [rdi + 0xe], mm2 ; ret
0x00000000000a1c4e : movq qword ptr [rdi + 0xe], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x000000000014db00 : movq qword ptr [rdi + 0xf], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000009f3ae : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1e] ; ret
0x00000000000a01fe : movq qword ptr [rdi + 0xf], mm2 ; lea rax, qword ptr [rdi + 0x1f] ; ret
0x000000000009dd1e : movq qword ptr [rdi + 0xf], mm2 ; ret
0x00000000000a1c6e : movq qword ptr [rdi + 0xf], mm2 ; xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000014d2f7 : movq qword ptr [rdi + 0xffffffffffffffe1], mm0 ; movdqu xmmword ptr [rdi + 0xfffffffffffffff0], xmm1 ; ret
0x000000000014d387 : movq qword ptr [rdi + 0xffffffffffffffe2], mm0 ; movdqu xmmword ptr [rdi + 0xfffffffffffffff0], xmm1 ; ret
0x000000000014d417 : movq qword ptr [rdi + 0xffffffffffffffe3], mm0 ; movdqu xmmword ptr [rdi + 0xfffffffffffffff0], xmm1 ; ret
0x000000000014d4a7 : movq qword ptr [rdi + 0xffffffffffffffe4], mm0 ; movdqu xmmword ptr [rdi + 0xfffffffffffffff0], xmm1 ; ret
0x000000000014d527 : movq qword ptr [rdi + 0xffffffffffffffe5], mm0 ; movdqu xmmword ptr [rdi + 0xfffffffffffffff0], xmm1 ; ret
0x000000000014d5a7 : movq qword ptr [rdi + 0xffffffffffffffe6], mm0 ; movdqu xmmword ptr [rdi + 0xfffffffffffffff0], xmm1 ; ret
0x000000000014d627 : movq qword ptr [rdi + 0xffffffffffffffe7], mm0 ; movdqu xmmword ptr [rdi + 0xfffffffffffffff0], xmm1 ; ret
0x000000000014d6a7 : movq qword ptr [rdi + 0xffffffffffffffe8], mm0 ; movdqu xmmword ptr [rdi + 0xfffffffffffffff0], xmm1 ; ret
0x000000000014d727 : movq qword ptr [rdi + 0xffffffffffffffe9], mm0 ; movdqu xmmword ptr [rdi + 0xfffffffffffffff0], xmm1 ; ret
0x000000000014d7a7 : movq qword ptr [rdi + 0xffffffffffffffea], mm0 ; movdqu xmmword ptr [rdi + 0xfffffffffffffff0], xmm1 ; ret
0x000000000014d827 : movq qword ptr [rdi + 0xffffffffffffffeb], mm0 ; movdqu xmmword ptr [rdi + 0xfffffffffffffff0], xmm1 ; ret
0x000000000014d8a7 : movq qword ptr [rdi + 0xffffffffffffffec], mm0 ; movdqu xmmword ptr [rdi + 0xfffffffffffffff0], xmm1 ; ret
0x000000000014d927 : movq qword ptr [rdi + 0xffffffffffffffed], mm0 ; movdqu xmmword ptr [rdi + 0xfffffffffffffff0], xmm1 ; ret
0x000000000014d9b7 : movq qword ptr [rdi + 0xffffffffffffffee], mm0 ; movdqu xmmword ptr [rdi + 0xfffffffffffffff0], xmm1 ; ret
0x000000000014da37 : movq qword ptr [rdi + 0xffffffffffffffef], mm0 ; movdqu xmmword ptr [rdi + 0xfffffffffffffff0], xmm1 ; ret
0x000000000014d28c : movq qword ptr [rdi + 0xfffffffffffffff0], mm0 ; ret
0x000000000014d2fc : movq qword ptr [rdi + 0xfffffffffffffff0], mm1 ; ret
0x000000000009eb31 : movq qword ptr [rdi + 0xffffffffffffffff], mm0 ; ret
0x000000000014e120 : movq qword ptr [rdi + 1], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014e0b0 : movq qword ptr [rdi + 2], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014e040 : movq qword ptr [rdi + 3], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014dfd0 : movq qword ptr [rdi + 4], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014df60 : movq qword ptr [rdi + 5], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014def0 : movq qword ptr [rdi + 6], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014de80 : movq qword ptr [rdi + 7], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014de10 : movq qword ptr [rdi + 8], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000014dda0 : movq qword ptr [rdi + 9], mm0 ; movdqu xmmword ptr [rdi], xmm1 ; ret
0x000000000008d198 : movq qword ptr [rdi + rdx + 0xffffffffffffffe0], mm0 ; ret
0x00000000000a0025 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0x10] ; ret
0x000000000009f1e5 : movq qword ptr [rdi], mm0 ; lea rax, qword ptr [rdi + 0xf] ; ret
0x000000000009e858 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], cl ; ret
0x000000000009db85 : movq qword ptr [rdi], mm0 ; mov byte ptr [rdi + 0x10], dh ; ret
0x000000000009dbd8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dh ; ret
0x000000000009e8ab : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; mov byte ptr [rdi + 0x14], dl ; ret
0x000000000009dbc8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0x10], ecx ; ret
0x000000000009dbb8 : movq qword ptr [rdi], mm0 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009dc39 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0x10], rcx ; ret
0x000000000009dbf9 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xe], rcx ; ret
0x000000000009dc19 : movq qword ptr [rdi], mm0 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009db99 : movq qword ptr [rdi], mm0 ; mov word ptr [rdi + 0x10], cx ; ret
0x000000000009dd3a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0x10], xmm2 ; ret
0x000000000009dcda : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xd], xmm2 ; ret
0x000000000009dcfa : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xe], xmm2 ; ret
0x000000000009dd1a : movq qword ptr [rdi], mm0 ; movdqu xmmword ptr [rdi + 0xf], xmm2 ; ret
0x000000000009db75 : movq qword ptr [rdi], mm0 ; ret
0x00000000000a1a95 : movq qword ptr [rdi], mm0 ; xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x000000000014db05 : movq qword ptr [rdi], mm1 ; ret
0x0000000000036364 : movq xmm0, rax ; mov dword ptr [rdi], edx ; ret
0x0000000000036174 : movq xmm0, rax ; ret
0x00000000000361dd : movq xmm1, rax ; movsd qword ptr [rdi], xmm1 ; ret
0x0000000000036251 : movq xmm1, rdi ; movapd xmm0, xmm1 ; ret
0x0000000000194194 : movsb byte ptr es:[rdi], byte ptr [rsi] ; add byte ptr [r8], r8b ; cmp byte ptr [rdi + 0xffffffffffffffeb], dl ; jmp qword ptr [rbx]
0x00000000000d1972 : movsb byte ptr es:[rdi], byte ptr [rsi] ; add byte ptr [rax], al ; add byte ptr [rcx], al ; setg dl ; jmp 0xd18fe
0x000000000018c990 : movsb byte ptr es:[rdi], byte ptr [rsi] ; add esi, edi ; call rsp
0x000000000018a784 : movsb byte ptr es:[rdi], byte ptr [rsi] ; and eax, dword ptr [rcx] ; add byte ptr [rsp + rdi], dh ; out dx, eax ; call rsp
0x000000000018eb28 : movsb byte ptr es:[rdi], byte ptr [rsi] ; cdq ; cli ; jmp rsp
0x0000000000188971 : movsb byte ptr es:[rdi], byte ptr [rsi] ; cld ; call rsp
0x0000000000188835 : movsb byte ptr es:[rdi], byte ptr [rsi] ; cld ; jmp qword ptr [rax + 0x20fffca3]
0x0000000000188831 : movsb byte ptr es:[rdi], byte ptr [rsi] ; cld ; jmp qword ptr [rax]
0x000000000018e810 : movsb byte ptr es:[rdi], byte ptr [rsi] ; cli ; call qword ptr [rdx + rax*8 + 2]
0x000000000018e9b8 : movsb byte ptr es:[rdi], byte ptr [rsi] ; cli ; jmp rsp
0x000000000017b025 : movsb byte ptr es:[rdi], byte ptr [rsi] ; cmc ; call qword ptr [rax]
0x000000000017aee1 : movsb byte ptr es:[rdi], byte ptr [rsi] ; cmc ; inc dword ptr [rax + 0xffffffffffffffa4] ; cmc ; jmp qword ptr [rbx]
0x000000000017aee5 : movsb byte ptr es:[rdi], byte ptr [rsi] ; cmc ; jmp qword ptr [rbx]
0x00000000001896c4 : movsb byte ptr es:[rdi], byte ptr [rsi] ; cmpsb byte ptr [rsi], byte ptr es:[rdi] ; add byte ptr [rax], al ; jmp 0x1896cb
0x00000000001a8a94 : movsb byte ptr es:[rdi], byte ptr [rsi] ; cwde ; add dword ptr [rax], eax ; js 0x1a8ac5 ; cmc ; jmp qword ptr [rcx]
0x000000000019cf94 : movsb byte ptr es:[rdi], byte ptr [rsi] ; fld qword ptr [rax] ; add al, ch ; js 0x19cf89 ; jmp qword ptr [rcx]
0x0000000000175a42 : movsb byte ptr es:[rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x00000000001895e0 : movsb byte ptr es:[rdi], byte ptr [rsi] ; jmp 0x1895e3
0x0000000000176c9d : movsb byte ptr es:[rdi], byte ptr [rsi] ; jns 0x176ced ; jmp 0x176c2e
0x00000000001a0714 : movsb byte ptr es:[rdi], byte ptr [rsi] ; mov dh, -0x10 ; jmp qword ptr [rdx]
0x000000000018e6d4 : movsb byte ptr es:[rdi], byte ptr [rsi] ; mov edx, 0x29540002 ; cli ; call rsp
0x000000000019ae94 : movsb byte ptr es:[rdi], byte ptr [rsi] ; mov esp, 0x17680000 ; out dx, al ; call qword ptr [rdi]
0x00000000001a8294 : movsb byte ptr es:[rdi], byte ptr [rsi] ; nop ; add dword ptr [rax], eax ; cwde ; or esi, ebp ; jmp qword ptr [rcx]
0x00000000000aee48 : movsb byte ptr es:[rdi], byte ptr [rsi] ; or eax, 0x8548fff8 ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x000000000005959f : movsb byte ptr es:[rdi], byte ptr [rsi] ; ret
0x000000000018c050 : movsb byte ptr es:[rdi], byte ptr [rsi] ; ret -0xb
0x00000000001ac394 : movsb byte ptr es:[rdi], byte ptr [rsi] ; rol dword ptr [rcx], 1 ; add byte ptr [rax + 0xffffffffffffffe3], bl ; cmc ; jmp rbx
0x00000000001ac594 : movsb byte ptr es:[rdi], byte ptr [rsi] ; rol dword ptr [rcx], cl ; add al, ch ; in eax, -0xb ; call qword ptr [rax]
0x0000000000187455 : movsb byte ptr es:[rdi], byte ptr [rsi] ; std ; call qword ptr [rcx]
0x0000000000187435 : movsb byte ptr es:[rdi], byte ptr [rsi] ; std ; jmp qword ptr [rdx]
0x00000000001aa0a4 : movsb byte ptr es:[rdi], byte ptr [rsi] ; stosb byte ptr es:[rdi], al ; add dword ptr [rax], eax ; ret
0x000000000018cb20 : movsb byte ptr es:[rdi], byte ptr [rsi] ; sub edi, esi ; jmp rsp
0x000000000018df48 : movsb byte ptr es:[rdi], byte ptr [rsi] ; xor ecx, edi ; call rsp
0x000000000018e3dd : movsd dword ptr es:[rdi], dword ptr [rsi] ; add al, byte ptr [rax] ; ret
0x000000000018968d : movsd dword ptr es:[rdi], dword ptr [rsi] ; add byte ptr [rax], al ; hlt ; jmp 0x189693
0x0000000000134167 : movsd dword ptr es:[rdi], dword ptr [rsi] ; call -0x3d62be9b
0x0000000000188969 : movsd dword ptr es:[rdi], dword ptr [rsi] ; cld ; call rsp
0x000000000018882d : movsd dword ptr es:[rdi], dword ptr [rsi] ; cld ; jmp qword ptr [rax + 0x20fffca4]
0x0000000000188829 : movsd dword ptr es:[rdi], dword ptr [rsi] ; cld ; jmp qword ptr [rax]
0x000000000017afa1 : movsd dword ptr es:[rdi], dword ptr [rsi] ; cmc ; call qword ptr [rax + 0x23fff5a4]
0x000000000017b03d : movsd dword ptr es:[rdi], dword ptr [rsi] ; cmc ; call qword ptr [rdi]
0x000000000017aec5 : movsd dword ptr es:[rdi], dword ptr [rsi] ; cmc ; jmp qword ptr [rax + 0x23fff5a3]
0x000000000017afad : movsd dword ptr es:[rdi], dword ptr [rsi] ; cmc ; jmp qword ptr [rax + 0x23fff5a4]
0x000000000017ae65 : movsd dword ptr es:[rdi], dword ptr [rsi] ; cmc ; jmp qword ptr [rbx]
0x000000000017af31 : movsd dword ptr es:[rdi], dword ptr [rsi] ; cmc ; push qword ptr [rax + 0xffffffffffffffa4] ; cmc ; jmp qword ptr [rbx]
0x0000000000197269 : movsd dword ptr es:[rdi], dword ptr [rsi] ; in eax, dx ; jmp rbx
0x00000000001772d5 : movsd dword ptr es:[rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000176b91 : movsd dword ptr es:[rdi], dword ptr [rsi] ; mov cl, byte ptr [rip + 0xffffffffeeb0f650] ; fcmovb st(0), st(3) ; ret
0x00000000000c1c37 : movsd dword ptr es:[rdi], dword ptr [rsi] ; mov eax, 0x8948fffb ; ret
0x0000000000038b72 : movsd dword ptr es:[rdi], dword ptr [rsi] ; ret
0x0000000000187459 : movsd dword ptr es:[rdi], dword ptr [rsi] ; std ; call qword ptr [rcx]
0x0000000000187419 : movsd dword ptr es:[rdi], dword ptr [rsi] ; std ; jmp qword ptr [rax + 0xffffffffd1fffda6]
0x00000000001792bd : movsd dword ptr es:[rdi], dword ptr [rsi] ; std ; jmp qword ptr [rax + 0xffffffffe0fffdc8]
0x0000000000187439 : movsd dword ptr es:[rdi], dword ptr [rsi] ; std ; jmp qword ptr [rdx]
0x00000000001990dc : movsd dword ptr es:[rdi], dword ptr [rsi] ; stosb byte ptr es:[rdi], al ; in eax, dx ; jmp qword ptr [rdx]
0x000000000018e3dc : movsd dword ptr es:[rdi], dword ptr fs:[rsi] ; add al, byte ptr [rax] ; ret
0x00000000000361e2 : movsd qword ptr [rdi], xmm1 ; ret
0x00000000000361ab : movsd qword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x00000000000b1428 : movsd xmm0, qword ptr [rsp + 0xfffffffffffffff0] ; ret
0x0000000000039ef3 : movsd xmm0, qword ptr [rsp + 0xfffffffffffffff8] ; ret
0x0000000000036529 : movss dword ptr [rdi], xmm1 ; ret
0x0000000000036510 : movss dword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x0000000000039ead : movss xmm0, dword ptr [rsp + 0xfffffffffffffffc] ; ret
0x0000000000102b21 : movsx eax, ch ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000008935a : movsx edx, dh ; mov eax, edx ; ret
0x0000000000089359 : movsx edx, sil ; mov eax, edx ; ret
0x00000000000cb718 : movsx esi, byte ptr [rax] ; call 0x879e0
0x00000000000c83d9 : movsxd r10, r10d ; sub r10, rdi ; sub r10, rax ; jmp 0xc83fc
0x000000000002e29c : movsxd r14, dword ptr [r10 + r14*4] ; add r14, r10 ; jmp r14
0x00000000000929fe : movsxd r8, dword ptr [rax + r8*4] ; add rax, r8 ; jmp rax
0x000000000002ddec : movsxd r8, dword ptr [rdx + r8*4] ; add r8, rdx ; jmp r8
0x0000000000087cc1 : movsxd r9, dword ptr [r10 + r9*4] ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000014b70b : movsxd r9, dword ptr [r11 + r9*4] ; add r9, r11 ; jmp r9
0x00000000001437db : movsxd r9, dword ptr [r11 + r9*4] ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x0000000000097500 : movsxd r9, dword ptr [rax + r9*4] ; add rax, r9 ; jmp rax
0x0000000000097438 : movsxd rax, dword ptr [r10 + rax*4] ; add r10, rax ; jmp r10
0x000000000008453f : movsxd rax, dword ptr [r13 + rax*4] ; add rax, r13 ; jmp rax
0x000000000006d3aa : movsxd rax, dword ptr [r8 + rax*4] ; add rax, r8 ; jmp rax
0x000000000004de53 : movsxd rax, dword ptr [rax + rdx*4] ; add rax, r12 ; jmp rax
0x000000000005f6f0 : movsxd rax, dword ptr [rax + rdx*4] ; add rax, r13 ; jmp rax
0x0000000000034e69 : movsxd rax, dword ptr [rbx + rax*4] ; add rax, rbx ; jmp rax
0x00000000000d514e : movsxd rax, dword ptr [rcx + rax*4] ; add rcx, rax ; jmp rcx
0x00000000000b8f23 : movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x0000000000127da4 : movsxd rax, dword ptr [rdi + rax*4] ; add rdi, rax ; jmp rdi
0x0000000000030720 : movsxd rax, dword ptr [rdx + r12*4] ; add rdx, rax ; jmp rdx
0x0000000000022aec : movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x0000000000054b15 : movsxd rax, dword ptr [rsi + rax*4] ; add rsi, rax ; jmp rsi
0x00000000000a2707 : movsxd rax, dword ptr [rsi + rdi*4] ; add rsi, rax ; jmp rsi
0x000000000003cb86 : movsxd rax, dword ptr [rsp + 0xc] ; add rsp, 0x18 ; ret
0x000000000013db86 : movsxd rax, ecx ; add rax, rdi ; ret
0x000000000013da46 : movsxd rax, ecx ; add rax, rdi ; sub rax, rsi ; ret
0x000000000013db0d : movsxd rax, ecx ; ret
0x00000000000e3846 : movsxd rbx, dword ptr [r10 + rbx*4] ; add rbx, r10 ; jmp rbx
0x000000000009e1aa : movsxd rcx, dword ptr [r11 + r8*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x0000000000160c0d : movsxd rcx, dword ptr [r11 + rdx*4] ; add rcx, r11 ; jmp rcx
0x000000000009d939 : movsxd rcx, dword ptr [r11 + rdx*4] ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000d509e : movsxd rcx, dword ptr [rax + r13*4] ; add rax, rcx ; jmp rax
0x000000000009278d : movsxd rcx, dword ptr [rax + rcx*4] ; add rax, rcx ; jmp rax
0x0000000000128c16 : movsxd rcx, dword ptr [rax + rsi*4] ; add rax, rcx ; jmp rax
0x00000000000df982 : movsxd rcx, dword ptr [rdx + rcx*4] ; add rdx, rcx ; jmp rdx
0x000000000006ddd3 : movsxd rcx, dword ptr [rsi + rcx*4] ; add rsi, rcx ; jmp rsi
0x0000000000030064 : movsxd rdi, edi ; mov eax, dword ptr [rax + rdi*4] ; ret
0x00000000001438af : movsxd rdx, dword ptr [r11 + rdx*4] ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000000e7f69 : movsxd rdx, dword ptr [rax + r11*4] ; add rax, rdx ; jmp rax
0x0000000000064e7c : movsxd rdx, dword ptr [rax + r14*4] ; add rax, rdx ; jmp rax
0x0000000000054c45 : movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x00000000000841f5 : movsxd rdx, dword ptr [rax + rdi*4] ; add rax, rdx ; jmp rax
0x00000000000b5fa8 : movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x00000000000c354b : movsxd rdx, dword ptr [rax + rsi*4] ; add rax, rdx ; jmp rax
0x000000000006dee3 : movsxd rdx, dword ptr [rcx + rdx*4] ; add rcx, rdx ; jmp rcx
0x00000000000b590b : movsxd rdx, dword ptr [rdi + rdx*4] ; add rdx, rdi ; jmp rdx
0x0000000000034c00 : movsxd rdx, dword ptr [rdi + rsi*4] ; add rdx, rdi ; jmp rdx
0x0000000000118bd1 : movsxd rdx, eax ; add rdi, rdx ; mov qword ptr [r9], rdi ; ret
0x00000000001283b6 : movsxd rsi, dword ptr [rax + rsi*4] ; add rax, rsi ; jmp rax
0x00000000000a27df : movsxd rsi, dword ptr [rcx + rax*4] ; add rcx, rsi ; jmp rcx
0x00000000000a279f : movsxd rsi, dword ptr [rdx + rax*4] ; add rdx, rsi ; jmp rdx
0x00000000001a5bd8 : movsxd rsi, esp ; jmp qword ptr [rcx]
0x00000000000f12ba : movups xmm0, xmmword ptr [rax] ; add bl, al ; nop ; xor eax, eax ; ret
0x00000000000b1429 : movups xmm0, xmmword ptr [rsp + 0xfffffffffffffff0] ; ret
0x0000000000039ef4 : movups xmm0, xmmword ptr [rsp + 0xfffffffffffffff8] ; ret
0x0000000000039eae : movups xmm0, xmmword ptr [rsp + 0xfffffffffffffffc] ; ret
0x000000000003d0d9 : movups xmm0, xmmword ptr [rsp + 8] ; add rsp, 0x18 ; ret
0x00000000000361e3 : movups xmmword ptr [rdi], xmm1 ; ret
0x00000000000361ac : movups xmmword ptr [rdi], xmm1 ; subsd xmm0, xmm1 ; ret
0x0000000000036511 : movups xmmword ptr [rdi], xmm1 ; subss xmm0, xmm1 ; ret
0x0000000000122737 : movzx eax, al ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012ea5b : movzx eax, al ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001222ec : movzx eax, al ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000b0d15 : movzx eax, al ; lea eax, dword ptr [rax + rax + 0xffffffffffffffff] ; ret
0x00000000000c336e : movzx eax, al ; lea rax, qword ptr [rax + rax + 0xffffffffffffffff] ; ret
0x0000000000036afc : movzx eax, al ; mov dword ptr [rbx + 0x40], eax ; xor eax, eax ; pop rbx ; ret
0x0000000000102af0 : movzx eax, al ; neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005e20c : movzx eax, al ; neg eax ; pop rbx ; ret
0x0000000000022c28 : movzx eax, al ; neg eax ; ret
0x0000000000126ce3 : movzx eax, al ; pop r12 ; ret
0x000000000012358d : movzx eax, al ; pop rbp ; ret
0x0000000000048b02 : movzx eax, al ; pop rbx ; neg eax ; pop rbp ; ret
0x00000000000f588c : movzx eax, al ; pop rbx ; ret
0x0000000000037669 : movzx eax, al ; ret
0x000000000002fcc5 : movzx eax, ax ; ret
0x00000000000717ad : movzx eax, bh ; ret
0x000000000007b3b4 : movzx eax, bpl ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007ca36 : movzx eax, byte ptr [rax + 0xffffffffffffffff] ; and dword ptr [rbx], -0x11 ; pop rbx ; ret
0x0000000000126a7e : movzx eax, byte ptr [rax + rdx] ; mov byte ptr [rdi + 7], al ; ret
0x000000000007b255 : movzx eax, byte ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007be68 : movzx eax, byte ptr [rax] ; pop rbx ; ret
0x00000000000742d2 : movzx eax, byte ptr [rax] ; ret
0x0000000000089058 : movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x0000000000160c20 : movzx eax, byte ptr [rdi] ; movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000008cc00 : movzx eax, byte ptr [rdi] ; movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x0000000000089073 : movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x000000000007b260 : movzx eax, byte ptr [rdx] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000c56b8 : movzx eax, byte ptr [rdx] ; jmp 0xc4e52
0x000000000007b3b5 : movzx eax, ch ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a2727 : movzx eax, cl ; pop rbx ; ret
0x00000000000717ac : movzx eax, dil ; ret
0x00000000000a274f : movzx eax, dl ; pop rbx ; ret
0x000000000002fe7e : movzx eax, word ptr [rax + rdi*2] ; and eax, 1 ; ret
0x00000000000e5190 : movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000161ac4 : movzx ecx, byte ptr [rsi + 0xffffffffffffffff] ; sub eax, ecx ; ret
0x00000000000a1eaa : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xa1ea0 ; ret
0x00000000000a1f5a : movzx ecx, byte ptr [rsi + rdx + 3] ; test cl, cl ; jne 0xa1f50 ; ret
0x0000000000089070 : movzx ecx, byte ptr [rsi] ; movzx eax, byte ptr [rdi] ; sub eax, ecx ; ret
0x0000000000160c23 : movzx ecx, byte ptr [rsi] ; sub eax, ecx ; ret
0x000000000005659e : movzx edi, byte ptr [rax] ; add r12, 1 ; jmp 0x56569
0x0000000000098a61 : movzx edx, byte ptr [rdx + rcx] ; sub eax, edx ; ret
0x00000000001645a4 : movzx edx, byte ptr [rsi + 0xfffffffffffffff0] ; sub eax, edx ; ret
0x00000000001645b4 : movzx edx, byte ptr [rsi + 0xfffffffffffffff1] ; sub eax, edx ; ret
0x00000000001645c4 : movzx edx, byte ptr [rsi + 0xfffffffffffffff2] ; sub eax, edx ; ret
0x00000000001645d4 : movzx edx, byte ptr [rsi + 0xfffffffffffffff3] ; sub eax, edx ; ret
0x00000000001645e4 : movzx edx, byte ptr [rsi + 0xfffffffffffffff4] ; sub eax, edx ; ret
0x00000000001645f4 : movzx edx, byte ptr [rsi + 0xfffffffffffffff5] ; sub eax, edx ; ret
0x0000000000164604 : movzx edx, byte ptr [rsi + 0xfffffffffffffff6] ; sub eax, edx ; ret
0x000000000016458b : movzx edx, byte ptr [rsi + 0xfffffffffffffff7] ; sub eax, edx ; ret
0x000000000014da50 : movzx edx, byte ptr [rsi + 0xffffffffffffffff] ; mov byte ptr [rdi + 0xffffffffffffffff], dl ; ret
0x0000000000161877 : movzx edx, byte ptr [rsi + 0xffffffffffffffff] ; sub eax, edx ; ret
0x00000000001381ff : movzx edx, byte ptr [rsi + rcx] ; sub eax, edx ; ret
0x00000000000988f3 : movzx edx, byte ptr [rsi + rdx] ; sub eax, edx ; ret
0x000000000014e130 : movzx edx, byte ptr [rsi] ; mov byte ptr [rdi], dl ; ret
0x000000000008cc03 : movzx edx, byte ptr [rsi] ; sub eax, edx ; ret
0x000000000008cc29 : movzx edx, dl ; sub eax, edx ; ret
0x000000000014d9d0 : movzx edx, word ptr [rsi + 0xfffffffffffffffe] ; mov word ptr [rdi + 0xfffffffffffffffe], dx ; ret
0x000000000014e0c0 : movzx edx, word ptr [rsi] ; mov word ptr [rdi], dx ; ret
0x000000000010d243 : movzx esi, si ; or eax, esi ; bswap eax ; ret
0x000000000005659d : movzx r15d, byte ptr [rax] ; add r12, 1 ; jmp 0x56569
0x00000000000edad4 : movzx rax, al ; ret
0x000000000008b477 : mul byte ptr [rsi + 0xf] ; outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000001acd94 : mul dword ptr [rdi + 0xfffffffffffffff5] ; jmp qword ptr [rdx]
0x000000000003e37d : mulps xmm0, xmm0 ; pop r15 ; ret
0x000000000004121c : mulsd xmm0, xmm0 ; pop r15 ; ret
0x000000000003e37c : mulss xmm0, xmm0 ; pop r15 ; ret
0x00000000001afef4 : neg bh ; cmc ; jmp qword ptr [rdx]
0x00000000001ac6f4 : neg byte ptr [rdx + 0xfffffffffffffff5] ; jmp qword ptr [rdx]
0x00000000000f2e0e : neg eax ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012a2e6 : neg eax ; add rsp, 0x20 ; pop rbx ; ret
0x000000000012a8c5 : neg eax ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x000000000019a6cc : neg eax ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000cc09b : neg eax ; mov dword ptr fs:[rax], r8d ; or eax, -1 ; ret
0x0000000000036fc7 : neg eax ; mov dword ptr fs:[rcx], eax ; or rax, -1 ; ret
0x0000000000036cf1 : neg eax ; mov dword ptr fs:[rdx], eax ; or rax, -1 ; ret
0x00000000000fb379 : neg eax ; mov dword ptr fs:[rsi], eax ; or rax, -1 ; ret
0x000000000007b0ba : neg eax ; pop r13 ; ret
0x00000000000a5aa3 : neg eax ; pop r15 ; ret
0x0000000000048b06 : neg eax ; pop rbp ; ret
0x0000000000102af3 : neg eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005e20f : neg eax ; pop rbx ; ret
0x0000000000022c2b : neg eax ; ret
0x0000000000086841 : neg ebx ; add rsp, 0x10 ; mov eax, ebx ; pop rbx ; ret
0x000000000010945c : neg ecx ; cmp edx, -0x16 ; cmovne eax, ecx ; ret
0x000000000007eb61 : neg edi ; call qword ptr [rax]
0x00000000000ec8c6 : neg edx ; cmp dword ptr [rsp + 0x10], 2 ; cmove eax, edx ; jmp 0xec88b
0x00000000000ec7b6 : neg edx ; cmp dword ptr [rsp + 0xffffffffffffff98], 2 ; cmove eax, edx ; ret
0x00000000000f16b0 : neg edx ; mov dword ptr fs:[rax], edx ; or eax, -1 ; ret
0x00000000000a5aa2 : neg rax ; pop r15 ; ret
0x000000000007eb60 : neg rdi ; call qword ptr [rax]
0x00000000001878ac : nop ; adc ah, bh ; jmp qword ptr [rax]
0x00000000000450e8 : nop ; add byte ptr [rax], al ; add bl, ch ; ret -0x6f9a
0x000000000014d187 : nop ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff81], cl ; ret 0x80
0x000000000002c1ec : nop ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000a8250 : nop ; add byte ptr [rax], al ; add byte ptr [rcx + 0x29], cl ; ret
0x000000000004574e : nop ; add byte ptr [rax], al ; add byte ptr [rcx + 0xffffffffffffff83], al ; ret
0x0000000000160f2c : nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret -0x7cf1
0x00000000000f28ad : nop ; add dword ptr [rax], eax ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000b3162 : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x00000000000b7e2d : nop ; add dword ptr [rax], eax ; add byte ptr [rcx], ch ; ret
0x00000000001a821d : nop ; add dword ptr [rax], eax ; and byte ptr [rbx], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a8295 : nop ; add dword ptr [rax], eax ; cwde ; or esi, ebp ; jmp qword ptr [rcx]
0x00000000001a82dd : nop ; add dword ptr [rax], eax ; loopne 0x1a82ed ; cmc ; jmp qword ptr [rcx]
0x00000000001a82ad : nop ; add dword ptr [rax], eax ; mov al, 0xb ; cmc ; jmp qword ptr [rcx]
0x00000000001a8205 : nop ; add dword ptr [rax], eax ; or byte ptr [rbx], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001b1eb9 : nop ; add dword ptr [rbx], eax ; ret
0x000000000004de56 : nop ; add rax, r12 ; jmp rax
0x000000000005f6f3 : nop ; add rax, r13 ; jmp rax
0x00000000000b5fab : nop ; add rax, rdx ; jmp rax
0x00000000000afa7f : nop ; add rsp, 0x20 ; xor eax, eax ; pop rbx ; ret
0x00000000000c38ef : nop ; add rsp, 0x30 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002373f : nop ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000740ff : nop ; add rsp, 8 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000008ca5f : nop ; bsf eax, eax ; lea rax, qword ptr [rax + rdi + 0xfffffffffffffff0] ; ret
0x0000000000097bff : nop ; bsr eax, eax ; add rax, rdi ; ret
0x0000000000097d8f : nop ; bsr eax, eax ; lea rax, qword ptr [rax + rdi + 0x10] ; ret
0x0000000000179245 : nop ; cld ; call qword ptr [rax]
0x0000000000187dd8 : nop ; cld ; jmp qword ptr [rax]
0x00000000001879c4 : nop ; cld ; sti ; jmp rax
0x00000000001a9450 : nop ; cmc ; jmp rax
0x0000000000187334 : nop ; cmp al, -5 ; push qword ptr [rax] ; sti ; call rax
0x000000000019f0c0 : nop ; in al, dx ; out dx, eax ; call rsp
0x00000000001a29bd : nop ; int1 ; jmp qword ptr [rdx]
0x0000000000188524 : nop ; jg 0x188523 ; call qword ptr [rax]
0x0000000000188534 : nop ; jge 0x188533 ; call qword ptr [rax]
0x000000000018853c : nop ; jl 0x18853b ; call qword ptr [rax]
0x000000000018852c : nop ; jle 0x18852b ; call qword ptr [rax]
0x0000000000196e2c : nop ; jnp 0x196e1c ; jmp qword ptr [rdx]
0x0000000000196c10 : nop ; lahf ; in eax, dx ; call rbx
0x00000000001887fc : nop ; lodsb al, byte ptr [rsi] ; cld ; jmp qword ptr [rax]
0x00000000001880ec : nop ; mov ah, bh ; jmp qword ptr [rax]
0x00000000001453af : nop ; mov dl, byte ptr [rsi + 0xffffffffffffffff] ; mov byte ptr [rdi + 0xffffffffffffffff], dl ; ret
0x0000000000121a7f : nop ; mov dword ptr [rsi], 0xb ; ret
0x000000000014558f : nop ; mov dx, word ptr [rsi + 0xfffffffffffffffe] ; mov word ptr [rdi + 0xfffffffffffffffe], dx ; ret
0x00000000000c318f : nop ; mov eax, 0xfffa ; ret
0x000000000007537f : nop ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007c19f : nop ; mov eax, 0xffffffff ; ret
0x00000000000a48df : nop ; mov eax, 1 ; ret
0x000000000010857b : nop ; mov eax, dword ptr [r14 + 0xffffffffffffffd0] ; mov dword ptr [rbp + 0xffffffffffffff80], eax ; call r8
0x00000000000a380f : nop ; mov eax, dword ptr [rdi + 0x2c] ; cmp eax, dword ptr [rsi + 0x2c] ; jne 0xa3870 ; ret
0x00000000000a385f : nop ; mov eax, dword ptr [rdi + 0x3c] ; cmp eax, dword ptr [rsi + 0x3c] ; jne 0xa3870 ; ret
0x00000000000bdfbf : nop ; mov eax, dword ptr [rdi] ; ret
0x000000000007426f : nop ; mov eax, dword ptr [rdi] ; shr eax, 4 ; and eax, 1 ; ret
0x0000000000037c4f : nop ; mov eax, dword ptr [rip + 0x38744a] ; ret
0x000000000010d1cf : nop ; mov eax, edi ; ror ax, 8 ; ret
0x000000000019ea80 : nop ; mov edi, gs ; jmp qword ptr [rax]
0x000000000014594f : nop ; mov edx, dword ptr [rsi + 0xfffffffffffffffc] ; mov dword ptr [rdi + 0xfffffffffffffffc], edx ; ret
0x000000000009f0af : nop ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; lea rax, qword ptr [rdi + 3] ; ret
0x000000000000ed58 : nop ; mov esp, 0x12 ; add byte ptr [rax], al ; ret 0
0x000000000007937f : nop ; mov rax, -1 ; pop rbx ; ret
0x000000000007d47f : nop ; mov rax, -1 ; ret
0x0000000000073c1f : nop ; mov rax, qword ptr [rdi + 0x28] ; sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000073b0f : nop ; mov rax, qword ptr [rdi + 0x40] ; sub rax, qword ptr [rdi + 0x38] ; ret
0x000000000012dcff : nop ; mov rax, qword ptr [rdi + 8] ; mov rax, qword ptr [rax + 8] ; jmp rax
0x000000000012ddef : nop ; mov rax, qword ptr [rdi + 8] ; mov rsi, rsp ; call qword ptr [rax]
0x000000000003c97f : nop ; mov rax, rdi ; cqo ; idiv rsi ; ret
0x000000000004978f : nop ; mov rax, rsi ; pop rbx ; ret
0x000000000007d21f : nop ; mov rcx, qword ptr [rdi] ; mov qword ptr [rdx], rcx ; ret
0x00000000001082ca : nop ; mov rdx, r14 ; call rax
0x00000000000e51af : nop ; mov word ptr [rdi], si ; xor al, al ; ret
0x000000000009db6f : nop ; movdqu xmm0, xmmword ptr [rsi] ; movdqu xmmword ptr [rdi], xmm0 ; ret
0x000000000017afa4 : nop ; movsb byte ptr es:[rdi], byte ptr [rsi] ; cmc ; jmp qword ptr [rbx]
0x00000000000cb717 : nop ; movsx esi, byte ptr [rax] ; call 0x879e0
0x00000000000e518f : nop ; movzx eax, word ptr [rdi] ; mov word ptr [rsi], ax ; xor eax, eax ; ret
0x0000000000189fa1 : nop ; out dx, al ; jmp rsp
0x00000000001879d8 : nop ; out dx, al ; sti ; jmp rax
0x0000000000187398 : nop ; outsb dx, byte ptr [rsi] ; sti ; jmp rax
0x00000000000366ff : nop ; pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x000000000018fb16 : nop ; pop rax ; jmp 0x7826181c
0x000000000010412f : nop ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001664bf : nop ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000cc3ef : nop ; pop rbx ; pop rbp ; ret
0x000000000008729f : nop ; pop rbx ; ret
0x0000000000021870 : nop ; push rax ; or byte ptr [rax], al ; add bl, ch ; or ecx, dword ptr [rax + 0xffffffffffffffff] ; ret -0x6ac7
0x000000000010b82f : nop ; push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x00000000001903e0 : nop ; push rdi ; std ; jmp qword ptr [rax]
0x0000000000006f40 : nop ; ret
0x0000000000198a60 : nop ; ret -0x13
0x0000000000177c04 : nop ; ret -1
0x00000000001b6130 : nop ; ret -9
0x0000000000019388 : nop ; ret 0x3b
0x0000000000002f66 : nop ; ret 0x5bdb
0x0000000000004900 : nop ; ret 3
0x00000000001877f8 : nop ; sar bl, 1 ; jmp rax
0x0000000000187ba4 : nop ; sbb bh, ah ; jmp rax
0x00000000001885e4 : nop ; scasd eax, dword ptr es:[rdi] ; cld ; jmp qword ptr [rax]
0x000000000011d1ac : nop ; stosb byte ptr es:[rdi], al ; idiv bh ; xor eax, eax ; ret
0x00000000000873a0 : nop ; str word ptr [rax + 0xffffffffffffff89] ; ret -0xcf
0x00000000001a8990 : nop ; sub dh, ch ; jmp qword ptr [rcx]
0x000000000012b82b : nop ; sub dword ptr [rax], eax ; mov qword ptr fs:[rax], rdx ; ret
0x000000000007d25f : nop ; sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000188304 : nop ; test edi, esp ; jmp qword ptr [rax]
0x000000000008980f : nop ; test rsi, rsi ; jne 0x89819 ; xor rax, rax ; ret
0x00000000001a37f0 : nop ; xchg edx, esi ; jmp qword ptr [rcx]
0x00000000000717df : nop ; xor eax, eax ; ret
0x000000000008cadf : nop ; xor rax, rax ; ret
0x000000000011ae13 : nop dword ptr [rax + rax] ; mov byte ptr [rdx], 0 ; pop rbx ; ret
0x000000000007604b : nop dword ptr [rax + rax] ; mov eax, dword ptr [rdx] ; ret
0x00000000000714bb : nop dword ptr [rax + rax] ; mov eax, edi ; ret
0x0000000000104bbb : nop dword ptr [rax + rax] ; mov eax, edi ; sub eax, esi ; ret
0x000000000009daab : nop dword ptr [rax + rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000bdebb : nop dword ptr [rax + rax] ; mov rax, qword ptr [rdi + 0x20] ; ret
0x00000000000470d3 : nop dword ptr [rax + rax] ; mov rax, rbx ; pop rbx ; ret
0x0000000000035713 : nop dword ptr [rax + rax] ; mov rax, rcx ; ret
0x00000000000922b3 : nop dword ptr [rax + rax] ; mov rax, rdi ; ret
0x000000000007b2ab : nop dword ptr [rax + rax] ; or eax, 0x20 ; jmp 0x7b277
0x00000000000d331b : nop dword ptr [rax + rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000470cb : nop dword ptr [rax + rax] ; pop rbx ; ret
0x000000000012f69b : nop dword ptr [rax + rax] ; push rbx ; call 0x12b940
0x000000000009e738 : nop dword ptr [rax + rax] ; ret
0x00000000000488eb : nop dword ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x00000000000385d3 : nop dword ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000a387b : nop dword ptr [rax + rax] ; xor rax, rax ; ret
0x000000000005e345 : nop dword ptr [rax] ; add dword ptr [rdx + 4], 1 ; xor eax, eax ; ret
0x00000000000a3b4c : nop dword ptr [rax] ; add rax, 1 ; ret
0x00000000001661f5 : nop dword ptr [rax] ; add rsp, 8 ; ret
0x000000000007425d : nop dword ptr [rax] ; and dword ptr [rdi], -0x31 ; ret
0x0000000000166be9 : nop dword ptr [rax] ; call qword ptr [rbx]
0x00000000000a442d : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x00000000000a441d : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 4] ; ret
0x00000000000a4425 : nop dword ptr [rax] ; lea rax, qword ptr [rdi + 8] ; ret
0x0000000000109465 : nop dword ptr [rax] ; mov dword ptr [r9], r8d ; xor eax, eax ; ret
0x00000000000c329d : nop dword ptr [rax] ; mov eax, 0x40 ; ret
0x00000000000c3185 : nop dword ptr [rax] ; mov eax, 0x7e ; ret
0x00000000000717d5 : nop dword ptr [rax] ; mov eax, 0xffffffff ; ret
0x0000000000104bc5 : nop dword ptr [rax] ; mov eax, 1 ; ret
0x000000000012cc8d : nop dword ptr [rax] ; mov eax, 2 ; ret
0x000000000002fecd : nop dword ptr [rax] ; mov eax, edi ; and eax, 0x7f ; ret
0x000000000006eb1c : nop dword ptr [rax] ; mov eax, edx ; pop rbx ; ret
0x000000000009e77d : nop dword ptr [rax] ; mov edx, dword ptr [rsi] ; mov dword ptr [rdi], edx ; ret
0x00000000000a4585 : nop dword ptr [rax] ; mov rax, rbx ; pop rbx ; ret
0x000000000003571c : nop dword ptr [rax] ; mov rax, rcx ; pop rbx ; ret
0x0000000000109aac : nop dword ptr [rax] ; mov rax, rdi ; pop rbx ; ret
0x000000000007be65 : nop dword ptr [rax] ; movzx eax, byte ptr [rax] ; pop rbx ; ret
0x000000000003c915 : nop dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f3bad : nop dword ptr [rax] ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x0000000000034a2c : nop dword ptr [rax] ; pop rbx ; ret
0x000000000009ea39 : nop dword ptr [rax] ; ret
0x00000000000a3d1c : nop dword ptr [rax] ; sub eax, r8d ; ret
0x000000000006f135 : nop dword ptr [rax] ; xor eax, eax ; ret
0x000000000009e737 : nop dword ptr cs:[rax + rax] ; ret
0x000000000007604a : nop word ptr [rax + rax] ; mov eax, dword ptr [rdx] ; ret
0x00000000000714ba : nop word ptr [rax + rax] ; mov eax, edi ; ret
0x00000000000a56a2 : nop word ptr [rax + rax] ; mov rax, rcx ; ret
0x000000000009ed1a : nop word ptr [rax + rax] ; mov rax, rdi ; ret
0x00000000000470ca : nop word ptr [rax + rax] ; pop rbx ; ret
0x00000000000a1daa : nop word ptr [rax + rax] ; ret
0x00000000000d2a22 : nop word ptr [rax + rax] ; xor eax, eax ; pop rbx ; ret
0x000000000003c172 : nop word ptr [rax + rax] ; xor eax, eax ; ret
0x00000000000a387a : nop word ptr [rax + rax] ; xor rax, rax ; ret
0x000000000012f5c1 : not eax ; add rsp, 8 ; shr eax, 0x1f ; ret
0x00000000000360a0 : not eax ; and eax, ecx ; ret
0x000000000003674f : not eax ; and eax, edx ; ret
0x00000000000376a3 : not eax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x00000000000d292e : not eax ; pop rbx ; and eax, 2 ; pop rbp ; ret
0x00000000000376a2 : not rax ; and qword ptr [rdi + rdx*8], rax ; xor eax, eax ; ret
0x000000000018785d : or ah, bh ; call rax
0x00000000001a3078 : or ah, bh ; int1 ; jmp qword ptr [rcx]
0x00000000001878fd : or ah, bh ; jmp qword ptr [rax]
0x000000000018791d : or ah, bh ; jmp rax
0x0000000000189401 : or al, -0x15 ; call rsp
0x0000000000177f7c : or al, -0x1e ; in eax, dx ; dec dword ptr [rdx] ; in eax, dx ; jmp rdi
0x0000000000177f80 : or al, -0x1e ; in eax, dx ; jmp rdi
0x00000000001a9e34 : or al, -0x1f ; hlt ; jmp qword ptr [rdx]
0x00000000001abafc : or al, -0x37 ; add dword ptr [rax], eax ; loopne 0x1abaa9 ; sti ; jmp qword ptr [rsi]
0x0000000000189aec : or al, -0x3d ; add byte ptr [rax], al ; hlt ; push rsi ; in eax, dx ; jmp qword ptr [rbx + rax*8]
0x000000000017d064 : or al, -0x43 ; cli ; call rsp
0x0000000000128c2e : or al, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000128c18 : or al, -0x50 ; add rax, rcx ; jmp rax
0x000000000012fc47 : or al, -0x50 ; shr rdx, 3 ; add rax, rcx ; jmp rax
0x00000000000d50a0 : or al, -0x58 ; add rax, rcx ; jmp rax
0x00000000001a91fc : or al, -0x60 ; add dword ptr [rax], eax ; add byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x0000000000160c0f : or al, -0x6d ; add rcx, r11 ; jmp rcx
0x000000000009d93b : or al, -0x6d ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x000000000006ddd5 : or al, -0x72 ; add rsi, rcx ; jmp rsi
0x00000000001a7dfc : or al, -0x74 ; add dword ptr [rax], eax ; cmp ah, -0xc ; jmp rax
0x000000000014b70d : or al, -0x75 ; add r9, r11 ; jmp r9
0x00000000001437dd : or al, -0x75 ; lea r9, qword ptr [r11 + r9] ; jmp r9
0x00000000000df984 : or al, -0x76 ; add rdx, rcx ; jmp rdx
0x0000000000087cc3 : or al, -0x76 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000008fb64 : or al, -0x76 ; mov eax, dword ptr [rdx + rax*4] ; sub eax, ecx ; ret
0x0000000000060500 : or al, -0x77 ; ret -0x1540
0x0000000000097502 : or al, -0x78 ; add rax, r9 ; jmp rax
0x000000000009278f : or al, -0x78 ; add rax, rcx ; jmp rax
0x0000000000050321 : or al, -0x7b ; sal byte ptr [rbp + 5], -0xa ; ret 0x7450
0x000000000009e1ac : or al, -0x7d ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000000a2535 : or al, -0x7d ; rol byte ptr [rcx], -0x7d ; ret 0x4101
0x00000000001b71fc : or al, -0x80 ; add al, byte ptr [rax] ; sal ah, -9 ; call rcx
0x00000000001ad01c : or al, -0x80 ; add dword ptr [rax], eax ; lock cmc ; cmc ; call qword ptr [rcx]
0x00000000000004b3 : or al, -0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x000000000006d9d6 : or al, -0xa ; ret 0x7404
0x000000000006e113 : or al, -0xa ; ret 0xf04
0x000000000014dc53 : or al, -0xd ; movq qword ptr [rdi], mm1 ; ret
0x0000000000187865 : or al, -4 ; call rax
0x0000000000187989 : or al, -4 ; jmp rax
0x000000000002d502 : or al, -8 ; test rcx, rcx ; je 0x2d50b ; call rcx
0x00000000001391a5 : or al, 0 ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x000000000013cd89 : or al, 0 ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x0000000000139177 : or al, 0 ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x00000000000f1dda : or al, 0 ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x00000000000f8f82 : or al, 0 ; add byte ptr [rax], al ; ret
0x0000000000081e02 : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000081fc2 : or al, 0 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000000044f : or al, 0 ; add eax, 0xc1c107c ; ret 0x4412
0x00000000000b5fa6 : or al, 0 ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x0000000000006f3e : or al, 0 ; nop ; ret
0x00000000000048fe : or al, 0 ; nop ; ret 3
0x000000000000af46 : or al, 0 ; push rax ; ret
0x00000000000890c9 : or al, 0 ; ret
0x000000000000414e : or al, 0 ; ret 0xf
0x000000000004bebd : or al, 0x13 ; add rdx, r12 ; call qword ptr [r11 + rax*8]
0x0000000000061ca5 : or al, 0x13 ; add rdx, r14 ; call qword ptr [r11 + rax*8]
0x0000000000089056 : or al, 0x16 ; movzx eax, byte ptr [rdi + rdx] ; sub eax, ecx ; ret
0x00000000001909fc : or al, 0x18 ; add byte ptr [rax], al ; xor ch, -0x17 ; call qword ptr [rbx]
0x000000000011e7d5 : or al, 0x24 ; call r12
0x00000000000fb18a : or al, 0x30 ; ror byte ptr [rcx], -8 ; ret
0x00000000001a2ffc : or al, 0x3e ; add dword ptr [rax], eax ; lock sti ; int1 ; jmp qword ptr [rcx]
0x0000000000108ed8 : or al, 0x41 ; pop rsp ; ret
0x000000000003cb8a : or al, 0x48 ; add esp, 0x18 ; ret
0x00000000000c1837 : or al, 0x48 ; add esp, 0x28 ; ret
0x0000000000136ea9 : or al, 0x48 ; add esp, 0x48 ; ret
0x00000000000366b3 : or al, 0x48 ; add esp, 8 ; ret
0x00000000001183f7 : or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x000000000006f08b : or al, 0x48 ; mov edi, dword ptr [rdi + 0xe0] ; jmp rax
0x0000000000178e4c : or al, 0x51 ; out dx, eax ; call qword ptr [rax]
0x00000000000b116a : or al, 0x5b ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000001a5cfc : or al, 0x6b ; add dword ptr [rax], eax ; jo 0x1a5d66 ; hlt ; jmp qword ptr [rdi]
0x00000000001a5dfc : or al, 0x6c ; add dword ptr [rax], eax ; push rax ; hlt ; jmp qword ptr [rcx]
0x00000000001958bc : or al, 0x6c ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a153c : or al, 0x74 ; int1 ; jmp qword ptr [rdx]
0x000000000008c658 : or al, 0x75 ; fisttp qword ptr [rax + 0xffffffffffffffff] ; ret -0xb8
0x000000000006d6da : or al, 0x7e ; ret
0x00000000000f4922 : or al, 0xa ; add byte ptr [rax], al ; jmp 0xf4934
0x00000000001437e1 : or al, 0xb ; jmp r9
0x000000000009d93f : or al, 0xb ; jmp rcx
0x00000000000a3765 : or al, 0xf ; test eax, dword ptr [rcx + rax] ; add byte ptr [rax], al ; ret
0x000000000009e433 : or al, 0xf ; test eax, dword ptr [rsi + 7] ; add byte ptr [rax], al ; ret
0x00000000000e5a12 : or al, 1 ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x0000000000000884 : or al, 1 ; add byte ptr [rax], al ; ret 0x440c
0x00000000000e5b02 : or al, 1 ; add byte ptr [rax], al ; xor al, al ; ret
0x000000000018cee5 : or al, 2 ; add byte ptr [rbp + 0xfffffffffffffff7], dl ; call rsp
0x000000000009e670 : or al, 5 ; add byte ptr [rax], al ; ret
0x0000000000195661 : or al, 7 ; or byte ptr [rbx + rcx + 2], al ; ret
0x0000000000138371 : or al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x000000000013af61 : or al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x000000000013834d : or al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000000b442 : or al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000012aa26 : or al, byte ptr [rax] ; add byte ptr [rax], al ; mov rdi, rax ; call qword ptr [r10]
0x0000000000121a92 : or al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000cf546 : or al, byte ptr [rax] ; jmp 0xcf458
0x0000000000034636 : or al, byte ptr [rbp + 0xf] ; ret -0x7cb8
0x00000000000a41f2 : or al, byte ptr [rbp + 0xfffffffff3f175c9] ; ret
0x00000000000dd9cc : or al, byte ptr [rbx + 0xffffffff834801c0] ; ret -0x7fff
0x00000000000dd6b4 : or al, byte ptr [rbx + 0xffffffff834801c0] ; ret 0x4101
0x00000000000c9508 : or al, byte ptr [rcx + 0xffffffffffffff80] ; jmp qword ptr [rcx]
0x00000000000c7c39 : or al, byte ptr [rcx + 0xffffffffffffff83] ; jmp qword ptr [rcx]
0x00000000000004b1 : or al, byte ptr [rcx] ; or al, -0x80 ; push rbx ; add al, 4 ; ret 0x6080
0x0000000000140337 : or al, byte ptr es:[rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x00000000000fc90f : or al, ch ; jmp 0xfc8d6
0x000000000008c4fb : or al, ch ; lahf ; add al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x3fcf
0x00000000000e4e0f : or al, ch ; mov ebx, 0x39fffde9 ; ret
0x00000000001667a7 : or al, ch ; ret
0x00000000000d2648 : or al, ch ; ret -0xb33
0x0000000000187861 : or bh, ah ; call rax
0x0000000000187985 : or bh, ah ; jmp rax
0x0000000000073f5d : or bh, byte ptr [rax + 0xffffffffffffffff] ; ret
0x00000000000d292d : or bh, dh ; rcr byte ptr [rbx + 0xffffffffffffff83] ; loopne 0xd2936 ; pop rbp ; ret
0x00000000000f495f : or bh, dh ; ret -0x3f9
0x00000000000a442b : or bl, al ; nop dword ptr [rax] ; lea rax, qword ptr [rdi + 0xc] ; ret
0x0000000000118e23 : or bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000001ad388 : or bl, bh ; cmc ; call qword ptr [rax]
0x00000000000d2d6f : or bl, byte ptr [rbp + 0x75] ; mov ch, -0x7d ; ret -0x76ff
0x00000000000022cc : or bl, byte ptr [rbx + 0x38] ; ja -0x29efb4ab ; ret
0x00000000000bd445 : or bl, byte ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007c10d : or bl, byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000004e805 : or bl, ch ; ret -0x7cb8
0x000000000011d50c : or bl, ch ; ret 0x4890
0x0000000000067d24 : or bl, ch ; xchg byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f8
0x000000000014de13 : or bl, dh ; movq qword ptr [rdi], mm1 ; ret
0x000000000002f8ff : or bl, dh ; ret
0x00000000000d1828 : or byte ptr [r10], r11b ; mov eax, 2 ; ret
0x00000000000d542b : or byte ptr [r10], r12b ; jmp 0xd50b6
0x00000000000d17a1 : or byte ptr [r10], r8b ; xor eax, eax ; ret
0x00000000000c6f0b : or byte ptr [r11 + 0x5d], bl ; ret
0x00000000000356b8 : or byte ptr [r11 + r9*4 + 0x57], r9b ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr es:[rdi] ; ret -0x2dcf
0x00000000000d54a1 : or byte ptr [r11], r12b ; jmp 0xd50b6
0x0000000000084a74 : or byte ptr [r13 + 0xffffffffffffff89], r9b ; ret
0x00000000000d17d1 : or byte ptr [r13], r10b ; mov eax, 1 ; ret
0x000000000009a8cf : or byte ptr [r14 + 0xffffffffffffff89], spl ; or byte ptr [rax + 0xffffffffffffff89], cl ; clc ; ret
0x00000000000d1797 : or byte ptr [r14], r10b ; mov eax, 1 ; ret
0x00000000000d185e : or byte ptr [r14], r11b ; mov eax, 2 ; ret
0x0000000000131ffc : or byte ptr [r15], -0x6c ; ret -0x157d
0x00000000000b175d : or byte ptr [r8 + 0x29], cl ; ret
0x000000000009a8ae : or byte ptr [r8 + 0xffffffff89480842], cl ; clc ; ret
0x000000000008233f : or byte ptr [r8 + 0xffffffffffffff83], cl ; sub r9, qword ptr [rax] ; add ebx, ebp ; ret
0x0000000000159468 : or byte ptr [r8 + 0xffffffffffffff89], cl ; or byte ptr [rax + 0xffffffffffffff89], cl ; clc ; ret
0x0000000000122822 : or byte ptr [r8 + 0xffffffffffffff89], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x000000000012c01a : or byte ptr [r8 + 0xffffffffffffff89], r9b ; fimul word ptr [rcx + rcx*4 + 0xffffffffffffffff] ; call qword ptr [rax]
0x000000000012e84a : or byte ptr [r8 + 0xffffffffffffff89], r9b ; out 0x48, al ; mov edi, ebp ; call qword ptr [rax]
0x000000000003c1a2 : or byte ptr [r8 + 0xffffffffffffff89], r9b ; ret -0x3eb8
0x00000000000ccb15 : or byte ptr [r8 + 0xffffffffffffff89], r9b ; ret -0x76b8
0x00000000000d1871 : or byte ptr [r8 + r15*4], r11b ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000140512 : or byte ptr [r8], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x00000000000d5411 : or byte ptr [r8], r12b ; jmp 0xd50b6
0x000000000009a90e : or byte ptr [r9 + 0xffffffff89480842], cl ; clc ; ret
0x00000000000e4141 : or byte ptr [r9 + 0xffffffffffffff8b], r9b ; push rbp ; adc byte ptr [rax + 0x63], cl ; ret
0x0000000000131453 : or byte ptr [r9], dil ; ret -0x7af1
0x00000000000d1801 : or byte ptr [r9], r11b ; mov eax, 1 ; ret
0x00000000000d5487 : or byte ptr [r9], r12b ; jmp 0xd50b6
0x00000000000d17c1 : or byte ptr [r9], r8b ; mov eax, 1 ; ret
0x00000000001200f3 : or byte ptr [rax + 0x10], bh ; pop rbx ; pop rbp ; ret
0x000000000007eb5c : or byte ptr [rax + 0x21], cl ; xlatb ; neg rdi ; call qword ptr [rax]
0x00000000000b175e : or byte ptr [rax + 0x29], cl ; ret
0x000000000007d867 : or byte ptr [rax + 0x39], cl ; enter 0x2373, 0xf ; mov dh, 0 ; ret
0x000000000008bb09 : or byte ptr [rax + 0x39], cl ; ret
0x0000000000083dcb : or byte ptr [rax + 0x39], cl ; ret -0x78f1
0x00000000000dae53 : or byte ptr [rax + 0x63], cl ; ret -0x3eb8
0x0000000000035c20 : or byte ptr [rax + 0xf], cl ; scasd eax, dword ptr es:[rdi] ; ret -0x74b8
0x0000000000087809 : or byte ptr [rax + 0xffffffff840f0038], al ; ret 0
0x000000000009a8af : or byte ptr [rax + 0xffffffff89480842], cl ; clc ; ret
0x0000000000021829 : or byte ptr [rax + 0xffffffffffffff81], cl ; ret
0x000000000008202b : or byte ptr [rax + 0xffffffffffffff83], cl ; call qword ptr [rax]
0x000000000002f6be : or byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x00000000000538d2 : or byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x7afc
0x0000000000053803 : or byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x7bfc
0x00000000000ef7ae : or byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x7cf8
0x00000000000d22c4 : or byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x3901
0x0000000000092946 : or byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4801
0x00000000000929ce : or byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4802
0x0000000000032632 : or byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4c08
0x0000000000082340 : or byte ptr [rax + 0xffffffffffffff83], cl ; sub r9, qword ptr [rax] ; add ebx, ebp ; ret
0x000000000002a333 : or byte ptr [rax + 0xffffffffffffff85], cl ; push qword ptr [rcx + rbx + 0xffffffffffffffe8] ; ret 0x10c8
0x0000000000026433 : or byte ptr [rax + 0xffffffffffffff85], cl ; push qword ptr [rdx + rbx + 0xffffffffffffffe8] ; ret 0x1107
0x0000000000107f52 : or byte ptr [rax + 0xffffffffffffff89], -0x26 ; call rax
0x000000000012f490 : or byte ptr [rax + 0xffffffffffffff89], -0x30 ; pop rbx ; ret
0x000000000009a7c0 : or byte ptr [rax + 0xffffffffffffff89], cl ; clc ; ret
0x000000000010b768 : or byte ptr [rax + 0xffffffffffffff89], cl ; clc ; sar rax, 6 ; ret
0x000000000003400d : or byte ptr [rax + 0xffffffffffffff89], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000012c01b : or byte ptr [rax + 0xffffffffffffff89], cl ; fimul word ptr [rcx + rcx*4 + 0xffffffffffffffff] ; call qword ptr [rax]
0x0000000000135f88 : or byte ptr [rax + 0xffffffffffffff89], cl ; fistp word ptr [rbx + 0x48] ; mov esi, ebp ; pop rbp ; jmp rax
0x000000000012db7e : or byte ptr [rax + 0xffffffffffffff89], cl ; fistp word ptr [rbx + 0x5d] ; jmp rax
0x00000000000aba28 : or byte ptr [rax + 0xffffffffffffff89], cl ; fucompi st(0) ; call rdx
0x00000000000d2c2b : or byte ptr [rax + 0xffffffffffffff89], cl ; jo 0xd2c50 ; xor eax, eax ; ret
0x000000000003c408 : or byte ptr [rax + 0xffffffffffffff89], cl ; lock pop rbx ; pop rbp ; ret
0x0000000000159469 : or byte ptr [rax + 0xffffffffffffff89], cl ; or byte ptr [rax + 0xffffffffffffff89], cl ; clc ; ret
0x000000000012e84b : or byte ptr [rax + 0xffffffffffffff89], cl ; out 0x48, al ; mov edi, ebp ; call qword ptr [rax]
0x0000000000122823 : or byte ptr [rax + 0xffffffffffffff89], cl ; out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x000000000003a2f1 : or byte ptr [rax + 0xffffffffffffff89], cl ; out dx, al ; call r12
0x000000000007ed7d : or byte ptr [rax + 0xffffffffffffff89], cl ; rcr byte ptr [rbx + 0x5d] ; ret
0x000000000003c788 : or byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x00000000000d8a9c : or byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x1d7d
0x000000000003c1a3 : or byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x3eb8
0x00000000000ccb16 : or byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x76b8
0x00000000000d2c2a : or byte ptr [rax + 0xffffffffffffff89], r9b ; jo 0xd2c50 ; xor eax, eax ; ret
0x0000000000039021 : or byte ptr [rax + 0xffffffffffffff8b], cl ; adc cl, byte ptr [rax + 1] ; ror byte ptr [rax + 0x39], 1 ; ret -0x76b7
0x00000000000fe111 : or byte ptr [rax + 0xffffffffffffff8b], cl ; add al, 0x24 ; add rsp, 0x38 ; ret
0x00000000000fe172 : or byte ptr [rax + 0xffffffffffffff8b], cl ; add al, 0x24 ; add rsp, 0x40 ; ret
0x00000000000f6118 : or byte ptr [rax + 0xffffffffffffff8b], cl ; and al, 0x10 ; call rax
0x00000000000f5ff1 : or byte ptr [rax + 0xffffffffffffff8b], cl ; cmp byte ptr [rax + 0xffffffffffffff89], cl ; and al, 8 ; call rbx
0x0000000000027ea5 : or byte ptr [rax + 0xffffffffffffff8b], cl ; je 0x27ece ; push rax ; call rax
0x000000000006f0e9 : or byte ptr [rax + 0xffffffffffffff8b], cl ; mov edi, 0xe0 ; call rax
0x0000000000128bc2 : or byte ptr [rax + 0xffffffffffffff8b], cl ; push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x00000000000c7008 : or byte ptr [rax + 0xffffffffffffff8d], cl ; add bl, byte ptr [r11 + 0x5d] ; ret
0x000000000008cb09 : or byte ptr [rax + 0xffffffffffffff8d], cl ; add eax, 0x1f ; ret
0x00000000000922e0 : or byte ptr [rax + 0xffffffffffffff8d], cl ; add eax, 0x6878 ; ret
0x00000000000a446d : or byte ptr [rax + 0xffffffffffffff8d], cl ; add eax, 0xbddbb ; ret
0x00000000000a4459 : or byte ptr [rax + 0xffffffffffffff8d], cl ; add eax, 0xc84f ; ret
0x000000000008cb1d : or byte ptr [rax + 0xffffffffffffff8d], cl ; add eax, 0xd40cb ; ret
0x00000000000a38a9 : or byte ptr [rax + 0xffffffffffffff8d], cl ; add eax, 0xd48f ; ret
0x00000000000c6f08 : or byte ptr [rax + 0xffffffffffffff8d], cl ; or byte ptr [r11 + 0x5d], bl ; ret
0x00000000000b0fbd : or byte ptr [rax + 0xffffffffffffffc1], -0x20 ; add cl, byte ptr [rax + 0x29] ; ret -0x76b8
0x00000000000778c3 : or byte ptr [rax + 0xffffffffffffffff], bh ; pop rbx ; pop rbp ; ret
0x00000000000360fb : or byte ptr [rax + 1], -0x30 ; shr rax, 0x3f ; ret
0x00000000001028cc : or byte ptr [rax + 1], bh ; pop rbx ; pop rbp ; ret
0x0000000000124836 : or byte ptr [rax + 1], bh ; ret
0x00000000000328c3 : or byte ptr [rax + 1], cl ; ret
0x00000000000f9095 : or byte ptr [rax + 3], bh ; pop rbx ; pop rbp ; ret
0x0000000000026530 : or byte ptr [rax + 7], bh ; jmp 0x264fa
0x0000000000106cdb : or byte ptr [rax + 7], bh ; pop rbx ; pop rbp ; ret
0x00000000000d1872 : or byte ptr [rax + rdi*4], bl ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001385ac : or byte ptr [rax], 0 ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x0000000000136ce9 : or byte ptr [rax], 1 ; add byte ptr [rax], al ; jmp rax
0x00000000000d5412 : or byte ptr [rax], ah ; jmp 0xd50b6
0x0000000000021872 : or byte ptr [rax], al ; add bl, ch ; or ecx, dword ptr [rax + 0xffffffffffffffff] ; ret -0x6ac7
0x00000000000b212a : or byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff81], cl ; cli ; ret 0x10
0x0000000000058981 : or byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x00000000001385d1 : or byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x000000000013b101 : or byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x00000000001385ad : or byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000007e05f : or byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x74b8
0x000000000007c85c : or byte ptr [rax], al ; add byte ptr [rax], al ; add bl, dh ; ret
0x00000000000194e0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; call qword ptr [rdi]
0x00000000000194f8 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; hlt ; call qword ptr [rdi]
0x0000000000019468 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; in al, dx ; call qword ptr [rdi]
0x0000000000018610 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x17de
0x000000000000b8e0 : or byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x1a
0x000000000012a952 : or byte ptr [rax], al ; add byte ptr [rax], al ; mov rdi, rax ; call qword ptr [r10]
0x00000000000a2813 : or byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000121ac2 : or byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x00000000001148d0 : or byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret
0x00000000000f8bcd : or byte ptr [rax], al ; mov rax, rbx ; pop rbx ; ret
0x00000000000498f0 : or byte ptr [rax], al ; ret
0x00000000000a19dd : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a1a1b : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a19bb : or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x000000000005dafb : or byte ptr [rax], dl ; add byte ptr [rax], al ; mov rax, rbx ; pop rbx ; pop rbp ; ret
0x000000000013eb0e : or byte ptr [rax], r8b ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x00000000000c82cf : or byte ptr [rbp + 0x31], al ; in al, -0x15 ; ret
0x0000000000118aed : or byte ptr [rbp + 0x5d5b2b04], cl ; ret
0x000000000012e18d : or byte ptr [rbp + 0xffffffffebbc75c0], al ; ret 0x1f0f
0x00000000001090c9 : or byte ptr [rbp + 0xffffffffffffff85], cl ; sal byte ptr [rbp + 0xffffffffffffffc1], -0x37 ; ret
0x0000000000028977 : or byte ptr [rbp + 0xffffffffffffff89], al ; ret -0x76b8
0x0000000000084a75 : or byte ptr [rbp + 0xffffffffffffff89], cl ; ret
0x00000000000a4339 : or byte ptr [rbp + 0xffffffffffffff8b], al ; sbb al, byte ptr [rcx + 0xffffffffffffff8b] ; add dword ptr [rcx + 0x39], eax ; ret
0x00000000001085fc : or byte ptr [rbp + 0xfffffffffffffff1], dh ; mov rax, qword ptr [rax + 0x30] ; ret
0x0000000000196e26 : or byte ptr [rbp + rbp*8 + 0xffffffffffffffff], bh ; sbb al, 0xd ; nop ; jnp 0x196e1c ; jmp qword ptr [rdx]
0x000000000012188b : or byte ptr [rbx + 0x48], bl ; mov edi, ebp ; xor eax, eax ; pop rbp ; jmp rdx
0x0000000000003c87 : or byte ptr [rbx + 0x4e], ch ; ret 0x6bba
0x000000000012292b : or byte ptr [rbx + 0x5d], bl ; add eax, edx ; ret
0x0000000000075112 : or byte ptr [rbx + 0x5d], bl ; jmp rax
0x000000000007b0b5 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; neg eax ; pop r13 ; ret
0x000000000003cf94 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x00000000000744d7 : or byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000023743 : or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000035c1d : or byte ptr [rbx + 0xf480857], cl ; scasd eax, dword ptr es:[rdi] ; ret -0x74b8
0x000000000012358b : or byte ptr [rbx + 0xf], bl ; mov dh, -0x40 ; pop rbp ; ret
0x00000000000cc7af : or byte ptr [rbx + 0xffffffff894c01e0], al ; out -0x77, al ; ret -0x357d
0x0000000000191738 : or byte ptr [rbx + 0xffffffffffffffea], dl ; call qword ptr [rbx]
0x0000000000191433 : or byte ptr [rbx + rcx + 0x52], al ; ret
0x0000000000195663 : or byte ptr [rbx + rcx + 2], al ; ret
0x00000000000356b9 : or byte ptr [rbx + rcx*4 + 0x57], cl ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr es:[rdi] ; ret -0x2dcf
0x00000000000d54a2 : or byte ptr [rbx], ah ; jmp 0xd50b6
0x0000000000131ffa : or byte ptr [rbx], bh ; or byte ptr [r15], -0x6c ; ret -0x157d
0x00000000001a8208 : or byte ptr [rbx], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001740c4 : or byte ptr [rbx], dh ; in eax, dx ; call rax
0x0000000000131ff9 : or byte ptr [rbx], dil ; or byte ptr [r15], -0x6c ; ret -0x157d
0x0000000000039d1b : or byte ptr [rcx + 0x29], cl ; ret -0x76b4
0x000000000005371a : or byte ptr [rcx + 0x415d5bd0], cl ; pop rsp ; pop r13 ; ret
0x000000000001f663 : or byte ptr [rcx + 0x415d5bd8], 0x5c ; ret
0x000000000011dca5 : or byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x00000000000e3845 : or byte ptr [rcx + 0x63], cl ; sbb al, -0x66 ; add rbx, r10 ; jmp rbx
0x00000000000d3257 : or byte ptr [rcx + 0xffffffff8948005d], cl ; ret
0x000000000009a90f : or byte ptr [rcx + 0xffffffff89480842], cl ; clc ; ret
0x0000000000038592 : or byte ptr [rcx + 0xffffffffd01148d8], cl ; pop rbp ; pop rbx ; ret
0x0000000000121f97 : or byte ptr [rcx + 0xffffffffffffff89], al ; call 0x4cd4a8eb
0x000000000004e801 : or byte ptr [rcx + 0xffffffffffffff89], cl ; push rdi ; or bl, ch ; ret -0x7cb8
0x000000000004ce66 : or byte ptr [rcx + 0xffffffffffffff89], cl ; push rdi ; or cl, ch ; jmp rcx
0x0000000000034b17 : or byte ptr [rcx + 0xffffffffffffff89], cl ; ret 0x1074
0x0000000000050dec : or byte ptr [rcx + 0xffffffffffffff89], cl ; ror byte ptr [rax + 0xffffffffffffff89], 1 ; ret 0x38e8
0x00000000000f207f : or byte ptr [rcx + 0xffffffffffffff89], cl ; ror byte ptr [rcx + 0x29], cl ; fimul dword ptr [rcx + 0x39] ; ret -0x7df1
0x00000000000e4142 : or byte ptr [rcx + 0xffffffffffffff8b], cl ; push rbp ; adc byte ptr [rax + 0x63], cl ; ret
0x00000000001a62f8 : or byte ptr [rcx + 0xfffffffffffffff4], bh ; jmp qword ptr [rcx]
0x000000000003858b : or byte ptr [rcx + 1], cl ; ret -0x76b4
0x00000000000391d0 : or byte ptr [rcx + rax + 0xffffffffffffffc2], cl ; mov rax, rdx ; pop rbx ; ret
0x0000000000131f73 : or byte ptr [rcx + rcx*4 + 0x2c], cl ; ret -0x74bf
0x00000000000d5488 : or byte ptr [rcx], ah ; jmp 0xd50b6
0x0000000000136cea : or byte ptr [rcx], al ; add byte ptr [rax], al ; jmp rax
0x00000000000e5a22 : or byte ptr [rcx], al ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x000000000003724f : or byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x00000000000e5b14 : or byte ptr [rcx], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000118a14 : or byte ptr [rcx], al ; jmp 0x118a60
0x0000000000082345 : or byte ptr [rcx], al ; jmp 0x8230c
0x00000000000d1847 : or byte ptr [rcx], al ; mov byte ptr [rdi], al ; mov eax, 1 ; ret
0x00000000000d17c2 : or byte ptr [rcx], al ; mov eax, 1 ; ret
0x0000000000131454 : or byte ptr [rcx], bh ; ret -0x7af1
0x00000000000e1c91 : or byte ptr [rcx], bh ; ret 0x1472
0x00000000000d1802 : or byte ptr [rcx], bl ; mov eax, 1 ; ret
0x000000000010d231 : or byte ptr [rcx], cl ; lock bswap eax ; ret
0x000000000010b8a0 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x00000000000246cc : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000e3f50 : or byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000048fb2 : or byte ptr [rcx], dh ; ror byte ptr [rbp + 0xffffffffffffff85], cl ; dec dword ptr [rdi] ; xchg eax, ebp ; ret -0x3fcf
0x00000000000f3113 : or byte ptr [rdi + 0x1000], bh ; call 0x1f410
0x000000000017755e : or byte ptr [rdi + 0x26], al ; and dword ptr cs:[rax], edx ; jmp qword ptr [rdi]
0x00000000000df4c8 : or byte ptr [rdi + rax + 0x44], dh ; mov dword ptr [rax], esp ; xor eax, eax ; jmp 0xdf494
0x0000000000009550 : or byte ptr [rdi + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 1
0x000000000005ba2e : or byte ptr [rdi + rcx + 0xffffffffffffffb6], al ; cmp byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x0000000000055236 : or byte ptr [rdi + rcx + 0xffffffffffffffb6], al ; cmp byte ptr [rcx + 0xffffffffffffff83], cl ; ret
0x00000000000fadea : or byte ptr [rdi], -0x6b ; ret -0x3015
0x0000000000131ffd : or byte ptr [rdi], -0x6c ; ret -0x157d
0x0000000000029654 : or byte ptr [rdi], -0x6c ; ret -0x49f1
0x000000000010c8a2 : or byte ptr [rdi], 0x1f ; add byte ptr [rax], r8b ; xor eax, eax ; ret
0x000000000002fcc4 : or byte ptr [rdi], cl ; mov bh, -0x40 ; ret
0x0000000000022c27 : or byte ptr [rdi], cl ; mov dh, -0x40 ; neg eax ; ret
0x0000000000048b01 : or byte ptr [rdi], cl ; mov dh, -0x40 ; pop rbx ; neg eax ; pop rbp ; ret
0x0000000000046668 : or byte ptr [rdi], cl ; mov dh, -0x40 ; ret
0x000000000007bfbf : or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x00000000000742d1 : or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x00000000000c480c : or byte ptr [rdi], cl ; mov dh, 0x42 ; add cl, byte ptr [rax + 0xffffffffffffff83] ; ret -0x7cff
0x0000000000143dab : or byte ptr [rdi], cl ; sub dword ptr [rdi], esp ; jmp r9
0x000000000008bddc : or byte ptr [rdi], cl ; test dl, byte ptr [rcx + rax + 0xffffffff83480000] ; ret -0x16ff
0x0000000000021eff : or byte ptr [rdi], cl ; xchg eax, esp ; ret -0x3fcf
0x000000000011c9c3 : or byte ptr [rdx + 0x2a], bh ; add byte ptr [rdx], al ; add rsp, 8 ; ret
0x00000000001afe33 : or byte ptr [rdx + 0xe], al ; adc byte ptr [rbx + 0xa550202], al ; ret
0x00000000000d542c : or byte ptr [rdx], ah ; jmp 0xd50b6
0x000000000010cf8b : or byte ptr [rdx], al ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000000d17a2 : or byte ptr [rdx], al ; xor eax, eax ; ret
0x00000000000d1829 : or byte ptr [rdx], bl ; mov eax, 2 ; ret
0x00000000000f12a2 : or byte ptr [rip + 0x100f], ah ; ret
0x000000000002a216 : or byte ptr [rip + 0x29480000], al ; ret -0x74b7
0x00000000000f1598 : or byte ptr [rip + 0xffffffff80000000], 0x39 ; ret -0x618b
0x00000000000d1895 : or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x000000000009d4c1 : or byte ptr [rsi + 0xf], ah ; adc ecx, dword ptr [rdx + 8] ; mov rax, rdi ; ret
0x000000000009a8d0 : or byte ptr [rsi + 0xffffffffffffff89], ah ; or byte ptr [rax + 0xffffffffffffff89], cl ; clc ; ret
0x00000000001209ec : or byte ptr [rsi + 1], bh ; mov rdi, r15 ; call qword ptr [rax]
0x00000000000d185f : or byte ptr [rsi], bl ; mov eax, 2 ; ret
0x00000000000d1798 : or byte ptr [rsi], dl ; mov eax, 1 ; ret
0x0000000000003c86 : or byte ptr fs:[rbx + 0x4e], ch ; ret 0x6bba
0x00000000000d570a : or byte ptr gs:[rax + 0xffffffffffffff89], cl ; ret
0x00000000000949e1 : or ch, bl ; ret 0x1f0f
0x000000000010ff34 : or ch, byte ptr [rbx] ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x76b8
0x00000000001923cc : or ch, byte ptr [rsi + 0xffffffffffffffea] ; jmp qword ptr [rdx]
0x000000000019baad : or ch, dh ; jmp qword ptr [rdx]
0x00000000000368fb : or cl, bl ; std ; fstp st(1) ; ret
0x00000000000b0dfe : or cl, byte ptr [rax + 0x29] ; ret 0x5589
0x000000000005ec34 : or cl, byte ptr [rax + 0xffffffffffffff83] ; ret -0x72fc
0x00000000000c4e89 : or cl, byte ptr [rax + 0xffffffffffffff83] ; ret -0x7fff
0x000000000012ad0a : or cl, byte ptr [rax + 0xffffffffffffff83] ; ret 0x4104
0x00000000000b3c5a : or cl, byte ptr [rax + 0xffffffffffffff83] ; ret 0x4801
0x0000000000041cec : or cl, byte ptr [rax + 0xffffffffffffff85] ; sal byte ptr [rbp + rdx + 0x4c], 0x39 ; ret 0x1075
0x00000000000e47c6 : or cl, byte ptr [rax + 0xffffffffffffff89] ; ret 0x11e8
0x0000000000076958 : or cl, byte ptr [rax + 1] ; ret -0x76b8
0x00000000000750d7 : or cl, byte ptr [rbx + 0x5bd08910] ; ret
0x000000000010d265 : or cl, byte ptr [rcx + 0x18e8c1f8] ; ret
0x000000000010d1e5 : or cl, byte ptr [rcx + 0xffffffffffff25f8] ; inc dword ptr [rax] ; ret
0x00000000001371e8 : or cl, byte ptr [rcx + rcx*4 + 0xffffffffffffffe2] ; add r9, r11 ; call rax
0x0000000000195660 : or cl, byte ptr [rdi + rax] ; or byte ptr [rbx + rcx + 2], al ; ret
0x00000000000366d7 : or cl, byte ptr [rdi] ; push rdi ; fisttp dword ptr [rdi] ; ret
0x000000000015b396 : or cl, byte ptr [rdi] ; test eax, dword ptr [rbx + 2] ; add byte ptr [rax], al ; ret
0x0000000000131221 : or cl, byte ptr [rdi] ; xchg eax, esp ; ret
0x000000000004ce6a : or cl, ch ; jmp rcx
0x000000000003abf0 : or cl, ch ; ret -6
0x00000000000cdfa4 : or cl, ch ; ret -8
0x000000000008b705 : or cl, cl ; cmove rax, rdx ; ret
0x00000000001a08c1 : or cl, dh ; jmp rcx
0x00000000001ac618 : or dh, ah ; cmc ; call qword ptr [rax]
0x00000000000498ed : or dh, al ; or byte ptr [rax], al ; ret
0x00000000001b2c11 : or dh, bh ; call qword ptr [rsi]
0x000000000014dd33 : or dh, bl ; movq qword ptr [rdi], mm1 ; ret
0x00000000000fea7a : or dh, bl ; ret
0x0000000000071e0c : or dh, byte ptr [rbp + 0x3f] ; ret
0x0000000000071f06 : or dh, byte ptr [rbp + 0x43] ; mov eax, esi ; ret
0x0000000000072cd1 : or dh, byte ptr [rbp + 0x60] ; pop rbx ; ret
0x0000000000071161 : or dh, byte ptr [rbp + 0x63] ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000010a430 : or dh, byte ptr [rbp + 0x69] ; pop rbx ; pop rbp ; mov eax, esi ; pop r12 ; ret
0x000000000019619c : or dh, byte ptr [rcx + 0xffffffffffffffed] ; jmp qword ptr [rdx]
0x0000000000093bd4 : or dh, byte ptr [rcx] ; dec dword ptr [rax + 0xffffffffffffff89] ; ret -0xf17
0x0000000000136e05 : or dh, byte ptr [rcx] ; ror byte ptr [rax + 0xffffffffffffff83], -0x3c ; pop rax ; ret
0x00000000000d28da : or dh, byte ptr [rdi + rax*2 + 0x48] ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001a8179 : or dh, ch ; call rsp
0x00000000001a09c1 : or dh, cl ; call qword ptr [rcx]
0x00000000001790cd : or dh, cl ; jmp qword ptr [rax]
0x00000000001a0941 : or dh, cl ; jmp qword ptr [rcx]
0x0000000000080b8b : or dh, dh ; ret 0x7404
0x0000000000081f39 : or dh, dh ; ret 0x7502
0x00000000001055b7 : or dh, dh ; ret 0x7508
0x00000000000826ca : or dh, dh ; ret 0xf01
0x0000000000080ba7 : or dh, dh ; ret 0xf04
0x000000000003105f : or dh, dh ; ret 0xfdf
0x00000000001ad2e8 : or dl, bh ; cmc ; call qword ptr [rax]
0x00000000001abc28 : or dl, bl ; cmc ; call qword ptr [rax]
0x000000000011d180 : or dword ptr [rax + 0xffffffffffffff83], ecx ; in al, dx ; sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x000000000011fcbf : or dword ptr [rax + 0xffffffffffffff83], ecx ; ret 0x3904
0x00000000000c8660 : or dword ptr [rax + 0xffffffffffffff83], ecx ; ret 0x4801
0x000000000005dcda : or dword ptr [rax + 0xffffffffffffff89], ecx ; ret -0x7cb8
0x00000000001040c4 : or dword ptr [rax + 0xffffffffffffff8b], ecx ; adc byte ptr [rax + 0x39], cl ; ret
0x00000000001124d4 : or dword ptr [rax + 0xffffffffffffff8d], ecx ; cmp eax, 0x2b1a44 ; call rax
0x0000000000124793 : or dword ptr [rax + 0xffffffffffffff8d], ecx ; mov ebx, 0xc8 ; call rax
0x000000000008799e : or dword ptr [rax + 0xffffffffffffffff], ecx ; ret -0x3eb8
0x0000000000034e6c : or dword ptr [rax + 1], -0x28 ; jmp rax
0x0000000000021c00 : or dword ptr [rax], eax ; add bl, dh ; ret
0x000000000018fb35 : or dword ptr [rax], eax ; add byte ptr [rax + 0x5f], bh ; std ; jmp qword ptr [rdx]
0x00000000000449f4 : or dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret -0x72b8
0x0000000000138437 : or dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x000000000013e9bf : or dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x00000000001384dd : or dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x0000000000072092 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, 0xffffffff ; ret
0x0000000000022c38 : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, edi ; ret
0x000000000012a37c : or dword ptr [rax], eax ; add byte ptr [rax], al ; mov rdi, rax ; call qword ptr [r10]
0x00000000000e4f5f : or dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000089ab3 : or dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x00000000001959f5 : or dword ptr [rax], eax ; add byte ptr [rax], ch ; mov ebp, ebp ; call qword ptr [rax]
0x000000000008116a : or dword ptr [rax], eax ; add byte ptr [rcx + 0xfffffffffffffff6], al ; ret 0xf01
0x000000000009ca15 : or dword ptr [rax], eax ; add cl, ch ; ret
0x00000000000e08a0 : or dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x00000000000e7f67 : or dword ptr [rax], eax ; movsxd rdx, dword ptr [rax + r11*4] ; add rax, rdx ; jmp rax
0x00000000000dd5a7 : or dword ptr [rax], eax ; movsxd rdx, dword ptr [rax + rdx*4] ; add rax, rdx ; jmp rax
0x000000000018fb34 : or dword ptr [rax], r8d ; add byte ptr [rax + 0x5f], bh ; std ; jmp qword ptr [rdx]
0x00000000001345e3 : or dword ptr [rbp + 0x5c410028], eax ; jmp rax
0x0000000000162046 : or dword ptr [rbp + 0xfffffffff3000001], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000018a938 : or dword ptr [rbp + 0xffffffffffffffef], ecx ; jmp rsp
0x0000000000101fb6 : or dword ptr [rbx + 0x5d], ebx ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000122276 : or dword ptr [rbx + 0x5d], ebx ; xor eax, eax ; pop r12 ; ret
0x00000000001aeed6 : or dword ptr [rbx + 0xd1cfff5], ecx ; call 0x231ae469
0x0000000000129903 : or dword ptr [rbx + 0xffffffffffffffef], ebx ; dec dword ptr [rax + 0xffffffffffffff89] ; ret
0x0000000000085456 : or dword ptr [rbx + 0xfffffffffffffff3], ebx ; ret
0x0000000000082342 : or dword ptr [rbx + rbp + 8], 1 ; jmp 0x8230c
0x000000000006f0c6 : or dword ptr [rbx], 0x20 ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000799b0 : or dword ptr [rbx], 0x20 ; mov eax, 0xffffffff ; pop rbx ; ret
0x000000000007dd08 : or dword ptr [rbx], 8 ; pop rbx ; ret
0x0000000000084cc4 : or dword ptr [rcx + 0xffffffffffffff83], ecx ; ret
0x00000000000d4d48 : or dword ptr [rcx + 0xffffffffffffff83], ecx ; ret 0x4c01
0x0000000000084ade : or dword ptr [rcx + 0xffffffffffffff83], ecx ; sti ; adc al, 0x77 ; sub ecx, dword ptr [rcx + 0xffffffffffffff83] ; ret
0x00000000000d2bc0 : or dword ptr [rdi + 0x90], eax ; xor eax, eax ; ret
0x0000000000037683 : or dword ptr [rdi + rax*8], edx ; xor eax, eax ; ret
0x00000000000f1357 : or dword ptr [rdi], 0x80000000 ; xor eax, eax ; ret
0x0000000000037846 : or dword ptr [rdi], eax ; xor eax, eax ; ret
0x000000000015b376 : or dword ptr [rdi], ecx ; test esp, dword ptr [rbx + 2] ; add byte ptr [rax], al ; ret
0x00000000000faad2 : or dword ptr [rdi], ecx ; xchg dword ptr [rdi], ecx ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x00000000000fa53a : or dword ptr [rdi], ecx ; xchg edi, edi ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x00000000000ada90 : or dword ptr [rdi], ecx ; xchg esi, esi ; add byte ptr [rax], al ; add byte ptr [rcx + 0xffffffffffffff83], cl ; ret
0x00000000000f22a2 : or eax, -1 ; jmp 0xf226a
0x00000000000f2502 : or eax, -1 ; jmp 0xf24ca
0x0000000000036cf7 : or eax, -1 ; ret
0x000000000003611b : or eax, 0x150830 ; orpd xmm0, xmm1 ; ret
0x000000000017a261 : or eax, 0x1638fff4 ; hlt ; call qword ptr [rdx]
0x0000000000120eea : or eax, 0x18c48348 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x000000000017a2c1 : or eax, 0x190bfff4 ; hlt ; jmp rdi
0x000000000009f371 : or eax, 0x1c478d48 ; ret
0x00000000000a01c1 : or eax, 0x1d478d48 ; ret
0x000000000015b3f8 : or eax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x000000000007b2b0 : or eax, 0x20 ; jmp 0x7b277
0x00000000000f1821 : or eax, 0x30 ; mov dword ptr [rdi + 8], eax ; ret
0x00000000000a55b1 : or eax, 0x358d4800 ; ret 0xd96
0x00000000000b12d4 : or eax, 0x3d8d4800 ; ret
0x00000000000ad7ad : or eax, 0x3d8d4800 ; ret 0xd3e
0x00000000000b3863 : or eax, 0x440f4800 ; ret -0x72b8
0x0000000000094692 : or eax, 0x48c0bc0f ; lea eax, dword ptr [rdi + rax] ; ret
0x00000000000b56aa : or eax, 0x48d08948 ; add esp, 8 ; ret
0x00000000000f5d5f : or eax, 0x49fff297 ; mov edi, dword ptr [rsi] ; call rbx
0x0000000000117ded : or eax, 0x4b35b10f ; ret 0x2a
0x000000000005dbe2 : or eax, 0x5bd88948 ; ret
0x000000000009e455 : or eax, 0x724850f ; add byte ptr [rax], al ; ret
0x00000000001390b5 : or eax, 0x83480000 ; ret -0x14f0
0x000000000013ac21 : or eax, 0x83480000 ; ret -0x16f0
0x0000000000139087 : or eax, 0x83480000 ; ret 0x4910
0x000000000016695d : or eax, 0x83489066 ; ret 0x4810
0x00000000000aee49 : or eax, 0x8548fff8 ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x000000000009fb09 : or eax, 0x880850f ; add byte ptr [rax], al ; ret
0x0000000000041cc6 : or eax, 0x894c0000 ; ret
0x000000000006e672 : or eax, 0x895bfffb ; call -0x3c9cd827
0x0000000000078ccf : or eax, 0x89ffffc4 ; ret -0x4315
0x000000000008b782 : or eax, 0x8c48348 ; ret
0x0000000000117c83 : or eax, 0xb535b10f ; ret
0x0000000000176b93 : or eax, 0xeeb0f650 ; fcmovb st(0), st(3) ; ret
0x0000000000117d41 : or eax, 0xf735b10f ; ret 0x2a
0x000000000014dbe3 : or eax, 0xf7f0ff3 ; ret
0x00000000000d54a5 : or eax, 0xf7fffffc ; ret 0
0x000000000018a505 : or eax, 0xfc840001 ; out dx, al ; jmp rsp
0x000000000019c1ad : or eax, 0xffee5bbe ; sbb al, 0xd ; ret -0x11c7
0x000000000019b9cd : or eax, 0xffee62ff ; sbb al, 0xd ; ret -0x1204
0x00000000001a9e75 : or eax, 0xfff4e232 ; sbb al, 0xd ; jmp rax
0x00000000001b67cd : or eax, 0xfff73745 ; sbb al, 0xd ; ret
0x00000000001382a1 : or eax, dword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x000000000013adc1 : or eax, dword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x000000000013827d : or eax, dword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x0000000000121a82 : or eax, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000000c7131 : or eax, dword ptr [rax] ; movsxd rax, dword ptr [rdi + rax*4] ; add rax, rdi ; jmp rax
0x00000000000c38a1 : or eax, dword ptr [rax] ; movsxd rdx, dword ptr [rax + rbx*4] ; add rax, rdx ; jmp rax
0x00000000000891d6 : or eax, dword ptr [rax] ; ret
0x0000000000195665 : or eax, dword ptr [rdx] ; ret
0x0000000000037c23 : or eax, dword ptr [rsi] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000036362 : or eax, ecx ; movq xmm0, rax ; mov dword ptr [rdi], edx ; ret
0x00000000000fb176 : or eax, edi ; ret
0x0000000000092937 : or eax, edx ; mov qword ptr [rdi], rax ; pop rbx ; pop rbp ; ret
0x000000000003658f : or eax, edx ; movd xmm1, eax ; movaps xmm0, xmm1 ; ret
0x00000000000fb1b2 : or eax, edx ; or rax, rsi ; or rax, rdi ; ret
0x000000000003c97c : or eax, edx ; ret
0x0000000000036459 : or eax, edx ; sar eax, 0x1f ; not eax ; and eax, ecx ; ret
0x000000000010d232 : or eax, esi ; bswap eax ; ret
0x00000000000f12ee : or eax, esi ; mov dword ptr [rdi + 8], eax ; xor eax, eax ; ret
0x00000000000fb1b5 : or eax, esi ; or rax, rdi ; ret
0x000000000007d254 : or ebp, dword ptr [rbx] ; push rax ; sbb byte ptr [rbx + 0xffffffffd0291047], cl ; ret
0x00000000001ad49c : or ebp, dword ptr [rcx + 0xfffffffffffffff5] ; jmp qword ptr [rdx]
0x00000000001b75fb : or ebp, edx ; add dword ptr [rbx], eax ; ret
0x000000000017a800 : or ebx, 0xcb34fff4 ; hlt ; call rsp
0x000000000017a7ac : or ebx, 0xcc34fff4 ; hlt ; call rsp
0x0000000000075a94 : or ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000001abf5c : or ebx, dword ptr [rcx + 0xfffffffffffffff5] ; jmp qword ptr [rdx]
0x000000000017a2c4 : or ebx, dword ptr [rcx] ; hlt ; jmp rdi
0x00000000000dc7d2 : or ebx, edi ; call rcx
0x000000000014dda3 : or ebx, esi ; movq qword ptr [rdi], mm1 ; ret
0x000000000007207e : or ebx, esi ; ret
0x0000000000084212 : or ecx, dword ptr [rax + 0x63] ; ret
0x0000000000078ac3 : or ecx, dword ptr [rax + 0xffffffffffffff83] ; ret
0x00000000000f45a7 : or ecx, dword ptr [rax + 0xffffffffffffff83] ; ret 0x4808
0x0000000000104a8d : or ecx, dword ptr [rax + 0xffffffffffffff83] ; ret 0x4830
0x000000000002a76e : or ecx, dword ptr [rax + 0xffffffffffffff89] ; ret -0x3777
0x000000000003d230 : or ecx, dword ptr [rax + 0xffffffffffffff89] ; ret -0x47b8
0x0000000000021876 : or ecx, dword ptr [rax + 0xffffffffffffffff] ; ret -0x6ac7
0x0000000000079baf : or ecx, dword ptr [rax + 1] ; ret -0x76b7
0x000000000007dd09 : or ecx, dword ptr [rax] ; pop rbx ; ret
0x00000000000a3804 : or ecx, dword ptr [rbx + 0x463b2847] ; sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000a3854 : or ecx, dword ptr [rbx + 0x463b3847] ; cmp byte ptr [rbp + 0x13], dh ; ret
0x0000000000025728 : or ecx, dword ptr [rcx + 0x4289504a] ; push rsp ; ret
0x000000000007e84f : or ecx, dword ptr [rcx + 0xffffffffffffff83] ; ret
0x0000000000020799 : or ecx, dword ptr [rcx + rcx*4 + 0xffffffffffffffea] ; sub rdx, rbx ; inc rdx ; jmp 0x207a9
0x000000000009e413 : or ecx, dword ptr [rdi] ; test esp, dword ptr [rsi + 7] ; add byte ptr [rax], al ; ret
0x00000000000368e4 : or ecx, eax ; je 0x36888 ; ret
0x0000000000194164 : or edi, dword ptr [rax + 0xa] ; ret
0x0000000000127544 : or edi, dword ptr [rax + 1] ; ret
0x0000000000121ed4 : or edi, dword ptr [rax + 2] ; ret
0x0000000000107034 : or edi, dword ptr [rax + 7] ; ret
0x00000000000832c1 : or edi, dword ptr [rbx + rsi + 0x38894800] ; ret
0x000000000016610f : or edi, edi ; adc ecx, dword ptr [rax + 0xffffffffffffff83] ; ret
0x00000000000a1da7 : or edi, edi ; loope 0xa1e11 ; nop dword ptr [rax + rax] ; ret
0x000000000011fb64 : or esi, dword ptr [rcx] ; ror byte ptr [rax + 0xffffffffffffff83], -0x3c ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000083550 : or esi, dword ptr [rcx] ; salc ; mov byte ptr [rax + rbx], sil ; pop rbx ; ret
0x000000000006f1c6 : or esi, eax ; mov dword ptr [rbx], esi ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001a8209 : or esi, ebp ; jmp qword ptr [rcx]
0x000000000014dcc3 : or esi, ebx ; movq qword ptr [rdi], mm1 ; ret
0x00000000000fb344 : or esi, ebx ; ret
0x000000000019ab04 : or esi, ecx ; in eax, dx ; jmp qword ptr [rdx]
0x000000000006f0c7 : or esp, dword ptr [rax] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000799b1 : or esp, dword ptr [rax] ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000001ab92c : or esp, dword ptr [rbx + rdi*8] ; jmp qword ptr [rdx]
0x0000000000002f5f : or esp, dword ptr [rdx] ; js 0x2f11 ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000000f0994 : or esp, dword ptr [rsi + 0xffffffffffffff89] ; push rsi ; xor ax, ax ; ret
0x00000000001898f9 : or esp, ebp ; jmp rsp
0x0000000000187981 : or esp, edi ; jmp rax
0x0000000000082341 : or qword ptr [rbx + rbp + 8], 1 ; jmp 0x8230c
0x00000000000d2bbf : or qword ptr [rdi + 0x90], rax ; xor eax, eax ; ret
0x0000000000037682 : or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000037845 : or qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000015b375 : or qword ptr [rdi], rcx ; test esp, dword ptr [rbx + 2] ; add byte ptr [rax], al ; ret
0x000000000014de12 : or r11b, r14b ; movq qword ptr [rdi], mm1 ; ret
0x000000000014dda2 : or r11d, r14d ; movq qword ptr [rdi], mm1 ; ret
0x000000000019baac : or r13b, r14b ; jmp qword ptr [rdx]
0x000000000014dd32 : or r14b, r11b ; movq qword ptr [rdi], mm1 ; ret
0x00000000001055b6 : or r14b, r14b ; ret 0x7508
0x000000000014dcc2 : or r14d, r11d ; movq qword ptr [rdi], mm1 ; ret
0x0000000000194163 : or r15d, dword ptr [rax + 0xa] ; ret
0x0000000000195664 : or r8d, dword ptr [rdx] ; ret
0x00000000000cdfa3 : or r9b, r13b ; ret -8
0x00000000000368e3 : or r9d, r8d ; je 0x36888 ; ret
0x00000000000f22a1 : or rax, -1 ; jmp 0xf226a
0x00000000000f2501 : or rax, -1 ; jmp 0xf24ca
0x0000000000036cf6 : or rax, -1 ; ret
0x000000000015b3f7 : or rax, 0x1e1850f ; add byte ptr [rax], al ; ret
0x0000000000140212 : or rax, qword ptr [r8] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x00000000000891d5 : or rax, qword ptr [rax] ; ret
0x0000000000037c22 : or rax, qword ptr [rsi] ; mov qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000092936 : or rax, r10 ; mov qword ptr [rdi], rax ; pop rbx ; pop rbp ; ret
0x00000000000fb1b7 : or rax, rdi ; ret
0x000000000003c97b : or rax, rdx ; ret
0x00000000000fb1b4 : or rax, rsi ; or rax, rdi ; ret
0x00000000001878fc : or spl, dil ; jmp qword ptr [rax]
0x0000000000036120 : orpd xmm0, xmm1 ; ret
0x0000000000036121 : orps xmm0, xmm1 ; ret
0x00000000000364be : orps xmm0, xmm3 ; ret
0x000000000019f0a9 : out -0x11, al ; jmp qword ptr [rbx]
0x0000000000189841 : out -0x15, al ; jmp rsp
0x00000000000eb5e9 : out -0x18, al ; int1 ; ret
0x0000000000073103 : out -0x18, al ; out 0x6b, eax ; std ; dec dword ptr [rax + 0xffffffffffffff81] ; ret
0x00000000000bb2b7 : out -0x18, al ; ret
0x0000000000109dbf : out -0x18, al ; sub edi, edi ; rep dec dword ptr [rax + 0xffffffffffffff81] ; ret
0x0000000000103a07 : out -0x18, eax ; ret
0x00000000000252a8 : out -0x18, eax ; ret -0x5f
0x000000000012f578 : out -0x18, eax ; ret -0xc02
0x0000000000175a40 : out -0x31, eax ; movsb byte ptr es:[rdi], byte ptr [rsi] ; in eax, 0x24 ; outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000002462 : out -0x57, al ; ret -0x42f9
0x00000000000cc7b5 : out -0x77, al ; ret -0x357d
0x000000000003b9d1 : out -0x77, eax ; ret
0x00000000000e77c8 : out -0x77, eax ; ret -0x74b7
0x00000000001aebfc : out -0x79, al ; cmc ; jmp qword ptr [rdx]
0x000000000002fee3 : out -0x80, eax ; sete al ; ret
0x00000000001ac619 : out -0xb, al ; call qword ptr [rax]
0x0000000000177768 : out -0xb, eax ; mov ch, -0x55 ; ret
0x00000000001aa045 : out -0xc, al ; jmp qword ptr [rdx]
0x00000000001aa08d : out -0xc, eax ; jmp qword ptr [rdx]
0x000000000014d5aa : out -0xd, al ; movq qword ptr [rdi + 0xfffffffffffffff0], mm1 ; ret
0x0000000000093879 : out -0xd, al ; ret
0x000000000014d62a : out -0xd, eax ; movq qword ptr [rdi + 0xfffffffffffffff0], mm1 ; ret
0x0000000000069310 : out -1, al ; dec dword ptr [rax + 0xffffffffffffff83] ; ret -0x14f8
0x000000000004518c : out -1, al ; dec dword ptr [rax + 0xffffffffffffff89] ; ret
0x0000000000083b56 : out -1, al ; dec dword ptr [rax + 0xffffffffffffff89] ; ret 0x3d83
0x00000000001788a9 : out -1, al ; jmp qword ptr [rsi]
0x000000000012e18a : out -1, al ; push rax ; or byte ptr [rbp + 0xffffffffebbc75c0], al ; ret 0x1f0f
0x0000000000061f38 : out -1, eax ; dec dword ptr [rbp + rcx*4 + 0x2d] ; ret
0x00000000001788b1 : out -1, eax ; inc esp ; out -1, eax ; jmp qword ptr [rcx]
0x00000000001788b5 : out -1, eax ; jmp qword ptr [rcx]
0x0000000000187729 : out -5, al ; jmp qword ptr [rax]
0x000000000019d89d : out 0, al ; add al, ah ; sahf ; out dx, al ; jmp qword ptr [rcx]
0x000000000019d9b5 : out 0, eax ; add al, cl ; mov dh, -0x12 ; call qword ptr [rax]
0x0000000000189f85 : out 0, eax ; add byte ptr [rsi + rcx*4], al ; out dx, al ; jmp rsp
0x000000000008110a : out 0x33, al ; add byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], cl ; xchg eax, ebp ; ret -0x7cb8
0x000000000001ff63 : out 0x41, eax ; call qword ptr [rsi]
0x000000000010d0b4 : out 0x44, al ; mov edx, ebp ; pop r12 ; pop r13 ; jmp rax
0x00000000000a3e49 : out 0x48, al ; mov eax, ebx ; pop rbx ; ret
0x000000000012e84e : out 0x48, al ; mov edi, ebp ; call qword ptr [rax]
0x000000000012b2a0 : out 0x48, al ; mov edi, ebp ; call rax
0x00000000000c1269 : out 0x48, al ; mov edi, ebp ; mov rbx, rsp ; call 0x3d4b0
0x000000000011ecf0 : out 0x48, al ; mov edi, ebp ; mov rcx, r13 ; call rbx
0x0000000000122826 : out 0x48, al ; mov edi, ebx ; call qword ptr [rax]
0x0000000000085fa4 : out 0x48, al ; mov edi, ebx ; call rax
0x000000000011e8e0 : out 0x48, al ; mov edi, ebx ; mov r13, rsp ; call r15
0x00000000000a38f0 : out 0x48, eax ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000001b12 : out 0x59, eax ; pop rbx ; ret 0x2a63
0x000000000007ca53 : out 0x5b, al ; ret
0x000000000012c578 : out 0x5b, eax ; ret
0x00000000001acf74 : out 0x67, eax ; cmc ; jmp qword ptr [rdx]
0x0000000000073105 : out 0x6b, eax ; std ; dec dword ptr [rax + 0xffffffffffffff81] ; ret
0x0000000000037ca5 : out 0x73, eax ; cmp byte ptr [rax], al ; mov eax, edx ; ret
0x000000000019cad3 : out 0xa, al ; ret
0x0000000000053e56 : out 0xf, eax ; test esp, dword ptr [rbx + 0xffffffffe8000001] ; pop rsi ; ret
0x00000000000c8310 : out 1, al ; add byte ptr [rax], al ; lea rax, qword ptr [rsi + rcx*8] ; jmp 0xc82dd
0x0000000000071f14 : out 1, al ; mov eax, esi ; ret
0x00000000000d3433 : out 4, al ; jne 0xd33dd ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000118e1d : out 4, al ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x0000000000116645 : out dx, al ; adc bh, dh ; ret -0x7f80
0x00000000000927a9 : out dx, al ; adc byte ptr [rax + 0xffffffffffffff8b], cl ; sbb byte ptr [rax + 0xffffffffffffff83], r9b ; ret 0x4802
0x0000000000071f11 : out dx, al ; add al, -0x7d ; out 1, al ; mov eax, esi ; ret
0x000000000019e005 : out dx, al ; add byte ptr [rax], al ; sbb bh, dh ; out dx, al ; call qword ptr [rcx]
0x000000000019e0c5 : out dx, al ; add byte ptr [rax], al ; test al, -4 ; stc ; call qword ptr [rax]
0x0000000000125ff1 : out dx, al ; add cl, byte ptr [rcx + 0xffffffffffffff89] ; ret -0x3eb8
0x000000000011893f : out dx, al ; add dword ptr [rax + 0xffffffffffffff88], eax ; ja 0x118946 ; ret
0x000000000009801b : out dx, al ; add dword ptr [rbp + 0xfffffffffffffff1], esi ; xor eax, eax ; ret
0x000000000011893c : out dx, al ; add eax, dword ptr [rbx + 0xffffffff884001ee] ; ja 0x118946 ; ret
0x00000000001200de : out dx, al ; add rdi, 0x18 ; xor eax, eax ; pop rbp ; jmp rcx
0x000000000019d9ba : out dx, al ; call qword ptr [rax]
0x000000000019c652 : out dx, al ; call qword ptr [rbx]
0x0000000000178b2e : out dx, al ; call qword ptr [rcx]
0x000000000019ae9a : out dx, al ; call qword ptr [rdi]
0x000000000019b4aa : out dx, al ; call qword ptr [rdx]
0x000000000019b432 : out dx, al ; call qword ptr [rsi]
0x000000000003a2f4 : out dx, al ; call r12
0x0000000000086c5a : out dx, al ; call rax
0x0000000000178b46 : out dx, al ; call rsp
0x0000000000189ea2 : out dx, al ; dec dword ptr [rax + 0xffffffff838c0000] ; out dx, al ; call rsp
0x0000000000189ca2 : out dx, al ; dec dword ptr [rax + rdx*8 + 0x62900000] ; out dx, al ; call rsp
0x0000000000189c82 : out dx, al ; dec dword ptr [rdi + rcx*8 + 0x60a00000] ; out dx, al ; call rsp
0x000000000018a502 : out dx, al ; dec esp ; or eax, 0xfc840001 ; out dx, al ; jmp rsp
0x0000000000001b10 : out dx, al ; enter 0x59e7, 0x5b ; ret 0x2a63
0x0000000000176b97 : out dx, al ; fcmovb st(0), st(3) ; ret
0x0000000000178126 : out dx, al ; inc dword ptr [rax] ; insd dword ptr es:[rdi], dx ; out dx, al ; jmp rax
0x0000000000178b2a : out dx, al ; inc dword ptr [rbp + rbx*8 + 0xffffffffffffffee] ; call qword ptr [rcx]
0x0000000000178b42 : out dx, al ; inc dword ptr [rbp + rbx*8 + 0xffffffffffffffee] ; call rsp
0x000000000018a41a : out dx, al ; inc dword ptr [rdi + rax + 0xffffffffecd40001] ; out dx, al ; call rsp
0x0000000000178122 : out dx, al ; inc eax ; insb byte ptr es:[rdi], dx ; out dx, al ; inc dword ptr [rax] ; insd dword ptr es:[rdi], dx ; out dx, al ; jmp rax
0x000000000019b34a : out dx, al ; jmp qword ptr [rax]
0x000000000019ace2 : out dx, al ; jmp qword ptr [rcx]
0x000000000019baae : out dx, al ; jmp qword ptr [rdx]
0x000000000019cc12 : out dx, al ; jmp qword ptr [rsi]
0x000000000017812a : out dx, al ; jmp rax
0x0000000000178b5e : out dx, al ; jmp rbx
0x000000000019c7b2 : out dx, al ; jmp rcx
0x000000000019dc1a : out dx, al ; jmp rdx
0x0000000000189c52 : out dx, al ; jmp rsp
0x000000000000374d : out dx, al ; jne 0x372a ; ret 0x975
0x0000000000189c4a : out dx, al ; lcall ptr [rbp + rcx*8 + 0x5c5f0000] ; out dx, al ; jmp rsp
0x000000000018a0d2 : out dx, al ; lcall ptr [rcx + rsi*8 + 0xffffffffa1440000] ; out dx, al ; jmp rsp
0x00000000000a4850 : out dx, al ; lea rcx, qword ptr [rax + 4] ; call rbx
0x0000000000189efa : out dx, al ; ljmp ptr [rsp + 0xffffffff88cd0000] ; out dx, al ; call rsp
0x000000000008546e : out dx, al ; loop 0x85470 ; dec dword ptr [rax + 0xffffffffffffff89] ; ret 0xcb8
0x000000000000314b : out dx, al ; mov ecx, 0xd4a3e95a ; pop rsp ; ret 0x52c0
0x00000000001453fa : out dx, al ; mov qword ptr [rdi + 0xfffffffffffffff6], rcx ; mov dword ptr [rdi + 0xfffffffffffffffc], edx ; ret
0x00000000000a4704 : out dx, al ; mov rdi, qword ptr [r12] ; lea rcx, qword ptr [rax + 1] ; call rbx
0x0000000000086e16 : out dx, al ; mov rdi, r12 ; call rax
0x000000000010c811 : out dx, al ; mov rdi, rbx ; call 0x78b10
0x0000000000086fce : out dx, al ; mov rdi, rbx ; call rax
0x000000000014d9ba : out dx, al ; movdqu xmmword ptr [rdi + 0xfffffffffffffff0], xmm1 ; ret
0x000000000013e86e : out dx, al ; or al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x0000000000135f8f : out dx, al ; pop rbp ; jmp rax
0x0000000000189f9a : out dx, al ; push qword ptr [rax + rbp*8 + 0xffffffff90940000] ; out dx, al ; jmp rsp
0x0000000000189f1a : out dx, al ; push qword ptr [rbp] ; add bh, dl ; mov esi, ebp ; jmp rsp
0x000000000018a312 : out dx, al ; push qword ptr [rdi + rdi*8 + 0xffffffffc3540000] ; out dx, al ; jmp rsp
0x0000000000189f82 : out dx, al ; push qword ptr [rdi] ; add byte ptr [rsi + rcx*4], al ; out dx, al ; jmp rsp
0x000000000018a0b2 : out dx, al ; push rsp ; lock add byte ptr [rax], al ; hlt ; lahf ; out dx, al ; jmp rsp
0x00000000000824e8 : out dx, al ; ret
0x0000000000002592 : out dx, al ; ret -0x7753
0x00000000001879d9 : out dx, al ; sti ; jmp rax
0x00000000000a42d9 : out dx, al ; xor eax, eax ; ret
0x0000000000092c25 : out dx, eax ; adc byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4c01
0x00000000000a2b9d : out dx, eax ; adc byte ptr [rax + 1], cl ; clc ; ret
0x000000000019e1b5 : out dx, eax ; add byte ptr [rax], al ; mov byte ptr [rdx], bl ; out dx, eax ; call qword ptr [rax]
0x000000000019e185 : out dx, eax ; add byte ptr [rax], al ; pop rax ; adc bh, dl ; call qword ptr [rax]
0x000000000019e0f5 : out dx, eax ; add byte ptr [rax], al ; pop rax ; clc ; out dx, al ; call qword ptr [rax]
0x000000000019e10d : out dx, eax ; add byte ptr [rax], al ; push rax ; clc ; out dx, al ; jmp qword ptr [rsi]
0x0000000000049717 : out dx, eax ; add ecx, ebp ; ret
0x000000000008cfde : out dx, eax ; add rsp, 0x10 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000166140 : out dx, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000039238 : out dx, eax ; call 0x384b0
0x0000000000046020 : out dx, eax ; call 0x92310
0x00000000000707e8 : out dx, eax ; call 0xecae9
0x0000000000120bfc : out dx, eax ; call qword ptr [rax]
0x000000000012241b : out dx, eax ; call qword ptr [rbx]
0x000000000019eeb2 : out dx, eax ; call qword ptr [rdi]
0x00000000000f7842 : out dx, eax ; call r14
0x00000000001203ab : out dx, eax ; call rax
0x00000000000f738a : out dx, eax ; call rbx
0x000000000012f112 : out dx, eax ; call rcx
0x0000000000086d2c : out dx, eax ; call rdx
0x000000000018a54a : out dx, eax ; call rsp
0x00000000001b0555 : out dx, eax ; cmc ; jmp qword ptr [rdx]
0x0000000000129575 : out dx, eax ; dec dword ptr [rax + 0xffffffffffffff89] ; ret
0x0000000000123fb8 : out dx, eax ; dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x76b7
0x0000000000178bae : out dx, eax ; dec dword ptr [rax + rcx*2 + 0xffffffffffffffef] ; call qword ptr [rax]
0x0000000000178baa : out dx, eax ; dec dword ptr [rax + rcx*2 + 0xffffffffffffffef] ; dec dword ptr [rax + rcx*2 + 0xffffffffffffffef] ; call qword ptr [rax]
0x0000000000178b9a : out dx, eax ; dec dword ptr [rax + rcx*2 + 0xffffffffffffffef] ; dec dword ptr [rax + rcx*2 + 0xffffffffffffffef] ; jmp qword ptr [rax]
0x0000000000178b9e : out dx, eax ; dec dword ptr [rax + rcx*2 + 0xffffffffffffffef] ; jmp qword ptr [rax]
0x000000000018aca2 : out dx, eax ; dec dword ptr [rax + rdi + 0xffffffffd0260001] ; out dx, eax ; call rsp
0x000000000018a562 : out dx, eax ; dec dword ptr [rax + rdx + 0x2490001] ; out dx, eax ; call rsp
0x0000000000178e4a : out dx, eax ; dec dword ptr [rcx + rdx*2] ; out dx, eax ; call qword ptr [rax]
0x000000000018aba2 : out dx, eax ; dec dword ptr [rdi + rbp + 0xffffffffcc7b0001] ; out dx, eax ; call rsp
0x000000000018a8a2 : out dx, eax ; dec dword ptr [rdx + rbx + 0x4aff0001] ; out dx, eax ; call rsp
0x000000000008391d : out dx, eax ; in al, -1 ; dec dword ptr [rax + 0xffffffffffffff89] ; ret 0x3d83
0x0000000000195679 : out dx, eax ; in al, dx ; call qword ptr [rax]
0x0000000000178e5a : out dx, eax ; inc dword ptr [rax + 0x53] ; out dx, eax ; call qword ptr [rax]
0x0000000000178ec6 : out dx, eax ; inc dword ptr [rax + 0x53] ; out dx, eax ; inc dword ptr [rax + 0x53] ; out dx, eax ; call qword ptr [rax]
0x0000000000178efa : out dx, eax ; inc dword ptr [rax + 0x53] ; out dx, eax ; inc dword ptr [rax + 0x53] ; out dx, eax ; jmp rax
0x0000000000178efe : out dx, eax ; inc dword ptr [rax + 0x53] ; out dx, eax ; jmp rax
0x0000000000178e56 : out dx, eax ; inc dword ptr [rax] ; push rbx ; out dx, eax ; inc dword ptr [rax + 0x53] ; out dx, eax ; call qword ptr [rax]
0x0000000000122fbc : out dx, eax ; inc dword ptr [rbx + 0xffffffff894863fd] ; ret
0x0000000000178eda : out dx, eax ; inc eax ; push rdx ; out dx, eax ; call qword ptr [rax]
0x000000000018a82a : out dx, eax ; inc esp ; add dword ptr es:[rax], eax ; je 0x18a87a ; out dx, eax ; jmp rsp
0x000000000002d13d : out dx, eax ; je 0x2d156 ; call 0x893b0
0x0000000000178ba2 : out dx, eax ; jmp qword ptr [rax]
0x000000000019f0aa : out dx, eax ; jmp qword ptr [rbx]
0x000000000019eab2 : out dx, eax ; jmp qword ptr [rdx]
0x0000000000120758 : out dx, eax ; jmp qword ptr [rsi + 0xf]
0x000000000019e28a : out dx, eax ; jmp qword ptr [rsi]
0x0000000000178f02 : out dx, eax ; jmp rax
0x000000000019edd2 : out dx, eax ; jmp rdi
0x000000000018a832 : out dx, eax ; jmp rsp
0x000000000018ab32 : out dx, eax ; lcall ptr [rbx + rbp + 0xffffffffcae80001] ; out dx, eax ; jmp rsp
0x000000000018aa6a : out dx, eax ; lcall ptr [rcx + rax*2 + 0xffffffffa9540001] ; out dx, eax ; jmp rsp
0x000000000018a932 : out dx, eax ; lcall ptr [rdi + rbx + 0x4d090001] ; out dx, eax ; jmp rsp
0x000000000018ac32 : out dx, eax ; lcall ptr [rsp + rsi + 0xffffffffce950001] ; out dx, eax ; jmp rsp
0x0000000000108fd0 : out dx, eax ; leave ; ret
0x000000000012e6c3 : out dx, eax ; mov edx, 0xffffffff ; xor eax, eax ; call r8
0x000000000012e70d : out dx, eax ; mov edx, 0xffffffff ; xor eax, eax ; call rcx
0x000000000014522a : out dx, eax ; mov qword ptr [rdi + 0xfffffffffffffff7], r8 ; mov dword ptr [rdi + 0xfffffffffffffffc], edx ; ret
0x0000000000145326 : out dx, eax ; mov qword ptr [rdi + 0xfffffffffffffff7], rcx ; mov byte ptr [rdi + 0xffffffffffffffff], dl ; ret
0x0000000000145272 : out dx, eax ; mov qword ptr [rdi + 0xfffffffffffffff7], rcx ; mov dword ptr [rdi + 0xfffffffffffffffc], edx ; ret
0x00000000000f8f58 : out dx, eax ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000112056 : out dx, eax ; mov rbp, qword ptr [rbx + 0x50] ; call 0x11e270
0x00000000000c126c : out dx, eax ; mov rbx, rsp ; call 0x3d4b0
0x0000000000128f34 : out dx, eax ; mov rcx, qword ptr [rbp + 0xfffffffffffffe98] ; call rcx
0x0000000000124c93 : out dx, eax ; mov rcx, qword ptr [rsp + 0x18] ; call rcx
0x0000000000124a9c : out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x000000000011ecf3 : out dx, eax ; mov rcx, r13 ; call rbx
0x0000000000022e86 : out dx, eax ; mov rsi, qword ptr [rdx + rbx + 0x20] ; call rax
0x000000000014da3a : out dx, eax ; movdqu xmmword ptr [rdi + 0xfffffffffffffff0], xmm1 ; ret
0x000000000013e96d : out dx, eax ; or dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x0000000000075ce1 : out dx, eax ; pop rbx ; ret
0x0000000000178ed6 : out dx, eax ; push qword ptr [rax + 0xffffffffc0ffef52] ; push rdx ; out dx, eax ; call qword ptr [rax]
0x000000000018ad4a : out dx, eax ; push qword ptr [rdx + rcx*2 + 0xffffffffe1140001] ; out dx, eax ; jmp rsp
0x0000000000160c93 : out dx, eax ; push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret -0x7cf1
0x0000000000160ca8 : out dx, eax ; push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret -0x7cf1
0x0000000000160cbd : out dx, eax ; push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret -0x7cf1
0x0000000000036547 : out dx, eax ; ret
0x0000000000028feb : out dx, eax ; ret 0
0x0000000000031185 : out dx, eax ; ret 0x38
0x00000000000a1ff3 : out dx, eax ; ret 0xf66
0x0000000000160c3a : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret -0x7cf1
0x00000000001621ac : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000162195 : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000016217e : out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000132f3e : out dx, eax ; sti ; dec dword ptr [rax + 0xffffffffffffff83] ; clc ; dec dword ptr [rax + 0xffffffffffffff89] ; ret
0x000000000018799d : out dx, eax ; sti ; inc eax ; lock sti ; call qword ptr [rax]
0x00000000001043ed : out dx, eax ; xor eax, 0x8548fff8 ; ror byte ptr [rdi], -0x6b ; ret
0x000000000012188f : out dx, eax ; xor eax, eax ; pop rbp ; jmp rdx
0x0000000000038280 : out dx, eax ; xor eax, eax ; ret
0x0000000000071b55 : out dx, eax ; xor r8d, r8d ; call r12
0x000000000013a52e : outsb dx, byte ptr [rsi] ; adc al, 0 ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x00000000001b60d5 : outsb dx, byte ptr [rsi] ; add al, byte ptr [rax] ; test al, 4 ; sti ; jmp qword ptr [rdx]
0x00000000000b4ff8 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add bl, dh ; ret
0x000000000016314e : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7504
0x00000000001a60d5 : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; call 0x221a5550
0x00000000001a60bd : outsb dx, byte ptr [rsi] ; add dword ptr [rax], eax ; sal byte ptr [rbx + 0xfffffffffffffff4], 1 ; jmp qword ptr [rcx]
0x0000000000188581 : outsb dx, byte ptr [rsi] ; cld ; jmp qword ptr [rax]
0x0000000000132758 : outsb dx, byte ptr [rsi] ; cmc ; dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x7ab3
0x000000000018bf81 : outsb dx, byte ptr [rsi] ; cmc ; inc esp ; ret
0x0000000000036593 : outsb dx, byte ptr [rsi] ; enter 0x280f, -0x3f ; ret
0x000000000008185e : outsb dx, byte ptr [rsi] ; fnstenv dword ptr [rbx] ; add byte ptr [rcx], bh ; ret 0xa7e
0x0000000000195aad : outsb dx, byte ptr [rsi] ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000177343 : outsb dx, byte ptr [rsi] ; ja 0x1772c9 ; ret 0x48f
0x0000000000072731 : outsb dx, byte ptr [rsi] ; mov eax, edx ; pop rbx ; ret
0x0000000000188ba0 : outsb dx, byte ptr [rsi] ; mov gs, ecx ; call rsp
0x000000000004d15e : outsb dx, byte ptr [rsi] ; ret
0x0000000000175084 : outsb dx, byte ptr [rsi] ; sahf ; ret 0x38ae
0x0000000000187399 : outsb dx, byte ptr [rsi] ; sti ; jmp rax
0x000000000010c50e : outsb dx, byte ptr [rsi] ; sub al, -0xb ; inc dword ptr [rbp + 0xffffffffffffff85] ; in al, -0x77 ; ret 0x87e
0x00000000000d5a72 : outsb dx, byte ptr [rsi] ; sub byte ptr [rbx + rcx*4 + 0x76], cl ; xor byte ptr [rax + 0x39], cl ; ret -0x7cf1
0x000000000008d64a : outsb dx, byte ptr [rsi] ; xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x00000000000ca9fa : outsb dx, byte ptr [rsi] ; xor byte ptr [rcx + 0x5d], al ; pop r14 ; pop r15 ; ret
0x00000000001b61bd : outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; lock add edi, ebx ; jmp qword ptr [rdx]
0x00000000001b612d : outsd dx, dword ptr [rsi] ; add al, byte ptr [rax] ; nop ; ret -9
0x0000000000100575 : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x00000000001a611d : outsd dx, dword ptr [rsi] ; add dword ptr [rax], eax ; loopne 0x1a6136 ; stc ; call qword ptr [rax]
0x00000000000f29b2 : outsd dx, dword ptr [rsi] ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x00000000001092be : outsd dx, dword ptr [rsi] ; call 0x66d29408
0x00000000001885c1 : outsd dx, dword ptr [rsi] ; cld ; jmp qword ptr [rax + 0x20fffc70]
0x0000000000068049 : outsd dx, dword ptr [rsi] ; fdivr st(7) ; dec dword ptr [rax + 0xffffffffffffff83] ; ret -0x14f8
0x0000000000087e18 : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx + 0xffffffffffffff83] ; ret 0x7f10
0x000000000008dd1e : outsd dx, dword ptr [rsi] ; fmul qword ptr [rcx + 0xffffffffffffff83] ; ret 0xf10
0x000000000016737d : outsd dx, dword ptr [rsi] ; in al, dx ; call rsp
0x0000000000195c3d : outsd dx, dword ptr [rsi] ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019717c : outsd dx, dword ptr [rsi] ; jl 0x19716c ; jmp qword ptr [rdx]
0x000000000019237f : outsd dx, dword ptr [rsi] ; ljmp 0x720d1cff, -0x1593 ; jmp qword ptr [rdx]
0x00000000001923c7 : outsd dx, dword ptr [rsi] ; ljmp 0xa0d1cff, -0x1592 ; jmp qword ptr [rdx]
0x000000000019240f : outsd dx, dword ptr [rsi] ; ljmp 0xf30d1cff, -0x1593 ; jmp qword ptr [rdx]
0x000000000019240e : outsd dx, dword ptr [rsi] ; outsd dx, dword ptr [rsi] ; ljmp 0xf30d1cff, -0x1593 ; jmp qword ptr [rdx]
0x0000000000161fad : outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000016204d : outsd dx, dword ptr [rsi] ; push rdi ; ret 0xff3
0x000000000008b47a : outsd dx, dword ptr [rsi] ; push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x0000000000078d00 : outsd dx, dword ptr [rsi] ; ret
0x0000000000162052 : outsd dx, dword ptr [rsi] ; ret -0x3d4e
0x0000000000145b67 : outsd dx, dword ptr [rsi] ; ret -0x74b4
0x0000000000175a46 : outsd dx, dword ptr [rsi] ; ret 0x5ae4
0x000000000008b4ca : outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000175a45 : outsd dx, dword ptr es:[rsi] ; ret 0x5ae4
0x0000000000138172 : pcmpeqb mm0, mm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000000a3b44 : pcmpeqb mm3, qword ptr [rcx] ; add rax, 2 ; ret
0x00000000000a3b2f : pcmpeqb mm3, qword ptr [rsi] ; ret
0x0000000000138171 : pcmpeqb xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x0000000000176e46 : pcmpeqw mm5, qword ptr [rbp + 0xffffffffffffffa1] ; mov cs, edi ; ret -0x74ca
0x0000000000097571 : pcmpgtd mm1, qword ptr [rcx + 0xffffffff89480457] ; clc ; ret
0x0000000000097b45 : pcmpgtd mm1, qword ptr [rdi] ; xlatb ; ret -0x3f7b
0x0000000000036431 : pmovmskb eax, mm0 ; and eax, 0x80 ; ret
0x0000000000036701 : pmovmskb eax, mm0 ; and eax, 8 ; ret
0x0000000000097b53 : pmovmskb eax, mm1 ; bsr eax, eax ; add rax, rdi ; ret
0x0000000000097bf5 : pmovmskb eax, mm1 ; test eax, eax ; jne 0x97c70 ; xor eax, eax ; ret
0x0000000000036430 : pmovmskb eax, xmm0 ; and eax, 0x80 ; ret
0x0000000000036700 : pmovmskb eax, xmm0 ; and eax, 8 ; ret
0x0000000000089686 : pmovmskb edx, mm4 ; test edx, edx ; je 0x89691 ; bsf eax, edx ; ret
0x00000000001a8175 : pop qword ptr [rcx] ; add byte ptr [rax + 0xa], ch ; cmc ; call rsp
0x00000000001b0d3c : pop qword ptr [rdx] ; add dl, byte ptr [rsi + 0x41380e0a] ; ret
0x00000000001ab188 : pop qword ptr [rdx] ; add ecx, dword ptr [rbx + 1] ; ret
0x0000000000108cd4 : pop r10 ; ret
0x00000000001772cf : pop r10 ; sub ah, ah ; mov bh, 6 ; movsd dword ptr es:[rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x0000000000070ed2 : pop r12 ; jmp rax
0x000000000005392b : pop r12 ; mov eax, 1 ; pop r13 ; ret
0x00000000000af9d6 : pop r12 ; mov eax, r13d ; pop r13 ; pop r14 ; ret
0x0000000000073086 : pop r12 ; mov eax, r13d ; pop r13 ; ret
0x00000000000306e0 : pop r12 ; mov rax, rcx ; pop r13 ; ret
0x000000000007b0b8 : pop r12 ; neg eax ; pop r13 ; ret
0x000000000019d554 : pop r12 ; out dx, al ; jmp qword ptr [rdx]
0x000000000010d0b8 : pop r12 ; pop r13 ; jmp rax
0x0000000000094df8 : pop r12 ; pop r13 ; mov eax, edx ; pop r14 ; ret
0x00000000000bdf98 : pop r12 ; pop r13 ; mov rax, r14 ; pop r14 ; ret
0x0000000000085dbd : pop r12 ; pop r13 ; mov rax, rcx ; pop r14 ; ret
0x0000000000083d31 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000001f79f : pop r12 ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000022b13 : pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000001ff74 : pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000024800 : pop r12 ; pop r13 ; pop r14 ; ret
0x000000000006dc3c : pop r12 ; pop r13 ; pop rbp ; ret
0x000000000001fef5 : pop r12 ; pop r13 ; ret
0x00000000000af990 : pop r12 ; pop r13 ; xor eax, eax ; pop r14 ; ret
0x000000000003b982 : pop r12 ; pop rbp ; ret
0x000000000001f668 : pop r12 ; ret
0x0000000000123294 : pop r12 ; sete al ; movzx eax, al ; ret
0x000000000011e22f : pop r12 ; sub eax, 1 ; pop r13 ; ret
0x000000000007c48a : pop r12 ; sub rax, r13 ; pop r13 ; pop r14 ; ret
0x000000000010d0ba : pop r13 ; jmp rax
0x00000000001184fd : pop r13 ; mov eax, 0xffffffff ; pop r14 ; ret
0x000000000005385d : pop r13 ; mov eax, 1 ; pop r14 ; ret
0x0000000000094dfa : pop r13 ; mov eax, edx ; pop r14 ; ret
0x00000000000bdf9a : pop r13 ; mov rax, r14 ; pop r14 ; ret
0x0000000000085dbf : pop r13 ; mov rax, rcx ; pop r14 ; ret
0x0000000000101652 : pop r13 ; pop r14 ; neg eax ; pop r15 ; ret
0x00000000000a5a9e : pop r13 ; pop r14 ; neg rax ; pop r15 ; ret
0x0000000000043bc2 : pop r13 ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x0000000000083d33 : pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000001f7a1 : pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000022b15 : pop r13 ; pop r14 ; pop r15 ; ret
0x000000000001ff76 : pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000024802 : pop r13 ; pop r14 ; ret
0x0000000000076636 : pop r13 ; pop r14 ; sar rax, 2 ; ret
0x00000000000d5b92 : pop r13 ; pop r14 ; xor eax, eax ; pop r15 ; ret
0x000000000006dc3e : pop r13 ; pop rbp ; ret
0x000000000001fef7 : pop r13 ; ret
0x00000000000758ab : pop r13 ; sub rax, r14 ; pop r14 ; pop r15 ; ret
0x00000000000af992 : pop r13 ; xor eax, eax ; pop r14 ; ret
0x000000000003884a : pop r14 ; idiv r9 ; pop r15 ; ret
0x0000000000076b03 : pop r14 ; mov eax, 0xffffffff ; pop r15 ; ret
0x000000000004121a : pop r14 ; mulsd xmm0, xmm0 ; pop r15 ; ret
0x000000000003e37a : pop r14 ; mulss xmm0, xmm0 ; pop r15 ; ret
0x0000000000101654 : pop r14 ; neg eax ; pop r15 ; ret
0x00000000000a5aa0 : pop r14 ; neg rax ; pop r15 ; ret
0x0000000000043bc4 : pop r14 ; pop r15 ; fmulp st(1) ; ret
0x0000000000083d35 : pop r14 ; pop r15 ; jmp rax
0x000000000001f7a3 : pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000022b17 : pop r14 ; pop r15 ; ret
0x000000000001ff78 : pop r14 ; pop rbp ; ret
0x0000000000024804 : pop r14 ; ret
0x0000000000076638 : pop r14 ; sar rax, 2 ; ret
0x00000000000d5b94 : pop r14 ; xor eax, eax ; pop r15 ; ret
0x0000000000043bc6 : pop r15 ; fmulp st(1) ; ret
0x0000000000083d37 : pop r15 ; jmp rax
0x000000000001f7a5 : pop r15 ; pop rbp ; ret
0x0000000000022b19 : pop r15 ; ret
0x0000000000128496 : pop r8 ; mov eax, 1 ; ret
0x00000000001abfa4 : pop r9 ; cmc ; jmp qword ptr [rdx]
0x000000000018717f : pop r9 ; rep clc ; ret 0x6e1f
0x000000000019e188 : pop rax ; adc bh, dl ; call qword ptr [rax]
0x0000000000128bde : pop rax ; add al, byte ptr [rax] ; add byte ptr [rax], al ; add rdi, 0x58 ; jmp rcx
0x00000000001b4abd : pop rax ; add al, byte ptr [rax] ; sar byte ptr [rdx + 0xfffffffffffffff7], 1 ; call qword ptr [rdx]
0x00000000000e5487 : pop rax ; add eax, ebp ; ret -0x5bf
0x00000000001936b8 : pop rax ; add ebx, ebp ; jmp rax
0x0000000000122d3b : pop rax ; add rsp, 0x10 ; mov eax, edx ; pop rbx ; ret
0x00000000001b3188 : pop rax ; and edi, esi ; call qword ptr [rdx]
0x0000000000128da4 : pop rax ; call rax
0x000000000019e0f8 : pop rax ; clc ; out dx, al ; call qword ptr [rax]
0x0000000000187ff1 : pop rax ; cld ; call rax
0x000000000019ba64 : pop rax ; cld ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000187f71 : pop rax ; cld ; jmp rsp
0x00000000001abe45 : pop rax ; cmc ; jmp qword ptr [rdx]
0x00000000000d2b47 : pop rax ; cmp al, 0x11 ; je 0xd2b50 ; xor eax, eax ; ret
0x00000000001a9158 : pop rax ; cmp ch, dh ; jmp qword ptr [rcx]
0x00000000001a5ce8 : pop rax ; hlt ; jmp qword ptr [rcx]
0x0000000000189b19 : pop rax ; in eax, dx ; call rsp
0x0000000000195994 : pop rax ; insb byte ptr es:[rdi], dx ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000c33ba : pop rax ; je 0xc33e0 ; mov eax, 1 ; ret
0x000000000018facf : pop rax ; jmp -0x55d9e82c
0x00000000001941f9 : pop rax ; jmp 0x1941fb
0x000000000018fb17 : pop rax ; jmp 0x7826181c
0x0000000000128be6 : pop rax ; jmp rcx
0x00000000001967ec : pop rax ; jne 0x1967dc ; jmp qword ptr [rdx]
0x00000000001ac398 : pop rax ; jrcxz 0x1ac390 ; jmp rbx
0x00000000001b0c18 : pop rax ; mov bl, -0xa ; call qword ptr [rax]
0x0000000000027795 : pop rax ; mov dword ptr [rsp + 8], eax ; call rbx
0x0000000000128497 : pop rax ; mov eax, 1 ; ret
0x000000000002fea4 : pop rax ; mov eax, dword ptr [rax + rdi*4 + 0x200] ; ret
0x000000000012287e : pop rax ; mov qword ptr [rdx + 0x68], rcx ; ret
0x00000000000286c3 : pop rax ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x000000000003abef : pop rax ; or cl, ch ; ret -6
0x000000000009ca14 : pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000019d3a5 : pop rax ; out dx, al ; jmp qword ptr [rdx]
0x0000000000120c10 : pop rax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000001f576 : pop rax ; pop rbx ; pop rbp ; ret
0x00000000000fb009 : pop rax ; pop rdi ; call rax
0x00000000000193b8 : pop rax ; ret
0x00000000001ab598 : pop rax ; sal ebp, cl ; jmp qword ptr [rsi]
0x000000000019aec8 : pop rax ; sbb dh, ch ; call qword ptr [rcx]
0x0000000000190259 : pop rax ; std ; jmp qword ptr [rdi]
0x000000000011fa44 : pop rax ; sub r8b, byte ptr [rax] ; pop rbx ; ret
0x0000000000195e28 : pop rax ; xchg eax, edx ; in eax, dx ; jmp qword ptr [rax]
0x0000000000120c51 : pop rax ; xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x0000000000191298 : pop rax ; xor ebp, edx ; call qword ptr [rcx]
0x00000000000d950f : pop rbp ; add al, -0x73 ; add dword ptr [r8 + 0xffffffffffffff83], ecx ; ret
0x000000000018da9d : pop rbp ; add al, byte ptr [rax] ; adc bh, byte ptr [rbp + 0xfffffffffffffff8] ; call rsp
0x00000000001b4f35 : pop rbp ; add al, byte ptr [rax] ; call 0x131b46c5
0x00000000000d3259 : pop rbp ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x000000000005ecc7 : pop rbp ; add dword ptr [rax], eax ; add byte ptr [rax + 0x63], cl ; ret 0x3948
0x000000000012292d : pop rbp ; add eax, edx ; ret
0x0000000000108ed5 : pop rbp ; and eax, 0xc ; pop r12 ; ret
0x0000000000188591 : pop rbp ; cld ; jmp qword ptr [rax + 0x20fffc5e]
0x0000000000188551 : pop rbp ; cld ; jmp qword ptr [rax]
0x0000000000189b81 : pop rbp ; in eax, dx ; call rsp
0x00000000001790f5 : pop rbp ; int1 ; inc eax ; pop rdi ; int1 ; call rax
0x0000000000075114 : pop rbp ; jmp rax
0x00000000001200e5 : pop rbp ; jmp rcx
0x0000000000121892 : pop rbp ; jmp rdx
0x00000000000a246c : pop rbp ; lea rax, qword ptr [r9 + 1] ; pop r12 ; ret
0x00000000001aa1ae : pop rbp ; ljmp 0xd1cfff4, -0x189b ; hlt ; jmp qword ptr [rdx]
0x0000000000074666 : pop rbp ; mov eax, 0xffffffff ; pop r12 ; ret
0x00000000001184fe : pop rbp ; mov eax, 0xffffffff ; pop r14 ; ret
0x000000000007464f : pop rbp ; mov eax, 1 ; pop r12 ; ret
0x000000000005385e : pop rbp ; mov eax, 1 ; pop r14 ; ret
0x00000000000e5efc : pop rbp ; mov eax, 5 ; pop r12 ; ret
0x00000000000a2419 : pop rbp ; mov eax, dword ptr [r9 + 4] ; pop r12 ; ret
0x000000000005e64f : pop rbp ; mov eax, edx ; pop r12 ; ret
0x0000000000094dfb : pop rbp ; mov eax, edx ; pop r14 ; ret
0x000000000010a434 : pop rbp ; mov eax, esi ; pop r12 ; ret
0x00000000000af953 : pop rbp ; mov eax, r12d ; pop r12 ; pop r13 ; ret
0x00000000000af881 : pop rbp ; mov eax, r12d ; pop r12 ; ret
0x00000000000f1470 : pop rbp ; mov eax, r9d ; pop r12 ; ret
0x000000000006d99e : pop rbp ; mov rax, r12 ; pop r12 ; ret
0x00000000000bdf9b : pop rbp ; mov rax, r14 ; pop r14 ; ret
0x0000000000085dc0 : pop rbp ; mov rax, rcx ; pop r14 ; ret
0x0000000000070fc6 : pop rbp ; mov rax, rdx ; pop r12 ; ret
0x0000000000126ce2 : pop rbp ; movzx eax, al ; pop r12 ; ret
0x0000000000083953 : pop rbp ; pop r12 ; jmp rax
0x0000000000073085 : pop rbp ; pop r12 ; mov eax, r13d ; pop r13 ; ret
0x00000000000306df : pop rbp ; pop r12 ; mov rax, rcx ; pop r13 ; ret
0x000000000007b0b7 : pop rbp ; pop r12 ; neg eax ; pop r13 ; ret
0x0000000000094df7 : pop rbp ; pop r12 ; pop r13 ; mov eax, edx ; pop r14 ; ret
0x0000000000083d30 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x0000000000022b12 : pop rbp ; pop r12 ; pop r13 ; pop r14 ; pop r15 ; ret
0x00000000000247ff : pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fef4 : pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000af98f : pop rbp ; pop r12 ; pop r13 ; xor eax, eax ; pop r14 ; ret
0x000000000001f667 : pop rbp ; pop r12 ; ret
0x0000000000123293 : pop rbp ; pop r12 ; sete al ; movzx eax, al ; ret
0x0000000000041219 : pop rbp ; pop r14 ; mulsd xmm0, xmm0 ; pop r15 ; ret
0x000000000003e379 : pop rbp ; pop r14 ; mulss xmm0, xmm0 ; pop r15 ; ret
0x0000000000101653 : pop rbp ; pop r14 ; neg eax ; pop r15 ; ret
0x00000000000a5a9f : pop rbp ; pop r14 ; neg rax ; pop r15 ; ret
0x0000000000043bc3 : pop rbp ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x0000000000083d34 : pop rbp ; pop r14 ; pop r15 ; jmp rax
0x000000000001f7a2 : pop rbp ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000022b16 : pop rbp ; pop r14 ; pop r15 ; ret
0x000000000001ff77 : pop rbp ; pop r14 ; pop rbp ; ret
0x0000000000024803 : pop rbp ; pop r14 ; ret
0x0000000000076637 : pop rbp ; pop r14 ; sar rax, 2 ; ret
0x00000000000d5b93 : pop rbp ; pop r14 ; xor eax, eax ; pop r15 ; ret
0x000000000006dc3f : pop rbp ; pop rbp ; ret
0x0000000000038598 : pop rbp ; pop rbx ; ret
0x000000000001f513 : pop rbp ; ret
0x00000000001948b4 : pop rbp ; salc ; jmp 0x1948b7
0x0000000000071b68 : pop rbp ; sub rax, r14 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000758ac : pop rbp ; sub rax, r14 ; pop r14 ; pop r15 ; ret
0x0000000000111d4f : pop rbp ; xor eax, eax ; mov byte ptr [rdx], 0 ; pop r12 ; ret
0x000000000007afe1 : pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000af993 : pop rbp ; xor eax, eax ; pop r14 ; ret
0x0000000000107061 : pop rbp ; xor eax, eax ; pop rbx ; ret
0x000000000018da65 : pop rbx ; add al, byte ptr [rax] ; je 0x18dadf ; clc ; jmp rsp
0x00000000001b4d5d : pop rbx ; add al, byte ptr [rax] ; jg 0x1b4d5a ; call qword ptr [rdx]
0x0000000000174618 : pop rbx ; and dword ptr [rsi + rbp*2 + 0xffffffffffffff86], edi ; lahf ; ret -0x78e2
0x00000000000a277f : pop rbx ; and eax, 0x3fc00 ; ret
0x00000000000a27bf : pop rbx ; and eax, 0x7ff80000 ; ret
0x00000000000d2930 : pop rbx ; and eax, 2 ; pop rbp ; ret
0x0000000000187fd9 : pop rbx ; cld ; call rax
0x0000000000187f59 : pop rbx ; cld ; jmp rsp
0x0000000000187f55 : pop rbx ; cld ; push qword ptr [rbx + rbx*2 + 0xfffffffffffffffc] ; jmp rsp
0x00000000001ac42d : pop rbx ; cmc ; jmp qword ptr [rdx]
0x0000000000174616 : pop rbx ; cmc ; pop rbx ; and dword ptr [rsi + rbp*2 + 0xffffffffffffff86], edi ; lahf ; ret -0x78e2
0x000000000006f9d3 : pop rbx ; div rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000744fe : pop rbx ; div rbp ; pop rbp ; pop r12 ; ret
0x00000000000a4fe1 : pop rbx ; jge 0xa5015 ; add byte ptr [rax + 0x39], cl ; ret
0x00000000001282ec : pop rbx ; jl 0x1282f4 ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0xcf
0x0000000000070c0a : pop rbx ; jmp rax
0x00000000001a047c : pop rbx ; mov dh, -0x10 ; jmp qword ptr [rdx]
0x00000000000775bc : pop rbx ; mov eax, 0xffffffff ; pop rbp ; ret
0x00000000000d17f2 : pop rbx ; mov eax, 1 ; ret
0x0000000000048855 : pop rbx ; mov eax, dword ptr [rax + 0x58] ; ret
0x00000000000a2829 : pop rbx ; mov eax, eax ; ret
0x00000000000c1983 : pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000006e675 : pop rbx ; mov eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000004f202 : pop rbx ; mov eax, ebp ; pop rbp ; ret
0x00000000000754aa : pop rbx ; mov rax, qword ptr [rax + 0x20] ; jmp rax
0x00000000000752af : pop rbx ; mov rax, qword ptr [rax + 0x28] ; jmp rax
0x0000000000070267 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000700f1 : pop rbx ; mov rax, rbp ; pop rbp ; pop r12 ; ret
0x000000000012188c : pop rbx ; mov rdi, rbp ; xor eax, eax ; pop rbp ; jmp rdx
0x0000000000135f8c : pop rbx ; mov rsi, rbp ; pop rbp ; jmp rax
0x000000000012358c : pop rbx ; movzx eax, al ; pop rbp ; ret
0x0000000000048b05 : pop rbx ; neg eax ; pop rbp ; ret
0x000000000019d47d : pop rbx ; out dx, al ; jmp qword ptr [rdx]
0x0000000000129904 : pop rbx ; out dx, eax ; dec dword ptr [rax + 0xffffffffffffff89] ; ret
0x000000000001ff73 : pop rbx ; pop r12 ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000006dc3b : pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x000000000003b981 : pop rbx ; pop r12 ; pop rbp ; ret
0x000000000012292c : pop rbx ; pop rbp ; add eax, edx ; ret
0x0000000000108ed4 : pop rbx ; pop rbp ; and eax, 0xc ; pop r12 ; ret
0x0000000000075113 : pop rbx ; pop rbp ; jmp rax
0x0000000000074665 : pop rbx ; pop rbp ; mov eax, 0xffffffff ; pop r12 ; ret
0x000000000007464e : pop rbx ; pop rbp ; mov eax, 1 ; pop r12 ; ret
0x00000000000e5efb : pop rbx ; pop rbp ; mov eax, 5 ; pop r12 ; ret
0x00000000000a2418 : pop rbx ; pop rbp ; mov eax, dword ptr [r9 + 4] ; pop r12 ; ret
0x000000000005e64e : pop rbx ; pop rbp ; mov eax, edx ; pop r12 ; ret
0x000000000010a433 : pop rbx ; pop rbp ; mov eax, esi ; pop r12 ; ret
0x00000000000af952 : pop rbx ; pop rbp ; mov eax, r12d ; pop r12 ; pop r13 ; ret
0x00000000000f146f : pop rbx ; pop rbp ; mov eax, r9d ; pop r12 ; ret
0x000000000006d99d : pop rbx ; pop rbp ; mov rax, r12 ; pop r12 ; ret
0x0000000000070fc5 : pop rbx ; pop rbp ; mov rax, rdx ; pop r12 ; ret
0x0000000000126ce1 : pop rbx ; pop rbp ; movzx eax, al ; pop r12 ; ret
0x0000000000083952 : pop rbx ; pop rbp ; pop r12 ; jmp rax
0x0000000000073084 : pop rbx ; pop rbp ; pop r12 ; mov eax, r13d ; pop r13 ; ret
0x00000000000306de : pop rbx ; pop rbp ; pop r12 ; mov rax, rcx ; pop r13 ; ret
0x000000000007b0b6 : pop rbx ; pop rbp ; pop r12 ; neg eax ; pop r13 ; ret
0x00000000000247fe : pop rbx ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000001fef3 : pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000001f666 : pop rbx ; pop rbp ; pop r12 ; ret
0x000000000001f512 : pop rbx ; pop rbp ; ret
0x0000000000111d4e : pop rbx ; pop rbp ; xor eax, eax ; mov byte ptr [rdx], 0 ; pop r12 ; ret
0x000000000007afe0 : pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000000221a8 : pop rbx ; ret
0x0000000000001b14 : pop rbx ; ret 0x2a63
0x0000000000177900 : pop rbx ; ret 0x6f9
0x000000000008253d : pop rbx ; ret 0xf
0x00000000000a4cc8 : pop rbx ; sub rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000187fe9 : pop rcx ; cld ; call rax
0x0000000000187f69 : pop rcx ; cld ; jmp rsp
0x00000000001abf5d : pop rcx ; cmc ; jmp qword ptr [rdx]
0x00000000000e3844 : pop rcx ; or byte ptr [rcx + 0x63], cl ; sbb al, -0x66 ; add rbx, r10 ; jmp rbx
0x0000000000001b13 : pop rcx ; pop rbx ; ret 0x2a63
0x0000000000186970 : pop rcx ; rep clc ; ret 0x6e1f
0x00000000000fa7c2 : pop rcx ; ret -0x3c7d
0x0000000000166203 : pop rcx ; ret 0x25
0x0000000000101153 : pop rcx ; sbb al, 0x2c ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x76b8
0x0000000000143da8 : pop rdi ; adc byte ptr [rdx + 8], dh ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000000ec12a : pop rdi ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffffff], bh ; ret
0x000000000013effd : pop rdi ; add eax, dword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x00000000000fb00a : pop rdi ; call rax
0x0000000000187cc9 : pop rdi ; cld ; call qword ptr [rdx]
0x0000000000187c0d : pop rdi ; cld ; call rsi
0x0000000000187c09 : pop rdi ; cld ; inc dword ptr [rax + 0x5f] ; cld ; call rsi
0x0000000000188559 : pop rdi ; cld ; jmp qword ptr [rax]
0x0000000000187c49 : pop rdi ; cld ; jmp qword ptr [rsi]
0x0000000000187e09 : pop rdi ; cld ; jmp rax
0x0000000000043bc7 : pop rdi ; fmulp st(1) ; ret
0x00000000001457c9 : pop rdi ; in al, dx ; mov qword ptr [rdi + 0xfffffffffffffff4], rcx ; mov dword ptr [rdi + 0xfffffffffffffffc], edx ; ret
0x00000000001455d9 : pop rdi ; in eax, dx ; mov qword ptr [rdi + 0xfffffffffffffff5], rcx ; mov dword ptr [rdi + 0xfffffffffffffffc], edx ; ret
0x0000000000176bbe : pop rdi ; insd dword ptr es:[rdi], dx ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000001790f9 : pop rdi ; int1 ; call rax
0x0000000000035ad8 : pop rdi ; je 0x35aeb ; jmp 0x35a9f
0x0000000000083d38 : pop rdi ; jmp rax
0x0000000000145076 : pop rdi ; lock mov qword ptr [rdi + 0xfffffffffffffff8], rcx ; ret
0x00000000001450b4 : pop rdi ; lock mov qword ptr [rdi + 0xfffffffffffffff8], rdx ; ret
0x0000000000175b81 : pop rdi ; mov dh, 0x4e ; ret 0x474c
0x00000000001453f9 : pop rdi ; out dx, al ; mov qword ptr [rdi + 0xfffffffffffffff6], rcx ; mov dword ptr [rdi + 0xfffffffffffffffc], edx ; ret
0x0000000000145229 : pop rdi ; out dx, eax ; mov qword ptr [rdi + 0xfffffffffffffff7], r8 ; mov dword ptr [rdi + 0xfffffffffffffffc], edx ; ret
0x0000000000145325 : pop rdi ; out dx, eax ; mov qword ptr [rdi + 0xfffffffffffffff7], rcx ; mov byte ptr [rdi + 0xffffffffffffffff], dl ; ret
0x0000000000145271 : pop rdi ; out dx, eax ; mov qword ptr [rdi + 0xfffffffffffffff7], rcx ; mov dword ptr [rdi + 0xfffffffffffffffc], edx ; ret
0x000000000001f7a6 : pop rdi ; pop rbp ; ret
0x00000000001ac4bc : pop rdi ; pop rbx ; cmc ; jmp qword ptr [rdx]
0x0000000000189c50 : pop rdi ; pop rsp ; out dx, al ; jmp rsp
0x0000000000022b1a : pop rdi ; ret
0x000000000018fb39 : pop rdi ; std ; jmp qword ptr [rdx]
0x00000000001398f6 : pop rdx ; add eax, 0x83480000 ; ret 0x4910
0x000000000007a177 : pop rdx ; cdqe ; ret
0x0000000000187fe1 : pop rdx ; cld ; call rax
0x0000000000187f61 : pop rdx ; cld ; jmp rsp
0x00000000001ac6ad : pop rdx ; cmc ; jmp qword ptr [rdx]
0x0000000000003a4a : pop rdx ; int1 ; mov dl, 0x1e ; ret
0x00000000001767a1 : pop rdx ; je 0x176768 ; ret -0x5304
0x000000000000314d : pop rdx ; jmp -0x3da2fa0a
0x00000000001a0544 : pop rdx ; mov dh, -0x10 ; jmp qword ptr [rdx]
0x00000000001996ae : pop rdx ; mov edx, 0xd1cffed ; jge 0x19966f ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000177767 : pop rdx ; out -0xb, eax ; mov ch, -0x55 ; ret
0x000000000019d3ed : pop rdx ; out dx, al ; jmp qword ptr [rdx]
0x0000000000108cd3 : pop rdx ; pop r10 ; ret
0x000000000008340f : pop rdx ; pop rbx ; pop rbp ; jmp rax
0x0000000000108cf9 : pop rdx ; pop rsi ; ret
0x0000000000001b8e : pop rdx ; ret
0x0000000000117de2 : pop rdx ; ret 0x2a
0x00000000001772d0 : pop rdx ; sub ah, ah ; mov bh, 6 ; movsd dword ptr es:[rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x00000000000a4155 : pop rdx ; test al, -0x10 ; jne 0xa4180 ; lea rax, qword ptr [rdi + 0xfffffffffffffff0] ; ret
0x00000000001af424 : pop rdx ; xchg eax, esi ; cmc ; jmp qword ptr [rdx]
0x00000000000f6012 : pop rdx ; xchg eax, esp ; repne dec dword ptr [rcx + 0xffffffffffffff8b] ; call rbx
0x000000000013eefe : pop rsi ; add al, 0 ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x000000000018d8f9 : pop rsi ; clc ; jmp rsp
0x0000000000187c11 : pop rsi ; cld ; inc dword ptr [rsi + 0x65] ; cld ; call rsi
0x0000000000188555 : pop rsi ; cld ; jmp qword ptr [rax + 0x20fffc5f]
0x0000000000188595 : pop rsi ; cld ; jmp qword ptr [rax]
0x00000000000ee60a : pop rsi ; cli ; dec dword ptr [rax + 0x39] ; ret
0x00000000001a7604 : pop rsi ; hlt ; jmp qword ptr [rdx]
0x000000000003884b : pop rsi ; idiv r9 ; pop r15 ; ret
0x00000000000f41ee : pop rsi ; jrcxz 0xf421d ; add byte ptr [rax + 0xffffffff89480038], al ; ret
0x0000000000076b04 : pop rsi ; mov eax, 0xffffffff ; pop r15 ; ret
0x000000000009391e : pop rsi ; mov ebx, 0x8948fff8 ; ret
0x00000000000c495d : pop rsi ; mov rdi, qword ptr [rbp + 0xfffffffffffffbd0] ; call r15
0x000000000004121b : pop rsi ; mulsd xmm0, xmm0 ; pop r15 ; ret
0x000000000003e37b : pop rsi ; mulss xmm0, xmm0 ; pop r15 ; ret
0x0000000000101655 : pop rsi ; neg eax ; pop r15 ; ret
0x00000000000a5aa1 : pop rsi ; neg rax ; pop r15 ; ret
0x0000000000092945 : pop rsi ; or byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4801
0x0000000000129574 : pop rsi ; out dx, eax ; dec dword ptr [rax + 0xffffffffffffff89] ; ret
0x0000000000043bc5 : pop rsi ; pop r15 ; fmulp st(1) ; ret
0x0000000000083d36 : pop rsi ; pop r15 ; jmp rax
0x000000000001f7a4 : pop rsi ; pop r15 ; pop rbp ; ret
0x0000000000022b18 : pop rsi ; pop r15 ; ret
0x000000000001ff79 : pop rsi ; pop rbp ; ret
0x0000000000024805 : pop rsi ; ret
0x00000000001066fe : pop rsi ; ret -1
0x0000000000076639 : pop rsi ; sar rax, 2 ; ret
0x00000000000ee624 : pop rsi ; sbb byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4801
0x000000000018737d : pop rsi ; sti ; jmp qword ptr [rax]
0x00000000000d5b95 : pop rsi ; xor eax, eax ; pop r15 ; ret
0x000000000013a740 : pop rsp ; adc al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x0000000000139bf4 : pop rsp ; add al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x0000000000194e35 : pop rsp ; add byte ptr [rax], al ; call 0x22193ad0
0x00000000001b724c : pop rsp ; add byte ptr [rdx], 0 ; push rax ; div bh ; call rdx
0x000000000013b440 : pop rsp ; add eax, 0x83480000 ; ret -0x16f0
0x00000000001a3a4c : pop rsp ; add qword ptr [rax], rax ; push rax ; mov dh, dl ; call qword ptr [rdi]
0x00000000000b1425 : pop rsp ; and al, -0x10 ; movsd xmm0, qword ptr [rsp + 0xfffffffffffffff0] ; ret
0x00000000000814e3 : pop rsp ; and al, 0x28 ; call rax
0x00000000001a8a4c : pop rsp ; cwde ; add dword ptr [rax], eax ; xor byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a694c : pop rsp ; ja 0x1a6950 ; add byte ptr [rax + 0xffffffffffffffad], dh ; hlt ; jmp qword ptr [rdi]
0x0000000000070ed3 : pop rsp ; jmp rax
0x0000000000196de4 : pop rsp ; jnp 0x196dd4 ; jmp qword ptr [rdx]
0x000000000005392c : pop rsp ; mov eax, 1 ; pop r13 ; ret
0x00000000000539f7 : pop rsp ; mov eax, edx ; pop rbx ; ret
0x00000000000af9d7 : pop rsp ; mov eax, r13d ; pop r13 ; pop r14 ; ret
0x0000000000073087 : pop rsp ; mov eax, r13d ; pop r13 ; ret
0x000000000018e0b4 : pop rsp ; mov es, dword ptr [rdx] ; add byte ptr [rsi], dh ; stc ; jmp rsp
0x00000000000306e1 : pop rsp ; mov rax, rcx ; pop r13 ; ret
0x000000000007b0b9 : pop rsp ; neg eax ; pop r13 ; ret
0x00000000001385d0 : pop rsp ; or byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x000000000019565f : pop rsp ; or cl, byte ptr [rdi + rax] ; or byte ptr [rbx + rcx + 2], al ; ret
0x000000000019d4c5 : pop rsp ; out dx, al ; jmp qword ptr [rdx]
0x0000000000189c51 : pop rsp ; out dx, al ; jmp rsp
0x000000000010d0b9 : pop rsp ; pop r13 ; jmp rax
0x0000000000094df9 : pop rsp ; pop r13 ; mov eax, edx ; pop r14 ; ret
0x00000000000bdf99 : pop rsp ; pop r13 ; mov rax, r14 ; pop r14 ; ret
0x0000000000085dbe : pop rsp ; pop r13 ; mov rax, rcx ; pop r14 ; ret
0x0000000000101651 : pop rsp ; pop r13 ; pop r14 ; neg eax ; pop r15 ; ret
0x0000000000043bc1 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; fmulp st(1) ; ret
0x0000000000083d32 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; jmp rax
0x000000000001f7a0 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; pop rbp ; ret
0x0000000000022b14 : pop rsp ; pop r13 ; pop r14 ; pop r15 ; ret
0x000000000001ff75 : pop rsp ; pop r13 ; pop r14 ; pop rbp ; ret
0x0000000000024801 : pop rsp ; pop r13 ; pop r14 ; ret
0x0000000000076635 : pop rsp ; pop r13 ; pop r14 ; sar rax, 2 ; ret
0x00000000000d5b91 : pop rsp ; pop r13 ; pop r14 ; xor eax, eax ; pop r15 ; ret
0x000000000006dc3d : pop rsp ; pop r13 ; pop rbp ; ret
0x000000000001fef6 : pop rsp ; pop r13 ; ret
0x00000000000af991 : pop rsp ; pop r13 ; xor eax, eax ; pop r14 ; ret
0x000000000003b983 : pop rsp ; pop rbp ; ret
0x000000000018da64 : pop rsp ; pop rbx ; add al, byte ptr [rax] ; je 0x18dadf ; clc ; jmp rsp
0x00000000000037ec : pop rsp ; ret
0x00000000000f0880 : pop rsp ; ret -1
0x0000000000003151 : pop rsp ; ret 0x52c0
0x00000000000c2f43 : pop rsp ; ret 0xb
0x0000000000123295 : pop rsp ; sete al ; movzx eax, al ; ret
0x0000000000187379 : pop rsp ; sti ; inc dword ptr [rax + 0x5e] ; sti ; jmp qword ptr [rax]
0x000000000011e230 : pop rsp ; sub eax, 1 ; pop r13 ; ret
0x000000000007c48b : pop rsp ; sub rax, r13 ; pop r13 ; pop r14 ; ret
0x00000000001a844c : pop rsp ; xchg eax, edx ; add dword ptr [rax], eax ; sbb byte ptr [rsi], -0xb ; jmp qword ptr [rsi]
0x0000000000190d3c : popfq ; add dl, ch ; jmp qword ptr [rdx]
0x00000000001a8f5d : popfq ; add dword ptr [rax], eax ; loopne 0x1a8f94 ; cmc ; jmp qword ptr [rcx]
0x000000000010ba07 : popfq ; add rsp, 0x28 ; xor eax, eax ; pop rbx ; pop rbp ; ret
0x00000000001951f4 : popfq ; ja 0x1951e3 ; jmp qword ptr [rdx]
0x0000000000196a54 : popfq ; jns 0x196a44 ; jmp qword ptr [rdx]
0x00000000001a26ec : popfq ; mov cl, dh ; jmp qword ptr [rdx]
0x000000000009805d : popfq ; mov rax, rdi ; ret
0x000000000005002b : popfq ; or byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x0000000000195b3c : popfq ; outsb dx, byte ptr [rsi] ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000a26d9 : popfq ; ret -0x157f
0x000000000013be20 : popfq ; sbb eax, dword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000018e2a1 : popfq ; stc ; call rsp
0x000000000014db03 : psllq mm1, qword ptr [rdi] ; jg 0x14db17 ; ret
0x00000000001505d3 : psllq mm1, qword ptr [rdi] ; jg 0x1505e7 ; ret
0x00000000001530f3 : psllq mm1, qword ptr [rdi] ; jg 0x153107 ; ret
0x000000000009dbb6 : psllq mm1, qword ptr [rdi] ; jg 0x9dbc2 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009dc17 : psllq mm1, qword ptr [rdi] ; jg 0x9dc23 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x000000000009e886 : psllq mm1, qword ptr [rdi] ; jg 0x9e892 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x000000000009e8e7 : psllq mm1, qword ptr [rdi] ; jg 0x9e8f3 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a0c96 : psllq mm1, qword ptr [rdi] ; jg 0xa0ca2 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a0cf7 : psllq mm1, qword ptr [rdi] ; jg 0xa0d03 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000a1766 : psllq mm1, qword ptr [rdi] ; jg 0xa1772 ; mov dword ptr [rdi + 0xf], ecx ; ret
0x00000000000a17c7 : psllq mm1, qword ptr [rdi] ; jg 0xa17d3 ; mov qword ptr [rdi + 0xf], rcx ; ret
0x00000000000b4b2f : psubb mm1, qword ptr [rax + 0xffffffffffffff89] ; ret
0x0000000000187291 : psubq mm7, mm7 ; push rax ; adc bl, bh ; jmp qword ptr [rax]
0x000000000019cd31 : push -0x12 ; call qword ptr [rdi]
0x00000000000d9a83 : push -0x3c76b690 ; mov edx, r8d ; jmp 0xd9a94
0x000000000002c092 : push -0x55 ; adc byte ptr [rax], al ; mov rdi, rbx ; call r12
0x00000000001aed84 : push -0x78 ; cmc ; jmp qword ptr [rdx]
0x000000000019818c : push -0x7a ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000163134 : push -0x9ffffff ; ret 0x7501
0x00000000001a5ee9 : push -0xc ; jmp qword ptr [rcx]
0x0000000000021bff : push -0xcfffff7 ; ret
0x0000000000179639 : push -0xe ; call qword ptr [rax]
0x0000000000179631 : push -0xe ; call rax
0x0000000000179619 : push -0xe ; jmp qword ptr [rax]
0x0000000000179635 : push -0xe ; push rax ; push -0xe ; call qword ptr [rax]
0x00000000000a4147 : push -0xfb872b8 ; ret
0x0000000000188575 : push -4 ; jmp qword ptr [rax + 0x20fffc6b]
0x00000000001885b5 : push -4 ; jmp qword ptr [rax]
0x000000000017a760 : push 0x16fff498 ; cdq ; hlt ; call qword ptr [rsi]
0x00000000000e39f4 : push 0x2484b60f ; ret
0x0000000000179109 : push 0x49a0fff1 ; int1 ; call qword ptr [rax]
0x00000000001203dd : push 0x5c415d5b ; pop r13 ; ret
0x00000000001a5acd : push 0x61500001 ; hlt ; jmp qword ptr [rax]
0x0000000000177342 : push 0x6e ; ja 0x1772c9 ; ret 0x48f
0x0000000000196ef4 : push 0x7b ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ad0c7 : push 0xd1cfff5 ; adc al, 0x68 ; cmc ; jmp qword ptr [rdx]
0x00000000001ace9f : push 0xd1cfff5 ; cli ; cmc ; jmp qword ptr [rdx]
0x00000000001acc77 : push 0xd1cfff5 ; cwde ; cmc ; jmp qword ptr [rdx]
0x00000000001acfff : push 0xd1cfff5 ; frstor dword ptr [rdi + 0xfffffffffffffff5] ; jmp qword ptr [rdx]
0x00000000001acee7 : push 0xd1cfff5 ; lock cmc ; jmp qword ptr [rdx]
0x00000000001acdd7 : push 0xd1cfff5 ; loop 0x1ace45 ; cmc ; jmp qword ptr [rdx]
0x00000000001acd8f : push 0xd1cfff5 ; mul dword ptr [rdi + 0xfffffffffffffff5] ; jmp qword ptr [rdx]
0x00000000001acf6f : push 0xd1cfff5 ; out 0x67, eax ; cmc ; jmp qword ptr [rdx]
0x00000000001acc2f : push 0xd1cfff5 ; pop rcx ; cmc ; jmp qword ptr [rdx]
0x00000000001a5ce5 : push 1 ; add byte ptr [rax + 0x64], bl ; hlt ; jmp qword ptr [rcx]
0x000000000012832e : push 2 ; add rdi, 0x68 ; jmp rcx
0x000000000000e568 : push 3 ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000004e27e : push 5 ; add byte ptr [rax + 0xffffffffffffff83], cl ; clc ; dec dword ptr [rcx + 0xffffffffffffff89] ; ret -0x7bf1
0x000000000009e612 : push 5 ; add byte ptr [rax], al ; ret
0x0000000000187b67 : push qword ptr [rax + 0x1b] ; cld ; inc eax ; sbb al, -4 ; call qword ptr [rax]
0x0000000000187bbb : push qword ptr [rax + 0x22] ; cld ; inc eax ; and edi, esp ; call qword ptr [rax]
0x000000000018731f : push qword ptr [rax + 0x34] ; sti ; call qword ptr [rax]
0x0000000000187c07 : push qword ptr [rax + 0x40fffc5f] ; pop rdi ; cld ; call rsi
0x00000000001880f3 : push qword ptr [rax + 0x40fffc87] ; xchg esp, edi ; call rax
0x0000000000188803 : push qword ptr [rax + 0x40fffcab] ; stosd dword ptr es:[rdi], eax ; cld ; call rax
0x00000000001885eb : push qword ptr [rax + 0x40fffcae] ; scasb al, byte ptr es:[rdi] ; cld ; call rax
0x000000000018733f : push qword ptr [rax + 0x41] ; sti ; call qword ptr [rax]
0x0000000000022020 : push qword ptr [rax + 0x48] ; add esp, 8 ; ret
0x0000000000187357 : push qword ptr [rax + 0x4d] ; sti ; inc dword ptr [rax + 0x4f] ; sti ; jmp qword ptr [rax]
0x000000000018830b : push qword ptr [rax + 0x50fffc84] ; jp 0x18830f ; call qword ptr [rax]
0x0000000000187d7b : push qword ptr [rax + 0x6044fffc] ; cld ; call rsp
0x0000000000167347 : push qword ptr [rax + 0x6b] ; in al, dx ; dec dword ptr [rax + 0x6b] ; in al, dx ; jmp rax
0x000000000017914b : push qword ptr [rax + 0x6c] ; int1 ; dec eax ; xchg eax, esi ; int1 ; jmp rax
0x00000000001873af : push qword ptr [rax + 0x76] ; sti ; inc eax ; ja 0x1873b2 ; call qword ptr [rax]
0x0000000000178ed7 : push qword ptr [rax + 0xffffffffc0ffef52] ; push rdx ; out dx, eax ; call qword ptr [rax]
0x00000000001790f3 : push qword ptr [rax + 0xffffffffc0fff15d] ; pop rdi ; int1 ; call rax
0x00000000001790c7 : push qword ptr [rax + 0xffffffffe0fff120] ; or dh, cl ; jmp qword ptr [rax]
0x00000000001795bf : push qword ptr [rax + 0xffffffffe0fff267] ; call qword ptr [eax]
0x000000000017926f : push qword ptr [rax + 0xffffffffffffffa0] ; cld ; jmp rax
0x000000000017af33 : push qword ptr [rax + 0xffffffffffffffa4] ; cmc ; jmp qword ptr [rbx]
0x0000000000187823 : push qword ptr [rax + 0xffffffffffffffca] ; sti ; inc eax ; retf ; sti ; call qword ptr [rax]
0x000000000018774f : push qword ptr [rax + 0xffffffffffffffda] ; sti ; push qword ptr [rax] ; fdiv st(3), st(0) ; call qword ptr [rax]
0x000000000018799b : push qword ptr [rax + 0xffffffffffffffef] ; sti ; inc eax ; lock sti ; call qword ptr [rax]
0x00000000001879ef : push qword ptr [rax + 0xfffffffffffffff6] ; sti ; inc eax ; idiv ebx ; call qword ptr [rax]
0x0000000000187973 : push qword ptr [rax + 3] ; cld ; inc dword ptr [rax + 5] ; cld ; jmp qword ptr [rax]
0x0000000000189f9b : push qword ptr [rax + rbp*8 + 0xffffffff90940000] ; out dx, al ; jmp rsp
0x00000000000fb2ad : push qword ptr [rax + rcx + 0x5b] ; pop rbp ; ret
0x0000000000188267 : push qword ptr [rax + rcx*4 + 0xffffffff8844fffc] ; cld ; call rsp
0x000000000018f133 : push qword ptr [rax + rdi*8 + 0xffffffffd7340001] ; std ; jmp rsp
0x00000000000be00e : push qword ptr [rax + rsi + 0xffffffffffffff89] ; ret -0x1d7d
0x000000000018983b : push qword ptr [rax + rsi*4 + 0xffffffffe6340000] ; jmp 0x189843
0x0000000000187ad7 : push qword ptr [rax] ; cld ; call qword ptr [rax]
0x00000000001884d7 : push qword ptr [rax] ; cmp esp, 0xfc80a0ff ; jmp qword ptr [rax]
0x0000000000187753 : push qword ptr [rax] ; fdiv st(3), st(0) ; call qword ptr [rax]
0x0000000000167333 : push qword ptr [rax] ; insb byte ptr es:[rdi], dx ; in al, dx ; jmp qword ptr [rax]
0x000000000009d41f : push qword ptr [rax] ; leave ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000018773b : push qword ptr [rax] ; loopne 0x18773a ; call qword ptr [rax]
0x000000000017aedf : push qword ptr [rax] ; movsb byte ptr es:[rdi], byte ptr [rsi] ; cmc ; inc dword ptr [rax + 0xffffffffffffffa4] ; cmc ; jmp qword ptr [rbx]
0x000000000018800f : push qword ptr [rax] ; push rsp ; cld ; call rax
0x0000000000179ea3 : push qword ptr [rax] ; sal ebx, 1 ; jmp qword ptr [rsi]
0x00000000001872cf : push qword ptr [rax] ; sbb eax, 0x1e20fffb ; sti ; call qword ptr [rax]
0x0000000000187bab : push qword ptr [rax] ; sbb eax, 0x1e80fffc ; cld ; call rax
0x00000000001872bf : push qword ptr [rax] ; sbb ebx, edi ; inc dword ptr [rax] ; sbb bh, bl ; call rax
0x0000000000187337 : push qword ptr [rax] ; sti ; call rax
0x0000000000187a6f : push qword ptr [rax] ; sub edi, esp ; push rax ; sub al, -4 ; call rax
0x0000000000187317 : push qword ptr [rax] ; xor ebx, edi ; call rax
0x0000000000164ab8 : push qword ptr [rbp + 0x1a] ; xor eax, eax ; ret
0x000000000007ca51 : push qword ptr [rbp + 0xffffffffffffffe6] ; pop rbx ; ret
0x000000000011ce8b : push qword ptr [rbp + 0xffffffffffffffea] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x00000000001123e2 : push qword ptr [rbp + 0xffffffffffffffeb] ; pop rbx ; ret
0x000000000007764b : push qword ptr [rbp + 2] ; pop rbx ; ret
0x00000000000fd988 : push qword ptr [rbp + rax + 0xffffffffffffff83] ; ret -0x76ff
0x0000000000133c90 : push qword ptr [rbp + rcx + 0x48] ; add esp, 8 ; ret
0x0000000000189f1b : push qword ptr [rbp] ; add bh, dl ; mov esi, ebp ; jmp rsp
0x00000000000c1a55 : push qword ptr [rbx + 0x31] ; ret
0x00000000000cc238 : push qword ptr [rbx + 0x34] ; ret
0x0000000000036fbc : push qword ptr [rbx + 1] ; ret
0x00000000000ebc79 : push qword ptr [rbx + 3] ; mov eax, edx ; ret
0x00000000000471c6 : push qword ptr [rbx + 3] ; xor eax, eax ; ret
0x0000000000075cdc : push qword ptr [rbx + rax + 0xffffffffffffff83] ; and ebp, edi ; pop rbx ; ret
0x0000000000189b13 : push qword ptr [rbx + rax*8] ; add byte ptr [rax + rbx*2], al ; in eax, dx ; call rsp
0x0000000000187f57 : push qword ptr [rbx + rbx*2 + 0xfffffffffffffffc] ; jmp rsp
0x00000000000fb342 : push qword ptr [rbx + rcx + 0xfffffffffffffff3] ; ret
0x000000000017a803 : push qword ptr [rbx + rcx*8] ; hlt ; call rsp
0x000000000018e6f3 : push qword ptr [rbx + rdi*4 + 0x2df40002] ; cli ; jmp rsp
0x000000000018747b : push qword ptr [rcx + 0x41fffdaa] ; stosd dword ptr es:[rdi], eax ; std ; call rcx
0x0000000000187487 : push qword ptr [rcx + 0xffffffffffffffac] ; std ; call qword ptr [rcx]
0x000000000018ece3 : push qword ptr [rcx + 2] ; add ah, al ; ret -6
0x000000000002a336 : push qword ptr [rcx + rbx + 0xffffffffffffffe8] ; ret 0x10c8
0x00000000000ce5fa : push qword ptr [rcx] ; fild dword ptr [rbx + 0xffffffff950f02f8] ; ret
0x0000000000077ab4 : push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000065ade : push qword ptr [rcx] ; rol byte ptr [rbp + 0xffffffffc09f0fdb], 0x29 ; ret
0x00000000000725b6 : push qword ptr [rcx] ; ror byte ptr [rax + 0xffffffffffffff83], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret -0x2509
0x00000000000ceb13 : push qword ptr [rcx] ; shr cl, cl ; ret -7
0x00000000000ec29e : push qword ptr [rdi + 0x35] ; add rsp, 0x70 ; pop rbx ; ret
0x00000000000edd2e : push qword ptr [rdi + 0x66] ; add rsp, 0x38 ; ret
0x00000000000f29b0 : push qword ptr [rdi + 0x6f] ; add rsp, 0x58 ; pop rbx ; pop rbp ; ret
0x000000000003702b : push qword ptr [rdi + 1] ; ret
0x00000000000edbe2 : push qword ptr [rdi + 3] ; cdqe ; ret
0x00000000000faf82 : push qword ptr [rdi + 3] ; pop rbx ; pop rbp ; ret
0x000000000002f7d3 : push qword ptr [rdi + rax + 0xffffffffffffff89] ; fucompi st(0) ; ret
0x000000000018875f : push qword ptr [rdi + rbp*4 + 0xffffffffaf44fffc] ; cld ; call rsp
0x000000000018a313 : push qword ptr [rdi + rdi*8 + 0xffffffffc3540000] ; out dx, al ; jmp rsp
0x0000000000189f83 : push qword ptr [rdi] ; add byte ptr [rsi + rcx*4], al ; out dx, al ; jmp rsp
0x000000000018819f : push qword ptr [rdx + 0x42fffc89] ; mov esp, edi ; call rdx
0x0000000000188697 : push qword ptr [rdx + 0x42fffcb0] ; mov al, -4 ; call rdx
0x0000000000115503 : push qword ptr [rdx + 0xffffffffc2440f02] ; ret
0x00000000001888bf : push qword ptr [rdx + 0xffffffffffffffa2] ; cld ; jmp rdx
0x0000000000026436 : push qword ptr [rdx + rbx + 0xffffffffffffffe8] ; ret 0x1107
0x000000000006f823 : push qword ptr [rdx + rcx + 0x48] ; mov eax, edx ; pop rbx ; ret
0x000000000018ad4b : push qword ptr [rdx + rcx*2 + 0xffffffffe1140001] ; out dx, eax ; jmp rsp
0x000000000018d4a3 : push qword ptr [rdx + rsi + 0x12440002] ; clc ; call rsp
0x000000000018813b : push qword ptr [rsi + 0x46fffc86] ; xchg ah, bh ; call rsi
0x0000000000188633 : push qword ptr [rsi + 0x46fffcad] ; lodsd eax, dword ptr [rsi] ; cld ; call rsi
0x000000000018b23b : push qword ptr [rsi + 1] ; add byte ptr [rdi + rdx*4 + 0xfffffffffffffff1], dh ; call rsp
0x00000000000fd739 : push qword ptr [rsi + rax + 0xffffffffffffff83] ; ret 0x6601
0x0000000000075afd : push qword ptr [rsi + rsi*4 + 0xfffffffffffffff6] ; ret 0x7508
0x000000000018824f : push qword ptr [rsp + rax*4 + 0xfffffffffffffffc] ; jmp rsp
0x000000000017a7af : push qword ptr [rsp + rcx*8] ; hlt ; call rsp
0x000000000018def3 : push qword ptr [rsp + rdi*2 + 0x12340002] ; stc ; jmp rsp
0x00000000001283c6 : push r12 ; mov eax, 1 ; ret
0x000000000007bd9c : push r8 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x00000000001872a8 : push rax ; adc al, -5 ; jmp qword ptr [rax]
0x0000000000187294 : push rax ; adc bl, bh ; jmp qword ptr [rax]
0x0000000000080ef3 : push rax ; adc byte ptr [rax + 0x39], cl ; ret -0x7bf1
0x0000000000128d4d : push rax ; adc byte ptr [rax + 1], bh ; ret
0x000000000007d261 : push rax ; adc byte ptr [rbx + 0xffffffffd0291047], cl ; ret
0x000000000012092d : push rax ; adc dh, dh ; ret 0x7401
0x000000000007bd9d : push rax ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000059d6a : push rax ; add byte ptr ss:[rsp + rax*2 + 0xffffffffffffff8b], ah ; and cl, byte ptr [rax + 0xffffffffffffffc7] ; ret -2
0x00000000000742cc : push rax ; add dword ptr [rax + 0xffffffffffffff89], ecx ; push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x000000000000e0a0 : push rax ; add eax, 0 ; add byte ptr [rax], al ; ret
0x00000000000b2f60 : push rax ; add eax, dword ptr [rdi + rcx + 0x48] ; ret -0x6c46
0x00000000000f861a : push rax ; add ecx, dword ptr [rax + 0xffffffffffffff85] ; ror byte ptr [rax + 0xf], 0x48 ; ret -0x3eb8
0x00000000001872df : push rax ; and bl, bh ; jmp rax
0x00000000001347ef : push rax ; and byte ptr [rax + 0xffffffffffffff89], cl ; ret 0x3d83
0x00000000001201c2 : push rax ; and byte ptr [rdi + 1], bh ; call 0x12c460
0x000000000011205a : push rax ; call 0x11e270
0x0000000000027eaa : push rax ; call rax
0x000000000019e110 : push rax ; clc ; out dx, al ; jmp qword ptr [rsi]
0x000000000018808c : push rax ; cld ; call qword ptr [rax + 0xffffffffd0fffc37]
0x0000000000187a57 : push rax ; cld ; call rax
0x0000000000187b4b : push rax ; cld ; jmp qword ptr [rax + 0xffffffffe0fffc10]
0x00000000000e45fc : push rax ; cli ; dec dword ptr [rax + 0xffffffffffffff89] ; jmp 0x4cd0cf4e
0x0000000000188054 : push rax ; cmp ah, bh ; call rax
0x0000000000188098 : push rax ; cmp bh, ah ; call rax
0x000000000006f9fb : push rax ; cmp byte ptr [rax + 0xffffffffffffff83], cl ; clc ; dec dword ptr [rax + 0xffffffffffffff89] ; ret 0xf40
0x00000000000f16a1 : push rax ; cmp byte ptr [rsi + 0x41], ah ; mov dword ptr [rax + 0x21], esi ; ret
0x000000000018805c : push rax ; cmp edi, esp ; call rax
0x00000000001b7250 : push rax ; div bh ; call rdx
0x00000000001876d3 : push rax ; fdiv st(3), st(0) ; call rax
0x00000000001876b7 : push rax ; fdivp st(3) ; call rax
0x0000000000187738 : push rax ; fdivp st(3) ; push qword ptr [rax] ; loopne 0x18773a ; call qword ptr [rax]
0x00000000001abcf0 : push rax ; fdivrp st(5) ; call qword ptr [rax]
0x00000000001a5e00 : push rax ; hlt ; jmp qword ptr [rcx]
0x00000000001a5fb0 : push rax ; insb byte ptr es:[rdi], dx ; hlt ; jmp qword ptr [rcx]
0x00000000001873c8 : push rax ; jle 0x1873c6 ; jmp rax
0x00000000001795af : push rax ; jmp qword ptr [rax]
0x0000000000179597 : push rax ; jmp qword ptr gs:[rax]
0x0000000000188310 : push rax ; jp 0x18830f ; call qword ptr [rax]
0x000000000017919b : push rax ; loop 0x179190 ; inc dword ptr [rax] ; jrcxz 0x179194 ; call qword ptr [rax]
0x00000000001877a0 : push rax ; loope 0x18779e ; jmp qword ptr [rax]
0x00000000001880dc : push rax ; mov bh, ah ; jmp rax
0x00000000001885d4 : push rax ; mov cl, -4 ; jmp rax
0x00000000001a3a50 : push rax ; mov dh, dl ; call qword ptr [rdi]
0x000000000002572b : push rax ; mov dword ptr [rdx + 0x54], eax ; ret
0x0000000000028b21 : push rax ; mov dword ptr [rsp + 8], eax ; call r12
0x0000000000029537 : push rax ; mov dword ptr [rsp + 8], eax ; call r15
0x00000000001792b0 : push rax ; mov edi, 0xc150fffd ; std ; call qword ptr [rax + 0xffffffffffffffc3]
0x000000000019d570 : push rax ; mov edi, esp ; call qword ptr [rdx]
0x0000000000128bc6 : push rax ; mov qword ptr [rsi + 0x10], rax ; ret
0x000000000002a4df : push rax ; mov qword ptr [rsp], rax ; call qword ptr [rbx]
0x0000000000107056 : push rax ; mov rsi, rdx ; call rax
0x000000000018785b : push rax ; or ah, bh ; call rax
0x0000000000128c2d : push rax ; or al, -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000124835 : push rax ; or byte ptr [rax + 1], bh ; ret
0x0000000000021871 : push rax ; or byte ptr [rax], al ; add bl, ch ; or ecx, dword ptr [rax + 0xffffffffffffffff] ; ret -0x6ac7
0x000000000012e18c : push rax ; or byte ptr [rbp + 0xffffffffebbc75c0], al ; ret 0x1f0f
0x000000000004e800 : push rax ; or byte ptr [rcx + 0xffffffffffffff89], cl ; push rdi ; or bl, ch ; ret -0x7cb8
0x000000000004ce65 : push rax ; or byte ptr [rcx + 0xffffffffffffff89], cl ; push rdi ; or cl, ch ; jmp rcx
0x0000000000080b8a : push rax ; or dh, dh ; ret 0x7404
0x0000000000080ba6 : push rax ; or dh, dh ; ret 0xf04
0x00000000001384dc : push rax ; or dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000018717e : push rax ; pop r9 ; rep clc ; ret 0x6e1f
0x0000000000187ff0 : push rax ; pop rax ; cld ; call rax
0x0000000000187fe8 : push rax ; pop rcx ; cld ; call rax
0x0000000000187e08 : push rax ; pop rdi ; cld ; jmp rax
0x0000000000187fe0 : push rax ; pop rdx ; cld ; call rax
0x0000000000179637 : push rax ; push -0xe ; call qword ptr [rax]
0x0000000000187ff8 : push rax ; push rdi ; cld ; call rax
0x000000000000af48 : push rax ; ret
0x000000000013463c : push rax ; ret 0x28
0x00000000000b5dc1 : push rax ; ror byte ptr [rax + 0xffffffffffffffba], 1 ; ret
0x00000000001ab490 : push rax ; sal ch, cl ; jmp qword ptr [rsi]
0x00000000001792b4 : push rax ; sar ebp, -1 ; push rax ; ret
0x000000000007d256 : push rax ; sbb byte ptr [rbx + 0xffffffffd0291047], cl ; ret
0x0000000000075bfa : push rax ; sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x0000000000103231 : push rax ; sbb dh, dh ; ret 0x7504
0x00000000001887ec : push rax ; scasb al, byte ptr es:[rdi] ; cld ; jmp rax
0x0000000000108655 : push rax ; shr ax, 0xe ; and eax, 1 ; ret
0x00000000001a6860 : push rax ; stosb byte ptr es:[rdi], al ; hlt ; call qword ptr [rbx]
0x00000000001a8b40 : push rax ; sub al, -0xb ; jmp qword ptr [rcx]
0x0000000000187a73 : push rax ; sub al, -4 ; call rax
0x0000000000187ad4 : push rax ; sub al, -4 ; push qword ptr [rax] ; cld ; call qword ptr [rax]
0x0000000000187af0 : push rax ; sub bh, ah ; call qword ptr [rax]
0x0000000000187b38 : push rax ; sub eax, 0x2f30fffc ; cld ; jmp qword ptr [rax]
0x0000000000187a50 : push rax ; sub edi, esp ; call qword ptr [rax]
0x00000000001ab170 : push rax ; xchg eax, edi ; cmc ; call rsp
0x000000000017916c : push rax ; xchg eax, edi ; int1 ; jmp qword ptr [rax]
0x0000000000179157 : push rax ; xchg eax, esi ; int1 ; dec dword ptr [rax] ; xchg eax, edi ; int1 ; jmp qword ptr [rax]
0x00000000000f5e1c : push rax ; xchg eax, esi ; repne dec dword ptr [rcx + 0xffffffffffffff8b] ; call rbx
0x00000000001882f4 : push rax ; xchg esp, edi ; jmp rax
0x000000000000ec80 : push rax ; xlatb ; adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x0000000000187a3b : push rax ; xor ah, bh ; call rax
0x000000000007ca4d : push rax ; xor byte ptr [rbx + 0xffffffffe675fff8], al ; pop rbx ; ret
0x00000000000e4145 : push rbp ; adc byte ptr [rax + 0x63], cl ; ret
0x000000000012d13d : push rbp ; adc byte ptr [rbx + rcx*4 + 0x24], cl ; ret -0x7ab3
0x0000000000165186 : push rbp ; adc byte ptr [rcx + 0xffffffffffffff8b], cl ; sbb byte ptr [r8 + 0xffffffffffffff83], r9b ; ret
0x000000000012d295 : push rbp ; adc byte ptr [rcx + rcx*4 + 0x24], cl ; ret -0x7cb8
0x00000000000d8661 : push rbp ; add al, -0x73 ; add dword ptr [r8 + 0xffffffffffffff83], ecx ; ret
0x00000000000e4e53 : push rbp ; add al, 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x000000000012455d : push rbp ; add byte ptr [rbx + 0x634801ea], al ; ret -0x2d7b
0x0000000000028df8 : push rbp ; add byte ptr [rcx], dh ; ror byte ptr [rax + 0x39], cl ; ret
0x0000000000187ec9 : push rbp ; cld ; call rdx
0x0000000000188045 : push rbp ; cld ; jmp qword ptr [rax]
0x000000000018e8c9 : push rbp ; cli ; call rsp
0x0000000000001cb1 : push rbp ; je 0x1cdc ; ret
0x00000000001a192c : push rbp ; jne 0x1a1920 ; jmp qword ptr [rdx]
0x0000000000068f7a : push rbp ; mov byte ptr [rdi], cl ; xchg dword ptr [rbx + 0xffffffff89000035], esp ; ret 0x348
0x00000000001082c9 : push rbp ; nop ; mov rdx, r14 ; call rax
0x000000000013cf68 : push rbp ; or al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x0000000000107f51 : push rbp ; or byte ptr [rax + 0xffffffffffffff89], -0x26 ; call rax
0x0000000000081f38 : push rbp ; or dh, dh ; ret 0x7502
0x000000000012f6d9 : push rbp ; push rbx ; xor ebx, ebx ; call 0x12b970
0x00000000001055b2 : push rbp ; sbb byte ptr [rcx + 0xffffffffffffff8b], al ; or r14b, r14b ; ret 0x7508
0x00000000000025be : push rbp ; sbb esi, dword ptr [rdx] ; sahf ; jl 0x2552 ; loop 0x259d ; ret 0x23cb
0x00000000000fd497 : push rbp ; sub al, 0 ; add word ptr [rdx + rax*2], 1 ; ret
0x0000000000105835 : push rbp ; sub byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x000000000010b830 : push rbp ; xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x00000000000f48e7 : push rbp ; xor edi, ecx ; inc dword ptr [rbp + 0xffffffff831174c0] ; ret
0x000000000008ca5a : push rbp ; xor rax, rax ; ret
0x00000000000d57a8 : push rbx ; adc byte ptr [rax + 0x39], cl ; ret 0x574
0x00000000000004b5 : push rbx ; add al, 4 ; ret 0x6080
0x0000000000033a83 : push rbx ; add dword ptr [rax + 0xffffffffffffff83], ecx ; ret
0x00000000000f8b81 : push rbx ; add dword ptr [rax + 0xffffffffffffff8d], ecx ; add cl, byte ptr [r8 + 0x39] ; ret 0xf48
0x000000000010414c : push rbx ; and byte ptr [rax + 0x2b], cl ; xor r9b, bpl ; ret
0x000000000012f6a0 : push rbx ; call 0x12b940
0x0000000000002043 : push rbx ; cmp byte ptr [rdi + 0xffffffffe652180d], dl ; ret
0x0000000000109dc2 : push rbx ; dec dword ptr [rax + 0xffffffffffffff81] ; ret
0x0000000000003c84 : push rbx ; fs ; or byte ptr [rbx + 0x4e], ch ; ret 0x6bba
0x0000000000075ac2 : push rbx ; je 0x75b20 ; pop rbp ; pop r12 ; ret
0x00000000000c338d : push rbx ; je 0xc3358 ; mov eax, 1 ; ret
0x00000000000a412c : push rbx ; lea rax, qword ptr [rdi + 0xfffffffffffffff0] ; ret
0x000000000009ec72 : push rbx ; movq qword ptr [rdi + 0x30], mm7 ; ret
0x000000000006d9d5 : push rbx ; or al, -0xa ; ret 0x7404
0x000000000006e112 : push rbx ; or al, -0xa ; ret 0xf04
0x00000000000f60e2 : push rbx ; or byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x000000000007bfbe : push rbx ; or byte ptr [rdi], cl ; mov dh, 0 ; pop rbx ; ret
0x0000000000081109 : push rbx ; out 0x33, al ; add byte ptr [rax + 0x39], cl ; ror dword ptr [rdi], cl ; xchg eax, ebp ; ret -0x7cb8
0x0000000000178e5d : push rbx ; out dx, eax ; call qword ptr [rax]
0x0000000000178e49 : push rbx ; out dx, eax ; dec dword ptr [rcx + rdx*2] ; out dx, eax ; call qword ptr [rax]
0x0000000000178e59 : push rbx ; out dx, eax ; inc dword ptr [rax + 0x53] ; out dx, eax ; call qword ptr [rax]
0x0000000000178efd : push rbx ; out dx, eax ; inc dword ptr [rax + 0x53] ; out dx, eax ; jmp rax
0x0000000000178f01 : push rbx ; out dx, eax ; jmp rax
0x0000000000037c9c : push rbx ; ret
0x0000000000187365 : push rbx ; sti ; jmp rax
0x000000000017679c : push rbx ; xchg eax, edx ; jae 0x176773 ; push rsi ; pop rdx ; je 0x176768 ; ret -0x5304
0x00000000000d836a : push rbx ; xor al, 0x39 ; ror byte ptr [rdi], 1 ; ret 0x538b
0x000000000012f6da : push rbx ; xor ebx, ebx ; call 0x12b970
0x000000000012481d : push rcx ; adc byte ptr [rax + 1], bh ; ret
0x000000000018d8f5 : push rcx ; add al, byte ptr [rax] ; adc al, 0x5e ; clc ; jmp rsp
0x00000000001b43c5 : push rcx ; add al, byte ptr [rax] ; call -0x27e4c4ce
0x000000000008c30d : push rcx ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16ff
0x0000000000097932 : push rcx ; add esi, eax ; add dword ptr [rax], eax ; mov qword ptr [rdi], rdx ; ret
0x0000000000175a25 : push rcx ; call qword ptr [rsi]
0x00000000001aab64 : push rcx ; int1 ; hlt ; jmp qword ptr [rdx]
0x0000000000001b28 : push rcx ; jns 0x1b32 ; ret
0x00000000001aa08c : push rcx ; out -0xc, eax ; jmp qword ptr [rdx]
0x0000000000178e4d : push rcx ; out dx, eax ; call qword ptr [rax]
0x00000000000e45fb : push rcx ; push rax ; cli ; dec dword ptr [rax + 0xffffffffffffff89] ; jmp 0x4cd0cf4e
0x0000000000108c93 : push rcx ; ret
0x00000000000bed8b : push rcx ; sbb esi, dword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x76b8
0x00000000001b1191 : push rcx ; sti ; call rsi
0x0000000000187361 : push rcx ; sti ; inc dword ptr [rax] ; push rbx ; sti ; jmp rax
0x00000000000a1b32 : push rdi ; adc al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a00c2 : push rdi ; adc al, 0x48 ; lea eax, dword ptr [rdi + 0x15] ; ret
0x00000000000c5658 : push rdi ; adc byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x00000000000a1c90 : push rdi ; adc byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a4306 : push rdi ; adc byte ptr [rbp + rcx*4 + 0x4e], cl ; adc byte ptr [rcx + 0x39], al ; ret
0x00000000000a1968 : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a197a : push rdi ; add al, 0x30 ; in eax, dx ; mov byte ptr [rdi + 6], ch ; ret
0x0000000000097614 : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 5] ; ret
0x000000000009ff0a : push rdi ; add al, 0x48 ; lea eax, dword ptr [rdi + 6] ; ret
0x000000000014dc69 : push rdi ; add al, 0x48 ; mov dword ptr [rdi], ecx ; ret
0x0000000000097584 : push rdi ; add al, 0x48 ; mov eax, edi ; mov byte ptr [rdi + 6], 0 ; ret
0x0000000000097574 : push rdi ; add al, 0x48 ; mov eax, edi ; ret
0x000000000002f8fc : push rdi ; add al, 0x72 ; or bl, dh ; ret
0x000000000018d9d5 : push rdi ; add al, byte ptr [rax] ; ret -0x793
0x00000000000a193a : push rdi ; add dh, byte ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 3], ch ; ret
0x00000000001a49cd : push rdi ; add dword ptr [rax], eax ; ret -0x19
0x000000000009f18c : push rdi ; add eax, 0xc478d48 ; ret
0x000000000009ffcc : push rdi ; add eax, 0xd478d48 ; ret
0x00000000000a1998 : push rdi ; add esi, dword ptr [rax] ; in eax, dx ; mov byte ptr [rdi + 7], ch ; ret
0x00000000001b74f1 : push rdi ; call qword ptr [rcx]
0x00000000001450b8 : push rdi ; clc ; ret
0x0000000000187ff9 : push rdi ; cld ; call rax
0x0000000000187f79 : push rdi ; cld ; jmp rsp
0x0000000000145230 : push rdi ; cld ; ret
0x0000000000145d57 : push rdi ; cli ; mov dword ptr [rdi + 0xfffffffffffffffc], ecx ; ret
0x000000000014d549 : push rdi ; cmc ; mov dword ptr [rdi + 0xfffffffffffffffc], ecx ; ret
0x0000000000128c45 : push rdi ; cmp byte ptr [rax + 1], bh ; ret
0x00000000001a0c64 : push rdi ; f2xm1 ; jmp qword ptr [rdx]
0x00000000000ae258 : push rdi ; fild word ptr [rcx + 0x29] ; ret
0x00000000000366d9 : push rdi ; fisttp dword ptr [rdi] ; ret
0x0000000000086a0a : push rdi ; fmul dword ptr [rax + 0x39] ; ret 0x2f74
0x000000000014d4c9 : push rdi ; hlt ; mov dword ptr [rdi + 0xfffffffffffffffc], ecx ; ret
0x000000000014d31a : push rdi ; int1 ; mov qword ptr [rdi + 0xfffffffffffffff8], rcx ; ret
0x0000000000194181 : push rdi ; jmp 0x194183
0x0000000000194199 : push rdi ; jmp 0x19419b
0x00000000001adc44 : push rdi ; js 0x1adc3c ; jmp qword ptr [rdx]
0x00000000001183f6 : push rdi ; or al, 0x48 ; mov dword ptr [rsi], edi ; ret
0x000000000004e804 : push rdi ; or bl, ch ; ret -0x7cb8
0x0000000000035c1f : push rdi ; or byte ptr [rax + 0xf], cl ; scasd eax, dword ptr es:[rdi] ; ret -0x74b8
0x00000000000a19dc : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a1a1a : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a19ba : push rdi ; or byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 9], ch ; ret
0x0000000000039d1a : push rdi ; or byte ptr [rcx + 0x29], cl ; ret -0x76b4
0x0000000000038591 : push rdi ; or byte ptr [rcx + 0xffffffffd01148d8], cl ; pop rbp ; pop rbx ; ret
0x000000000003858a : push rdi ; or byte ptr [rcx + 1], cl ; ret -0x76b4
0x0000000000131f72 : push rdi ; or byte ptr [rcx + rcx*4 + 0x2c], cl ; ret -0x74bf
0x00000000000742d0 : push rdi ; or byte ptr [rdi], cl ; mov dh, 0 ; ret
0x000000000004ce69 : push rdi ; or cl, ch ; jmp rcx
0x000000000009f370 : push rdi ; or eax, 0x1c478d48 ; ret
0x00000000000a01c0 : push rdi ; or eax, 0x1d478d48 ; ret
0x0000000000072155 : push rdi ; pushfq ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x72118
0x000000000014d43a : push rdi ; rep mov qword ptr [rdi + 0xfffffffffffffff8], rcx ; ret
0x000000000014d3aa : push rdi ; repne mov qword ptr [rdi + 0xfffffffffffffff8], rcx ; ret
0x00000000000c57e7 : push rdi ; ret
0x000000000003d7aa : push rdi ; ret -0x11
0x00000000000d53fe : push rdi ; ret 0
0x000000000016204e : push rdi ; ret 0xff3
0x000000000012efb5 : push rdi ; sbb bl, dh ; ret
0x0000000000103439 : push rdi ; sbb byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x00000000000f6242 : push rdi ; sbb byte ptr [rcx + 0xfffffffffffffff6], al ; ret 0x7401
0x00000000000356bc : push rdi ; sbb byte ptr [rdi], cl ; scasd eax, dword ptr es:[rdi] ; ret -0x2dcf
0x0000000000145f57 : push rdi ; stc ; mov dword ptr [rdi + 0xfffffffffffffffc], ecx ; ret
0x00000000001903e1 : push rdi ; std ; jmp qword ptr [rax]
0x000000000014577a : push rdi ; std ; mov word ptr [rdi + 0xfffffffffffffffe], cx ; ret
0x0000000000145b57 : push rdi ; sti ; mov dword ptr [rdi + 0xfffffffffffffffc], ecx ; ret
0x00000000000d0bc6 : push rdi ; sub byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x0000000000128c8d : push rdi ; sub byte ptr [rax + 1], bh ; ret
0x00000000000f7a5c : push rdi ; sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a1c70 : push rdi ; wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x000000000008b47b : push rdi ; xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x00000000000e4163 : push rdx ; adc byte ptr [rax + 0x39], cl ; ret -0x6cf1
0x0000000000118b5e : push rdx ; add dword ptr [rcx + 0xffffffffffffff83], ecx ; ret 0x4102
0x0000000000187c9c : push rdx ; cld ; jmp rdx
0x00000000001a764c : push rdx ; hlt ; jmp qword ptr [rdx]
0x00000000000b43f2 : push rdx ; idiv bh ; dec dword ptr [rcx + 0x29] ; ret
0x00000000001883a8 : push rdx ; jg 0x1883a7 ; call rdx
0x00000000001883b8 : push rdx ; jge 0x1883b7 ; call rdx
0x00000000001883b0 : push rdx ; jle 0x1883af ; call rdx
0x00000000001886c0 : push rdx ; lodsb al, byte ptr [rsi] ; cld ; jmp rdx
0x0000000000187434 : push rdx ; movsb byte ptr es:[rdi], byte ptr [rsi] ; std ; jmp qword ptr [rdx]
0x000000000012b82a : push rdx ; nop ; sub dword ptr [rax], eax ; mov qword ptr fs:[rax], rdx ; ret
0x0000000000178edd : push rdx ; out dx, eax ; call qword ptr [rax]
0x0000000000178ed9 : push rdx ; out dx, eax ; inc eax ; push rdx ; out dx, eax ; call qword ptr [rax]
0x0000000000191436 : push rdx ; ret
0x00000000001a0b44 : push rdx ; sal al, cl ; jmp qword ptr [rdx]
0x000000000018ef89 : push rdx ; sti ; call rsp
0x00000000001881c8 : push rdx ; test edi, esp ; jmp rdx
0x0000000000001b0d : push rdx ; test esi, dword ptr [rbx + 0x59e7c8ee] ; pop rbx ; ret 0x2a63
0x0000000000160c94 : push rsi ; adc byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret -0x7cf1
0x000000000007523d : push rsi ; add al, 0x48 ; mov dword ptr [rax], edx ; mov eax, dword ptr [rsi] ; pop rbx ; ret
0x000000000014df01 : push rsi ; add cl, byte ptr [rbx + 0x257890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000014df71 : push rsi ; add dword ptr [rbx + 0x157890e], ecx ; mov dword ptr [rdi], ecx ; ret
0x000000000009db45 : push rsi ; add eax, 0x480f8948 ; mov dword ptr [rdi + 5], edx ; ret
0x000000000014de91 : push rsi ; add ecx, dword ptr [rbx + 0x357890e] ; mov dword ptr [rdi], ecx ; ret
0x000000000009dae3 : push rsi ; add ecx, dword ptr [rcx + 0x357890f] ; ret
0x0000000000160ca9 : push rsi ; and byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret -0x7cf1
0x00000000001451e2 : push rsi ; clc ; mov qword ptr [rdi + 0xfffffffffffffff8], rdx ; ret
0x0000000000187f81 : push rsi ; cld ; call rsp
0x0000000000187e41 : push rsi ; cld ; jmp qword ptr [rax]
0x0000000000145951 : push rsi ; cld ; mov dword ptr [rdi + 0xfffffffffffffffc], edx ; ret
0x0000000000145945 : push rsi ; cld ; mov qword ptr [rdi + 0xfffffffffffffff4], rcx ; mov dword ptr [rdi + 0xfffffffffffffffc], edx ; ret
0x0000000000145765 : push rsi ; cld ; mov qword ptr [rdi + 0xfffffffffffffff5], rcx ; mov dword ptr [rdi + 0xfffffffffffffffc], edx ; ret
0x0000000000145585 : push rsi ; cld ; mov qword ptr [rdi + 0xfffffffffffffff6], rcx ; mov dword ptr [rdi + 0xfffffffffffffffc], edx ; ret
0x00000000001453a5 : push rsi ; cld ; mov qword ptr [rdi + 0xfffffffffffffff7], rcx ; mov dword ptr [rdi + 0xfffffffffffffffc], edx ; ret
0x0000000000177340 : push rsi ; cli ; push 0x6e ; ja 0x1772c9 ; ret 0x48f
0x00000000001645f6 : push rsi ; cmc ; sub eax, edx ; ret
0x000000000019c1fc : push rsi ; cmp ch, dh ; jmp qword ptr [rdx]
0x000000000019904c : push rsi ; cmpsb byte ptr [rsi], byte ptr es:[rdi] ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001645e6 : push rsi ; hlt ; sub eax, edx ; ret
0x0000000000189af1 : push rsi ; in eax, dx ; jmp qword ptr [rbx + rax*8]
0x0000000000189ae1 : push rsi ; in eax, dx ; push rsp ; ret 0
0x00000000001645b6 : push rsi ; int1 ; sub eax, edx ; ret
0x0000000000107032 : push rsi ; je 0x107040 ; mov eax, 7 ; ret
0x00000000000e517b : push rsi ; js 0xe51c6 ; mov dword ptr [rdi + 0x80], edx ; ret
0x00000000000e5ad8 : push rsi ; js 0xe5b23 ; mov dword ptr [rdi + 0x100], edx ; ret
0x00000000001645a6 : push rsi ; lock sub eax, edx ; ret
0x0000000000123fb6 : push rsi ; mov ah, -0x11 ; dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x76b7
0x000000000018861c : push rsi ; mov al, -4 ; jmp rsi
0x0000000000188124 : push rsi ; mov esp, edi ; jmp rsi
0x0000000000050320 : push rsi ; or al, -0x7b ; sal byte ptr [rbp + 5], -0xa ; ret 0x7450
0x00000000000929cd : push rsi ; or byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4802
0x000000000005ba2d : push rsi ; or byte ptr [rdi + rcx + 0xffffffffffffffb6], al ; cmp byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x0000000000055235 : push rsi ; or byte ptr [rdi + rcx + 0xffffffffffffffb6], al ; cmp byte ptr [rcx + 0xffffffffffffff83], cl ; ret
0x00000000000b12d3 : push rsi ; or eax, 0x3d8d4800 ; ret
0x00000000001767a0 : push rsi ; pop rdx ; je 0x176768 ; ret -0x5304
0x00000000001645d6 : push rsi ; rep sub eax, edx ; ret
0x00000000001645c6 : push rsi ; repne sub eax, edx ; ret
0x00000000000364bf : push rsi ; ret
0x0000000000075926 : push rsi ; ret -1
0x00000000000dea36 : push rsi ; ret 0x7408
0x00000000000dea45 : push rsi ; ret 0x7420
0x0000000000098d0a : push rsi ; ret 0x7518
0x0000000000179edc : push rsi ; sal bl, 1 ; jmp qword ptr [rsi]
0x00000000001304fa : push rsi ; sbb byte ptr [rcx + rcx*4 + 0x24], cl ; ret -0x74bf
0x000000000010e2ae : push rsi ; sub eax, dword ptr [rax] ; add ecx, ebp ; ret
0x00000000001a21ac : push rsi ; xchg cl, dh ; jmp qword ptr [rdx]
0x00000000000f0997 : push rsi ; xor ax, ax ; ret
0x0000000000160cbe : push rsi ; xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret -0x7cf1
0x0000000000193864 : push rsp ; adc al, -0x15 ; jmp qword ptr [rdx]
0x00000000001b0344 : push rsp ; adc dword ptr [rdx], eax ; add al, ch ; test dh, dh ; jmp rdx
0x00000000000504f2 : push rsp ; add cl, byte ptr es:[rax + 1] ; ret -0x7cb8
0x00000000001a7344 : push rsp ; add dword ptr [rcx], 0xf4ca2800 ; jmp qword ptr [rcx]
0x00000000000e8311 : push rsp ; add eax, 0xbe0f4101 ; ret -0x177d
0x000000000018a3bc : push rsp ; add eax, dword ptr [rcx] ; add byte ptr [rdi + rdx*8 + 0xffffffffffffffee], ah ; call rsp
0x000000000018f1d3 : push rsp ; add qword ptr [r8], r8 ; and al, -0x1f ; std ; jmp rsp
0x0000000000036980 : push rsp ; and al, -0x10 ; mov dword ptr [rdi], eax ; fld xword ptr [rsp + 0xffffffffffffffe8] ; ret
0x0000000000039eaa : push rsp ; and al, -4 ; movss xmm0, dword ptr [rsp + 0xfffffffffffffffc] ; ret
0x0000000000039ef0 : push rsp ; and al, -8 ; movsd xmm0, qword ptr [rsp + 0xfffffffffffffff8] ; ret
0x0000000000107ecd : push rsp ; and al, 0x18 ; mov dword ptr [rbp + 0xffffffffffffff80], edx ; mov rdx, r13 ; call rax
0x0000000000107f4d : push rsp ; and al, 0x18 ; mov dword ptr [rbp + 0xffffffffffffff80], edx ; mov rdx, rbx ; call rax
0x0000000000102de5 : push rsp ; and al, 0x18 ; mov edi, 0x2000004 ; call rax
0x0000000000102ce8 : push rsp ; and al, 0x18 ; mov rsi, qword ptr [rsp + 8] ; call rax
0x00000000000be892 : push rsp ; and al, 0x28 ; call rax
0x00000000000814de : push rsp ; and al, 0x30 ; mov dword ptr [rsp + 0x28], r11d ; call rax
0x00000000000f2ff6 : push rsp ; and al, 0x38 ; mov eax, edx ; add rsp, 0x48 ; ret
0x00000000000e4fc5 : push rsp ; and al, 4 ; jmp 0xe4f8c
0x000000000018d8b9 : push rsp ; clc ; call rsp
0x0000000000187e91 : push rsp ; cld ; call qword ptr [rdx]
0x0000000000188011 : push rsp ; cld ; call rax
0x0000000000187fd1 : push rsp ; cld ; jmp rax
0x0000000000187e8d : push rsp ; cld ; ljmp ptr [rsp + rdx*2 + 0xfffffffffffffffc] ; call qword ptr [rdx]
0x000000000018800d : push rsp ; cld ; push qword ptr [rax] ; push rsp ; cld ; call rax
0x00000000000afa18 : push rsp ; cli ; idiv bh ; nop dword ptr [rax] ; pop rbx ; ret
0x00000000001a2b44 : push rsp ; cmp dword ptr [rcx], eax ; add byte ptr [rax + 0xffffffffffffffea], cl ; int1 ; jmp qword ptr [rcx]
0x0000000000188960 : push rsp ; cmpsb byte ptr [rsi], byte ptr es:[rdi] ; cld ; call rsp
0x000000000018f160 : push rsp ; fdivr st(5) ; jmp rsp
0x00000000001a7044 : push rsp ; jle 0x1a7048 ; add byte ptr [rax + 0xffffffffffffffbe], bh ; hlt ; jmp qword ptr [rcx]
0x00000000000c3156 : push rsp ; jne 0xc30db ; mov eax, 0x7d00 ; ret
0x0000000000097c5b : push rsp ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000018a0b3 : push rsp ; lock add byte ptr [rax], al ; hlt ; lahf ; out dx, al ; jmp rsp
0x00000000001283c7 : push rsp ; mov eax, 1 ; ret
0x0000000000188970 : push rsp ; movsb byte ptr es:[rdi], byte ptr [rsi] ; cld ; call rsp
0x0000000000188968 : push rsp ; movsd dword ptr es:[rdi], dword ptr [rsi] ; cld ; call rsp
0x00000000001049ab : push rsp ; nop dword ptr [rax] ; sub eax, r8d ; ret
0x000000000018bf80 : push rsp ; outsb dx, byte ptr [rsi] ; cmc ; inc esp ; ret
0x0000000000187f53 : push rsp ; pop rbx ; cld ; push qword ptr [rbx + rbx*2 + 0xfffffffffffffffc] ; jmp rsp
0x0000000000198e44 : push rsp ; pushfq ; add byte ptr [rax], al ; sub dl, dl ; in eax, dx ; call rcx
0x000000000002572e : push rsp ; ret
0x0000000000189ae3 : push rsp ; ret 0
0x00000000001ab444 : push rsp ; ret 1
0x000000000018e814 : push rsp ; ret 2
0x000000000018b350 : push rsp ; sal cl, -1 ; lodsb al, byte ptr [rsi] ; insb byte ptr es:[rdi], dx ; add dword ptr [rax], eax ; ret -0xf
0x00000000001ac844 : push rsp ; salc ; add dword ptr [rax], eax ; call 0x111abe33
0x0000000000188788 : push rsp ; stosd dword ptr es:[rdi], eax ; cld ; jmp rsp
0x000000000018e6d8 : push rsp ; sub edx, edi ; call rsp
0x00000000001a8844 : push rsp ; xchg eax, esi ; add dword ptr [rax], eax ; mov byte ptr [rax], ch ; cmc ; jmp qword ptr [rcx]
0x000000000013a400 : pushfq ; adc eax, 0x83480000 ; ret -0x16f0
0x000000000018d3dc : pushfq ; add al, byte ptr cs:[rax] ; mov ah, 4 ; clc ; jmp rsp
0x0000000000072156 : pushfq ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x72118
0x0000000000198e45 : pushfq ; add byte ptr [rax], al ; sub dl, dl ; in eax, dx ; call rcx
0x00000000001a8e55 : pushfq ; add dword ptr [rax], eax ; js 0x1a8e8a ; cmc ; jmp qword ptr [rcx]
0x00000000001a8e25 : pushfq ; add dword ptr [rax], eax ; xor bpl, sil ; jmp qword ptr [rcx]
0x00000000001a8e0d : pushfq ; add dword ptr [rax], eax ; xor byte ptr [rax], dh ; cmc ; jmp qword ptr [rcx]
0x00000000001a308c : pushfq ; add dword ptr ds:[rax], eax ; and ah, bh ; int1 ; jmp qword ptr [rcx]
0x000000000004574c : pushfq ; and al, -0x70 ; add byte ptr [rax], al ; add byte ptr [rcx + 0xffffffffffffff83], al ; ret
0x000000000018e434 : pushfq ; cmpsd dword ptr [rsi], dword ptr es:[rdi] ; add al, byte ptr [rax] ; add al, -0x35 ; stc ; call rsp
0x000000000018c04c : pushfq ; enter 1, -0x5c ; ret -0xb
0x000000000018c38c : pushfq ; fadd dword ptr [rcx] ; add byte ptr [rsp + rdx*2 + 0xfffffffffffffff6], dh ; jmp rsp
0x000000000019cd8c : pushfq ; fild dword ptr [rax] ; add al, dh ; insb byte ptr es:[rdi], dx ; out dx, al ; call qword ptr [rsi]
0x00000000001b5b8c : pushfq ; imul eax, dword ptr [rdx], 0xf79a4000 ; call qword ptr [rdx]
0x000000000018a30c : pushfq ; inc dword ptr [rax] ; add ah, al ; ret -0x12
0x000000000018e8c4 : pushfq ; mov dword ptr [rdx], 0xfa55e400 ; call rsp
0x000000000007943c : pushfq ; mov eax, 0xffffffff ; pop rbx ; ret
0x00000000001a2a04 : pushfq ; nop ; int1 ; jmp qword ptr [rdx]
0x000000000013b100 : pushfq ; or byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x00000000001390b4 : pushfq ; or eax, 0x83480000 ; ret -0x14f0
0x000000000019eeb1 : pushfq ; out dx, eax ; call qword ptr [rdi]
0x0000000000197077 : pushfq ; ret
0x00000000001ab48c : pushfq ; ret 1
0x000000000018e82c : pushfq ; ret 2
0x000000000018ba5c : pushfq ; sahf ; add dword ptr [rax], eax ; mov r14b, bl ; jmp rsp
0x000000000019821c : pushfq ; xchg ch, ch ; jmp qword ptr [rdx]
0x00000000001a898c : pushfq ; xchg eax, edi ; add dword ptr [rax], eax ; nop ; sub dh, ch ; jmp qword ptr [rcx]
0x00000000000287fc : rcl ah ; adc eax, 0x358d4800 ; ret 0x154b
0x00000000001ab730 : rcl bl ; cmc ; jmp qword ptr [rsi]
0x00000000000b7e2c : rcl byte ptr [rax + 0x29000001], cl ; ret
0x00000000000b3161 : rcl byte ptr [rax + 0x39000001], cl ; ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x000000000019ace0 : rcl byte ptr [rax] ; out dx, al ; jmp qword ptr [rcx]
0x0000000000179498 : rcl byte ptr [rbp + 0xfffffffffffffff2] ; jmp rax
0x0000000000179494 : rcl byte ptr [rbp + 0xfffffffffffffff2], -1 ; rcl byte ptr [rbp + 0xfffffffffffffff2] ; jmp rax
0x0000000000179424 : rcl byte ptr [rbx + 0xfffffffffffffff2] ; jmp rax
0x0000000000179420 : rcl byte ptr [rbx + 0xfffffffffffffff2], -1 ; rcl byte ptr [rbx + 0xfffffffffffffff2] ; jmp rax
0x0000000000178edc : rcl byte ptr [rdx + 0xffffffffffffffef], -1 ; adc byte ptr [rbx + 0xffffffffffffffef], dl ; call qword ptr [rax]
0x0000000000187808 : rcl ch ; sti ; jmp qword ptr [rax]
0x0000000000081853 : rcl dword ptr [rip + 0x33d96f], -0x7d ; ret -0x74ff
0x000000000017679f : rcl dword ptr [rsi + 0x5a], cl ; je 0x176768 ; ret -0x5304
0x000000000017679b : rcpps xmm2, xmmword ptr [rdx + 0x5a56d373] ; je 0x176768 ; ret -0x5304
0x00000000001a78f0 : rcr ah, -0xc ; jmp qword ptr [rcx]
0x0000000000036830 : rcr bl, 0x3f ; fsubp st(1) ; ret
0x0000000000187b60 : rcr byte ptr [rax] ; cld ; jmp qword ptr [rax]
0x0000000000038597 : rcr byte ptr [rbp + 0x5b] ; ret
0x000000000019f920 : rcr byte ptr [rbp + 0xfffffffffffffff0] ; call qword ptr [rax]
0x000000000001ff72 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop r14 ; pop rbp ; ret
0x000000000010b8a2 : rcr byte ptr [rbx + 0x41], 0x5c ; pop r13 ; pop rbp ; ret
0x00000000000744fd : rcr byte ptr [rbx + 0x48], cl ; div ebp ; pop rbp ; pop r12 ; ret
0x000000000005371c : rcr byte ptr [rbx + 0x5d] ; pop r12 ; pop r13 ; ret
0x0000000000049400 : rcr byte ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000005e4ec : rcr byte ptr [rbx + 0x5d] ; ret
0x00000000000718d9 : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000246ce : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x000000000003c4ae : rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000d292f : rcr byte ptr [rbx + 0xffffffffffffff83] ; loopne 0xd2936 ; pop rbp ; ret
0x0000000000048b04 : rcr byte ptr [rbx + 0xfffffffffffffff7], -0x28 ; pop rbp ; ret
0x0000000000176bbd : rcr byte ptr [rdi + 0x6d], cl ; test eax, 0x7d4c8c5d ; ret 0xd8f
0x00000000001790f8 : rcr byte ptr [rdi + 0xfffffffffffffff1], -1 ; shl byte ptr [rcx + 0xfffffffffffffff1], 1 ; jmp rax
0x0000000000187e04 : rcr byte ptr [rdi + 0xfffffffffffffffc], -1 ; push rax ; pop rdi ; cld ; jmp rax
0x0000000000187bb4 : rcr byte ptr [rdi] ; cld ; jmp qword ptr [rax]
0x00000000001a7a10 : rcr ch, -0xc ; call rbx
0x00000000001b66b0 : rcr ch, -9 ; call qword ptr [rdi]
0x00000000000385c9 : rcr dword ptr [rcx], -0x40 ; and eax, 2 ; sub eax, 1 ; ret
0x00000000001187e6 : rcr dword ptr [rcx], -0x40 ; ret
0x0000000000003149 : rep add ebp, esi ; mov ecx, 0xd4a3e95a ; pop rsp ; ret 0x52c0
0x000000000018ddb1 : rep clc ; call rsp
0x0000000000186971 : rep clc ; ret 0x6e1f
0x000000000002fa00 : rep cmp byte ptr [rax], al ; mov qword ptr [rax], rdx ; ret
0x0000000000109dc3 : rep dec dword ptr [rax + 0xffffffffffffff81] ; ret
0x00000000000e1996 : rep dec dword ptr [rax + 0xffffffffffffff85] ; ror byte ptr [rdi], -0x7c ; ret
0x0000000000179e92 : rep dec dword ptr [rax] ; sal bl, cl ; jmp qword ptr [rsi]
0x000000000017a0fa : rep dec dword ptr [rbx + 0x1efff3f6] ; div bl ; call rsp
0x0000000000179e9e : rep dec eax ; sal ebx, cl ; push qword ptr [rax] ; sal ebx, 1 ; jmp qword ptr [rsi]
0x0000000000179d46 : rep dec edx ; enter -0xd, -0x6f ; sal ebx, 1 ; call rax
0x0000000000109f16 : rep inc dword ptr [rbp + 0xffffffffffffff85] ; in al, -0x77 ; ret 0x87e
0x000000000018bc6a : rep inc dword ptr [rdx + rbp*4 + 0x14240001] ; hlt ; call rsp
0x0000000000179cf2 : rep inc esp ; ret -0xd
0x00000000000cc3ed : rep ja 0xcc380 ; pop rbx ; pop rbp ; ret
0x000000000018b952 : rep jmp qword ptr [rdi + rdx*4 + 1] ; add ah, ah ; jb 0x18b94e ; jmp rsp
0x0000000000179cf6 : rep jmp qword ptr [rdi] ; ret -0xd
0x0000000000179cae : rep lcall ptr [rax + 0x57fff3bd] ; ret
0x0000000000179d3a : rep lcall ptr [rbp + 0x7dfff3c9] ; ret
0x000000000017a0fe : rep lcall ptr [rsi] ; div bl ; call rsp
0x000000000014d43b : rep mov qword ptr [rdi + 0xfffffffffffffff8], rcx ; ret
0x000000000014599f : rep mov qword ptr [rdi + 0xfffffffffffffff8], rdx ; ret
0x00000000001645d2 : rep movzx edx, byte ptr [rsi + 0xfffffffffffffff3] ; sub eax, edx ; ret
0x000000000007453d : rep pop rbx ; pop rbp ; pop r12 ; ret
0x00000000001151f4 : rep pop rbx ; ret
0x000000000019d434 : rep pop rdx ; out dx, al ; jmp qword ptr [rdx]
0x0000000000179ea2 : rep push qword ptr [rax] ; sal ebx, 1 ; jmp qword ptr [rsi]
0x0000000000083a58 : rep ret ; mov rsi, qword ptr [rsp] ; jmp rax
0x00000000001879e9 : rep sti ; jmp qword ptr [rax]
0x00000000000d2ff6 : rep sti ; lcall ptr [rbx + 0x5d] ; xor eax, eax ; pop r12 ; ret
0x00000000001645d7 : rep sub eax, edx ; ret
0x00000000001005f2 : repne add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x00000000000b2270 : repne add eax, esi ; ret
0x000000000017962a : repne call qword ptr [rax + 0xffffffffb0fff26a] ; push -0xe ; call rax
0x0000000000179632 : repne call rax ; push -0xe ; push rax ; push -0xe ; call qword ptr [rax]
0x00000000001b7341 : repne cli ; call rcx
0x00000000000f5d7c : repne dec dword ptr [rax + 0xffffffffffffff8b] ; jge 0xf5d82 ; call rbx
0x00000000000f602f : repne dec dword ptr [rax + 0xffffffffffffff8b] ; jge 0xf6035 ; call rbx
0x00000000000f5c3a : repne dec dword ptr [rcx + 0xffffffffffffff8b] ; call rbx
0x00000000000f603d : repne dec dword ptr [rcx + 0xffffffffffffff8b] ; cmp al, 0x24 ; call rbx
0x00000000000f5c47 : repne dec dword ptr [rcx + 0xffffffffffffff8b] ; jge 0xf5c4d ; call rbx
0x00000000000f5d6e : repne dec dword ptr [rcx + 0xffffffffffffff8b] ; jge 0xf5d74 ; call rbx
0x00000000000f5eb1 : repne dec dword ptr [rcx + 0xffffffffffffff8b] ; jge 0xf5eb7 ; call rbx
0x00000000000f6021 : repne dec dword ptr [rcx + 0xffffffffffffff8b] ; jge 0xf6027 ; call rbx
0x00000000001795ba : repne inc dword ptr [rax + 0xffffffffb0fff267] ; jmp rax
0x00000000001795ee : repne inc dword ptr [rax] ; imul esi, edx, 0xf26910ff ; jmp qword ptr [rax]
0x000000000017957e : repne inc dword ptr [rax] ; jmp qword ptr gs:[rax]
0x0000000000179616 : repne inc dword ptr [rax] ; push -0xe ; jmp qword ptr [rax]
0x0000000000179576 : repne inc eax ; jmp rax
0x00000000001795aa : repne inc eax ; push rax ; jmp qword ptr [rax]
0x0000000000179592 : repne inc eax ; push rax ; jmp qword ptr gs:[rax]
0x0000000000118b27 : repne jb 0x118b14 ; mov eax, 0xffffffff ; ret
0x0000000000179572 : repne jmp qword ptr [rax + 0xffffffffc0fff264] ; jmp rax
0x00000000001795c2 : repne jmp rax ; call qword ptr [eax]
0x0000000000179612 : repne jmp rax ; imul esi, edx, 0xf26a00ff ; jmp qword ptr [rax]
0x000000000017957a : repne jmp rax ; inc dword ptr fs:[rax] ; jmp qword ptr gs:[rax]
0x0000000000075d7d : repne lea eax, dword ptr [rdx + rdi] ; ret
0x00000000001986dc : repne mov ebp, ebp ; jmp qword ptr [rdx]
0x000000000014d3ab : repne mov qword ptr [rdi + 0xfffffffffffffff8], rcx ; ret
0x0000000000145b9f : repne mov qword ptr [rdi + 0xfffffffffffffff8], rdx ; ret
0x00000000000771e3 : repne mov rdi, rbx ; call rax
0x00000000001234b2 : repne mov rsi, r13 ; mov rdi, r12 ; call rax
0x00000000001645c2 : repne movzx edx, byte ptr [rsi + 0xfffffffffffffff2] ; sub eax, edx ; ret
0x000000000004978d : repne nop ; mov rax, rsi ; pop rbx ; ret
0x00000000001795be : repne push qword ptr [rax + 0xffffffffe0fff267] ; call qword ptr [eax]
0x00000000000f02bb : repne push qword ptr [rcx] ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000001795ae : repne push rax ; jmp qword ptr [rax]
0x0000000000179596 : repne push rax ; jmp qword ptr gs:[rax]
0x0000000000179636 : repne push rax ; push -0xe ; call qword ptr [rax]
0x00000000001879e5 : repne sti ; call rax
0x00000000001645c7 : repne sub eax, edx ; ret
0x0000000000000937 : ret
0x000000000003f902 : ret -0x10
0x0000000000088739 : ret -0x100
0x0000000000088c39 : ret -0x1000
0x00000000001224aa : ret -0x1031
0x00000000000222e5 : ret -0x103f
0x000000000006d4fe : ret -0x107d
0x000000000017757a : ret -0x10ce
0x00000000000c3b8a : ret -0x10f
0x000000000003d7ac : ret -0x11
0x00000000000e58b5 : ret -0x1115
0x000000000006d6c4 : ret -0x117d
0x000000000019c1b4 : ret -0x11c7
0x000000000018a2f9 : ret -0x12
0x000000000019b9d4 : ret -0x1204
0x00000000000adee8 : ret -0x1289
0x0000000000198a61 : ret -0x13
0x00000000000d8f42 : ret -0x1317
0x0000000000130d69 : ret -0x1384
0x00000000000da24f : ret -0x1389
0x0000000000061121 : ret -0x14
0x0000000000036789 : ret -0x148
0x000000000003d8e2 : ret -0x148b
0x00000000000bf832 : ret -0x14ef
0x00000000001382a6 : ret -0x14f0
0x0000000000057e6e : ret -0x14f8
0x000000000001fc23 : ret -0x14fc
0x000000000006d7b0 : ret -0x14fe
0x00000000000d8134 : ret -0x14ff
0x00000000000b7f30 : ret -0x1509
0x00000000000428e3 : ret -0x1517
0x0000000000021a09 : ret -0x153f
0x0000000000060502 : ret -0x1540
0x000000000013000f : ret -0x157d
0x00000000000a26da : ret -0x157f
0x000000000003c65c : ret -0x158a
0x000000000019101e : ret -0x15dd
0x00000000000b18d5 : ret -0x163f
0x000000000004abee : ret -0x1640
0x00000000000a61ac : ret -0x168c
0x0000000000175127 : ret -0x1690
0x000000000013a266 : ret -0x16f0
0x0000000000067d29 : ret -0x16f8
0x000000000006d8fc : ret -0x16fe
0x000000000002292b : ret -0x16ff
0x00000000000e3078 : ret -0x17
0x0000000000021b64 : ret -0x173f
0x00000000000e8317 : ret -0x177d
0x00000000000af605 : ret -0x1789
0x00000000000f0551 : ret -0x17ff
0x00000000000c1a73 : ret -0x1818
0x00000000000222f1 : ret -0x187d
0x0000000000176dc6 : ret -0x18e1
0x00000000001a49d1 : ret -0x19
0x00000000000be425 : ret -0x1917
0x00000000000bc89a : ret -0x1a0
0x0000000000057439 : ret -0x1c17
0x0000000000022af2 : ret -0x1d01
0x00000000000e3a35 : ret -0x1d3f
0x00000000000289fe : ret -0x1d7d
0x0000000000028550 : ret -0x1d7f
0x00000000000775e5 : ret -0x1d8c
0x0000000000060509 : ret -0x1e7d
0x0000000000055f7e : ret -0x1e7f
0x0000000000045f5a : ret -0x1f
0x0000000000121eea : ret -0x1f01
0x00000000000ee32b : ret -0x1f17
0x000000000003e3c5 : ret -0x1f7d
0x00000000001630c9 : ret -0x1f8c
0x0000000000088379 : ret -0x20
0x0000000000088879 : ret -0x200
0x0000000000088d79 : ret -0x2000
0x000000000002c29a : ret -0x2077
0x00000000001749b1 : ret -0x2162
0x0000000000175c22 : ret -0x21a3
0x00000000000d9ae2 : ret -0x2281
0x0000000000176ca6 : ret -0x2327
0x00000000000b0550 : ret -0x2400
0x00000000000cb9b5 : ret -0x247c
0x0000000000124f52 : ret -0x2488
0x00000000000bd0eb : ret -0x24cf
0x0000000000081eea : ret -0x25
0x000000000003677d : ret -0x2509
0x00000000000da197 : ret -0x2581
0x0000000000108ea3 : ret -0x258b
0x00000000000d2f88 : ret -0x25d7
0x00000000001147f4 : ret -0x268b
0x000000000012a08a : ret -0x27
0x00000000000fda95 : ret -0x2777
0x00000000000d18f8 : ret -0x27d
0x00000000000486a0 : ret -0x2817
0x00000000000fbd83 : ret -0x2818
0x00000000000d83a2 : ret -0x298b
0x00000000000ce12a : ret -0x2a17
0x000000000000089a : ret -0x2a5c
0x000000000003e480 : ret -0x2cb7
0x00000000000dcb1c : ret -0x2d7b
0x0000000000032a2d : ret -0x2d7c
0x00000000000b7da4 : ret -0x2d97
0x00000000000356c0 : ret -0x2dcf
0x00000000000fc989 : ret -0x2e18
0x000000000005a7fc : ret -0x2e77
0x00000000000b1865 : ret -0x2ec8
0x000000000011328c : ret -0x2ee0
0x00000000000d06d1 : ret -0x2eff
0x0000000000036553 : ret -0x2f77
0x000000000007df8d : ret -0x2f8b
0x00000000000c3022 : ret -0x2fd7
0x00000000000f45ce : ret -0x3015
0x000000000013007a : ret -0x3077
0x00000000000503aa : ret -0x310
0x000000000004f666 : ret -0x3117
0x000000000001f842 : ret -0x3177
0x00000000000339c1 : ret -0x3180
0x000000000009e1a0 : ret -0x328e
0x000000000017712d : ret -0x32ef
0x000000000017504a : ret -0x3359
0x00000000000f0f38 : ret -0x3380
0x000000000001f6ac : ret -0x3415
0x00000000000fab79 : ret -0x3527
0x00000000001886bc : ret -0x354
0x00000000000cc7b7 : ret -0x357d
0x0000000000037459 : ret -0x357f
0x000000000013da9c : ret -0x35c7
0x00000000001888cc : ret -0x360
0x00000000000878f6 : ret -0x3601
0x00000000000a6114 : ret -0x3615
0x00000000000f8851 : ret -0x3618
0x000000000011335b : ret -0x367b
0x00000000001373e1 : ret -0x367c
0x00000000000d8414 : ret -0x36cf
0x00000000000e5705 : ret -0x3717
0x000000000002a771 : ret -0x3777
0x000000000007c0b0 : ret -0x377d
0x00000000001881c4 : ret -0x37b
0x0000000000042dbe : ret -0x37ff
0x00000000000b019d : ret -0x3817
0x00000000000d2e83 : ret -0x3818
0x00000000001883c4 : ret -0x385
0x0000000000080fc8 : ret -0x3877
0x0000000000131944 : ret -0x38b7
0x0000000000036c57 : ret -0x38b8
0x0000000000187c98 : ret -0x39c
0x00000000000227d5 : ret -0x39ff
0x0000000000187c90 : ret -0x3a2
0x00000000001755b8 : ret -0x3b01
0x00000000000c468a : ret -0x3b1
0x00000000001738a2 : ret -0x3b3d
0x0000000000102c3b : ret -0x3c0d
0x0000000000133db9 : ret -0x3c77
0x00000000000fa7c3 : ret -0x3c7d
0x000000000004882b : ret -0x3ca5
0x00000000000dd270 : ret -0x3cc7
0x00000000000230aa : ret -0x3d
0x0000000000162054 : ret -0x3d4e
0x00000000000e4e3b : ret -0x3d7d
0x000000000003ce88 : ret -0x3d97
0x000000000003ccda : ret -0x3dd7
0x00000000000dbc33 : ret -0x3df7
0x000000000002cfe5 : ret -0x3e17
0x00000000000371c3 : ret -0x3e77
0x000000000011fc97 : ret -0x3e9a
0x00000000000361f7 : ret -0x3eb8
0x000000000002243d : ret -0x3ebf
0x0000000000029187 : ret -0x3eff
0x00000000000a7a9e : ret -0x3f
0x000000000004f539 : ret -0x3f7b
0x0000000000047822 : ret -0x3f7d
0x00000000000f4961 : ret -0x3f9
0x0000000000020341 : ret -0x3fcf
0x00000000000d7168 : ret -0x3fd0
0x000000000011c071 : ret -0x3fff
0x00000000000884b9 : ret -0x40
0x00000000000889b9 : ret -0x400
0x0000000000088eb9 : ret -0x4000
0x000000000007273f : ret -0x4015
0x0000000000043b48 : ret -0x41
0x0000000000175a04 : ret -0x41a9
0x00000000000b968d : ret -0x41bf
0x000000000005220a : ret -0x41f9
0x000000000006021c : ret -0x427d
0x0000000000002464 : ret -0x42f9
0x0000000000078cd4 : ret -0x4315
0x000000000007215a : ret -0x4415
0x000000000011dcd1 : ret -0x448c
0x00000000000c0211 : ret -0x4517
0x000000000005a880 : ret -0x4518
0x00000000001ab900 : ret -0x457
0x0000000000076323 : ret -0x458c
0x00000000000ec8cf : ret -0x4615
0x0000000000175cae : ret -0x4647
0x000000000004fdde : ret -0x46bf
0x00000000000716ef : ret -0x4715
0x00000000000b4b52 : ret -0x4717
0x00000000000d4f0a : ret -0x4780
0x0000000000047365 : ret -0x4781
0x00000000000360c1 : ret -0x47b8
0x000000000012efac : ret -0x47fc
0x0000000000048821 : ret -0x48
0x0000000000029a05 : ret -0x48f1
0x0000000000078443 : ret -0x4915
0x00000000000f9f08 : ret -0x4917
0x00000000000853b4 : ret -0x4918
0x0000000000029657 : ret -0x49f1
0x00000000000728ab : ret -0x4a15
0x0000000000078e7e : ret -0x4b15
0x0000000000080d64 : ret -0x4b75
0x0000000000059e6a : ret -0x4d17
0x00000000000fb6a9 : ret -0x4e18
0x00000000001767a4 : ret -0x5304
0x0000000000175de7 : ret -0x539b
0x000000000004f6d4 : ret -0x53f
0x00000000000513f5 : ret -0x5617
0x00000000000c615a : ret -0x57
0x0000000000042437 : ret -0x57f
0x00000000001350ae : ret -0x57fe
0x000000000008929d : ret -0x580
0x00000000000a6137 : ret -0x5915
0x0000000000175963 : ret -0x5aec
0x00000000000e548a : ret -0x5bf
0x00000000000780e2 : ret -0x5e15
0x00000000000cc2b9 : ret -0x5e18
0x00000000000252aa : ret -0x5f
0x000000000005de3e : ret -0x5f17
0x00000000000e941a : ret -0x603
0x00000000001226fb : ret -0x617
0x00000000000f159f : ret -0x618b
0x00000000000b18d2 : ret -0x61f1
0x00000000000565a6 : ret -0x6275
0x000000000009e1d0 : ret -0x628e
0x000000000005defe : ret -0x6318
0x0000000000032d8d : ret -0x6417
0x00000000000c5413 : ret -0x6515
0x000000000005de46 : ret -0x6717
0x0000000000087885 : ret -0x678c
0x0000000000089a3a : ret -0x67a
0x00000000000fa6fb : ret -0x67b8
0x00000000000a6d9e : ret -0x67d
0x00000000000e2f9a : ret -0x680
0x00000000000c51a3 : ret -0x6817
0x00000000000ec3c3 : ret -0x6818
0x000000000010ce7a : ret -0x684
0x00000000000cc1e1 : ret -0x68f1
0x000000000010d529 : ret -0x6915
0x0000000000079323 : ret -0x6a15
0x0000000000113362 : ret -0x6a78
0x0000000000175c73 : ret -0x6a8a
0x0000000000032376 : ret -0x6ac3
0x0000000000021879 : ret -0x6ac7
0x00000000000b1b0f : ret -0x6bc6
0x0000000000085d9e : ret -0x6c42
0x00000000000b2f65 : ret -0x6c46
0x00000000000e4167 : ret -0x6cf1
0x00000000001333df : ret -0x6d8c
0x00000000000dcc89 : ret -0x6e18
0x000000000002f8ad : ret -0x6f3d
0x00000000000450ed : ret -0x6f9a
0x00000000000f31bd : ret -0x7015
0x000000000006202c : ret -0x70f1
0x000000000006bb72 : ret -0x71
0x0000000000027336 : ret -0x71f1
0x00000000000e9abd : ret -0x7217
0x000000000005fdb2 : ret -0x7277
0x0000000000051fb5 : ret -0x72b3
0x0000000000024c9b : ret -0x72b4
0x00000000000aef91 : ret -0x72b5
0x000000000005f12f : ret -0x72b6
0x0000000000031c6e : ret -0x72b7
0x0000000000021e08 : ret -0x72b8
0x00000000000cffd9 : ret -0x72b9
0x00000000000b9b61 : ret -0x72bc
0x00000000000b9d02 : ret -0x72bf
0x0000000000050f8a : ret -0x72f1
0x000000000005ec37 : ret -0x72fc
0x00000000000c7fd8 : ret -0x72ff
0x000000000000376e : ret -0x7346
0x00000000000e3ffe : ret -0x73f1
0x000000000006f6b8 : ret -0x749c
0x0000000000031c55 : ret -0x74b4
0x000000000003914e : ret -0x74b6
0x000000000002112c : ret -0x74b7
0x0000000000022a59 : ret -0x74b8
0x00000000000d31c8 : ret -0x74b9
0x0000000000095873 : ret -0x74ba
0x000000000004b7f1 : ret -0x74bc
0x000000000002e972 : ret -0x74bf
0x0000000000176e4e : ret -0x74ca
0x000000000010345e : ret -0x74d8
0x000000000002f8be : ret -0x74fb
0x00000000000a41ef : ret -0x74fc
0x0000000000106e5b : ret -0x74fe
0x0000000000025c87 : ret -0x74ff
0x00000000000a45a0 : ret -0x7515
0x0000000000002537 : ret -0x75b4
0x000000000008c63a : ret -0x75fc
0x000000000010485e : ret -0x7615
0x000000000003d44d : ret -0x769a
0x00000000000391cb : ret -0x76b2
0x000000000007e123 : ret -0x76b3
0x000000000001f80f : ret -0x76b4
0x0000000000021770 : ret -0x76b7
0x0000000000021328 : ret -0x76b8
0x0000000000037456 : ret -0x76bc
0x00000000000af4d7 : ret -0x76bf
0x000000000004c055 : ret -0x76f0
0x000000000004bfe5 : ret -0x76f8
0x000000000002db3d : ret -0x76ff
0x0000000000002594 : ret -0x7753
0x0000000000032c41 : ret -0x777
0x00000000000eb1e9 : ret -0x77bb
0x00000000001264de : ret -0x77bc
0x000000000011b095 : ret -0x77bf
0x00000000000b1a2f : ret -0x77c0
0x00000000000a5194 : ret -0x77d
0x00000000000972aa : ret -0x77f
0x00000000000c983d : ret -0x77f1
0x00000000000c7d92 : ret -0x77fc
0x0000000000098d22 : ret -0x77fe
0x00000000000227b5 : ret -0x77ff
0x00000000000c1ad3 : ret -0x7818
0x000000000017461e : ret -0x78e2
0x0000000000036e52 : ret -0x78f1
0x000000000018d9d8 : ret -0x793
0x0000000000174890 : ret -0x797
0x000000000004b9ee : ret -0x79f1
0x000000000005cdb9 : ret -0x7a3a
0x0000000000050ba3 : ret -0x7a75
0x00000000000cc7c9 : ret -0x7a77
0x00000000000490df : ret -0x7ab3
0x000000000006da2d : ret -0x7ab8
0x00000000000b321e : ret -0x7abb
0x000000000002e1c8 : ret -0x7af1
0x000000000006e20e : ret -0x7af8
0x00000000000538d5 : ret -0x7afc
0x000000000006d80f : ret -0x7afe
0x0000000000064fa7 : ret -0x7aff
0x00000000000aac2a : ret -0x7b1
0x00000000000cc7f3 : ret -0x7b17
0x0000000000079685 : ret -0x7bbb
0x000000000007e1d8 : ret -0x7bbf
0x0000000000021a12 : ret -0x7bf1
0x0000000000053806 : ret -0x7bfc
0x000000000009869b : ret -0x7bff
0x00000000001343b4 : ret -0x7c80
0x0000000000135b8c : ret -0x7c9a
0x0000000000051595 : ret -0x7cb7
0x000000000008c586 : ret -0x7cb8
0x000000000001f5bf : ret -0x7cbf
0x00000000000526aa : ret -0x7cd3
0x000000000002ea08 : ret -0x7cf0
0x000000000004769c : ret -0x7cf1
0x000000000005629f : ret -0x7cf8
0x0000000000096f01 : ret -0x7cfb
0x000000000001fbee : ret -0x7cfc
0x0000000000113de9 : ret -0x7cfd
0x000000000002d245 : ret -0x7cff
0x00000000000cfb03 : ret -0x7d
0x00000000000d1979 : ret -0x7d15
0x00000000000cb535 : ret -0x7d17
0x000000000011fd73 : ret -0x7d73
0x0000000000066728 : ret -0x7df1
0x000000000005cf4b : ret -0x7e
0x00000000000fc4c8 : ret -0x7e17
0x00000000000f11d9 : ret -0x7e18
0x0000000000051fc3 : ret -0x7e9a
0x000000000004579b : ret -0x7ebf
0x0000000000042db4 : ret -0x7eca
0x000000000011ad86 : ret -0x7f
0x0000000000003864 : ret -0x7f04
0x0000000000116648 : ret -0x7f80
0x000000000009e1ed : ret -0x7f8e
0x0000000000034beb : ret -0x7fc0
0x00000000000b4ec3 : ret -0x7ff0
0x0000000000033eec : ret -0x7fff
0x00000000000885f9 : ret -0x80
0x0000000000088af9 : ret -0x800
0x0000000000088ff9 : ret -0x8000
0x00000000000d270c : ret -0x817
0x00000000000ecc63 : ret -0x818
0x00000000000b254c : ret -0x8b7
0x000000000003db5f : ret -0x8b8
0x00000000000b2f7c : ret -0x8bf
0x000000000018c7a8 : ret -0x938
0x00000000001b417e : ret -0x93d
0x00000000000a2286 : ret -0x97b
0x0000000000025112 : ret -0x9bf
0x00000000000be01f : ret -0x9cf
0x00000000000e5e1d : ret -0x9ff
0x0000000000106b63 : ret -0xa
0x00000000000c294a : ret -0xa36
0x00000000000f502a : ret -0xab4
0x0000000000061f45 : ret -0xb
0x00000000001a9946 : ret -0xb24
0x00000000000d264a : ret -0xb33
0x00000000000d2aaa : ret -0xb37
0x000000000001f935 : ret -0xb7
0x0000000000087834 : ret -0xb8
0x000000000011750a : ret -0xb9d
0x00000000000db1aa : ret -0xbbe
0x00000000000db24a : ret -0xbbf
0x000000000009743e : ret -0xbf
0x000000000012f57a : ret -0xc02
0x0000000000179cb8 : ret -0xc3b
0x0000000000115508 : ret -0xc3d
0x00000000001a3d0e : ret -0xc52
0x00000000000e693a : ret -0xc76
0x00000000001036ea : ret -0xc8b
0x00000000000ebbaa : ret -0xcc8
0x0000000000048f89 : ret -0xcf
0x00000000000376dc : ret -0xcfc
0x000000000003a4b3 : ret -0xcff
0x00000000000b8b43 : ret -0xd
0x00000000000dbb29 : ret -0xd17
0x00000000001157da : ret -0xd2
0x000000000012ad7a : ret -0xd69
0x0000000000051810 : ret -0xe
0x00000000000986b5 : ret -0xe15
0x00000000000fba69 : ret -0xe18
0x0000000000077c60 : ret -0xe77
0x0000000000097d5c : ret -0xe78
0x000000000004464a : ret -0xf
0x000000000011073a : ret -0xf14
0x0000000000101221 : ret -0xf15
0x0000000000093bd9 : ret -0xf17
0x00000000001170aa : ret -0xf7d
0x0000000000098d03 : ret -0xf89
0x000000000005a95b : ret -0xfc7
0x00000000000c312a : ret -1
0x0000000000027f2e : ret -2
0x000000000008bf8a : ret -3
0x000000000004db6a : ret -4
0x000000000006311a : ret -5
0x0000000000030f2b : ret -6
0x00000000000ceb17 : ret -7
0x000000000005094d : ret -8
0x000000000004214a : ret -9
0x0000000000189ae5 : ret 0
0x0000000000005ed9 : ret 0x10
0x000000000002f03b : ret 0x100
0x000000000002e8e8 : ret 0x101
0x00000000000007bf : ret 0x102
0x000000000006e16f : ret 0x107
0x0000000000034b1a : ret 0x1074
0x0000000000041cf4 : ret 0x1075
0x000000000002a33a : ret 0x10c8
0x0000000000066383 : ret 0x11
0x0000000000080e62 : ret 0x110
0x000000000002643a : ret 0x1107
0x0000000000025a3a : ret 0x1111
0x000000000003856c : ret 0x114d
0x00000000000be514 : ret 0x1174
0x00000000000e47c9 : ret 0x11e8
0x00000000000a61c9 : ret 0x11e9
0x000000000000f779 : ret 0x12
0x000000000004999a : ret 0x12df
0x000000000009935a : ret 0x13
0x0000000000053e22 : ret 0x1333
0x00000000000db7f8 : ret 0x1376
0x0000000000043ac3 : ret 0x139c
0x0000000000043a9d : ret 0x139d
0x000000000004958b : ret 0x13eb
0x0000000000040fea : ret 0x1408
0x000000000008933d : ret 0x144
0x00000000000e1c93 : ret 0x1472
0x00000000000da23b : ret 0x1476
0x00000000000483f9 : ret 0x1477
0x0000000000097c99 : ret 0x147c
0x000000000005499b : ret 0x148
0x00000000000e3daf : ret 0x148d
0x000000000007ca62 : ret 0x149
0x00000000000ed098 : ret 0x14c
0x00000000000e0c6a : ret 0x15
0x0000000000028803 : ret 0x154b
0x000000000002baf2 : ret 0x1553
0x00000000000364f0 : ret 0x1575
0x000000000008051b : ret 0x1589
0x000000000002837a : ret 0x15e3
0x000000000000a310 : ret 0x16
0x000000000003d86f : ret 0x1676
0x000000000003c646 : ret 0x1677
0x00000000000e91c4 : ret 0x16e9
0x000000000006071f : ret 0x17
0x0000000000018618 : ret 0x17de
0x00000000000eb893 : ret 0x17e8
0x00000000000b0623 : ret 0x17e9
0x000000000008cac5 : ret 0x1876
0x0000000000047317 : ret 0x18b9
0x00000000000c83e1 : ret 0x18eb
0x000000000008c765 : ret 0x1974
0x00000000000c4e82 : ret 0x19eb
0x000000000000b8e8 : ret 0x1a
0x0000000000097274 : ret 0x1a75
0x000000000017711a : ret 0x1ad4
0x00000000001758ad : ret 0x1b49
0x00000000000fc872 : ret 0x1b72
0x00000000000ebe82 : ret 0x1b75
0x0000000000050cd3 : ret 0x1b8
0x0000000000001bf1 : ret 0x1bb7
0x0000000000022034 : ret 0x1be
0x000000000004c80e : ret 0x1beb
0x0000000000003467 : ret 0x1bf9
0x0000000000170da0 : ret 0x1d4
0x0000000000171538 : ret 0x1d5
0x000000000008c666 : ret 0x1d74
0x00000000000021c9 : ret 0x1dd4
0x00000000000c5caa : ret 0x1e73
0x00000000000966a9 : ret 0x1e75
0x00000000000cc259 : ret 0x1e8
0x0000000000121dec : ret 0x1ee8
0x0000000000026fc8 : ret 0x1f0f
0x00000000000c5cf9 : ret 0x1f73
0x00000000000b7fc1 : ret 0x1fbf
0x000000000002f04a : ret 0x200
0x00000000000e0871 : ret 0x2041
0x00000000000878dd : ret 0x2074
0x0000000000007298 : ret 0x21
0x00000000000360be : ret 0x2148
0x00000000000f2939 : ret 0x21e8
0x000000000008786b : ret 0x2275
0x0000000000087998 : ret 0x2288
0x000000000000e870 : ret 0x23
0x00000000001621b2 : ret 0x2373
0x000000000009790a : ret 0x2374
0x00000000000d9abf : ret 0x237e
0x00000000000025c7 : ret 0x23cb
0x000000000016fda8 : ret 0x24
0x00000000000027b8 : ret 0x244f
0x000000000016278a : ret 0x24d
0x00000000000a82c9 : ret 0x24eb
0x0000000000130ada : ret 0x25
0x0000000000166186 : ret 0x25bc
0x00000000000f892c : ret 0x25eb
0x00000000000da171 : ret 0x267e
0x00000000000f89fd : ret 0x26eb
0x0000000000089956 : ret 0x2774
0x00000000001345dd : ret 0x28
0x000000000000054f : ret 0x2800
0x00000000000994f5 : ret 0x280f
0x000000000008cab5 : ret 0x2876
0x0000000000136d0a : ret 0x28de
0x00000000000b5dca : ret 0x28f5
0x0000000000060a99 : ret 0x29
0x00000000001348f2 : ret 0x2909
0x00000000000aebe8 : ret 0x2941
0x00000000000a7e32 : ret 0x2944
0x00000000000d889f : ret 0x2945
0x000000000003e830 : ret 0x2948
0x000000000004444f : ret 0x2949
0x0000000000093b15 : ret 0x294c
0x0000000000079cb6 : ret 0x294d
0x0000000000038cf4 : ret 0x2973
0x000000000005e622 : ret 0x2975
0x0000000000117d46 : ret 0x2a
0x0000000000001b15 : ret 0x2a63
0x00000000001105a2 : ret 0x2ae8
0x0000000000108dfb : ret 0x2b
0x00000000000b26ee : ret 0x2b3c
0x000000000010f1fa : ret 0x2b48
0x0000000000024e56 : ret 0x2b49
0x000000000010ea0a : ret 0x2b4f
0x0000000000128042 : ret 0x2b74
0x00000000000a26e2 : ret 0x2b77
0x0000000000058fbb : ret 0x2bb
0x00000000000f2b8d : ret 0x2c
0x00000000000fc9a2 : ret 0x2c24
0x00000000000fffd2 : ret 0x2c2c
0x00000000000ff4ad : ret 0x2c5b
0x0000000000083a31 : ret 0x2c75
0x00000000000f4f19 : ret 0x2ca3
0x00000000000f492a : ret 0x2cdd
0x000000000003fac1 : ret 0x2ce9
0x00000000000c1ba2 : ret 0x2d0
0x000000000005e4b4 : ret 0x2d75
0x00000000000f1db4 : ret 0x2d77
0x000000000007df55 : ret 0x2e66
0x00000000000d4c7c : ret 0x2e9
0x00000000000fac18 : ret 0x2eb
0x0000000000121ddc : ret 0x2ee8
0x0000000000005b58 : ret 0x2f
0x0000000000086a0e : ret 0x2f74
0x000000000007eea8 : ret 0x2fe9
0x00000000000b2c92 : ret 0x30
0x00000000000c0912 : ret 0x3019
0x00000000000bec9a : ret 0x3033
0x0000000000001b84 : ret 0x306a
0x00000000000bd2aa : ret 0x307d
0x00000000000b4e8a : ret 0x30d0
0x00000000000b3d9a : ret 0x30e1
0x000000000004a5b7 : ret 0x31
0x000000000011b337 : ret 0x3108
0x00000000000ac93a : ret 0x310a
0x00000000000b2c51 : ret 0x3121
0x000000000006067c : ret 0x3145
0x0000000000126667 : ret 0x3148
0x000000000012629d : ret 0x314c
0x00000000000e4247 : ret 0x3173
0x00000000000fbb29 : ret 0x31e8
0x00000000000ea229 : ret 0x31e9
0x000000000004c6aa : ret 0x31eb
0x0000000000071483 : ret 0x3275
0x00000000000588ea : ret 0x32e9
0x00000000000834c8 : ret 0x33
0x0000000000086596 : ret 0x33b5
0x000000000008359a : ret 0x33c1
0x0000000000080e9a : ret 0x33e8
0x0000000000078dd9 : ret 0x34
0x0000000000097c79 : ret 0x347c
0x0000000000057e4a : ret 0x348
0x00000000000712ad : ret 0x353d
0x0000000000086a18 : ret 0x3574
0x000000000006f4d7 : ret 0x3675
0x0000000000051b3a : ret 0x36d2
0x0000000000048db3 : ret 0x37
0x00000000000c785a : ret 0x371
0x00000000000ec423 : ret 0x37e8
0x0000000000031186 : ret 0x38
0x00000000001769fa : ret 0x3827
0x00000000000f618a : ret 0x3845
0x000000000010ad45 : ret 0x3875
0x000000000008caa5 : ret 0x3876
0x000000000010ae7b : ret 0x3877
0x000000000003caad : ret 0x3885
0x0000000000175086 : ret 0x38ae
0x000000000006f7ef : ret 0x38b
0x0000000000050df2 : ret 0x38e8
0x0000000000022b8c : ret 0x39
0x000000000004797b : ret 0x3901
0x0000000000114875 : ret 0x3904
0x00000000001189d7 : ret 0x3941
0x00000000000d953d : ret 0x3944
0x00000000000614e7 : ret 0x3945
0x000000000003eabb : ret 0x3948
0x000000000002ecc2 : ret 0x3949
0x0000000000105120 : ret 0x394c
0x0000000000007238 : ret 0x3a
0x00000000000a1ea2 : ret 0x3a01
0x000000000016219b : ret 0x3a73
0x0000000000031cd0 : ret 0x3ae8
0x0000000000019311 : ret 0x3b
0x000000000005be99 : ret 0x3b01
0x00000000000d92a0 : ret 0x3b42
0x000000000002c67a : ret 0x3b48
0x00000000001280b2 : ret 0x3b74
0x00000000000f2c53 : ret 0x3b8
0x0000000000103ce4 : ret 0x3bf
0x00000000000c5256 : ret 0x3c01
0x0000000000087851 : ret 0x3c75
0x00000000000e0502 : ret 0x3d
0x0000000000036160 : ret 0x3d75
0x00000000000244b2 : ret 0x3d83
0x0000000000046f57 : ret 0x3dbe
0x000000000004fc7d : ret 0x3de8
0x00000000000a619d : ret 0x3de9
0x00000000000af486 : ret 0x3e89
0x00000000000e8ec1 : ret 0x3ee9
0x0000000000070d4b : ret 0x3f7
0x00000000000243de : ret 0x3f74
0x00000000000b1fc7 : ret 0x400
0x00000000000d495a : ret 0x4001
0x00000000000d52a1 : ret 0x402
0x00000000000009f5 : ret 0x4021
0x00000000000e80e9 : ret 0x403c
0x000000000002291a : ret 0x4101
0x0000000000118b62 : ret 0x4102
0x0000000000064c85 : ret 0x4104
0x000000000004a308 : ret 0x4108
0x00000000000207ab : ret 0x4110
0x00000000000d0098 : ret 0x4118
0x00000000000c6a06 : ret 0x4164
0x00000000000896b0 : ret 0x4166
0x00000000000257ee : ret 0x41c3
0x00000000000875da : ret 0x4201
0x00000000000b2193 : ret 0x4240
0x0000000000098a9a : ret 0x4266
0x00000000000d9669 : ret 0x428b
0x00000000000b2fb2 : ret 0x428d
0x00000000000df4d1 : ret 0x42c7
0x000000000006136a : ret 0x439
0x00000000000ee210 : ret 0x43f6
0x0000000000070527 : ret 0x4401
0x00000000000c27d5 : ret 0x4408
0x0000000000000888 : ret 0x440c
0x0000000000000456 : ret 0x4412
0x000000000012ea88 : ret 0x4489
0x0000000000124572 : ret 0x448b
0x00000000000e899b : ret 0x44c6
0x0000000000029f15 : ret 0x44c7
0x0000000000024939 : ret 0x44f6
0x00000000000508f7 : ret 0x4501
0x0000000000130d3c : ret 0x4502
0x00000000000d94c2 : ret 0x4504
0x00000000000adcde : ret 0x4505
0x00000000000d88cd : ret 0x4510
0x00000000000eebc0 : ret 0x4574
0x00000000000eb4bd : ret 0x4576
0x00000000000c6680 : ret 0x45e9
0x00000000000cc4cf : ret 0x460f
0x00000000000a2b37 : ret 0x4675
0x00000000000add06 : ret 0x4701
0x0000000000175b84 : ret 0x474c
0x00000000000bcf7b : ret 0x4775
0x00000000000922a5 : ret 0x4788
0x00000000000ecb13 : ret 0x47e8
0x00000000000279b0 : ret 0x4801
0x0000000000027c5e : ret 0x4802
0x0000000000050af2 : ret 0x4803
0x0000000000027a15 : ret 0x4804
0x000000000009285d : ret 0x4805
0x000000000002856a : ret 0x4806
0x00000000000fef32 : ret 0x4807
0x0000000000021828 : ret 0x4808
0x00000000000fed92 : ret 0x4809
0x00000000000ff052 : ret 0x480a
0x00000000000febf2 : ret 0x480b
0x00000000000b12ae : ret 0x480e
0x0000000000039b76 : ret 0x4810
0x000000000002c0b0 : ret 0x4811
0x000000000012ad43 : ret 0x4812
0x00000000000fcc8d : ret 0x4814
0x0000000000081e1e : ret 0x4817
0x00000000000cd7d0 : ret 0x481e
0x00000000000b9683 : ret 0x4830
0x0000000000097acd : ret 0x4840
0x0000000000021f55 : ret 0x4847
0x00000000000c1c10 : ret 0x4864
0x00000000000361a5 : ret 0x4866
0x00000000000a968e : ret 0x4890
0x00000000000f1860 : ret 0x48b
0x0000000000126ef4 : ret 0x48bf
0x000000000008968f : ret 0x48c3
0x000000000003ccd4 : ret 0x48d
0x0000000000023601 : ret 0x48e9
0x0000000000177346 : ret 0x48f
0x000000000007e5e5 : ret 0x48f0
0x000000000002a964 : ret 0x4901
0x0000000000092cc1 : ret 0x4902
0x0000000000035c6d : ret 0x4903
0x0000000000025e65 : ret 0x4904
0x0000000000125dd5 : ret 0x4907
0x000000000004df95 : ret 0x4908
0x00000000000ac480 : ret 0x4909
0x0000000000138282 : ret 0x4910
0x00000000000af0b0 : ret 0x491e
0x0000000000086b51 : ret 0x49e8
0x00000000000038a3 : ret 0x49ec
0x00000000000f5a3f : ret 0x4b01
0x00000000001354af : ret 0x4b7
0x000000000004a7b5 : ret 0x4b77
0x00000000001122c1 : ret 0x4b78
0x000000000008749b : ret 0x4b80
0x0000000000029222 : ret 0x4c01
0x0000000000092a21 : ret 0x4c02
0x00000000000686b2 : ret 0x4c04
0x0000000000032635 : ret 0x4c08
0x0000000000049ade : ret 0x4c10
0x000000000005030f : ret 0x4c30
0x00000000000bd67c : ret 0x4c48
0x00000000000e7786 : ret 0x4c6
0x00000000001288c1 : ret 0x4c74
0x0000000000125d77 : ret 0x4c8b
0x000000000006834e : ret 0x4ce8
0x00000000000258f4 : ret 0x4d02
0x000000000010d4ce : ret 0x4d04
0x000000000007e11f : ret 0x4d07
0x000000000003fed6 : ret 0x4d09
0x000000000007e859 : ret 0x4d10
0x000000000010462b : ret 0x4d30
0x0000000000052e27 : ret 0x4d64
0x000000000004fddb : ret 0x4e0f
0x0000000000176da7 : ret 0x4e27
0x00000000000207a2 : ret 0x4eb
0x00000000000af9ba : ret 0x4f8
0x00000000000fb33d : ret 0x5077
0x0000000000010a78 : ret 0x51
0x0000000000162184 : ret 0x5173
0x0000000000047084 : ret 0x5174
0x0000000000003152 : ret 0x52c0
0x00000000000e7bd8 : ret 0x52e9
0x000000000006e2fa : ret 0x5389
0x00000000000d8370 : ret 0x538b
0x000000000011236b : ret 0x53e9
0x0000000000122eeb : ret 0x53ff
0x00000000000adcb1 : ret 0x5441
0x00000000000495d4 : ret 0x5474
0x0000000000097c59 : ret 0x547c
0x0000000000039ea8 : ret 0x5489
0x0000000000129891 : ret 0x548d
0x000000000017500c : ret 0x5508
0x0000000000002442 : ret 0x5576
0x00000000000b0e01 : ret 0x5589
0x0000000000047667 : ret 0x5641
0x0000000000087837 : ret 0x5675
0x00000000000943ea : ret 0x56e9
0x00000000000d57ac : ret 0x574
0x000000000010ab82 : ret 0x577
0x00000000001772d8 : ret 0x5803
0x0000000000074b1d : ret 0x5877
0x00000000000814b4 : ret 0x58b
0x0000000000174ce0 : ret 0x591c
0x0000000000132e57 : ret 0x59e9
0x00000000000f926a : ret 0x5a4
0x0000000000003231 : ret 0x5a51
0x0000000000175a47 : ret 0x5ae4
0x00000000000e3e3c : ret 0x5ba
0x0000000000002f67 : ret 0x5bdb
0x0000000000096c7b : ret 0x5be9
0x000000000010582d : ret 0x5bf
0x00000000000b3acb : ret 0x5c89
0x000000000000301d : ret 0x5cbe
0x00000000000f4235 : ret 0x5e9
0x00000000000af514 : ret 0x5ee9
0x00000000000004b9 : ret 0x6080
0x0000000000077b24 : ret 0x60e9
0x0000000000002705 : ret 0x617e
0x0000000000177772 : ret 0x62c1
0x0000000000040233 : ret 0x6348
0x0000000000053814 : ret 0x6349
0x00000000000a2b1a : ret 0x6375
0x000000000008b82f : ret 0x63be
0x0000000000097c49 : ret 0x647c
0x00000000000b9ca3 : ret 0x64b8
0x0000000000033d08 : ret 0x65e9
0x00000000000e641a : ret 0x66
0x00000000000d23c0 : ret 0x6601
0x0000000000097cfa : ret 0x6610
0x000000000008ca32 : ret 0x6620
0x000000000000280b : ret 0x6642
0x0000000000087b53 : ret 0x66c3
0x00000000000c15d4 : ret 0x676
0x00000000000d8e46 : ret 0x677e
0x0000000000174cff : ret 0x67b2
0x00000000000b2f31 : ret 0x67ba
0x0000000000115873 : ret 0x67d
0x00000000000b2190 : ret 0x6948
0x00000000000d4c09 : ret 0x697e
0x0000000000074469 : ret 0x6ae9
0x00000000000c272a : ret 0x6b74
0x00000000000c3b79 : ret 0x6b8
0x0000000000003c8a : ret 0x6bba
0x0000000000103a12 : ret 0x6bf
0x0000000000186973 : ret 0x6e1f
0x0000000000111905 : ret 0x6e9
0x0000000000177901 : ret 0x6f9
0x00000000000a45b8 : ret 0x6fe9
0x00000000000831b5 : ret 0x7075
0x00000000000345b4 : ret 0x70e9
0x00000000000fbfe9 : ret 0x71e8
0x000000000004f4c6 : ret 0x71eb
0x0000000000021740 : ret 0x7401
0x0000000000037723 : ret 0x7402
0x000000000006d9d8 : ret 0x7404
0x000000000007608e : ret 0x7408
0x000000000006eeb9 : ret 0x7420
0x0000000000050327 : ret 0x7450
0x0000000000098fe7 : ret 0x7501
0x00000000000376e4 : ret 0x7502
0x000000000008d21d : ret 0x7504
0x0000000000073b28 : ret 0x7508
0x000000000016310b : ret 0x7510
0x000000000008d218 : ret 0x7518
0x0000000000163118 : ret 0x7520
0x00000000000d4659 : ret 0x7540
0x00000000000f1631 : ret 0x7577
0x000000000013416c : ret 0x75e9
0x0000000000161072 : ret 0x7677
0x00000000000b11a1 : ret 0x76c
0x000000000005b066 : ret 0x76e9
0x0000000000024e4a : ret 0x774
0x00000000000c601c : ret 0x775
0x000000000002c1b7 : ret 0x7773
0x000000000006dfb6 : ret 0x778d
0x00000000000b3006 : ret 0x77e
0x00000000000f2ae3 : ret 0x77e8
0x0000000000083345 : ret 0x7874
0x0000000000073a1a : ret 0x790
0x00000000000a708a : ret 0x7901
0x0000000000002eb4 : ret 0x793b
0x00000000000e1e9b : ret 0x79e9
0x000000000006e039 : ret 0x7a8b
0x0000000000117a57 : ret 0x7a8d
0x0000000000036635 : ret 0x7c7
0x00000000000ef713 : ret 0x7c83
0x00000000000dc9a6 : ret 0x7c8b
0x00000000001300e0 : ret 0x7de9
0x000000000008c9c2 : ret 0x7e20
0x00000000000fc153 : ret 0x7e8
0x00000000000d9a8a : ret 0x7eb
0x0000000000087e1c : ret 0x7f10
0x000000000014b7fe : ret 0x80
0x00000000000d896c : ret 0x839
0x00000000000d8bdc : ret 0x83b
0x0000000000049ab1 : ret 0x841
0x00000000000f98a4 : ret 0x862
0x000000000008cad5 : ret 0x876
0x0000000000109f1c : ret 0x87e
0x00000000000ed6da : ret 0x91d
0x00000000000e4171 : ret 0x944
0x00000000000437b6 : ret 0x948
0x000000000008b518 : ret 0x94c
0x0000000000003750 : ret 0x975
0x00000000000ec7cf : ret 0x9be
0x000000000002ec01 : ret 0x9e8
0x000000000005c451 : ret 0xa
0x00000000000716ea : ret 0xa6
0x0000000000041cea : ret 0xa77
0x0000000000081863 : ret 0xa7e
0x000000000003ddc4 : ret 0xaba
0x00000000000d0846 : ret 0xae9
0x00000000000c2f44 : ret 0xb
0x00000000001ac4e1 : ret 0xb3
0x0000000000037cfe : ret 0xb74
0x000000000007e601 : ret 0xb76
0x0000000000022202 : ret 0xb8
0x00000000000bee63 : ret 0xb9
0x00000000000c36ee : ret 0xbb8
0x00000000000daf1f : ret 0xbe8
0x0000000000006b09 : ret 0xc
0x000000000004ca83 : ret 0xc0
0x00000000000a2b71 : ret 0xc75
0x000000000008d089 : ret 0xc88
0x00000000000c9381 : ret 0xc8d
0x0000000000085474 : ret 0xcb8
0x00000000000a6899 : ret 0xceb
0x00000000000a762e : ret 0xd
0x00000000000ad7b2 : ret 0xd3e
0x0000000000031e1a : ret 0xd6e
0x000000000010beb8 : ret 0xd72
0x00000000000f8b66 : ret 0xd74
0x00000000000f1cd6 : ret 0xd77
0x0000000000176bc5 : ret 0xd8f
0x00000000000a55b6 : ret 0xd96
0x00000000000aab1a : ret 0xdbe
0x000000000004764d : ret 0xde8
0x0000000000005951 : ret 0xe
0x00000000000703f2 : ret 0xe8
0x00000000001778d8 : ret 0xec2
0x000000000008079c : ret 0xee9
0x00000000000824e2 : ret 0xf
0x000000000003108f : ret 0xf01
0x000000000007cd63 : ret 0xf02
0x000000000006e115 : ret 0xf04
0x0000000000087dd2 : ret 0xf10
0x0000000000099004 : ret 0xf20
0x000000000004f737 : ret 0xf3f
0x000000000006fa03 : ret 0xf40
0x000000000002c519 : ret 0xf41
0x00000000000afb17 : ret 0xf44
0x00000000000263cf : ret 0xf48
0x00000000000509d1 : ret 0xf4a
0x000000000003650b : ret 0xf66
0x0000000000089739 : ret 0xfc3
0x0000000000031061 : ret 0xfdf
0x00000000000a8a0b : ret 0xfe9
0x00000000000a9075 : ret 0xfeb
0x0000000000083d82 : ret 0xfec
0x000000000014d371 : ret 0xff2
0x00000000000989ca : ret 0xff3
0x00000000000f31a6 : ret 0xfff2
0x0000000000000e20 : ret 1
0x0000000000001010 : ret 2
0x0000000000004901 : ret 3
0x0000000000046023 : ret 4
0x000000000002d142 : ret 5
0x000000000015970a : ret 6
0x00000000000018ec : ret 7
0x000000000008cbb5 : ret 8
0x00000000000e075e : ret 9
0x0000000000194e94 : retf -0x138a ; jmp qword ptr [rdx]
0x000000000001f6a7 : retf -0x31c7 ; cmovge eax, edx ; jmp 0x1f67a
0x0000000000090b1f : retf -0x7af1 ; call qword ptr [rsi]
0x000000000018cf50 : retf -0x895 ; call rsp
0x0000000000179d48 : retf -0xc38 ; call qword ptr [rcx + 0xffffffffd0fff3d1]
0x00000000000f5ea2 : retf -0xd6b ; dec dword ptr [rcx + 0xffffffffffffff8b] ; call rbx
0x0000000000187825 : retf -5 ; ror bl, -5 ; call qword ptr [rax]
0x00000000001abc25 : retf 1 ; or dl, bl ; cmc ; call qword ptr [rax]
0x00000000001abced : retf 1 ; push rax ; fdivrp st(5) ; call qword ptr [rax]
0x00000000001abd05 : retf ; add dword ptr [rax], eax ; fdivrp st(5) ; call qword ptr [rax]
0x0000000000188b9d : retf ; add dword ptr [rax], eax ; outsb dx, byte ptr [rsi] ; mov gs, ecx ; call rsp
0x000000000017a805 : retf ; hlt ; call rsp
0x000000000017a801 : retf ; hlt ; push qword ptr [rbx + rcx*8] ; hlt ; call rsp
0x000000000017a7ad : retf ; hlt ; push qword ptr [rsp + rcx*8] ; hlt ; call rsp
0x000000000018e439 : retf ; stc ; call rsp
0x0000000000187829 : retf ; sti ; call qword ptr [rax]
0x00000000001aeb24 : retf ; xchg ebp, esi ; jmp qword ptr [rdx]
0x00000000001877d4 : rol ah, -5 ; call qword ptr [rax]
0x000000000018781c : rol bh, 1 ; sti ; jmp qword ptr [rax]
0x0000000000097bfd : rol bl, -0x70 ; bsr eax, eax ; add rax, rdi ; ret
0x00000000000a48dd : rol bl, -0x70 ; mov eax, 1 ; ret
0x00000000000a1f65 : rol bl, 0x48 ; mov eax, edi ; ret
0x0000000000075eac : rol bl, 1 ; mov eax, 0xffffffff ; ret
0x000000000008cc2d : rol bl, 1 ; nop ; xor eax, eax ; ret
0x000000000008935e : rol bl, 1 ; xor edx, edx ; mov eax, edx ; ret
0x00000000000487f7 : rol byte ptr [rax + 0x375003f], 0x5b ; ret
0x00000000000989a2 : rol byte ptr [rax + 0x48], -0x7d ; ret 0x4840
0x0000000000089952 : rol byte ptr [rax + 0x49], 0x39 ; ret 0x2774
0x000000000018839c : rol byte ptr [rax + 0xffffffff8052fffc], cl ; cld ; call rdx
0x00000000000c6f9c : rol byte ptr [rax + 0xffffffff940f5df9], cl ; ret -0x72b8
0x0000000000172760 : rol byte ptr [rax + rax], 0 ; ret 4
0x000000000007931d : rol byte ptr [rax], 0 ; add byte ptr [rcx + rcx*4 + 0xffffffffffffffc2], al ; jmp 0x792bb
0x0000000000160f7d : rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret -0x7cf1
0x0000000000189a95 : rol byte ptr [rax], 0 ; in al, 0x4d ; in eax, dx ; jmp rsp
0x000000000005e82c : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov eax, edx ; pop rbx ; ret
0x00000000001210f3 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; mov qword ptr [rsp], rax ; call qword ptr [r11]
0x00000000000f82a5 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000b21a7 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000036e60 : rol byte ptr [rax], 1 ; add byte ptr [rax], al ; ret
0x00000000000bad84 : rol byte ptr [rbp + 0x31], cl ; fild dword ptr [rbp + 0x31] ; ror byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x00000000000fac12 : rol byte ptr [rbp + 0x490f48d2], -0x3e ; jmp 0xfac1d
0x00000000000945c2 : rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret -0x3f7b
0x00000000000201c1 : rol byte ptr [rbp + 0xffffffff950f41c0], cl ; ret -0x7cbf
0x0000000000037a29 : rol byte ptr [rbp + 0xffffffffc0940fd2], -0x3d ; xor eax, eax ; ret
0x0000000000064ef5 : rol byte ptr [rbp + 0xffffffffc09f0fdb], 0x29 ; ret
0x0000000000089979 : rol byte ptr [rbp + 0xffffffffeb6275d2], 1 ; ror byte ptr [rcx + 0x39], 1 ; ret
0x00000000000c8127 : rol byte ptr [rbp + 0xffffffffffffff85], cl ; rol byte ptr [rcx + 0xf], -0x6b ; ret -0x76bc
0x00000000000f6440 : rol byte ptr [rbp + 0xffffffffffffff89], -9 ; mov rax, qword ptr [rbp + 0xffffffffffffffb8] ; call rax
0x00000000000ce123 : rol byte ptr [rbx + 0xf4104f8], cl ; xchg eax, esp ; ret -0x2a17
0x00000000000cde92 : rol byte ptr [rbx + 0xf4104f8], cl ; xchg eax, esp ; ret -0x74b8
0x00000000000cd3bd : rol byte ptr [rbx + 0xf4104f8], cl ; xchg eax, esp ; ret -0x76bc
0x0000000000027eac : rol byte ptr [rbx + 0xffffffff894104f8], 1 ; ret
0x00000000000c6d94 : rol byte ptr [rbx + 0xffffffff940f01fa], -0x40 ; ret
0x000000000002fee1 : rol byte ptr [rbx + 0xffffffff940f80e7], -0x40 ; ret
0x00000000000fe5b4 : rol byte ptr [rbx + 0xffffffff960f09ff], -0x40 ; ret
0x000000000010b7f9 : rol byte ptr [rbx + 0xffffffffdb1901f8], -0x7d ; ret
0x00000000000385cb : rol byte ptr [rbx + 0xffffffffe88302e0], 1 ; ret
0x00000000000345ab : rol byte ptr [rbx + 0xfffffffff88303e0], cl ; add ecx, dword ptr [rdi] ; xchg eax, esp ; ret 0x70e9
0x00000000000712f7 : rol byte ptr [rbx + rcx*4 + 3], 0xf ; xchg eax, esp ; ret -0x2509
0x0000000000121d35 : rol byte ptr [rbx], -0x7d ; ret -0x7cfd
0x00000000000a3ba2 : rol byte ptr [rbx], 0 ; add byte ptr [rax], al ; ret
0x0000000000114d5d : rol byte ptr [rbx], 0x25 ; cld ; inc dword ptr [rcx] ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000f70a2 : rol byte ptr [rbx], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000000b85cb : rol byte ptr [rcx + 0x29], 1 ; ret
0x000000000004b96e : rol byte ptr [rcx + 0x39], 1 ; ret
0x000000000005e651 : rol byte ptr [rcx + 0x5c], 1 ; ret
0x0000000000070ed1 : rol byte ptr [rcx + 0x5c], cl ; jmp rax
0x0000000000094dfd : rol byte ptr [rcx + 0x5e], 1 ; ret
0x00000000000a26d1 : rol byte ptr [rcx + 0xbfff], cl ; add byte ptr [rdi], cl ; popfq ; ret -0x157f
0x00000000000c812a : rol byte ptr [rcx + 0xf], -0x6b ; ret -0x76bc
0x00000000000d47ce : rol byte ptr [rcx + 0xf], -0x6b ; ret -0x7bf1
0x00000000000201c3 : rol byte ptr [rcx + 0xf], -0x6b ; ret -0x7cbf
0x0000000000080d48 : rol byte ptr [rcx + 0xf], -0x6c ; ret
0x00000000000892fd : rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret -0x7cbf
0x00000000000b2f78 : rol byte ptr [rcx + 0xf], cl ; ret -0x8bf
0x00000000000aef58 : rol byte ptr [rcx + 0xf], cl ; xchg eax, ebp ; ret
0x00000000000961f0 : rol byte ptr [rcx + 0xf], cl ; xchg eax, ebp ; ret 0x5474
0x0000000000096efe : rol byte ptr [rcx + 0xffffffffffffff83], cl ; ret -0x7cfb
0x00000000000b7fba : rol byte ptr [rcx + 0xffffffffffffff83], cl ; stc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbf
0x00000000000db9de : rol byte ptr [rcx + 0xffffffffffffff89], 1 ; ret
0x00000000001234cb : rol byte ptr [rcx + 0xffffffffffffff89], cl ; ror byte ptr [rcx + rcx*4 + 0xffffffffffffffff], -0x77 ; ret
0x00000000000d4c05 : rol byte ptr [rcx + rax*2], 0x39 ; ret 0x697e
0x0000000000104a1a : rol byte ptr [rcx + rbp + 0xffffffffffffffc8], 1 ; ret
0x00000000000bb073 : rol byte ptr [rcx + rbp + 0xffffffffffffffe2], 0xf ; ret 0x144
0x00000000000bc0d8 : rol byte ptr [rcx + rbp + 0xffffffffffffffea], 0xf ; ret 0x144
0x000000000002bc59 : rol byte ptr [rcx + rcx*2], 0x39 ; ret
0x000000000018f210 : rol byte ptr [rcx], -0x17 ; call rax
0x0000000000102632 : rol byte ptr [rcx], -0x3a ; jmp qword ptr [rax]
0x0000000000106fa9 : rol byte ptr [rcx], -0x77 ; ret -0x76b8
0x000000000002d242 : rol byte ptr [rcx], -0x7d ; ret -0x7cff
0x00000000000d4957 : rol byte ptr [rcx], -0x7d ; ret 0x4001
0x00000000000a2537 : rol byte ptr [rcx], -0x7d ; ret 0x4101
0x00000000000374b5 : rol byte ptr [rcx], -9 ; ret 0
0x00000000000a3b82 : rol byte ptr [rcx], 0 ; add byte ptr [rax], al ; ret
0x000000000018bf3d : rol byte ptr [rcx], 0 ; mov ah, 0x2a ; cmc ; jmp rsp
0x00000000000e4409 : rol byte ptr [rcx], 0x39 ; ret
0x0000000000047362 : rol byte ptr [rcx], 0x39 ; ret -0x4781
0x00000000000dd26a : rol byte ptr [rcx], 0x39 ; ror byte ptr [rdi], 1 ; ret -0x3cc7
0x000000000003827a : rol byte ptr [rcx], 0x48 ; cmp eax, edx ; jne 0x38270 ; xor eax, eax ; ret
0x000000000003835a : rol byte ptr [rcx], 0x48 ; cmp eax, edx ; jne 0x38350 ; xor eax, eax ; ret
0x00000000001882f0 : rol byte ptr [rdi + 0xffffffff8750fffc], -4 ; jmp rax
0x0000000000179310 : rol byte ptr [rdi + 0xfffffffffffffff2], -1 ; rol byte ptr [rdi + 0xfffffffffffffff2], 1 ; jmp rax
0x0000000000179314 : rol byte ptr [rdi + 0xfffffffffffffff2], 1 ; jmp rax
0x00000000000a3be2 : rol byte ptr [rdi], 0 ; add byte ptr [rax], al ; ret
0x00000000000da53e : rol byte ptr [rdx + 0x39], 0x34 ; xchg dword ptr [rbx + rbp*8 + 0x39], edi ; ret -0x3e77
0x00000000001a3210 : rol byte ptr [rdx + rsi*8], 1 ; jmp rdx
0x00000000000235b3 : rol byte ptr [rdx], -0x77 ; add al, 0x24 ; call rbx
0x00000000000a3b92 : rol byte ptr [rdx], 0 ; add byte ptr [rax], al ; ret
0x000000000018e7e5 : rol byte ptr [rdx], 0 ; and al, 0x3d ; cli ; call rsp
0x00000000000c29d6 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; mov eax, esi ; ret
0x00000000000fb005 : rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; pop rax ; pop rdi ; call rax
0x00000000001b7ce0 : rol byte ptr [rdx], cl ; add byte ptr [rax], al ; ret 6
0x0000000000065d7e : rol byte ptr [rsi + 0xffffffffffffff89], 0x2c ; cmp dword ptr [rcx], ebp ; ret
0x00000000001b3940 : rol byte ptr [rsi + 0xfffffffffffffff7], 1 ; jmp qword ptr [rax]
0x00000000001b5e60 : rol byte ptr [rsi], -5 ; jmp qword ptr [rdx]
0x00000000000a3bd2 : rol byte ptr [rsi], 0 ; add byte ptr [rax], al ; ret
0x00000000001880b4 : rol byte ptr [rsp + rdi*8 + 0xffffffffffffffff], 1 ; push rax ; cld ; call rax
0x00000000000376d7 : rol cl, -0x17 ; add esi, esi ; ret -0xcfc
0x00000000001738a0 : rol cl, -0x3e ; ret
0x000000000012b0bf : rol cl, 1 ; call -0x7f2a582a
0x000000000012b012 : rol cl, 1 ; call -0x7f2a58d7
0x000000000012ae48 : rol cl, 1 ; call -0x7f2a5aa1
0x00000000000b2e76 : rol cl, 1 ; clc ; add eax, 0x89d02944 ; ret
0x00000000000b306b : rol cl, 1 ; clc ; add eax, 0xfd02944 ; scasd eax, dword ptr es:[rdi] ; ret
0x0000000000111d51 : rol dh, 2 ; add byte ptr [rcx + 0x5c], al ; ret
0x00000000000552cb : rol dword ptr [r9 + 0x39], 1 ; ror byte ptr [rdi], -0x73 ; ret
0x00000000000a3b2c : rol dword ptr [rax + 0x1e740fe1], 1 ; ret
0x00000000000009ef : rol dword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x00000000000e2a71 : rol dword ptr [rax], 0 ; add byte ptr [rax + 0xffffffffffffff88], al ; mov ah, 0x24 ; ret 0
0x00000000000d4db7 : rol dword ptr [rax], 0 ; add byte ptr [rcx + 0xffffffffffffff83], cl ; ret 0x4c01
0x0000000000097bf7 : rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x00000000000552cc : rol dword ptr [rcx + 0x39], 1 ; ror byte ptr [rdi], -0x73 ; ret
0x00000000000604fb : rol dword ptr [rcx + 0xf], -0x4a ; or al, -0x77 ; ret -0x1540
0x00000000000e416d : rol dword ptr [rcx + 0xf], 1 ; xchg eax, ebx ; ret 0x944
0x0000000000034632 : rol dword ptr [rcx], -0x7d ; cli ; or al, byte ptr [rbp + 0xf] ; ret -0x7cb8
0x000000000018bf55 : rol dword ptr [rcx], 0 ; xor al, 0x3b ; cmc ; call rsp
0x00000000000d839f : rol dword ptr [rcx], 0x39 ; ret -0x298b
0x0000000000035ad5 : rol dword ptr [rcx], 0x3c ; pop rdi ; je 0x35aeb ; jmp 0x35a9f
0x0000000000049c1a : rol dword ptr [rcx], 0xf ; mov dh, 0x41 ; dec dword ptr [rax + 0xffffffffffffff83] ; ret -0x77ff
0x00000000001ac37d : rol dword ptr [rcx], 1 ; add byte ptr [rax + 0xffffffffffffffe3], ah ; cmc ; call qword ptr [rax]
0x00000000001ac395 : rol dword ptr [rcx], 1 ; add byte ptr [rax + 0xffffffffffffffe3], bl ; cmc ; jmp rbx
0x00000000001ac5ad : rol dword ptr [rcx], cl ; add al, ah ; in eax, -0xb ; call qword ptr [rax]
0x00000000001ac5c5 : rol dword ptr [rcx], cl ; add al, bl ; in eax, -0xb ; call qword ptr [rbx]
0x00000000001ac595 : rol dword ptr [rcx], cl ; add al, ch ; in eax, -0xb ; call qword ptr [rax]
0x000000000009fbb9 : rol dword ptr [rdi], cl ; add byte ptr [rax], al ; ret
0x0000000000118c06 : rol dword ptr [rdx], 0x41 ; mov dword ptr [rax], edi ; mov qword ptr [r9], rcx ; ret
0x0000000000037885 : rol eax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x00000000000009ee : rol qword ptr [rax + 0x4260a120], cl ; ret 0x4021
0x0000000000037884 : rol rax, cl ; and qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000010d1d2 : ror ax, 8 ; ret
0x0000000000187828 : ror bl, -5 ; call qword ptr [rax]
0x000000000003bad8 : ror byte ptr [r15], -0x7c ; ret 1
0x00000000000376a4 : ror byte ptr [rax + 0x21], 1 ; add al, -0x29 ; xor eax, eax ; ret
0x0000000000037886 : ror byte ptr [rax + 0x21], 7 ; xor eax, eax ; ret
0x00000000000361a2 : ror byte ptr [rax + 0x21], cl ; ret 0x4866
0x000000000008caa2 : ror byte ptr [rax + 0x29], -0x3e ; jbe 0x8cae0 ; add rax, rdi ; ret
0x00000000000897ff : ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x0000000000098fde : ror byte ptr [rax + 0x29], 1 ; enter -0x2d7c, 0x74 ; cmp dh, dh ; ret 0x7501
0x00000000000fc885 : ror byte ptr [rax + 0x39], -0x36 ; cmovae rax, rsi ; ret
0x00000000001086d8 : ror byte ptr [rax + 0x39], -6 ; setae al ; ret
0x00000000000b18cf : ror byte ptr [rax + 0x39], 1 ; ret -0x61f1
0x0000000000039027 : ror byte ptr [rax + 0x39], 1 ; ret -0x76b7
0x000000000003950f : ror byte ptr [rax + 0x39], 1 ; ret -0x76b8
0x000000000002611a : ror byte ptr [rax + 0x39], cl ; ret
0x000000000009871b : ror byte ptr [rax + 0x48c07503], -0x7d ; ret
0x000000000010981a : ror byte ptr [rax + 0x48e97507], -0x77 ; clc ; ret
0x00000000000c88f6 : ror byte ptr [rax + 0x63], 4 ; xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x00000000000b590a : ror byte ptr [rax + 0x63], cl ; adc al, -0x69 ; add rdx, rdi ; jmp rdx
0x0000000000046f75 : ror byte ptr [rax + 0xf], 0x44 ; ret
0x00000000000f861e : ror byte ptr [rax + 0xf], 0x48 ; ret -0x3eb8
0x000000000011df08 : ror byte ptr [rax + 0xf], cl ; ret -0x74b4
0x00000000000fa672 : ror byte ptr [rax + 0xf], cl ; ret -0x76b8
0x00000000000a4b54 : ror byte ptr [rax + 0xf], cl ; ret -0x7ab8
0x00000000000fac14 : ror byte ptr [rax + 0xf], cl ; ret 0x2eb
0x0000000000097c92 : ror byte ptr [rax + 0xffffffffffffff83], -0x16 ; adc byte ptr [rax + 1], cl ; ret 0x147c
0x0000000000097c72 : ror byte ptr [rax + 0xffffffffffffff83], -0x16 ; and byte ptr [rax + 1], cl ; ret 0x347c
0x0000000000097c52 : ror byte ptr [rax + 0xffffffffffffff83], -0x16 ; xor byte ptr [rax + 1], cl ; ret 0x547c
0x000000000003cef4 : ror byte ptr [rax + 0xffffffffffffff83], -0x3c ; adc byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000007674f : ror byte ptr [rax + 0xffffffffffffff83], -0x3c ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000000edad0 : ror byte ptr [rax + 0xffffffffffffff83], -0x3c ; movzx rax, al ; ret
0x000000000003c2ed : ror byte ptr [rax + 0xffffffffffffff83], -0x3c ; or byte ptr [rbx + 0x5d], bl ; ret
0x0000000000046664 : ror byte ptr [rax + 0xffffffffffffff83], -0x3c ; or byte ptr [rdi], cl ; mov dh, -0x40 ; ret
0x0000000000136d4d : ror byte ptr [rax + 0xffffffffffffff83], -0x3c ; pop rax ; ret
0x000000000012a608 : ror byte ptr [rax + 0xffffffffffffff83], -0x3c ; pop rbx ; pop rbp ; ret
0x0000000000137541 : ror byte ptr [rax + 0xffffffffffffff83], -0x3c ; ret
0x00000000000518c9 : ror byte ptr [rax + 0xffffffffffffff83], -0x3c ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x000000000012f4d7 : ror byte ptr [rax + 0xffffffffffffff83], -0x3c ; sbb byte ptr [rdi], cl ; mov dh, -0x40 ; ret
0x0000000000114433 : ror byte ptr [rax + 0xffffffffffffff83], -0x3c ; sub byte ptr [rbx + 0x5d], bl ; ret
0x00000000000c15de : ror byte ptr [rax + 0xffffffffffffff83], -6 ; dec dword ptr [rax + 0xf] ; ret 0x48c3
0x00000000000f57de : ror byte ptr [rax + 0xffffffffffffff83], 0x3e ; add byte ptr [rdx + rax + 0x5b], dh ; ret
0x0000000000081e76 : ror byte ptr [rax + 0xffffffffffffff83], 1 ; call -0x3d6e9972
0x000000000012f48c : ror byte ptr [rax + 0xffffffffffffff83], 1 ; in al, dx ; or byte ptr [rax + 0xffffffffffffff89], -0x30 ; pop rbx ; ret
0x00000000000230a4 : ror byte ptr [rax + 0xffffffffffffff83], 1 ; jmp 0x230e1
0x000000000003f5d6 : ror byte ptr [rax + 0xffffffffffffff83], 1 ; ret
0x000000000003c3c0 : ror byte ptr [rax + 0xffffffffffffff83], 1 ; ret 0x4801
0x0000000000050aef : ror byte ptr [rax + 0xffffffffffffff83], 1 ; ret 0x4803
0x000000000010d36d : ror byte ptr [rax + 0xffffffffffffff83], 1 ; ret 0xf01
0x00000000000725b8 : ror byte ptr [rax + 0xffffffffffffff83], cl ; clc ; dec dword ptr [rdi] ; xchg eax, esp ; ret -0x2509
0x00000000000ec273 : ror byte ptr [rax + 0xffffffffffffff83], cl ; in al, dx ; jo 0xec26f ; ret 0x4840
0x0000000000047df0 : ror byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x000000000002965a : ror byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4804
0x0000000000028567 : ror byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4806
0x000000000009e1c6 : ror byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4810
0x00000000000712f4 : ror byte ptr [rax + 0xffffffffffffff85], cl ; rol byte ptr [rbx + rcx*4 + 3], 0xf ; xchg eax, esp ; ret -0x2509
0x000000000010b832 : ror byte ptr [rax + 0xffffffffffffff89], -0x1b ; pop rbp ; ret
0x00000000001252e8 : ror byte ptr [rax + 0xffffffffffffff89], -0x2a ; add rdi, 0x10 ; jmp rcx
0x0000000000122379 : ror byte ptr [rax + 0xffffffffffffff89], -0x3d ; jne 0x122312 ; xor eax, eax ; pop rbx ; ret
0x0000000000097879 : ror byte ptr [rax + 0xffffffffffffff89], 0xa ; ret
0x000000000003cdd8 : ror byte ptr [rax + 0xffffffffffffff89], 0xf ; mov qword ptr [rdi + 8], rdx ; ret
0x000000000010b946 : ror byte ptr [rax + 0xffffffffffffff89], 1 ; adc eax, 0x2b7e72 ; pop rbp ; ret
0x000000000008645c : ror byte ptr [rax + 0xffffffffffffff89], 1 ; ret
0x0000000000035429 : ror byte ptr [rax + 0xffffffffffffff89], 1 ; ret -0x1d7f
0x00000000000b4b05 : ror byte ptr [rax + 0xffffffffffffff89], 1 ; ret -0x72b8
0x0000000000079f35 : ror byte ptr [rax + 0xffffffffffffff89], 1 ; ret -0x74b8
0x000000000003d44a : ror byte ptr [rax + 0xffffffffffffff89], 1 ; ret -0x769a
0x0000000000050def : ror byte ptr [rax + 0xffffffffffffff89], 1 ; ret 0x38e8
0x0000000000128456 : ror byte ptr [rax + 0xffffffffffffff89], 2 ; mov eax, 1 ; ret
0x00000000000f4325 : ror byte ptr [rax + 0xffffffffffffff89], 5 ; ret
0x00000000000b1123 : ror byte ptr [rax + 0xffffffffffffff8d], 0x14 ; add byte ptr [rax + 1], cl ; ret -0x72b8
0x00000000000c3370 : ror byte ptr [rax + 0xffffffffffffff8d], 0x44 ; add bh, bh ; ret
0x000000000008ca62 : ror byte ptr [rax + 0xffffffffffffff8d], 0x44 ; cmp al, dh ; ret
0x000000000008ca92 : ror byte ptr [rax + 0xffffffffffffff8d], 0x44 ; cmp byte ptr [rax], ah ; ret
0x0000000000097c32 : ror byte ptr [rax + 0xffffffffffffff8d], 0x44 ; cmp byte ptr [rax], dh ; ret
0x000000000008ca82 : ror byte ptr [rax + 0xffffffffffffff8d], 0x44 ; cmp byte ptr [rax], dl ; ret
0x000000000010b9ac : ror byte ptr [rax + 0xffffffffffffff8d], 1 ; cmp eax, 0xfffffe8c ; call rax
0x00000000000b5dc2 : ror byte ptr [rax + 0xffffffffffffffba], 1 ; ret
0x00000000000b0f05 : ror byte ptr [rax + 0xffffffffffffffc1], 1 ; call -0x3dcba7b4
0x000000000008cc25 : ror byte ptr [rax + 0xffffffffffffffd3], -6 ; movzx edx, dl ; sub eax, edx ; ret
0x000000000007453a : ror byte ptr [rax + 0xfffffffffffffff7], cl ; rep pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000097d43 : ror byte ptr [rax + 1], -8 ; add rax, r8 ; ret
0x000000000009449c : ror byte ptr [rax + 1], -8 ; add rax, rcx ; ret
0x000000000008b3a9 : ror byte ptr [rax + 1], -8 ; ret
0x0000000000118bd3 : ror byte ptr [rax + 1], 1 ; xlatb ; mov qword ptr [r9], rdi ; ret
0x00000000000a61a9 : ror byte ptr [rax + 1], cl ; ret -0x168c
0x00000000000897fc : ror byte ptr [rax + 1], cl ; ror byte ptr [rax + 0x29], 1 ; clc ; ret
0x0000000000054edf : ror byte ptr [rax + 3], 1 ; test eax, dword ptr [rax + 0xffffffff83fffffe] ; ret -0x76f8
0x000000000004c04c : ror byte ptr [rax + 3], 1 ; test esi, dword ptr [rax + 0xffffffff83fffffb] ; ret -0x76f0
0x000000000004bfdc : ror byte ptr [rax + 3], 1 ; test esi, dword ptr [rax + 0xffffffff83fffffb] ; ret -0x76f8
0x000000000003c97a : ror byte ptr [rax + 9], -0x30 ; ret
0x00000000000fb1b3 : ror byte ptr [rax + 9], 1 ; lock or rax, rdi ; ret
0x00000000000a7ae2 : ror byte ptr [rax], -0x7d ; ret 0x4801
0x00000000001a08c0 : ror byte ptr [rax], -0xf ; jmp rcx
0x000000000008b704 : ror byte ptr [rax], cl ; leave ; cmove rax, rdx ; ret
0x0000000000095b6e : ror byte ptr [rbp + 0x29], cl ; ret -0x74ba
0x00000000000a6104 : ror byte ptr [rbp + 0xffffffff840f0142], 1 ; ret 0
0x0000000000048fb4 : ror byte ptr [rbp + 0xffffffffffffff85], cl ; dec dword ptr [rdi] ; xchg eax, ebp ; ret -0x3fcf
0x000000000004740d : ror byte ptr [rbp + 0xffffffffffffff8b], 1 ; add byte ptr [rbp + 0xffffffffffffff89], cl ; ret
0x00000000001986d6 : ror byte ptr [rbp + rbp*8 + 0xfffffffff20d1cff], -0x75 ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000131ff7 : ror byte ptr [rbx + 0x453b0840], cl ; or byte ptr [rdi], -0x6c ; ret -0x157d
0x0000000000192e0e : ror byte ptr [rbx + 0xd1cffea], -0x6a ; mov ch, dl ; jmp qword ptr [rdx]
0x00000000000c83db : ror byte ptr [rcx + 0x29], cl ; cli ; sub r10, rax ; jmp 0xc83fc
0x00000000000f2082 : ror byte ptr [rcx + 0x29], cl ; fimul dword ptr [rcx + 0x39] ; ret -0x7df1
0x000000000008997f : ror byte ptr [rcx + 0x39], 1 ; ret
0x00000000000ebe7f : ror byte ptr [rcx + 0x39], 1 ; ret 0x1b75
0x00000000000a4517 : ror byte ptr [rcx + 0x48c47503], -0x7d ; ret
0x00000000001183f4 : ror byte ptr [rcx + 0xffffffff89480c57], 0x3e ; ret
0x0000000000036afe : ror byte ptr [rcx + 0xffffffffc0314043], 0x5b ; ret
0x000000000007c0bf : ror byte ptr [rcx + 0xffffffffc4834813], 1 ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000367c4 : ror byte ptr [rcx + 0xffffffffdb102444], 1 ; insb byte ptr es:[rdi], dx ; and al, 8 ; ret
0x00000000000a44b0 : ror byte ptr [rcx + 0xfffffffff3f37510], cl ; ret
0x00000000000c1b9f : ror byte ptr [rcx + 0xffffffffffffff81], cl ; ret 0x2d0
0x0000000000092e20 : ror byte ptr [rcx + 0xffffffffffffff83], 1 ; ret
0x0000000000096167 : ror byte ptr [rcx + 0xffffffffffffff83], 1 ; ret -0x16ff
0x000000000009ddaf : ror byte ptr [rcx + 0xffffffffffffff83], 1 ; ret 0x4d10
0x0000000000124901 : ror byte ptr [rcx + 0xffffffffffffff89], 0 ; mov eax, 1 ; ret
0x00000000000b14ec : ror byte ptr [rcx + 0xffffffffffffff89], 1 ; ret -0x76b8
0x00000000001234ce : ror byte ptr [rcx + rcx*4 + 0xffffffffffffffff], -0x77 ; ret
0x00000000000fb18c : ror byte ptr [rcx], -8 ; ret
0x000000000008d419 : ror byte ptr [rdi + rcx + 0x47], 1 ; ret -0x76b4
0x00000000000c336d : ror byte ptr [rdi], -0x4a ; ror byte ptr [rax + 0xffffffffffffff8d], 0x44 ; add bh, bh ; ret
0x000000000005e20b : ror byte ptr [rdi], -0x4a ; sal bh, -0x28 ; pop rbx ; ret
0x00000000000ee0ca : ror byte ptr [rdi], -0x4a ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x000000000001f892 : ror byte ptr [rdi], -0x6b ; ret
0x000000000006eae5 : ror byte ptr [rdi], -0x6b ; ret -0x2509
0x0000000000077a86 : ror byte ptr [rdi], -0x6b ; ret -0x2d7c
0x0000000000122812 : ror byte ptr [rdi], -0x6b ; ret -0x2f77
0x00000000000a5191 : ror byte ptr [rdi], -0x6b ; ret -0x77d
0x000000000012360d : ror byte ptr [rdi], -0x6b ; ret -0x7cb8
0x0000000000077b21 : ror byte ptr [rdi], -0x6b ; ret 0x60e9
0x000000000005a7f9 : ror byte ptr [rdi], -0x6c ; ret -0x2e77
0x000000000013da3e : ror byte ptr [rdi], -0x6c ; ret -0x3f7b
0x00000000000b1b0c : ror byte ptr [rdi], -0x6c ; ret -0x6bc6
0x0000000000021e05 : ror byte ptr [rdi], -0x6c ; ret -0x72b8
0x00000000000b1a2c : ror byte ptr [rdi], -0x6c ; ret -0x77c0
0x000000000012a2af : ror byte ptr [rdi], -0x6c ; ret 0x3d83
0x00000000000c301f : ror byte ptr [rdi], -0x6e ; ret -0x2fd7
0x00000000000552cf : ror byte ptr [rdi], -0x73 ; ret
0x00000000001313af : ror byte ptr [rdi], -0x77 ; ret
0x0000000000132c67 : ror byte ptr [rdi], -0x78 ; ret 0
0x000000000007055f : ror byte ptr [rdi], -0x78 ; ret 1
0x0000000000157fba : ror byte ptr [rdi], -0x7b ; call qword ptr [rbx]
0x0000000000095f83 : ror byte ptr [rdi], -0x7b ; cmpsb byte ptr [rsi], byte ptr es:[rdi] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xffffffffffffff83], cl ; ret
0x0000000000097bbc : ror byte ptr [rdi], -0x7b ; jge 0x97bc1 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000009ca11 : ror byte ptr [rdi], -0x7b ; pop rax ; or dword ptr [rax], eax ; add cl, ch ; ret
0x000000000009b026 : ror byte ptr [rdi], -0x7b ; ret
0x0000000000099357 : ror byte ptr [rdi], -0x7b ; ret 0x13
0x00000000000d7661 : ror byte ptr [rdi], -0x7b ; ret 2
0x00000000000e33d8 : ror byte ptr [rdi], -0x7b ; ret 8
0x00000000000ae8ba : ror byte ptr [rdi], -0x7b ; scasd eax, dword ptr es:[rdi] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xffffffffffffff83], cl ; ret
0x0000000000048eb4 : ror byte ptr [rdi], -0x7c ; add al, 0 ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret 0x2948
0x0000000000094fa1 : ror byte ptr [rdi], -0x7c ; add byte ptr [rcx], 0 ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x76b4
0x000000000003bae6 : ror byte ptr [rdi], -0x7c ; ret
0x00000000000deaf2 : ror byte ptr [rdi], -0x7c ; ret 0
0x000000000003bad9 : ror byte ptr [rdi], -0x7c ; ret 1
0x000000000007e2bc : ror byte ptr [rdi], 0x1f ; add bl, dh ; ret
0x00000000000dd26d : ror byte ptr [rdi], 1 ; ret -0x3cc7
0x00000000000dea9e : ror byte ptr [rdi], 1 ; ret -0x76bc
0x00000000000d836d : ror byte ptr [rdi], 1 ; ret 0x538b
0x00000000000b3071 : ror byte ptr [rdi], 1 ; scasd eax, dword ptr es:[rdi] ; ret
0x00000000000b2f2e : ror byte ptr [rdi], 1 ; scasd eax, dword ptr es:[rdi] ; ret 0x67ba
0x0000000000049aae : ror byte ptr [rdi], 1 ; xchg eax, ebx ; ret 0x841
0x0000000000097cdd : ror byte ptr [rdi], cl ; mov ebp, 0xf80148c0 ; ret
0x0000000000048828 : ror byte ptr [rdi], cl ; ret -0x3ca5
0x00000000000fa6f8 : ror byte ptr [rdi], cl ; ret -0x67b8
0x00000000000dbb26 : ror byte ptr [rdi], cl ; ret -0xd17
0x00000000000f8cd0 : ror byte ptr [rdi], cl ; ret 0x66c3
0x000000000010051f : ror byte ptr [rdi], cl ; test eax, edx ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x00000000001005ef : ror byte ptr [rdi], cl ; test esi, edx ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x00000000000e6ece : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret
0x00000000000b1862 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret -0x2ec8
0x00000000000dbc30 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret -0x3df7
0x00000000000b1be9 : ror byte ptr [rdi], cl ; xchg eax, ebp ; ret -0x49f1
0x000000000008683d : ror byte ptr [rdi], cl ; xchg eax, esp ; ret
0x00000000001880d8 : ror byte ptr [rdx + 0xffffffff8a50fffc], -4 ; jmp rax
0x0000000000187860 : ror byte ptr [rdx], 1 ; cld ; call rax
0x000000000017b220 : ror byte ptr [rsi + 0xfffffffffffffff6], 1 ; call rax
0x0000000000187868 : ror byte ptr [rsi], 1 ; cld ; call rax
0x0000000000187864 : ror byte ptr [rsp + rdi*8], 1 ; call rax
0x00000000000cc3e9 : ror dword ptr [r8 + 0x39], -0xd ; ja 0xcc380 ; pop rbx ; pop rbp ; ret
0x00000000000cc3ea : ror dword ptr [rax + 0x39], -0xd ; ja 0xcc380 ; pop rbx ; pop rbp ; ret
0x000000000012f90d : ror dword ptr [rax + 0x4800154c], -0x7d ; ret 0x4101
0x00000000000c2b41 : ror dword ptr [rax + 0x63], cl ; ret
0x00000000000f857c : ror dword ptr [rax + 0xf], cl ; ret
0x00000000000397c5 : ror dword ptr [rax + 0xffffffffffffff83], cl ; in al, dx ; cmp dh, dh ; ret 0x7401
0x00000000000f8b8d : ror dword ptr [rax + 0xffffffffffffff89], 1 ; fadd st(6) ; add al, byte ptr [rax] ; pop rbx ; ret
0x000000000002ac9c : ror dword ptr [rax + 0xffffffffffffff89], 1 ; fimul word ptr [rax + 0xffffffffffffff89] ; ret -0x76b8
0x0000000000029a02 : ror dword ptr [rax + 0xffffffffffffff89], 1 ; ret -0x48f1
0x00000000000e2fd2 : ror dword ptr [rax + 0xffffffffffffff89], 1 ; ret -0x74b8
0x00000000000c7464 : ror dword ptr [rax + 0xffffffffffffff89], cl ; ret
0x00000000000d57a5 : ror dword ptr [rax + 0xffffffffffffff8b], cl ; push rbx ; adc byte ptr [rax + 0x39], cl ; ret 0x574
0x000000000007559e : ror dword ptr [rax + 0xffffffffffffff8d], 0x41 ; adc byte ptr [rdi], cl ; xchg eax, ebx ; ret 0x3948
0x000000000012bb62 : ror dword ptr [rax + 0xffffffffffffffc7], 1 ; ret -2
0x000000000013db88 : ror dword ptr [rax + 1], -8 ; ret
0x000000000013da48 : ror dword ptr [rax + 1], -8 ; sub rax, rsi ; ret
0x000000000003e084 : ror dword ptr [rax + 1], 1 ; ret -0x74b8
0x0000000000132782 : ror dword ptr [rax + 1], cl ; ret
0x00000000000d2869 : ror dword ptr [rcx + 0x47892c47], 0x30 ; ret
0x000000000002652e : ror dword ptr [rcx + 0x7b808], 1 ; add byte ptr [rax], al ; jmp 0x264fa
0x00000000000c88b1 : ror dword ptr [rcx + 0xffffffffffffff89], cl ; ret 0x1f0f
0x000000000003e905 : ror dword ptr [rcx + 0xffffffffffffffc1], cl ; sti ; add cl, byte ptr [rcx + 0x29] ; ret
0x0000000000051fb2 : ror dword ptr [rcx + 1], 1 ; ret -0x72b3
0x00000000001630c7 : ror dword ptr [rcx], cl ; ret -0x1f8c
0x0000000000097b55 : ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], -8 ; ret
0x000000000003e47d : ror dword ptr [rdi], -0x6b ; ret -0x2cb7
0x00000000000d3b59 : ror dword ptr [rdi], -0x6e ; ret -0x2ec8
0x00000000000f0f35 : ror dword ptr [rdi], -0x6e ; ret -0x3380
0x00000000001617e8 : ror dword ptr [rdi], -0x7b ; adc byte ptr [rdx], cl ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000161ef4 : ror dword ptr [rdi], -0x7b ; add al, 3 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000161cc6 : ror dword ptr [rdi], -0x7b ; add eax, 0xc0310000 ; ret
0x0000000000162df0 : ror dword ptr [rdi], -0x7b ; cmp al, 2 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000161c46 : ror dword ptr [rdi], -0x7b ; cmpsb byte ptr [rsi], byte ptr es:[rdi] ; add eax, 0xc0310000 ; ret
0x0000000000161f84 : ror dword ptr [rdi], -0x7b ; je 0x161f8b ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000161a7b : ror dword ptr [rdi], -0x7b ; jno 0x161a87 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000161b43 : ror dword ptr [rdi], -0x7b ; mov ch, 6 ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001617c0 : ror dword ptr [rdi], -0x7b ; sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000012ff04 : ror dword ptr [rdi], -0x7c ; wait ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffffc7], cl ; ret -1
0x0000000000134bbb : ror dword ptr [rdi], 0x1f ; add bl, sil ; ret
0x00000000000ee0ac : ror dword ptr [rdi], 1 ; xchg eax, edx ; ret -0x68f1
0x00000000000b3167 : ror dword ptr [rdi], 1 ; xchg eax, esp ; ret
0x0000000000082676 : ror dword ptr [rdi], cl ; xchg dword ptr [rcx + 0xfffffffff6000005], edi ; ret
0x0000000000080c6a : ror dword ptr [rdi], cl ; xchg eax, ebp ; ret -0x7cb8
0x0000000000166599 : ror dword ptr [rsi + 0x1f0fffeb], cl ; add bl, dh ; ret
0x000000000010d1d3 : ror eax, 8 ; ret
0x00000000000620cc : sahf ; add byte ptr [rax], al ; add byte ptr [rbx + 0xffffffffffee94bd], al ; call qword ptr [rax]
0x000000000006241b : sahf ; add byte ptr [rax], al ; add byte ptr [rbx + 0xffffffffffeee8bd], al ; call qword ptr [rax]
0x00000000001a903d : sahf ; add dword ptr [rax], eax ; loopne 0x1a9077 ; cmc ; jmp qword ptr [rax]
0x000000000018ba5d : sahf ; add dword ptr [rax], eax ; mov r14b, bl ; jmp rsp
0x00000000000cb7ae : sahf ; fdivp st(3) ; dec dword ptr [rax + 1] ; ret
0x00000000000025c2 : sahf ; jl 0x2552 ; loop 0x259d ; ret 0x23cb
0x0000000000187418 : sahf ; movsd dword ptr es:[rdi], dword ptr [rsi] ; std ; jmp qword ptr [rax + 0xffffffffd1fffda6]
0x000000000013e9be : sahf ; or dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x000000000019d8a1 : sahf ; out dx, al ; jmp qword ptr [rcx]
0x00000000000f073e : sahf ; ret
0x00000000000b18d4 : sahf ; ret -0x163f
0x00000000000b7fc0 : sahf ; ret 0x1fbf
0x0000000000117d9e : sahf ; ret 0x2a
0x0000000000175085 : sahf ; ret 0x38ae
0x000000000000243f : sahf ; sbb byte ptr [rax], cl ; ret 0x5576
0x00000000001b7200 : sal ah, -9 ; call rcx
0x00000000001879a0 : sal al, -5 ; call qword ptr [rax]
0x00000000001a0afd : sal al, cl ; jmp qword ptr [rdx]
0x00000000000f2e0d : sal bh, -0x28 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012a2e5 : sal bh, -0x28 ; add rsp, 0x20 ; pop rbx ; ret
0x000000000012a8c4 : sal bh, -0x28 ; add rsp, 0x38 ; pop rbx ; pop rbp ; ret
0x0000000000102af2 : sal bh, -0x28 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000005e20e : sal bh, -0x28 ; pop rbx ; ret
0x0000000000022c2a : sal bh, -0x28 ; ret
0x00000000000a2826 : sal bh, -0xf ; pop rbx ; mov eax, eax ; ret
0x00000000001879f4 : sal bh, -5 ; call qword ptr [rax]
0x0000000000088237 : sal bh, 1 ; ret -0x10
0x0000000000088737 : sal bh, 1 ; ret -0x100
0x0000000000088c37 : sal bh, 1 ; ret -0x1000
0x0000000000088377 : sal bh, 1 ; ret -0x20
0x0000000000088877 : sal bh, 1 ; ret -0x200
0x0000000000088d77 : sal bh, 1 ; ret -0x2000
0x00000000000884b7 : sal bh, 1 ; ret -0x40
0x00000000000889b7 : sal bh, 1 ; ret -0x400
0x0000000000088eb7 : sal bh, 1 ; ret -0x4000
0x00000000000885f7 : sal bh, 1 ; ret -0x80
0x0000000000088af7 : sal bh, 1 ; ret -0x800
0x0000000000088ff7 : sal bh, 1 ; ret -0x8000
0x0000000000087e77 : sal bh, 1 ; ret -2
0x0000000000087fb7 : sal bh, 1 ; ret -4
0x00000000000880f7 : sal bh, 1 ; ret -8
0x000000000004f2cc : sal bh, cl ; int1 ; add r8d, eax ; mov eax, r8d ; ret
0x0000000000179edd : sal bl, 1 ; jmp qword ptr [rsi]
0x000000000003862b : sal bl, 1 ; ret
0x00000000001879e8 : sal bl, 1 ; sti ; jmp qword ptr [rax]
0x0000000000179e7d : sal bl, cl ; jmp qword ptr [rsi]
0x00000000000a432f : sal byte ptr [rax + rbx + 0x49], -0x7d ; ret 0x4908
0x00000000000e2f91 : sal byte ptr [rax + rdi + 0xf], -0x4a ; xor byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x680
0x0000000000129f75 : sal byte ptr [rax + rsi*2 + 0xffffffffffffff8b], 0x50 ; adc dh, dh ; ret 0x7401
0x000000000008ca58 : sal byte ptr [rbp + 0x55], 0x48 ; xor eax, eax ; ret
0x000000000008b780 : sal byte ptr [rbp + 0xd], 0x48 ; add esp, 8 ; ret
0x000000000005dbe0 : sal byte ptr [rbp + 0xd], 0x48 ; mov eax, ebx ; pop rbx ; ret
0x000000000009805b : sal byte ptr [rbp + 0xffffffffffffff9d], 0x48 ; mov eax, edi ; ret
0x00000000000e4fc0 : sal byte ptr [rbp + 0xffffffffffffffa0], cl ; mov edx, dword ptr [r12 + 4] ; jmp 0xe4f8c
0x000000000012e18f : sal byte ptr [rbp + 0xffffffffffffffbc], -0x15 ; ret 0x1f0f
0x00000000001090cc : sal byte ptr [rbp + 0xffffffffffffffc1], -0x37 ; ret
0x00000000000a420a : sal byte ptr [rbp + 0xffffffffffffffcb], -0xd ; ret
0x0000000000098b4b : sal byte ptr [rbp + 0xffffffffffffffe2], 0x31 ; shr byte ptr [rcx], -0x38 ; ret
0x00000000000976fa : sal byte ptr [rbp + 0xffffffffffffffe3], -0xd ; ret
0x000000000012c576 : sal byte ptr [rbp + 0xffffffffffffffe7], cl ; pop rbx ; ret
0x000000000010ca5c : sal byte ptr [rbp + 0xffffffffffffffe9], -0xd ; ret
0x00000000000a20d0 : sal byte ptr [rbp + 0xffffffffffffffed], cl ; lea rax, qword ptr [rcx + 0xffffffffffffffff] ; ret
0x000000000003827e : sal byte ptr [rbp + 0xffffffffffffffef], 1 ; xor eax, eax ; ret
0x0000000000108fce : sal byte ptr [rbp + 0xffffffffffffffef], cl ; leave ; ret
0x000000000007d215 : sal byte ptr [rbp + 0xfffffffffffffff0], -0xd ; ret
0x0000000000108cd0 : sal byte ptr [rbp + 0xfffffffffffffff1], 0x5a ; pop r10 ; ret
0x0000000000050323 : sal byte ptr [rbp + 5], -0xa ; ret 0x7450
0x00000000001086e7 : sal byte ptr [rbp + 6], -0x48 ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000036bc7 : sal byte ptr [rbp + 6], -0xd ; ret
0x0000000000108dc4 : sal byte ptr [rbp + 9], -0xd ; ret
0x0000000000122274 : sal byte ptr [rbp + 9], 0x5b ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x00000000001203a6 : sal byte ptr [rbp + rax + 0x48], -0x77 ; out dx, eax ; call rax
0x0000000000127436 : sal byte ptr [rbp + rax + 0x48], cl ; mov edi, ebp ; call rdx
0x0000000000121f75 : sal byte ptr [rbp + rax + 0x4c], cl ; mov edi, esp ; call rdx
0x0000000000089461 : sal byte ptr [rbp + rax + 0x5b], 0x5d ; pop r12 ; ret
0x0000000000041cef : sal byte ptr [rbp + rdx + 0x4c], 0x39 ; ret 0x1075
0x00000000001a60c0 : sal byte ptr [rbx + 0xfffffffffffffff4], 1 ; jmp qword ptr [rcx]
0x00000000001873a8 : sal byte ptr [rbx + 0xfffffffffffffffb], 1 ; jmp qword ptr [rax]
0x00000000000f3e12 : sal byte ptr [rbx + rax + 0x48], -0x77 ; adc bl, dh ; ret
0x0000000000089922 : sal byte ptr [rbx + rbx + 0x48], cl ; bsf eax, edx ; ret
0x00000000000c1059 : sal byte ptr [rbx + rcx + 0x48], -0x7d ; ret
0x00000000000f45a5 : sal byte ptr [rbx + rcx + 0x48], -0x7d ; ret 0x4808
0x000000000012b8f2 : sal byte ptr [rbx + rcx + 0x48], 1 ; add esp, 8 ; ret
0x0000000000031901 : sal byte ptr [rbx + rdx + 0x48], -0x7d ; ret 0x4901
0x0000000000120e3a : sal byte ptr [rcx + 0x48], -0x75 ; sbb ecx, dword ptr [rax + 0xffffffffffffff83] ; ret
0x000000000006aa8c : sal byte ptr [rcx + 0x48], -0x77 ; ret
0x00000000001040c2 : sal byte ptr [rcx + rcx + 0x48], -0x75 ; adc byte ptr [rax + 0x39], cl ; ret
0x0000000000104997 : sal byte ptr [rcx + rcx + 0xffffffffffffff89], cl ; ret -0x153f
0x000000000012b87d : sal byte ptr [rcx + rdx*8 + 0x64], 0x48 ; mov dword ptr [rbx], eax ; pop rbx ; ret
0x00000000001086d6 : sal byte ptr [rcx], 1 ; ror byte ptr [rax + 0x39], -6 ; setae al ; ret
0x00000000001950de : sal byte ptr [rdi + 0xffffffffffffffec], -1 ; sbb al, 0xd ; cmp dh, byte ptr [rdi + 0xffffffffffffffec] ; jmp qword ptr [rdx]
0x000000000002173c : sal byte ptr [rdx + rax*2 + 0xfffffffffffffff6], cl ; ret 0x7401
0x000000000013db83 : sal byte ptr [rdx + rbx*8 + 0x48], 0x63 ; ror dword ptr [rax + 1], -8 ; ret
0x0000000000089733 : sal byte ptr [rdx + rcx + 0x48], cl ; bsf eax, edx ; ret
0x0000000000098fe3 : sal byte ptr [rdx + rdi + 0xfffffffffffffff6], cl ; ret 0x7501
0x0000000000087993 : sal byte ptr [rdx + rdx + 0x48], -1 ; ret 0x2288
0x0000000000097cdb : sal byte ptr [rdx + rdx*8 + 0xf], -0x43 ; ror byte ptr [rax + 1], -8 ; ret
0x000000000018731c : sal byte ptr [rdx], 1 ; sti ; push qword ptr [rax + 0x34] ; sti ; call qword ptr [rax]
0x00000000001312c7 : sal byte ptr [rsi + rax + 0x31], -0x40 ; ret
0x000000000012534a : sal byte ptr [rsi + rax + 0x48], -0x73 ; jge 0x125361 ; call rax
0x000000000012c5fa : sal byte ptr [rsi + rax + 0x48], -0x73 ; jge 0x12c611 ; call rax
0x000000000012cd03 : sal byte ptr [rsi + rax + 0x48], -0x73 ; jge 0x12cd1a ; call rax
0x000000000012836e : sal byte ptr [rsi + rax + 0x48], -0x73 ; jnp 0x1283dd ; call rax
0x0000000000128d9e : sal byte ptr [rsi + rax + 0x48], -0x73 ; jnp 0x128dfd ; call rax
0x00000000000896d7 : sal byte ptr [rsi + rsi*2 + 0x48], cl ; bsf eax, edx ; ret
0x0000000000190b20 : sal ch, -0x17 ; call qword ptr [rcx]
0x00000000001ab491 : sal ch, cl ; jmp qword ptr [rsi]
0x000000000018b351 : sal cl, -1 ; lodsb al, byte ptr [rsi] ; insb byte ptr es:[rdi], dx ; add dword ptr [rax], eax ; ret -0xf
0x00000000001a1aa1 : sal cl, 1 ; call rsi
0x00000000001a1e19 : sal cl, cl ; jmp qword ptr [rbx]
0x00000000000a2749 : sal dh, -0x3a ; lock je 0xa2712 ; movzx eax, dl ; pop rbx ; ret
0x00000000000d2a61 : sal dh, -0x3f ; add dword ptr [rbp + 0xffffffffffffff87], esi ; pop rbx ; ret
0x000000000017b4f5 : sal dh, 1 ; jmp qword ptr [rdx]
0x00000000000fade5 : sal dh, cl ; and al, 0x29 ; or byte ptr [rdi], -0x6b ; ret -0x3015
0x000000000017b511 : sal dh, cl ; call qword ptr [rcx + 0x22fff6cf]
0x000000000017b559 : sal dh, cl ; call rax
0x000000000017b501 : sal dh, cl ; jmp qword ptr [rdx]
0x0000000000097745 : sal dword ptr [rax + rsi*8 + 0xfffffffffffffff3], 1 ; ret
0x00000000000366b1 : sal dword ptr [rbp + 0xc], 0x48 ; add esp, 8 ; ret
0x00000000000a3d68 : sal dword ptr [rbp + 0xffffffffffffffe5], 1 ; sub eax, r8d ; nop ; ret
0x00000000000363d6 : sal dword ptr [rbp + 7], 0x48 ; add esp, 8 ; ret
0x00000000000433f6 : sal dword ptr [rcx + 0x48], 0x39 ; ret
0x0000000000097877 : sal dword ptr [rcx], -0x40 ; mov qword ptr [rdx], rcx ; ret
0x000000000008961d : sal dword ptr [rcx], 1 ; ret
0x00000000000376d5 : sal dword ptr [rcx], 1 ; rol cl, -0x17 ; add esi, esi ; ret -0xcfc
0x000000000019c04c : sal dword ptr [rdi], cl ; out dx, al ; jmp qword ptr [rdx]
0x00000000001ab551 : sal ebp, cl ; jmp qword ptr [rsi]
0x0000000000179cc1 : sal ebx, 1 ; call rax
0x0000000000179ea5 : sal ebx, 1 ; jmp qword ptr [rsi]
0x0000000000179ea1 : sal ebx, cl ; push qword ptr [rax] ; sal ebx, 1 ; jmp qword ptr [rsi]
0x000000000017b55d : sal esi, 1 ; jmp qword ptr [rdx]
0x000000000018eb25 : salc ; add al, byte ptr [rax] ; movsb byte ptr es:[rdi], byte ptr [rsi] ; cdq ; cli ; jmp rsp
0x00000000000ad0a2 : salc ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffffc7], cl ; ret
0x0000000000163106 : salc ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x00000000001ac845 : salc ; add dword ptr [rax], eax ; call 0x111abe33
0x00000000001ac815 : salc ; add dword ptr [rax], eax ; clc ; out -0xb, al ; call qword ptr [rax]
0x00000000001ac82d : salc ; add dword ptr [rax], eax ; lock out -0xb, al ; call qword ptr [rax]
0x000000000001f6a5 : salc ; add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x1f67a
0x00000000001252eb : salc ; add rdi, 0x10 ; jmp rcx
0x0000000000143776 : salc ; add rdi, rdx ; add r9, r11 ; jmp r9
0x0000000000165ea1 : salc ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007eb33 : salc ; call qword ptr [rax]
0x0000000000107059 : salc ; call rax
0x0000000000118b9f : salc ; ja 0x118b84 ; mov eax, 0xffffffff ; ret
0x00000000001897b1 : salc ; jmp 0x1897b3
0x00000000001948b5 : salc ; jmp 0x1948b7
0x00000000001948fd : salc ; jmp 0x1948ff
0x000000000002e2a2 : salc ; jmp r14
0x0000000000083552 : salc ; mov byte ptr [rax + rbx], sil ; pop rbx ; ret
0x000000000008935c : salc ; mov eax, edx ; ret
0x0000000000001bec : salc ; mov ebp, dword ptr [rsi + rbx*8 + 0x6d] ; ret 0x1bb7
0x000000000019d47c : salc ; pop rbx ; out dx, al ; jmp qword ptr [rdx]
0x00000000000e4815 : salc ; pop rbx ; pop rbp ; xor eax, eax ; pop r12 ; ret
0x0000000000187c10 : salc ; pop rsi ; cld ; inc dword ptr [rsi + 0x65] ; cld ; call rsi
0x00000000000022d4 : salc ; ret
0x00000000000025c6 : salc ; ret 0x23cb
0x000000000018efc9 : salc ; sti ; call rsp
0x00000000001379f3 : salc ; sub byte ptr [rax], al ; test eax, eax ; jne 0x137a00 ; xor eax, eax ; ret
0x0000000000137a23 : salc ; sub byte ptr [rax], al ; test eax, eax ; jne 0x137a30 ; xor eax, eax ; ret
0x0000000000137a53 : salc ; sub byte ptr [rax], al ; test eax, eax ; jne 0x137a60 ; xor eax, eax ; ret
0x00000000000a55af : salc ; xchg eax, esi ; or eax, 0x358d4800 ; ret 0xd96
0x000000000008170b : salc ; xor eax, dword ptr [rax] ; xor edi, edi ; call qword ptr [rax]
0x00000000001a5350 : sar al, -0xd ; jmp qword ptr [rdi]
0x0000000000177b61 : sar bh, 1 ; jmp qword ptr [rdi]
0x000000000005a53d : sar bh, cl ; dec dword ptr [rax + 0xffffffffffffff83] ; ret -0x14f8
0x000000000004c6a5 : sar bh, cl ; dec dword ptr [rax + 0xffffffffffffff89] ; ret 0x31eb
0x00000000001877d1 : sar bl, -1 ; rol ah, -5 ; call qword ptr [rax]
0x00000000001877f9 : sar bl, 1 ; jmp rax
0x00000000000d2f51 : sar byte ptr [rax + 0x25], -0x77 ; ret -0x74b7
0x0000000000136502 : sar byte ptr [rax + 0xb], 0x48 ; add esp, 8 ; pop rbx ; pop rbp ; ret
0x00000000000e3bac : sar byte ptr [rax + 0xffffffffbc80fff3], 0x24 ; ret
0x000000000012f5f1 : sar byte ptr [rax + 1], cl ; jne 0x12f600 ; ret
0x000000000012f631 : sar byte ptr [rax + 1], cl ; jne 0x12f640 ; ret
0x0000000000084767 : sar byte ptr [rax + 6], -0xd ; ret
0x000000000007207c : sar byte ptr [rax + 9], -0xd ; ret
0x00000000000d2a35 : sar byte ptr [rax], 0xe ; je 0xd29c2 ; pop rbx ; ret
0x0000000000196e6e : sar byte ptr [rbx + 0xffffffffffffffed], -1 ; sbb al, 0xd ; jo 0x196ef1 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019973e : sar byte ptr [rcx + 0xd1cffed], 1 ; jge 0x1996ff ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000fafd3 : sar byte ptr [rdi + rdi + 0x74], 1 ; ret
0x000000000018733c : sar byte ptr [rdi], 1 ; sti ; push qword ptr [rax + 0x41] ; sti ; call qword ptr [rax]
0x00000000001b4ac0 : sar byte ptr [rdx + 0xfffffffffffffff7], 1 ; call qword ptr [rdx]
0x0000000000002b61 : sar byte ptr [rdx], cl ; adc al, -0x19 ; ret
0x00000000000f6db6 : sar byte ptr [rsi + 1], cl ; mov rdi, rbp ; call rbx
0x0000000000175a1f : sar byte ptr [rsi + rax*2], -8 ; mov ch, 0x36 ; push rcx ; call qword ptr [rsi]
0x0000000000056704 : sar ch, -1 ; dec dword ptr [rcx + 0xffffffffffffff89] ; ret -0x74b8
0x00000000000e5763 : sar ch, cl ; dec dword ptr [rax + 0xffffffffffffffc7] ; ret -1
0x000000000019b794 : sar cl, 1 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000005a53c : sar dil, cl ; dec dword ptr [rax + 0xffffffffffffff83] ; ret -0x14f8
0x00000000001a2f70 : sar dl, -0xf ; jmp qword ptr [rcx]
0x0000000000036791 : sar eax, 0x10 ; ret
0x000000000003645b : sar eax, 0x1f ; not eax ; and eax, ecx ; ret
0x00000000000c03a9 : sar eax, 0x1f ; pop rbx ; ret
0x00000000001339e4 : sar eax, 0x1f ; ret
0x000000000003674a : sar eax, 0x1f ; sub edx, ecx ; not eax ; and eax, edx ; ret
0x000000000003609d : sar eax, 0x3f ; not eax ; and eax, ecx ; ret
0x0000000000003a9d : sar eax, 1 ; cmp eax, ecx ; mov bl, -9 ; adc bh, byte ptr [rax] ; cwde ; ret
0x0000000000075d8c : sar eax, 2 ; lea eax, dword ptr [r8 + 0xffffffffffffffff] ; ret
0x0000000000077e50 : sar eax, 2 ; mov qword ptr [rcx], rax ; xor eax, eax ; pop rbx ; ret
0x0000000000073b0a : sar eax, 2 ; ret
0x00000000000a459b : sar eax, 2 ; sub rdx, rax ; jmp 0xa452d
0x000000000010b76d : sar eax, 6 ; ret
0x00000000001792b5 : sar ebp, -1 ; push rax ; ret
0x00000000001792d1 : sar ebp, 1 ; jmp rax
0x00000000001792d5 : sar ebp, cl ; jmp qword ptr [rax]
0x0000000000175783 : sar ecx, 1 ; jnp 0x175740 ; ret
0x00000000000693a3 : sar edi, 1 ; dec dword ptr [rax + 0xffffffffffffff83] ; ret -0x14f8
0x000000000004c809 : sar edi, 1 ; dec dword ptr [rax + 0xffffffffffffff89] ; ret 0x1beb
0x000000000003c924 : sar edx, 0x1f ; xor eax, edx ; sub eax, edx ; ret
0x000000000003c937 : sar edx, 0x3f ; xor rax, rdx ; sub rax, rdx ; ret
0x00000000000f79b7 : sar edx, cl ; dec dword ptr [rax + 0x39] ; ret
0x000000000008cc27 : sar edx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000075d8b : sar r8, 2 ; lea eax, dword ptr [r8 + 0xffffffffffffffff] ; ret
0x000000000003609c : sar rax, 0x3f ; not eax ; and eax, ecx ; ret
0x0000000000073b09 : sar rax, 2 ; ret
0x00000000000a459a : sar rax, 2 ; sub rdx, rax ; jmp 0xa452d
0x000000000010b76c : sar rax, 6 ; ret
0x000000000008cc26 : sar rdx, cl ; movzx edx, dl ; sub eax, edx ; ret
0x0000000000187b61 : sbb ah, bh ; jmp qword ptr [rax]
0x0000000000022e8a : sbb ah, byte ptr [rax] ; call rax
0x0000000000173a49 : sbb ah, ch ; call rcx
0x000000000017a2d1 : sbb ah, dh ; call qword ptr [rdi]
0x00000000001ab778 : sbb ah, dl ; cmc ; jmp qword ptr [rsi]
0x000000000019e10c : sbb al, -0x11 ; add byte ptr [rax], al ; push rax ; clc ; out dx, al ; jmp qword ptr [rsi]
0x0000000000029c0c : sbb al, -0x15 ; ret -0x76b8
0x000000000019cc0c : sbb al, -0x26 ; add byte ptr [rax], al ; xor byte ptr [rdx + 0xffffffffffffffee], ah ; jmp qword ptr [rsi]
0x0000000000179cf0 : sbb al, -0x43 ; rep inc esp ; ret -0xd
0x00000000000d1873 : sbb al, -0x48 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; ret
0x00000000001a8e0c : sbb al, -0x64 ; add dword ptr [rax], eax ; xor byte ptr [rax], dh ; cmc ; jmp qword ptr [rcx]
0x00000000000e3848 : sbb al, -0x66 ; add rbx, r10 ; jmp rbx
0x00000000001a7a0c : sbb al, -0x78 ; add dword ptr [rax], eax ; rcr ch, -0xc ; call rbx
0x00000000000f48a3 : sbb al, -0x7d ; ret
0x000000000017a305 : sbb al, -0xc ; jmp qword ptr [rsi]
0x00000000000b79e2 : sbb al, -3 ; dec dword ptr [rax + 0xffffffffffffff89] ; jmp 0x48ce0334
0x0000000000187b6d : sbb al, -4 ; call qword ptr [rax]
0x000000000019b440 : sbb al, 0 ; add byte ptr [rax], al ; push rsp ; ret 0
0x000000000018f20c : sbb al, 0 ; add byte ptr [rax], al ; rol byte ptr [rcx], -0x17 ; call rax
0x00000000000cc2e9 : sbb al, 0 ; add byte ptr [rax], al ; syscall ; neg eax ; ret
0x000000000010705e : sbb al, 0x20 ; je 0x1070bf ; xor eax, eax ; pop rbx ; ret
0x0000000000101154 : sbb al, 0x2c ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x76b8
0x00000000001a320c : sbb al, 0x40 ; add dword ptr [rax], eax ; rol byte ptr [rdx + rsi*8], 1 ; jmp rdx
0x0000000000002f64 : sbb al, 0x44 ; nop ; ret 0x5bdb
0x0000000000193b0c : sbb al, 0x49 ; add byte ptr [rax], al ; and byte ptr [rdx], dh ; jmp 0x193b13
0x00000000001ac22c : sbb al, 0x72 ; add dword ptr [rax], eax ; loope 0x1ac228 ; call qword ptr [rcx]
0x0000000000196c0c : sbb al, 0x7a ; add byte ptr [rax], al ; nop ; lahf ; in eax, dx ; call rbx
0x0000000000000454 : sbb al, 0xc ; ret 0x4412
0x000000000019381a : sbb al, 0xd ; adc al, -0x15 ; jmp qword ptr [rdx]
0x00000000001a29ba : sbb al, 0xd ; adc al, -0x70 ; int1 ; jmp qword ptr [rdx]
0x0000000000193f4a : sbb al, 0xd ; adc al, 0x3a ; jmp 0x193f4f
0x00000000001ad0ca : sbb al, 0xd ; adc al, 0x68 ; cmc ; jmp qword ptr [rdx]
0x000000000019b6ba : sbb al, 0xd ; adc dh, bh ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000195f5a : sbb al, 0xd ; adc dh, byte ptr [rcx + 0xffffffffffffffed] ; jmp qword ptr [rdx]
0x000000000019a832 : sbb al, 0xd ; adc dl, bl ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ae29a : sbb al, 0xd ; adc dword ptr [rdi + 0xfffffffffffffff5], edi ; jmp qword ptr [rdx]
0x0000000000199f8a : sbb al, 0xd ; adc ebx, ebx ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a9dea : sbb al, 0xd ; adc esp, ecx ; hlt ; jmp qword ptr [rdx]
0x00000000001ad82a : sbb al, 0xd ; add al, 0x71 ; cmc ; jmp qword ptr [rdx]
0x00000000001a146a : sbb al, 0xd ; add al, 0x74 ; int1 ; jmp qword ptr [rdx]
0x00000000001954c2 : sbb al, 0xd ; add byte ptr [rdi + 0xffffffffffffffec], bh ; jmp qword ptr [rdx]
0x00000000001963ea : sbb al, 0xd ; add dh, byte ptr [rdx + 0xffffffffffffffed] ; jmp qword ptr [rdx]
0x000000000019b74a : sbb al, 0xd ; add dl, bh ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000193a12 : sbb al, 0xd ; add dword ptr [rsi], edx ; jmp 0x193a17
0x000000000019bc5a : sbb al, 0xd ; add dword ptr [rsi], esp ; out dx, al ; jmp qword ptr [rdx]
0x0000000000196ae2 : sbb al, 0xd ; add edi, dword ptr [rdx + 0xffffffffffffffed] ; jmp qword ptr [rdx]
0x00000000001b0012 : sbb al, 0xd ; add esp, eax ; cmc ; jmp qword ptr [rdx]
0x000000000019a712 : sbb al, 0xd ; and cl, bl ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000194a8a : sbb al, 0xd ; and ebp, eax ; jmp 0x194a8f
0x0000000000195fea : sbb al, 0xd ; and esi, dword ptr [rcx + 0xffffffffffffffed] ; jmp qword ptr [rdx]
0x00000000001b0e72 : sbb al, 0xd ; and r14, r14 ; jmp qword ptr [rdx]
0x00000000001a3d5a : sbb al, 0xd ; bts ebx, esi ; jmp qword ptr [rdx]
0x000000000018f722 : sbb al, 0xd ; call 0x2318e075
0x00000000001abe8a : sbb al, 0xd ; call 0x231ab3e9
0x00000000001aeeda : sbb al, 0xd ; call 0x231ae469
0x00000000001ad8f2 : sbb al, 0xd ; clc ; jno 0x1ad8ec ; jmp qword ptr [rdx]
0x000000000019c242 : sbb al, 0xd ; cld ; cmp ebp, esi ; jmp qword ptr [rdx]
0x00000000001acea2 : sbb al, 0xd ; cli ; cmc ; jmp qword ptr [rdx]
0x00000000001a2352 : sbb al, 0xd ; cmc ; test esi, ecx ; jmp qword ptr [rdx]
0x00000000001b062a : sbb al, 0xd ; cmp al, -0x10 ; cmc ; jmp qword ptr [rdx]
0x000000000019b702 : sbb al, 0xd ; cmp al, -8 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001959da : sbb al, 0xd ; cmp al, 0x6c ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001960fa : sbb al, 0xd ; cmp al, 0x71 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ac06a : sbb al, 0xd ; cmp bl, byte ptr [rcx + 0xfffffffffffffff5] ; jmp qword ptr [rdx]
0x000000000019c0da : sbb al, 0xd ; cmp byte ptr [rax], bh ; out dx, al ; jmp qword ptr [rdx]
0x00000000001ad8aa : sbb al, 0xd ; cmp byte ptr [rcx + 0xfffffffffffffff5], dh ; jmp qword ptr [rdx]
0x00000000001a76da : sbb al, 0xd ; cmp ch, byte ptr [rbx + 0xfffffffffffffff4] ; jmp qword ptr [rdx]
0x000000000018f76a : sbb al, 0xd ; cmp cl, byte ptr [rbp + 0xffffffffffffffe9] ; jmp qword ptr [rdx]
0x00000000001950e2 : sbb al, 0xd ; cmp dh, byte ptr [rdi + 0xffffffffffffffec] ; jmp qword ptr [rdx]
0x000000000019c362 : sbb al, 0xd ; cmp dword ptr [rdi], edi ; out dx, al ; jmp qword ptr [rdx]
0x00000000001b0552 : sbb al, 0xd ; cmp edi, ebp ; cmc ; jmp qword ptr [rdx]
0x0000000000194ffa : sbb al, 0xd ; cmp esi, dword ptr [rdi + 0xffffffffffffffec] ; jmp qword ptr [rdx]
0x0000000000193f92 : sbb al, 0xd ; cmp rbp, rbx ; jmp qword ptr [rdx]
0x00000000001a2732 : sbb al, 0xd ; cmpsb byte ptr [rsi], byte ptr es:[rdi] ; mov cl, dh ; jmp qword ptr [rdx]
0x00000000001a069a : sbb al, 0xd ; cmpsd dword ptr [rsi], dword ptr es:[rdi] ; mov dh, -0x10 ; jmp qword ptr [rdx]
0x00000000001acc7a : sbb al, 0xd ; cwde ; cmc ; jmp qword ptr [rdx]
0x000000000019a682 : sbb al, 0xd ; cwde ; fsubr st(5) ; jmp qword ptr [rdx]
0x000000000019c31a : sbb al, 0xd ; ds ; out dx, al ; jmp qword ptr [rdx]
0x00000000001a0bd2 : sbb al, 0xd ; f2xm1 ; jmp qword ptr [rdx]
0x000000000019424a : sbb al, 0xd ; fadd dword ptr [rdx + 0xffffffffffffffeb] ; jmp qword ptr [rdx]
0x00000000001938aa : sbb al, 0xd ; fcom qword ptr [rbx + rbp*8] ; jmp qword ptr [rdx]
0x0000000000196b62 : sbb al, 0xd ; fdivr dword ptr [rdx + 0xffffffffffffffed] ; jmp qword ptr [rdx]
0x00000000001aaad2 : sbb al, 0xd ; fdivr st(0), st(0) ; hlt ; jmp qword ptr [rdx]
0x00000000001a994a : sbb al, 0xd ; fdivr st(4), st(0) ; jmp qword ptr [rdx]
0x000000000019c632 : sbb al, 0xd ; fisttp dword ptr [rsi + 0xffffffffffffffee] ; jmp qword ptr [rdx]
0x00000000001ad002 : sbb al, 0xd ; frstor dword ptr [rdi + 0xfffffffffffffff5] ; jmp qword ptr [rdx]
0x00000000001938f2 : sbb al, 0xd ; fst qword ptr [rbx + rbp*8] ; jmp qword ptr [rdx]
0x000000000019ab4a : sbb al, 0xd ; hlt ; lock in eax, dx ; jmp qword ptr [rdx]
0x000000000019d3a2 : sbb al, 0xd ; hlt ; pop rax ; out dx, al ; jmp qword ptr [rdx]
0x0000000000197002 : sbb al, 0xd ; idiv byte ptr [rbx + 0xffffffffffffffed] ; jmp qword ptr [rdx]
0x00000000001aa71a : sbb al, 0xd ; imul ebp, ebx, -0xc ; jmp qword ptr [rdx]
0x00000000001aff82 : sbb al, 0xd ; in al, -0x21 ; cmc ; jmp qword ptr [rdx]
0x000000000019a99a : sbb al, 0xd ; in al, dx ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019bca2 : sbb al, 0xd ; in al, dx ; sub dh, ch ; jmp qword ptr [rdx]
0x00000000001ae9ea : sbb al, 0xd ; in eax, -0x79 ; cmc ; jmp qword ptr [rdx]
0x00000000001afeaa : sbb al, 0xd ; in eax, dx ; fcompi st(5) ; jmp qword ptr [rdx]
0x00000000001a1712 : sbb al, 0xd ; in eax, dx ; jae 0x1a1708 ; jmp qword ptr [rdx]
0x00000000001add22 : sbb al, 0xd ; in eax, dx ; js 0x1add1c ; jmp qword ptr [rdx]
0x000000000019c43a : sbb al, 0xd ; inc dword ptr [rsi + 0xffffffffffffffee] ; jmp qword ptr [rdx]
0x0000000000195902 : sbb al, 0xd ; insb byte ptr es:[rdi], dx ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019690a : sbb al, 0xd ; insb byte ptr es:[rdi], dx ; ja 0x1968fc ; jmp qword ptr [rdx]
0x0000000000192e5a : sbb al, 0xd ; insd dword ptr es:[rdi], dx ; mov ch, dl ; jmp qword ptr [rdx]
0x000000000019b8fa : sbb al, 0xd ; int1 ; cld ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001aab1a : sbb al, 0xd ; int1 ; hlt ; jmp qword ptr [rdx]
0x0000000000196a9a : sbb al, 0xd ; int1 ; jns 0x196a8c ; jmp qword ptr [rdx]
0x00000000001aef22 : sbb al, 0xd ; int1 ; mov ch, dh ; jmp qword ptr [rdx]
0x00000000001ac6aa : sbb al, 0xd ; int1 ; pop rdx ; cmc ; jmp qword ptr [rdx]
0x00000000001b1e72 : sbb al, 0xd ; into ; cmp esi, esi ; jmp qword ptr [rdx]
0x00000000001a1c9a : sbb al, 0xd ; into ; jl 0x1a1c90 ; jmp qword ptr [rdx]
0x00000000001aeffa : sbb al, 0xd ; iretd ; mov ch, dh ; jmp qword ptr [rdx]
0x0000000000194fb2 : sbb al, 0xd ; ja 0x194fa3 ; jmp qword ptr [rdx]
0x00000000001ae552 : sbb al, 0xd ; ja 0x1ae4d6 ; cmc ; jmp qword ptr [rdx]
0x0000000000193fda : sbb al, 0xd ; jae 0x194019 ; jmp 0x193fdf
0x00000000001951aa : sbb al, 0xd ; jae 0x195225 ; in al, dx ; jmp qword ptr [rdx]
0x000000000019668a : sbb al, 0xd ; jae 0x196702 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001982d2 : sbb al, 0xd ; jae 0x19825d ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000197d2a : sbb al, 0xd ; jb 0x197cb0 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001aa6d2 : sbb al, 0xd ; jb 0x1aa6c0 ; hlt ; jmp qword ptr [rdx]
0x000000000019687a : sbb al, 0xd ; jbe 0x19686c ; jmp qword ptr [rdx]
0x00000000001968c2 : sbb al, 0xd ; jbe 0x19693d ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000196332 : sbb al, 0xd ; je 0x1963a7 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a161a : sbb al, 0xd ; je 0x1a1610 ; jmp qword ptr [rdx]
0x00000000001a1662 : sbb al, 0xd ; je 0x1a1658 ; jmp qword ptr [rdx]
0x00000000001a1d6a : sbb al, 0xd ; je 0x1a1deb ; int1 ; jmp qword ptr [rdx]
0x00000000001adac2 : sbb al, 0xd ; je 0x1adb3e ; cmc ; jmp qword ptr [rdx]
0x00000000001aa8d2 : sbb al, 0xd ; jg 0x1aa8c1 ; hlt ; jmp qword ptr [rdx]
0x00000000001996b2 : sbb al, 0xd ; jge 0x19966f ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000199742 : sbb al, 0xd ; jge 0x1996ff ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000197cba : sbb al, 0xd ; jl 0x197c40 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019831a : sbb al, 0xd ; jl 0x1982a6 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001994e2 : sbb al, 0xd ; jl 0x19949f ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a1b6a : sbb al, 0xd ; jl 0x1a1b60 ; jmp qword ptr [rdx]
0x00000000001a1bca : sbb al, 0xd ; jl 0x1a1bc0 ; jmp qword ptr [rdx]
0x00000000001adf42 : sbb al, 0xd ; jl 0x1adf3c ; jmp qword ptr [rdx]
0x00000000001adf8a : sbb al, 0xd ; jl 0x1adf84 ; jmp qword ptr [rdx]
0x00000000001adfea : sbb al, 0xd ; jl 0x1adfe4 ; jmp qword ptr [rdx]
0x00000000001ae032 : sbb al, 0xd ; jl 0x1ae02c ; jmp qword ptr [rdx]
0x0000000000196bf2 : sbb al, 0xd ; jle 0x196c71 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a1dfa : sbb al, 0xd ; jle 0x1a1df0 ; jmp qword ptr [rdx]
0x00000000001a1eda : sbb al, 0xd ; jle 0x1a1ed0 ; jmp qword ptr [rdx]
0x00000000001a1ffa : sbb al, 0xd ; jle 0x1a1ff0 ; jmp qword ptr [rdx]
0x00000000001a9e7a : sbb al, 0xd ; jmp rax
0x0000000000194322 : sbb al, 0xd ; jne 0x1942b9 ; jmp 0x194327
0x00000000001a1b22 : sbb al, 0xd ; jne 0x1a1ba2 ; int1 ; jmp qword ptr [rdx]
0x00000000001ada7a : sbb al, 0xd ; jne 0x1adaf6 ; cmc ; jmp qword ptr [rdx]
0x000000000019606a : sbb al, 0xd ; jno 0x19605c ; jmp qword ptr [rdx]
0x000000000019622a : sbb al, 0xd ; jno 0x19621c ; jmp qword ptr [rdx]
0x00000000001962a2 : sbb al, 0xd ; jno 0x196294 ; jmp qword ptr [rdx]
0x0000000000196f3a : sbb al, 0xd ; jnp 0x196fb9 ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000198112 : sbb al, 0xd ; jnp 0x19809c ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019949a : sbb al, 0xd ; jnp 0x199457 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019b822 : sbb al, 0xd ; jns 0x19b821 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001adb6a : sbb al, 0xd ; jns 0x1adbe6 ; cmc ; jmp qword ptr [rdx]
0x00000000001b05e2 : sbb al, 0xd ; jns 0x1b05d6 ; cmc ; jmp qword ptr [rdx]
0x0000000000196e72 : sbb al, 0xd ; jo 0x196ef1 ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000197d72 : sbb al, 0xd ; jo 0x197cf8 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ad7e2 : sbb al, 0xd ; jo 0x1ad7dc ; jmp qword ptr [rdx]
0x00000000001adb22 : sbb al, 0xd ; jo 0x1adb9e ; cmc ; jmp qword ptr [rdx]
0x0000000000195d42 : sbb al, 0xd ; jp 0x195db5 ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000196572 : sbb al, 0xd ; jp 0x1965e9 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019962a : sbb al, 0xd ; jp 0x1995e7 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019bf2a : sbb al, 0xd ; jp 0x19bf62 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001ae8aa : sbb al, 0xd ; jp 0x1ae833 ; cmc ; jmp qword ptr [rdx]
0x00000000001945da : sbb al, 0xd ; jrcxz 0x194596 ; jmp 0x1945df
0x0000000000197912 : sbb al, 0xd ; jrcxz 0x197897 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019a952 : sbb al, 0xd ; jrcxz 0x19a940 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001aef6a : sbb al, 0xd ; jrcxz 0x1aeef6 ; cmc ; jmp qword ptr [rdx]
0x000000000019bfba : sbb al, 0xd ; js 0x19bff5 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001adbfa : sbb al, 0xd ; js 0x1adbf4 ; jmp qword ptr [rdx]
0x000000000019a63a : sbb al, 0xd ; lahf ; fsubr st(5) ; jmp qword ptr [rdx]
0x00000000001aceea : sbb al, 0xd ; lock cmc ; jmp qword ptr [rdx]
0x0000000000192dca : sbb al, 0xd ; lodsd eax, dword ptr [rsi] ; mov ch, dl ; jmp qword ptr [rdx]
0x0000000000196432 : sbb al, 0xd ; loop 0x1964a7 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001acdda : sbb al, 0xd ; loop 0x1ace45 ; cmc ; jmp qword ptr [rdx]
0x000000000019c3f2 : sbb al, 0xd ; loopne 0x19c436 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001b0152 : sbb al, 0xd ; loopne 0x1b014c ; jmp qword ptr [rdx]
0x00000000001b019a : sbb al, 0xd ; mov ah, al ; cmc ; jmp qword ptr [rdx]
0x00000000001981d2 : sbb al, 0xd ; mov al, -0x7a ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000195af2 : sbb al, 0xd ; mov al, 0x6e ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019aa2a : sbb al, 0xd ; mov bh, -0x14 ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001aebb2 : sbb al, 0xd ; mov bh, -0x79 ; cmc ; jmp qword ptr [rdx]
0x00000000001a1972 : sbb al, 0xd ; mov bh, 0x75 ; int1 ; jmp qword ptr [rdx]
0x00000000001a2852 : sbb al, 0xd ; mov bl, -0x78 ; int1 ; jmp qword ptr [rdx]
0x0000000000195aaa : sbb al, 0xd ; mov bl, 0x6e ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000192ea2 : sbb al, 0xd ; mov bpl, dl ; jmp qword ptr [rdx]
0x00000000001962ea : sbb al, 0xd ; mov byte ptr [rcx + 0xffffffffffffffed], dh ; jmp qword ptr [rdx]
0x000000000019bd7a : sbb al, 0xd ; mov byte ptr [rdi], ch ; out dx, al ; jmp qword ptr [rdx]
0x0000000000193f02 : sbb al, 0xd ; mov ch, 0x37 ; jmp 0x193f07
0x00000000001aa2d2 : sbb al, 0xd ; mov cl, -0x18 ; hlt ; jmp qword ptr [rdx]
0x000000000019a5aa : sbb al, 0xd ; mov cl, -0x28 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019828a : sbb al, 0xd ; mov cl, -0x7a ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019c002 : sbb al, 0xd ; mov cl, 0x37 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001ab9ba : sbb al, 0xd ; mov cs, dword ptr [rdi + 0xfffffffffffffff5] ; jmp qword ptr [rdx]
0x000000000019d3ea : sbb al, 0xd ; mov dword ptr [rdx + 0xffffffffffffffee], ds ; jmp qword ptr [rdx]
0x000000000019a5f2 : sbb al, 0xd ; mov eax, ebx ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001aa88a : sbb al, 0xd ; mov ebx, gs ; hlt ; jmp qword ptr [rdx]
0x000000000019a7a2 : sbb al, 0xd ; mov ecx, ebx ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a058a : sbb al, 0xd ; mov sil, -0x10 ; jmp qword ptr [rdx]
0x00000000001a0712 : sbb al, 0xd ; movsb byte ptr es:[rdi], byte ptr [rsi] ; mov dh, -0x10 ; jmp qword ptr [rdx]
0x00000000001990da : sbb al, 0xd ; movsd dword ptr es:[rdi], dword ptr [rsi] ; stosb byte ptr es:[rdi], al ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001acd92 : sbb al, 0xd ; mul dword ptr [rdi + 0xfffffffffffffff5] ; jmp qword ptr [rdx]
0x00000000001afef2 : sbb al, 0xd ; neg bh ; cmc ; jmp qword ptr [rdx]
0x00000000001ac6f2 : sbb al, 0xd ; neg byte ptr [rdx + 0xfffffffffffffff5] ; jmp qword ptr [rdx]
0x000000000019a6ca : sbb al, 0xd ; neg eax ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000196e2a : sbb al, 0xd ; nop ; jnp 0x196e1c ; jmp qword ptr [rdx]
0x00000000001a9e32 : sbb al, 0xd ; or al, -0x1f ; hlt ; jmp qword ptr [rdx]
0x00000000001958ba : sbb al, 0xd ; or al, 0x6c ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a153a : sbb al, 0xd ; or al, 0x74 ; int1 ; jmp qword ptr [rdx]
0x00000000001923ca : sbb al, 0xd ; or ch, byte ptr [rsi + 0xffffffffffffffea] ; jmp qword ptr [rdx]
0x000000000019619a : sbb al, 0xd ; or dh, byte ptr [rcx + 0xffffffffffffffed] ; jmp qword ptr [rdx]
0x00000000001ad49a : sbb al, 0xd ; or ebp, dword ptr [rcx + 0xfffffffffffffff5] ; jmp qword ptr [rdx]
0x00000000001abf5a : sbb al, 0xd ; or ebx, dword ptr [rcx + 0xfffffffffffffff5] ; jmp qword ptr [rdx]
0x000000000019ab02 : sbb al, 0xd ; or esi, ecx ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ab92a : sbb al, 0xd ; or esp, dword ptr [rbx + rdi*8] ; jmp qword ptr [rdx]
0x000000000019baaa : sbb al, 0xd ; or r13b, r14b ; jmp qword ptr [rdx]
0x00000000001aebfa : sbb al, 0xd ; out -0x79, al ; cmc ; jmp qword ptr [rdx]
0x00000000001aa0d2 : sbb al, 0xd ; out -0xc, eax ; jmp qword ptr [rdx]
0x00000000001acf72 : sbb al, 0xd ; out 0x67, eax ; cmc ; jmp qword ptr [rdx]
0x000000000019717a : sbb al, 0xd ; outsd dx, dword ptr [rsi] ; jl 0x19716c ; jmp qword ptr [rdx]
0x000000000019d552 : sbb al, 0xd ; pop r12 ; out dx, al ; jmp qword ptr [rdx]
0x00000000001abfa2 : sbb al, 0xd ; pop r9 ; cmc ; jmp qword ptr [rdx]
0x000000000019ba62 : sbb al, 0xd ; pop rax ; cld ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000195992 : sbb al, 0xd ; pop rax ; insb byte ptr es:[rdi], dx ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001967ea : sbb al, 0xd ; pop rax ; jne 0x1967dc ; jmp qword ptr [rdx]
0x00000000001948b2 : sbb al, 0xd ; pop rbp ; salc ; jmp 0x1948b7
0x00000000001ac472 : sbb al, 0xd ; pop rbx ; cmc ; jmp qword ptr [rdx]
0x00000000001a047a : sbb al, 0xd ; pop rbx ; mov dh, -0x10 ; jmp qword ptr [rdx]
0x00000000001ac0b2 : sbb al, 0xd ; pop rcx ; cmc ; jmp qword ptr [rdx]
0x00000000001ac4ba : sbb al, 0xd ; pop rdi ; pop rbx ; cmc ; jmp qword ptr [rdx]
0x00000000001a0542 : sbb al, 0xd ; pop rdx ; mov dh, -0x10 ; jmp qword ptr [rdx]
0x00000000001af422 : sbb al, 0xd ; pop rdx ; xchg eax, esi ; cmc ; jmp qword ptr [rdx]
0x00000000001a7602 : sbb al, 0xd ; pop rsi ; hlt ; jmp qword ptr [rdx]
0x0000000000196de2 : sbb al, 0xd ; pop rsp ; jnp 0x196dd4 ; jmp qword ptr [rdx]
0x0000000000190d3a : sbb al, 0xd ; popfq ; add dl, ch ; jmp qword ptr [rdx]
0x00000000001951f2 : sbb al, 0xd ; popfq ; ja 0x1951e3 ; jmp qword ptr [rdx]
0x0000000000196a52 : sbb al, 0xd ; popfq ; jns 0x196a44 ; jmp qword ptr [rdx]
0x00000000001a26ea : sbb al, 0xd ; popfq ; mov cl, dh ; jmp qword ptr [rdx]
0x0000000000195b3a : sbb al, 0xd ; popfq ; outsb dx, byte ptr [rsi] ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001aed82 : sbb al, 0xd ; push -0x78 ; cmc ; jmp qword ptr [rdx]
0x000000000019818a : sbb al, 0xd ; push -0x7a ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000196ef2 : sbb al, 0xd ; push 0x7b ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a192a : sbb al, 0xd ; push rbp ; jne 0x1a1920 ; jmp qword ptr [rdx]
0x00000000001aab62 : sbb al, 0xd ; push rcx ; int1 ; hlt ; jmp qword ptr [rdx]
0x00000000001aa08a : sbb al, 0xd ; push rcx ; out -0xc, eax ; jmp qword ptr [rdx]
0x00000000001a0c62 : sbb al, 0xd ; push rdi ; f2xm1 ; jmp qword ptr [rdx]
0x00000000001adc42 : sbb al, 0xd ; push rdi ; js 0x1adc3c ; jmp qword ptr [rdx]
0x00000000001a764a : sbb al, 0xd ; push rdx ; hlt ; jmp qword ptr [rdx]
0x00000000001a0b42 : sbb al, 0xd ; push rdx ; sal al, cl ; jmp qword ptr [rdx]
0x000000000019c1fa : sbb al, 0xd ; push rsi ; cmp ch, dh ; jmp qword ptr [rdx]
0x000000000019904a : sbb al, 0xd ; push rsi ; cmpsb byte ptr [rsi], byte ptr es:[rdi] ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a21aa : sbb al, 0xd ; push rsi ; xchg cl, dh ; jmp qword ptr [rdx]
0x0000000000193862 : sbb al, 0xd ; push rsp ; adc al, -0x15 ; jmp qword ptr [rdx]
0x00000000001a2a02 : sbb al, 0xd ; pushfq ; nop ; int1 ; jmp qword ptr [rdx]
0x000000000019821a : sbb al, 0xd ; pushfq ; xchg ch, ch ; jmp qword ptr [rdx]
0x000000000019d432 : sbb al, 0xd ; rep pop rdx ; out dx, al ; jmp qword ptr [rdx]
0x00000000001986da : sbb al, 0xd ; repne mov ebp, ebp ; jmp qword ptr [rdx]
0x00000000001b67d2 : sbb al, 0xd ; ret
0x000000000019c1b2 : sbb al, 0xd ; ret -0x11c7
0x000000000019b9d2 : sbb al, 0xd ; ret -0x1204
0x0000000000194e92 : sbb al, 0xd ; retf -0x138a ; jmp qword ptr [rdx]
0x00000000001aeb22 : sbb al, 0xd ; retf ; xchg ebp, esi ; jmp qword ptr [rdx]
0x000000000019c04a : sbb al, 0xd ; sal dword ptr [rdi], cl ; out dx, al ; jmp qword ptr [rdx]
0x00000000001948fa : sbb al, 0xd ; salc ; jmp 0x1948ff
0x000000000019d47a : sbb al, 0xd ; salc ; pop rbx ; out dx, al ; jmp qword ptr [rdx]
0x000000000019b792 : sbb al, 0xd ; sar cl, 1 ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000194ad2 : sbb al, 0xd ; sbb ch, dl ; jmp 0x194ad7
0x00000000001aa502 : sbb al, 0xd ; sbb cl, ch ; hlt ; jmp qword ptr [rdx]
0x00000000001b0bba : sbb al, 0xd ; scasb al, byte ptr es:[rdi] ; and dh, dh ; jmp qword ptr [rdx]
0x00000000001a9ac2 : sbb al, 0xd ; scasb al, byte ptr es:[rdi] ; fdivr st(4), st(0) ; jmp qword ptr [rdx]
0x00000000001b6b72 : sbb al, 0xd ; scasb al, byte ptr es:[rdi] ; xor al, -9 ; jmp qword ptr [rdx]
0x000000000019d4c2 : sbb al, 0xd ; scasd eax, dword ptr es:[rdi] ; pop rsp ; out dx, al ; jmp qword ptr [rdx]
0x000000000019bcea : sbb al, 0xd ; shr byte ptr [rax], cl ; out dx, al ; jmp qword ptr [rdx]
0x0000000000195bf2 : sbb al, 0xd ; shr dword ptr [rsi + 0xffffffffffffffed], cl ; jmp qword ptr [rdx]
0x000000000019aaba : sbb al, 0xd ; shr esp, -0x13 ; jmp qword ptr [rdx]
0x0000000000190dca : sbb al, 0xd ; std ; add dl, ch ; jmp qword ptr [rdx]
0x00000000001ababa : sbb al, 0xd ; std ; cmc ; jmp qword ptr [rdx]
0x0000000000199fd2 : sbb al, 0xd ; std ; fucomi st(5) ; jmp qword ptr [rdx]
0x000000000019b86a : sbb al, 0xd ; sti ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019c512 : sbb al, 0xd ; sti ; out dx, al ; jmp qword ptr [rdx]
0x000000000019c3aa : sbb al, 0xd ; stosb byte ptr es:[rdi], al ; out dx, al ; jmp qword ptr [rdx]
0x00000000001977da : sbb al, 0xd ; sub al, -0x7e ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a1f6a : sbb al, 0xd ; sub al, 0x7e ; int1 ; jmp qword ptr [rdx]
0x00000000001b7022 : sbb al, 0xd ; sub al, byte ptr [rsi + 0xfffffffffffffff7] ; jmp qword ptr [rdx]
0x00000000001a1ce2 : sbb al, 0xd ; sub bh, byte ptr [rbp + 0xfffffffffffffff1] ; jmp qword ptr [rdx]
0x0000000000191122 : sbb al, 0xd ; sub byte ptr [rax], -0x16 ; jmp qword ptr [rdx]
0x000000000019512a : sbb al, 0xd ; sub byte ptr [rdi + 0xffffffffffffffec], dh ; jmp qword ptr [rdx]
0x000000000018f7b2 : sbb al, 0xd ; sub dword ptr [rbp + 0xffffffffffffffe9], ecx ; jmp qword ptr [rdx]
0x0000000000196baa : sbb al, 0xd ; sub dword ptr [rbx + 0xffffffffffffffed], edi ; jmp qword ptr [rdx]
0x00000000001ab8e2 : sbb al, 0xd ; sub dword ptr [rbx + rdi*8], esp ; jmp qword ptr [rdx]
0x000000000019a90a : sbb al, 0xd ; sub edx, -0x13 ; jmp qword ptr [rdx]
0x00000000001b1032 : sbb al, 0xd ; sub esi, esi ; jmp qword ptr [rdx]
0x00000000001a9ec2 : sbb al, 0xd ; sub esp, ecx ; hlt ; jmp qword ptr [rdx]
0x00000000001ac2da : sbb al, 0xd ; test al, 0x59 ; cmc ; jmp qword ptr [rdx]
0x000000000019a75a : sbb al, 0xd ; test bl, cl ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001952b2 : sbb al, 0xd ; test dh, byte ptr [rdi + 0xffffffffffffffec] ; jmp qword ptr [rdx]
0x00000000001aa54a : sbb al, 0xd ; test ebp, ecx ; hlt ; jmp qword ptr [rdx]
0x0000000000196ca2 : sbb al, 0xd ; test edi, dword ptr [rbx + 0xffffffffffffffed] ; jmp qword ptr [rdx]
0x00000000001accc2 : sbb al, 0xd ; test esp, dword ptr [rdi + 0xfffffffffffffff5] ; jmp qword ptr [rdx]
0x00000000001a277a : sbb al, 0xd ; wait ; mov cl, dh ; jmp qword ptr [rdx]
0x000000000019b7da : sbb al, 0xd ; wait ; sti ; in eax, dx ; jmp qword ptr [rdx]
0x000000000019c122 : sbb al, 0xd ; xchg byte ptr [rcx], bh ; out dx, al ; jmp qword ptr [rdx]
0x000000000019550a : sbb al, 0xd ; xchg dl, dl ; in al, dx ; jmp qword ptr [rdx]
0x000000000019523a : sbb al, 0xd ; xchg dword ptr [rdi + 0xffffffffffffffec], esi ; jmp qword ptr [rdx]
0x000000000019547a : sbb al, 0xd ; xchg eax, ebp ; jle 0x19546b ; jmp qword ptr [rdx]
0x00000000001a060a : sbb al, 0xd ; xchg eax, ebx ; mov dh, -0x10 ; jmp qword ptr [rdx]
0x00000000001b059a : sbb al, 0xd ; xchg eax, ebx ; out dx, eax ; cmc ; jmp qword ptr [rdx]
0x00000000001b6bd2 : sbb al, 0xd ; xchg eax, ebx ; xor al, -9 ; jmp qword ptr [rdx]
0x00000000001a2662 : sbb al, 0xd ; xchg eax, ecx ; mov cl, dh ; jmp qword ptr [rdx]
0x000000000019be52 : sbb al, 0xd ; xchg eax, ecx ; xor al, -0x12 ; jmp qword ptr [rdx]
0x000000000019b98a : sbb al, 0xd ; xchg eax, edi ; cld ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001980ca : sbb al, 0xd ; xchg eax, edi ; xchg ch, ch ; jmp qword ptr [rdx]
0x00000000001a9a3a : sbb al, 0xd ; xchg eax, edx ; fdivr st(4), st(0) ; jmp qword ptr [rdx]
0x00000000001adc8a : sbb al, 0xd ; xchg eax, edx ; js 0x1adc84 ; jmp qword ptr [rdx]
0x0000000000192e12 : sbb al, 0xd ; xchg eax, esi ; mov ch, dl ; jmp qword ptr [rdx]
0x00000000001a27c2 : sbb al, 0xd ; xchg eax, esp ; mov cl, dh ; jmp qword ptr [rdx]
0x0000000000198082 : sbb al, 0xd ; xchg eax, esp ; xchg ch, ch ; jmp qword ptr [rdx]
0x000000000019a9e2 : sbb al, 0xd ; xchg esp, ebp ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001a21f2 : sbb al, 0xd ; xchg r9b, r14b ; jmp qword ptr [rdx]
0x00000000001a223a : sbb al, 0xd ; xchg r9b, sil ; jmp qword ptr [rdx]
0x00000000001af3da : sbb al, 0xd ; xchg rax, r12 ; cmc ; jmp qword ptr [rdx]
0x00000000001af46a : sbb al, 0xd ; xchg rax, rsi ; cmc ; jmp qword ptr [rdx]
0x00000000001affca : sbb al, 0xd ; xlatb ; fcompi st(5) ; jmp qword ptr [rdx]
0x000000000019b59a : sbb al, 0xd ; xlatb ; lock in eax, dx ; jmp qword ptr [rdx]
0x00000000001aea32 : sbb al, 0xd ; xlatb ; xchg ebp, esi ; jmp qword ptr [rdx]
0x000000000019be9a : sbb al, 0xd ; xor al, -0x12 ; jmp qword ptr [rdx]
0x00000000001af34a : sbb al, 0xd ; xor al, -0x6d ; cmc ; jmp qword ptr [rdx]
0x00000000001abfea : sbb al, 0xd ; xor bl, byte ptr [rcx + 0xfffffffffffffff5] ; jmp qword ptr [rdx]
0x00000000001a75ba : sbb al, 0xd ; xor byte ptr [rbx + 0xfffffffffffffff4], ah ; jmp qword ptr [rdx]
0x0000000000195cb2 : sbb al, 0xd ; xor byte ptr [rdi + 0xffffffffffffffed], ch ; jmp qword ptr [rdx]
0x00000000001a1f22 : sbb al, 0xd ; xor edi, dword ptr [rsi + 0xfffffffffffffff1] ; jmp qword ptr [rdx]
0x00000000000a433c : sbb al, byte ptr [rcx + 0xffffffffffffff8b] ; add dword ptr [rcx + 0x39], eax ; ret
0x000000000018a8a5 : sbb al, byte ptr [rcx] ; add bh, bh ; out dx, eax ; call rsp
0x00000000001b0c7d : sbb al, byte ptr [rdx] ; add byte ptr [rax], al ; mov ch, -0xa ; call qword ptr [rdi]
0x0000000000187ba5 : sbb bh, ah ; jmp rax
0x00000000001872c5 : sbb bh, bl ; call rax
0x00000000000d182a : sbb bh, byte ptr [rax + 2] ; ret
0x000000000019e008 : sbb bh, dh ; out dx, al ; call qword ptr [rcx]
0x0000000000035752 : sbb bl, byte ptr [rbp + 0xffffffffc031fffe] ; pop rbx ; ret
0x0000000000174505 : sbb bl, byte ptr [rsi] ; ret
0x0000000000026fc6 : sbb bl, ch ; ret 0x1f0f
0x00000000000ebd8b : sbb bl, dh ; ret
0x0000000000092c0b : sbb byte ptr [r11 + 0x5d], r11b ; pop r12 ; pop r13 ; ret
0x000000000012f37d : sbb byte ptr [r11 + 0x5d], r11b ; pop r12 ; ret
0x000000000007324e : sbb byte ptr [r8 + 0x29], cl ; ret -0x76b8
0x000000000016518a : sbb byte ptr [r8 + 0xffffffffffffff83], r9b ; ret
0x000000000012f574 : sbb byte ptr [r8 + 0xffffffffffffff89], r9b ; out -0x18, eax ; ret -0xc02
0x00000000000a1bb4 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a1bd6 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a1c14 : sbb byte ptr [r8], r14b ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x000000000012d139 : sbb byte ptr [r9 + 0xffffffffffffff8b], r9b ; push rbp ; adc byte ptr [rbx + rcx*4 + 0x24], cl ; ret -0x7ab3
0x000000000012d291 : sbb byte ptr [r9 + 0xffffffffffffff8b], r9b ; push rbp ; adc byte ptr [rcx + rcx*4 + 0x24], cl ; ret -0x7cb8
0x0000000000073263 : sbb byte ptr [r9 + r9*4 + 0xffffffffffffffe0], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000007324f : sbb byte ptr [rax + 0x29], cl ; ret -0x76b8
0x0000000000037450 : sbb byte ptr [rax + 0x450f4402], ch ; ret -0x76bc
0x00000000000b5ac1 : sbb byte ptr [rax + 0xffffffff840f08fa], al ; ret
0x0000000000083c4f : sbb byte ptr [rax + 0xffffffffffffff83], cl ; call -0x3d727ba8
0x00000000000828db : sbb byte ptr [rax + 0xffffffffffffff83], cl ; call -0x3d728f1c
0x0000000000079ae6 : sbb byte ptr [rax + 0xffffffffffffff83], cl ; cli ; dec dword ptr [rax + 0xf] ; ret -0x72b8
0x00000000000dafd3 : sbb byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x00000000000ee625 : sbb byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4801
0x00000000000927ae : sbb byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4802
0x0000000000083607 : sbb byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4810
0x00000000000927ad : sbb byte ptr [rax + 0xffffffffffffff83], r9b ; ret 0x4802
0x00000000000233a1 : sbb byte ptr [rax + 0xffffffffffffff89], cl ; cwde ; call rcx
0x000000000007e43a : sbb byte ptr [rax + 0xffffffffffffff89], cl ; fcomp dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x00000000000e5c00 : sbb byte ptr [rax + 0xffffffffffffff89], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x000000000012f575 : sbb byte ptr [rax + 0xffffffffffffff89], cl ; out -0x18, eax ; ret -0xc02
0x000000000010343a : sbb byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x00000000000ee487 : sbb byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x72b8
0x000000000012242a : sbb byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x76b4
0x00000000000bcf78 : sbb byte ptr [rax + 0xffffffffffffff89], cl ; ret 0x4775
0x00000000000e9014 : sbb byte ptr [rax + 0xffffffffffffff89], cl ; ret 0x4c6
0x0000000000053811 : sbb byte ptr [rax + 0xffffffffffffff89], cl ; ret 0x6349
0x0000000000112e01 : sbb byte ptr [rax + 0xffffffffffffffff], bh ; pop rbx ; pop rbp ; ret
0x000000000019c650 : sbb byte ptr [rax], -0x12 ; call qword ptr [rbx]
0x000000000007c68a : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000104530 : sbb byte ptr [rax], al ; add byte ptr [rax], al ; add cl, ch ; ret
0x0000000000002440 : sbb byte ptr [rax], cl ; ret 0x5576
0x00000000000a1bb5 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a1bd7 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a1c15 : sbb byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000d4029 : sbb byte ptr [rbp + 0xffffffff83480143], cl ; ret
0x00000000000a4cc7 : sbb byte ptr [rbx + 0x48], 0x29 ; call -0x3c9971d3
0x00000000000a4782 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; pop r14 ; ret
0x00000000000a45f0 : sbb byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000731c2 : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000008761a : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000012f37e : sbb byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000003d26a : sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000000376e7 : sbb byte ptr [rbx + 0xb7501e2], al ; xor eax, eax ; nop ; ret
0x00000000000ec8bf : sbb byte ptr [rbx + 0xffffffff89142444], cl ; ret -0x2509
0x00000000000ec7af : sbb byte ptr [rbx + 0xffffffff899c2444], cl ; ret -0x2509
0x000000000013121e : sbb byte ptr [rbx + 0xffffffff940f0afe], al ; ret
0x000000000007d257 : sbb byte ptr [rbx + 0xffffffffd0291047], cl ; ret
0x0000000000029c08 : sbb byte ptr [rbx + 0xffffffffeb1c2444], cl ; ret -0x76b8
0x000000000002add8 : sbb byte ptr [rbx + 0xffffffffeb242444], cl ; ret -0x76b8
0x0000000000083556 : sbb byte ptr [rbx + 0xffffffffffffffc3], bl ; xor eax, eax ; pop rbx ; ret
0x000000000010f09c : sbb byte ptr [rbx], ch ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret 0xb9
0x00000000001a8a38 : sbb byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x000000000012ef53 : sbb byte ptr [rcx + 0x1b02857], cl ; ret
0x00000000000e5c86 : sbb byte ptr [rcx + 0x415d5be8], cl ; pop rsp ; pop r13 ; ret
0x0000000000075bfb : sbb byte ptr [rcx + 0x5bc0310b], cl ; ret
0x0000000000097466 : sbb byte ptr [rcx + 0xffffffff8948fc47], cl ; clc ; ret
0x00000000000a4331 : sbb byte ptr [rcx + 0xffffffffffffff83], cl ; ret 0x4908
0x00000000001055b3 : sbb byte ptr [rcx + 0xffffffffffffff8b], al ; or r14b, r14b ; ret 0x7508
0x00000000000b046e : sbb byte ptr [rcx + 0xffffffffffffff8b], cl ; jge 0xb0473 ; call r12
0x000000000012d13a : sbb byte ptr [rcx + 0xffffffffffffff8b], cl ; push rbp ; adc byte ptr [rbx + rcx*4 + 0x24], cl ; ret -0x7ab3
0x000000000012d292 : sbb byte ptr [rcx + 0xffffffffffffff8b], cl ; push rbp ; adc byte ptr [rcx + rcx*4 + 0x24], cl ; ret -0x7cb8
0x00000000000f6243 : sbb byte ptr [rcx + 0xfffffffffffffff6], al ; ret 0x7401
0x00000000001304fb : sbb byte ptr [rcx + rcx*4 + 0x24], cl ; ret -0x74bf
0x0000000000073264 : sbb byte ptr [rcx + rcx*4 + 0xffffffffffffffe0], al ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000f1c30 : sbb byte ptr [rcx], al ; ret -0x72b8
0x00000000001a9218 : sbb byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000000b359b : sbb byte ptr [rcx], dh ; add byte ptr [rcx], dh ; dec dword ptr [rax + 0x39] ; ret -0x7bf1
0x000000000010384e : sbb byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000b359a : sbb byte ptr [rcx], sil ; add byte ptr [rcx], dh ; dec dword ptr [rax + 0x39] ; ret -0x7bf1
0x0000000000102de7 : sbb byte ptr [rdi + 0x2000004], bh ; call rax
0x000000000005e1d8 : sbb byte ptr [rdi], cl ; mov dh, -0x40 ; neg eax ; ret
0x000000000012f4db : sbb byte ptr [rdi], cl ; mov dh, -0x40 ; ret
0x00000000000356bd : sbb byte ptr [rdi], cl ; scasd eax, dword ptr es:[rdi] ; ret -0x2dcf
0x000000000008340e : sbb byte ptr [rdx + 0x5b], bl ; pop rbp ; jmp rax
0x0000000000002047 : sbb byte ptr [rdx + 0xffffffffffffffe6], dl ; ret
0x0000000000191b58 : sbb byte ptr [rdx + 0xffffffffffffffea], bl ; jmp qword ptr [rcx]
0x00000000001916d8 : sbb byte ptr [rdx + 0xffffffffffffffea], dl ; call qword ptr [rcx]
0x00000000001b0ac5 : sbb byte ptr [rdx], al ; add al, cl ; mov cl, -0xa ; call qword ptr [rcx]
0x00000000001b0add : sbb byte ptr [rdx], al ; add al, dl ; mov cl, -0xa ; jmp qword ptr [rcx]
0x00000000001107a3 : sbb byte ptr [rdx], al ; sub eax, dword ptr [rax] ; add byte ptr [rbp + 0xffffffffffffffc2], dh ; jmp 0x110764
0x00000000000f6a1c : sbb byte ptr [rdx], cl ; add byte ptr [rax], al ; xor esi, esi ; mov rdi, r14 ; call rbx
0x000000000002baec : sbb byte ptr [rip + 0x3d8d4800], dl ; ret 0x1553
0x000000000013609b : sbb byte ptr [rip + 0xffffffff89480000], al ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000001360cd : sbb byte ptr [rip + 0xffffffffc0310000], al ; pop rbx ; pop rbp ; ret
0x00000000000fd752 : sbb byte ptr [rsi + 0xffffffffffffff83], ah ; add byte ptr [rcx], al ; ret
0x00000000000fd751 : sbb byte ptr [rsi + 0xffffffffffffff83], spl ; add byte ptr [rcx], al ; ret
0x00000000001a8450 : sbb byte ptr [rsi], -0xb ; jmp qword ptr [rsi]
0x0000000000187bb0 : sbb byte ptr [rsi], -4 ; call rax
0x00000000001a8ca8 : sbb byte ptr [rsi], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a7980 : sbb ch, -0xc ; jmp qword ptr [rcx]
0x0000000000026438 : sbb ch, al ; ret 0x1107
0x000000000019e1b9 : sbb ch, bh ; call qword ptr [rax]
0x000000000012da42 : sbb ch, bh ; dec dword ptr [rax + 0xffffffffffffff89] ; ret
0x0000000000194ad4 : sbb ch, dl ; jmp 0x194ad7
0x0000000000130c18 : sbb cl, byte ptr [rax + 0x39] ; ret
0x0000000000133766 : sbb cl, byte ptr [rax + 0xffffffffffffff83] ; ret
0x00000000000c98b2 : sbb cl, byte ptr [rax + 0xffffffffffffff83] ; ret 0x4801
0x000000000011d853 : sbb cl, byte ptr [rax + 0xffffffffffffff83] ; ret 0xf01
0x0000000000125fee : sbb cl, byte ptr [rax + 0xffffffffffffffc1] ; out dx, al ; add cl, byte ptr [rcx + 0xffffffffffffff89] ; ret -0x3eb8
0x00000000001a265e : sbb cl, byte ptr [rcx + 0xd1cfff1] ; xchg eax, ecx ; mov cl, dh ; jmp qword ptr [rdx]
0x00000000000a68f8 : sbb cl, byte ptr [rcx + 0xffffffffffffff83] ; ret
0x000000000009e60f : sbb cl, byte ptr [rdi] ; test ebp, dword ptr [rdx + 5] ; add byte ptr [rax], al ; ret
0x0000000000138c4d : sbb cl, byte ptr [rdi] ; xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x000000000013adbd : sbb cl, byte ptr [rdi] ; xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x000000000013883d : sbb cl, byte ptr [rdi] ; xchg ah, ch ; add eax, 0x83480000 ; ret -0x14f0
0x0000000000138349 : sbb cl, byte ptr [rdi] ; xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x0000000000138b59 : sbb cl, byte ptr [rdi] ; xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000013ed5a : sbb cl, byte ptr [rdi] ; xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000013e57a : sbb cl, byte ptr [rdi] ; xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000013e96a : sbb cl, byte ptr [rdi] ; xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000013e18a : sbb cl, byte ptr [rdi] ; xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000013890d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + 0xffffffff83480000], bl ; ret -0x14f0
0x000000000013b91d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rax], bh ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x000000000013b0fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx + 0xffffffff83480000], bl ; ret -0x16f0
0x00000000001385cd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rcx], bl ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x000000000013a8dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax + rdx + 0xffffffff83480000], bh ; ret -0x16f0
0x0000000000138c29 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000013e329 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x0000000000138cf9 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000013b43d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rax], bl ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x000000000013ac1d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x000000000013a3fd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbp + rdx + 0xffffffff83480000], bl ; ret -0x16f0
0x000000000013b5dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax + 0xffffffff83480000], bh ; ret -0x16f0
0x0000000000138aad : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rax], bh ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x000000000013829d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rbx + rcx + 0xffffffff83480000], cl ; ret -0x14f0
0x000000000013869d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi + rax + 0xffffffff83480000], cl ; ret -0x14f0
0x000000000013e81a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000013e03a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000013f14a : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x0000000000138b7d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rax + 0xffffffff83480000], ch ; ret -0x14f0
0x000000000013836d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rcx + 0xffffffff83480000], bh ; ret -0x14f0
0x000000000013a73d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x000000000013840f : sbb cl, byte ptr [rdi] ; xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000013876d : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi + rax + 0xffffffff83480000], bh ; ret -0x14f0
0x000000000013a873 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000013b573 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000013b093 : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000013e71b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x000000000013f04b : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x00000000001389dd : sbb cl, byte ptr [rdi] ; xchg byte ptr [rsp + rax], cl ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x000000000013b8b3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000013abb3 : sbb cl, byte ptr [rdi] ; xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000013a6d3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000013b3d3 : sbb cl, byte ptr [rdi] ; xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000013e86b : sbb cl, byte ptr [rdi] ; xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x000000000013e08b : sbb cl, byte ptr [rdi] ; xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x0000000000138433 : sbb cl, byte ptr [rdi] ; xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x00000000001aa504 : sbb cl, ch ; hlt ; jmp qword ptr [rdx]
0x00000000000ebef1 : sbb dh, bl ; ret
0x000000000019c651 : sbb dh, ch ; call qword ptr [rbx]
0x000000000019aec9 : sbb dh, ch ; call qword ptr [rcx]
0x00000000000efcab : sbb dh, dh ; ret
0x0000000000103232 : sbb dh, dh ; ret 0x7504
0x00000000000f7912 : sbb dl, ah ; cli ; dec dword ptr [rax + 0x39] ; ret
0x000000000013c078 : sbb dword ptr [r8], r8d ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x00000000000f8b46 : sbb dword ptr [rax + 0xffffffffffffff89], ecx ; ret 0xf66
0x00000000000eabe3 : sbb dword ptr [rax + 0xfffffffffffffff3], ecx ; dec dword ptr [rax + 0xffffffffffffff85] ; ror byte ptr [rdi], -0x7c ; ret
0x00000000000d1803 : sbb dword ptr [rax + 1], edi ; ret
0x000000000013c079 : sbb dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x000000000013c001 : sbb dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x00000000000f8b33 : sbb dword ptr [rax], ebp ; stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000000bef14 : sbb dword ptr [rax], esi ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x76b8
0x00000000000c3155 : sbb dword ptr [rbp + rsi*2 + 0xffffffffffffff82], edx ; mov eax, 0x7d00 ; ret
0x000000000010ef9c : sbb dword ptr [rbx], ebp ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x76b8
0x0000000000176dbd : sbb dword ptr [rbx], edx ; mov ch, -0x67 ; in eax, -1 ; lahf ; mov dh, -0x39 ; ret -0x18e1
0x0000000000118b5a : sbb dword ptr [rcx + 0xf], eax ; mov dh, 0x52 ; add dword ptr [rcx + 0xffffffffffffff83], ecx ; ret 0x4102
0x000000000011c29b : sbb dword ptr [rcx + 0xffffffffffffff80], eax ; jmp qword ptr [rbx]
0x000000000009fd2e : sbb dword ptr [rdi], ecx ; test ebx, dword ptr [rbx + 6] ; add byte ptr [rax], al ; ret
0x0000000000001caf : sbb dword ptr [rdx + 0x55], esp ; je 0x1cdc ; ret
0x000000000015f3cc : sbb eax, -1 ; ret
0x000000000010b9cb : sbb eax, 0 ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001872d1 : sbb eax, 0x1e20fffb ; sti ; call qword ptr [rax]
0x0000000000187bad : sbb eax, 0x1e80fffc ; cld ; call rax
0x00000000000fd2c1 : sbb eax, 0x2c203a ; pop rbx ; ret
0x00000000001a0f1d : sbb eax, 0x3fe00001 ; int1 ; jmp qword ptr [rcx]
0x00000000001a0f35 : sbb eax, 0x3ff80001 ; int1 ; jmp qword ptr [rcx]
0x00000000001a0fbd : sbb eax, 0x40f00001 ; int1 ; call rsi
0x000000000009e699 : sbb eax, 0x4e0850f ; add byte ptr [rax], al ; ret
0x0000000000107052 : sbb eax, 0x507a8b48 ; mov rsi, rdx ; call rax
0x000000000009fded : sbb eax, 0x59c850f ; add byte ptr [rax], al ; ret
0x0000000000058a9d : sbb eax, 0x8348ffff ; ret -0x14f8
0x00000000000f8bca : sbb eax, 0x86897 ; mov rax, rbx ; pop rbx ; ret
0x0000000000042a1e : sbb eax, 0x89000001 ; ret
0x000000000013be99 : sbb eax, dword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x000000000013be21 : sbb eax, dword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x0000000000007290 : sbb eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x21
0x0000000000045c78 : sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret -0x7bf1
0x0000000000125570 : sbb eax, eax ; add rsp, 8 ; add eax, 2 ; ret
0x00000000000385ca : sbb eax, eax ; and eax, 2 ; sub eax, 1 ; ret
0x00000000001187e7 : sbb eax, eax ; ret
0x0000000000164ad5 : sbb eax, eax ; sbb eax, -1 ; ret
0x000000000002a338 : sbb eax, ebp ; ret 0x10c8
0x000000000012da41 : sbb ebx, dword ptr [rdx] ; out dx, eax ; dec dword ptr [rax + 0xffffffffffffff89] ; ret
0x00000000001872c1 : sbb ebx, edi ; inc dword ptr [rax] ; sbb bh, bl ; call rax
0x0000000000036cd0 : sbb ebx, esi ; ret
0x00000000000db814 : sbb ecx, dword ptr [rax + 0xffffffffffffff83] ; ret
0x00000000000538e0 : sbb ecx, dword ptr [rax + 0xffffffffffffff89] ; ret 0x6348
0x0000000000187b69 : sbb edi, esp ; inc eax ; sbb al, -4 ; call qword ptr [rax]
0x00000000000bed8c : sbb esi, dword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x76b8
0x00000000000025bf : sbb esi, dword ptr [rdx] ; sahf ; jl 0x2552 ; loop 0x259d ; ret 0x23cb
0x00000000000ebe98 : sbb esi, ebx ; ret
0x0000000000187ba1 : sbb esp, edi ; call qword ptr [rax + 0xffffffffe0fffc1a]
0x000000000017a2c5 : sbb esp, esi ; jmp rdi
0x000000000015f3cb : sbb rax, -1 ; ret
0x0000000000173a48 : sbb spl, bpl ; call rcx
0x0000000000139da2 : scasb al, byte ptr es:[rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000005c144 : scasb al, byte ptr es:[rdi] ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x000000000013edae : scasb al, byte ptr es:[rdi] ; add eax, 0x83480000 ; ret -0x16f0
0x00000000001b0bbc : scasb al, byte ptr es:[rdi] ; and dh, dh ; jmp qword ptr [rdx]
0x00000000001886ad : scasb al, byte ptr es:[rdi] ; cld ; call qword ptr [rdx]
0x00000000001885f1 : scasb al, byte ptr es:[rdi] ; cld ; call rax
0x00000000001885ed : scasb al, byte ptr es:[rdi] ; cld ; inc dword ptr [rax + 0xffffffffffffffae] ; cld ; call rax
0x000000000018862d : scasb al, byte ptr es:[rdi] ; cld ; jmp qword ptr [rsi]
0x00000000001887ed : scasb al, byte ptr es:[rdi] ; cld ; jmp rax
0x00000000001a9ac4 : scasb al, byte ptr es:[rdi] ; fdivr st(4), st(0) ; jmp qword ptr [rdx]
0x00000000001a6a59 : scasb al, byte ptr es:[rdi] ; hlt ; jmp qword ptr [rcx]
0x0000000000063768 : scasb al, byte ptr es:[rdi] ; ret
0x00000000001b0e48 : scasb al, byte ptr es:[rdi] ; ret -0xa
0x0000000000002f62 : scasb al, byte ptr es:[rdi] ; sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x00000000001b6b74 : scasb al, byte ptr es:[rdi] ; xor al, -9 ; jmp qword ptr [rdx]
0x000000000003d445 : scasd eax, dword ptr es:[rdi] ; adc byte ptr [rax + 1], r9b ; ror byte ptr [rax + 0xffffffffffffff89], 1 ; ret -0x769a
0x000000000013eead : scasd eax, dword ptr es:[rdi] ; add al, 0 ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000018e565 : scasd eax, dword ptr es:[rdi] ; add al, byte ptr [rax] ; mov ah, -4 ; stc ; call rsp
0x00000000000c6e52 : scasd eax, dword ptr es:[rdi] ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x00000000000ae8bd : scasd eax, dword ptr es:[rdi] ; add byte ptr [rax], al ; add byte ptr [rcx + 0xffffffffffffff83], cl ; ret
0x0000000000166b89 : scasd eax, dword ptr es:[rdi] ; and eax, 0xf31e7500 ; ret
0x0000000000188629 : scasd eax, dword ptr es:[rdi] ; cld ; call qword ptr [rsi + 0x26fffcae]
0x0000000000188765 : scasd eax, dword ptr es:[rdi] ; cld ; call rsp
0x0000000000188761 : scasd eax, dword ptr es:[rdi] ; cld ; inc dword ptr [rdi + rbp*4 + 0xfffffffffffffffc] ; call rsp
0x00000000001885e5 : scasd eax, dword ptr es:[rdi] ; cld ; jmp qword ptr [rax]
0x000000000017a50c : scasd eax, dword ptr es:[rdi] ; lcall 0x9ab9fff4, -0xc ; ret
0x000000000011d50b : scasd eax, dword ptr es:[rdi] ; or bl, ch ; ret 0x4890
0x000000000012b8bc : scasd eax, dword ptr es:[rdi] ; pop rbx ; ret
0x000000000019d4c4 : scasd eax, dword ptr es:[rdi] ; pop rsp ; out dx, al ; jmp qword ptr [rdx]
0x00000000000b226f : scasd eax, dword ptr es:[rdi] ; repne add eax, esi ; ret
0x000000000003a3fc : scasd eax, dword ptr es:[rdi] ; ret
0x00000000000356bf : scasd eax, dword ptr es:[rdi] ; ret -0x2dcf
0x00000000000b9b60 : scasd eax, dword ptr es:[rdi] ; ret -0x72bc
0x0000000000035c23 : scasd eax, dword ptr es:[rdi] ; ret -0x74b8
0x00000000000b7c7d : scasd eax, dword ptr es:[rdi] ; ret -0x76bf
0x00000000000a2544 : scasd eax, dword ptr es:[rdi] ; ret -0x7cbf
0x00000000001065fd : scasd eax, dword ptr es:[rdi] ; ret -1
0x00000000000b2f30 : scasd eax, dword ptr es:[rdi] ; ret 0x67ba
0x000000000000258c : scasd eax, dword ptr es:[rdi] ; xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret -0x7753
0x00000000001086dc : setae al ; ret
0x00000000000fe5b8 : setbe al ; ret
0x0000000000123296 : sete al ; movzx eax, al ; ret
0x000000000002fee5 : sete al ; ret
0x000000000004d6ef : sete cl ; call 0x49990
0x000000000010485c : sete dl ; jmp 0x1047ea
0x00000000000d1977 : setg dl ; jmp 0xd18fe
0x000000000005e209 : setne al ; movzx eax, al ; neg eax ; pop rbx ; ret
0x00000000000f5889 : setne al ; movzx eax, al ; pop rbx ; ret
0x0000000000037666 : setne al ; movzx eax, al ; ret
0x00000000000cc4cd : setne dl ; cmovbe eax, edx ; ret
0x00000000000a6897 : setne dl ; jmp 0xa68a8
0x00000000000a9073 : setne dl ; jmp 0xa9087
0x00000000000ab747 : setne dl ; jmp 0xab758
0x00000000000fadeb : setne dl ; jmp 0xfadbf
0x00000000000faad5 : sgdt ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x0000000000089a68 : sgdt ptr [rax] ; ret
0x00000000001877c8 : shl ah, 1 ; sti ; call rax
0x00000000001792bc : shl byte ptr [rbp + 0xffffffffc8a0fffd], 1 ; std ; jmp rax
0x00000000001a5ca0 : shl byte ptr [rbx + 0xfffffffffffffff4], 1 ; jmp qword ptr [rcx]
0x0000000000187bc0 : shl byte ptr [rbx], -4 ; call qword ptr [rax]
0x00000000001790fc : shl byte ptr [rcx + 0xfffffffffffffff1], 1 ; jmp rax
0x0000000000036509 : shl byte ptr [rcx], cl ; ret 0xf66
0x00000000000a1fef : shl byte ptr [rsi + 0x44], 0xf ; out dx, eax ; ret 0xf66
0x0000000000036173 : shl byte ptr [rsi + 0x48], 1 ; movd mm0, eax ; ret
0x000000000016217b : shl byte ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000087bd5 : shl byte ptr [rsi + 0xf], -0x15 ; ret 0xf66
0x00000000001630c3 : shl byte ptr [rsi + 0xf], -0x29 ; ror dword ptr [rcx], cl ; ret -0x1f8c
0x0000000000162192 : shl byte ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x0000000000036590 : shl byte ptr [rsi + 0xf], 1 ; outsb dx, byte ptr [rsi] ; enter 0x280f, -0x3f ; ret
0x000000000008b4b6 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000008b4c7 : shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x0000000000097b18 : shl byte ptr [rsi + 0xf], 1 ; xlatb ; ret -0x3f7b
0x0000000000162071 : shl byte ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret -0x7cf1
0x00000000000a56ad : shl byte ptr [rsi + 0xffffffffffffff90], -0x3d ; mov eax, 1 ; ret
0x00000000001877c4 : shl dl, 1 ; sti ; call rax
0x000000000016fda0 : shl dword ptr [rax + rax], 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 0x24
0x0000000000175908 : shl dword ptr [rdi + 0xfffffffffffffffb], 1 ; ret
0x00000000001620f6 : shl dword ptr [rsi + 0xf], -0x11 ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret -0x7cf1
0x00000000000a1e4b : shl dword ptr [rsi + 0xf], -0x26 ; ret
0x000000000008b4b2 : shl dword ptr [rsi + 0xf], -0x29 ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x0000000000160c3b : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret -0x7cf1
0x00000000001621ad : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x2373
0x0000000000162196 : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x3a73
0x000000000016217f : shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret 0x5173
0x0000000000162111 : shl dword ptr [rsi + 0xf], 1 ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret -0x7cf1
0x000000000008c87c : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret -0x3f7b
0x0000000000097d58 : shl dword ptr [rsi + 0xf], 1 ; xlatb ; ret -0xe78
0x0000000000161fd1 : shl dword ptr [rsi + 0xf], cl ; out dx, eax ; shl dword ptr [rsi + 0xf], 1 ; cmp byte ptr [rdi], dl ; ret -0x7cf1
0x0000000000118dea : shl eax, 3 ; cdqe ; shr rax, 4 ; ret
0x0000000000118c4d : shl eax, 4 ; add eax, 8 ; ret
0x000000000010d22f : shl eax, 8 ; or eax, esi ; bswap eax ; ret
0x0000000000037843 : shl eax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x0000000000038bbc : shl ecx, cl ; mov qword ptr [rdi + 0xfffffffffffffff0], r9 ; ret
0x0000000000038b47 : shl ecx, cl ; mov qword ptr [rdi + 0xfffffffffffffff8], r9 ; ret
0x0000000000038b16 : shl ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000003c976 : shl edx, 0x20 ; mov eax, eax ; or rax, rdx ; ret
0x00000000000dc7cb : shl edx, 2 ; xor esi, esi ; call 0x8d150
0x0000000000021f58 : shl edx, 4 ; lea rdi, qword ptr [r14 + rdx] ; call rax
0x0000000000118e1c : shl esi, 4 ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x0000000000038bbb : shl r9, cl ; mov qword ptr [rdi + 0xfffffffffffffff0], r9 ; ret
0x0000000000038b46 : shl r9, cl ; mov qword ptr [rdi + 0xfffffffffffffff8], r9 ; ret
0x0000000000038b15 : shl r9, cl ; mov qword ptr [rdi], r9 ; ret
0x0000000000037842 : shl rax, cl ; or qword ptr [rdi], rax ; xor eax, eax ; ret
0x000000000003c975 : shl rdx, 0x20 ; mov eax, eax ; or rax, rdx ; ret
0x0000000000021f57 : shl rdx, 4 ; lea rdi, qword ptr [r14 + rdx] ; call rax
0x0000000000118e1b : shl rsi, 4 ; lea rax, qword ptr [rdi + rsi + 8] ; ret
0x0000000000187994 : shr ah, 1 ; sti ; jmp qword ptr [rax]
0x000000000019550d : shr ah, cl ; jmp qword ptr [rdx]
0x000000000001feab : shr al, -8 ; ret 0xc
0x0000000000106636 : shr al, 0x24 ; ret
0x00000000001066fc : shr al, 0x5e ; ret -1
0x0000000000132e51 : shr al, cl ; add eax, dword ptr [rax] ; add byte ptr [rcx], al ; ret 0x59e9
0x0000000000108656 : shr ax, 0xe ; and eax, 1 ; ret
0x000000000018aca9 : shr bh, 1 ; call rsp
0x0000000000049898 : shr bl, -0x14 ; mov rax, rsi ; nop ; ret
0x0000000000137551 : shr bl, -0x25 ; nop dword ptr [rax] ; xor eax, eax ; ret
0x0000000000187530 : shr byte ptr [rax + 0xffffffffa940fffd], -3 ; call rax
0x00000000001795e4 : shr byte ptr [rax + 0xfffffffffffffff2], -1 ; shr byte ptr [rax + 0xfffffffffffffff2], 1 ; jmp rax
0x00000000001795e8 : shr byte ptr [rax + 0xfffffffffffffff2], 1 ; jmp rax
0x000000000019bcec : shr byte ptr [rax], cl ; out dx, al ; jmp qword ptr [rdx]
0x0000000000098b4f : shr byte ptr [rcx], -0x38 ; ret
0x000000000002bd38 : shr byte ptr [rcx], cl ; ret
0x000000000008cc2b : shr byte ptr [rcx], cl ; rol bl, 1 ; nop ; xor eax, eax ; ret
0x00000000000ee0cd : shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x00000000001a8de0 : shr byte ptr [rdi], 1 ; cmc ; jmp qword ptr [rcx]
0x0000000000179634 : shr byte ptr [rdx + 0xfffffffffffffff2], 1 ; push rax ; push -0xe ; call qword ptr [rax]
0x00000000001a89f0 : shr byte ptr [rdx], 1 ; cmc ; jmp qword ptr [rcx]
0x00000000001887e8 : shr byte ptr [rsi + 0xffffffffae50fffc], -4 ; jmp rax
0x0000000000178124 : shr byte ptr [rsi + rbp*8 + 0xffffffffffffffff], 0 ; insd dword ptr es:[rdi], dx ; out dx, al ; jmp rax
0x00000000001a8d20 : shr byte ptr [rsi], -0xb ; jmp qword ptr [rcx]
0x0000000000198e49 : shr ch, cl ; call rcx
0x00000000000cb62c : shr cl, -9 ; idiv edi ; dec dword ptr [rax + 0xffffffffffffff83] ; ret
0x000000000011ba64 : shr cl, 1 ; ret -2
0x000000000010d522 : shr cl, 1 ; sub eax, 0x89ffffff ; ret -0x6915
0x00000000000ceb15 : shr cl, cl ; ret -7
0x0000000000178b29 : shr dh, 1 ; inc dword ptr [rbp + rbx*8 + 0xffffffffffffffee] ; call qword ptr [rcx]
0x0000000000178b41 : shr dh, 1 ; inc dword ptr [rbp + rbx*8 + 0xffffffffffffffee] ; call rsp
0x0000000000178b5d : shr dh, cl ; jmp rbx
0x0000000000028f2b : shr dword ptr [rax + rax], -0x77 ; ret -0x1d7d
0x00000000001346f5 : shr dword ptr [rax], 0 ; call qword ptr [rax]
0x0000000000187484 : shr dword ptr [rbx + 0xffffffffac71fffd], 1 ; std ; call qword ptr [rcx]
0x0000000000195bf4 : shr dword ptr [rsi + 0xffffffffffffffed], cl ; jmp qword ptr [rdx]
0x000000000004d6f1 : shr eax, -0x67 ; ret -1
0x000000000010d268 : shr eax, 0x18 ; ret
0x0000000000036481 : shr eax, 0x1f ; ret
0x000000000016303c : shr eax, 0x20 ; cmp ecx, eax ; jne 0x163046 ; xor eax, eax ; ret
0x00000000000360d0 : shr eax, 0x3f ; ret
0x00000000000fb188 : shr eax, 0xc ; xor al, al ; or eax, edi ; ret
0x00000000000a275a : shr eax, 0xe ; and eax, 0x3fc00 ; pop rbx ; ret
0x0000000000108657 : shr eax, 0xe ; and eax, 1 ; ret
0x0000000000074272 : shr eax, 4 ; and eax, 1 ; ret
0x0000000000118df0 : shr eax, 4 ; ret
0x0000000000074282 : shr eax, 5 ; and eax, 1 ; ret
0x00000000000a2739 : shr eax, 6 ; and eax, 0x3fffc00 ; pop rbx ; ret
0x000000000003767f : shr eax, 6 ; or qword ptr [rdi + rax*8], rdx ; xor eax, eax ; ret
0x0000000000188d21 : shr ecx, 1 ; call rsp
0x0000000000038ccc : shr ecx, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000038c51 : shr ecx, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000038c20 : shr ecx, cl ; mov qword ptr [rdi], r9 ; ret
0x00000000000f738c : shr ecx, cl ; ret
0x00000000000d3a0c : shr ecx, cl ; ret -4
0x00000000000d2636 : shr ecx, cl ; ret -8
0x0000000000075e93 : shr edx, 2 ; sub eax, edx ; ret
0x000000000012fc4a : shr edx, 3 ; add rax, rcx ; jmp rax
0x0000000000071f10 : shr esi, 4 ; and esi, 1 ; mov eax, esi ; ret
0x0000000000072010 : shr esi, 5 ; and esi, 1 ; mov eax, esi ; ret
0x000000000019aabc : shr esp, -0x13 ; jmp qword ptr [rdx]
0x0000000000038ccb : shr r9, cl ; mov qword ptr [rdi + 0x10], r9 ; ret
0x0000000000038c50 : shr r9, cl ; mov qword ptr [rdi + 8], r9 ; ret
0x0000000000038c1f : shr r9, cl ; mov qword ptr [rdi], r9 ; ret
0x000000000011ba63 : shr r9b, 1 ; ret -2
0x00000000000360cf : shr rax, 0x3f ; ret
0x00000000000fb187 : shr rax, 0xc ; xor al, al ; or eax, edi ; ret
0x0000000000118def : shr rax, 4 ; ret
0x0000000000075e92 : shr rdx, 2 ; sub eax, edx ; ret
0x000000000012fc49 : shr rdx, 3 ; add rax, rcx ; jmp rax
0x0000000000097601 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; lea rax, qword ptr [rdi + 4] ; ret
0x0000000000097561 : shufps xmm0, xmmword ptr [rdi + 4], 0 ; mov rax, rdi ; ret
0x00000000000236e5 : sldt word ptr [r8] ; mov rdi, qword ptr [rbx + 0x18] ; call rax
0x00000000000236e6 : sldt word ptr [rax] ; mov rdi, qword ptr [rbx + 0x18] ; call rax
0x000000000016ef65 : sldt word ptr [rax] ; ret 0xf
0x0000000000187aa8 : ss ; cld ; inc dword ptr [rax + 0x38] ; cld ; call rax
0x00000000000aee24 : stc ; add dword ptr [rax], eax ; add al, ch ; ret
0x00000000000b7fbd : stc ; add dword ptr [rdi], ecx ; sahf ; ret 0x1fbf
0x000000000019e09a : stc ; call qword ptr [rax]
0x000000000018de92 : stc ; call rsp
0x00000000000efcd3 : stc ; dec dword ptr [rax + 0x39] ; ret
0x00000000000965a9 : stc ; dec dword ptr [rax + 0xffffffffffffff85] ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000000866b6 : stc ; dec dword ptr [rax + 0xffffffffffffff89] ; ret
0x00000000000f32b3 : stc ; dec dword ptr [rax + 0xffffffffffffff8d] ; adc cl, byte ptr [rax + 0xffffffffffffff89] ; ret -0x76b8
0x0000000000096a6b : stc ; dec dword ptr [rcx + 0xffffffffffffff89] ; ret -0x7bf1
0x000000000019a179 : stc ; in eax, dx ; call qword ptr [rax]
0x000000000019b795 : stc ; in eax, dx ; jmp qword ptr [rdx]
0x000000000018e44a : stc ; inc dword ptr [rax + rbp*4 + 0xffffffffcfb40002] ; stc ; call rsp
0x00000000000f48e9 : stc ; inc dword ptr [rbp + 0xffffffff831174c0] ; ret
0x000000000018e0a2 : stc ; inc dword ptr [rbp + rcx*4 + 0x65340002] ; stc ; call rsp
0x000000000018e562 : stc ; inc dword ptr [rdi + rbp*4 + 0xfffffffffcb40002] ; stc ; call rsp
0x000000000013de62 : stc ; je 0x13de26 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000013f4f2 : stc ; je 0x13f4b6 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x000000000018e3da : stc ; jmp qword ptr [rbp + 2]
0x000000000018defa : stc ; jmp rsp
0x0000000000175784 : stc ; jnp 0x175740 ; ret
0x000000000018e432 : stc ; lcall ptr [rdi + 0xffffffffcb040002] ; stc ; call rsp
0x000000000018e0b2 : stc ; lcall ptr [rsi + rcx*4 + 2] ; add byte ptr [rsi], dh ; stc ; jmp rsp
0x000000000018e302 : stc ; ljmp ptr [rdi + rbx*4 + 0xffffffffa7b40002] ; stc ; jmp rsp
0x0000000000145f58 : stc ; mov dword ptr [rdi + 0xfffffffffffffffc], ecx ; ret
0x0000000000097865 : stc ; mov qword ptr [rdx], rcx ; ret
0x000000000011bf52 : stc ; mov rax, rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000974e3 : stc ; mov rax, rdi ; ret
0x0000000000071b52 : stc ; mov rdi, r13 ; xor r8d, r8d ; call r12
0x000000000003884e : stc ; pop r15 ; ret
0x000000000018def2 : stc ; push qword ptr [rsp + rdi*2 + 0x12340002] ; stc ; jmp rsp
0x00000000001037f3 : stc ; ret
0x00000000001280d3 : stc ; test dh, al ; dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x72b8
0x000000000007d5c7 : stc ; xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000019efb5 : std ; add byte ptr [rax], al ; js 0x19f001 ; sti ; call qword ptr [rax]
0x0000000000190dcc : std ; add dl, ch ; jmp qword ptr [rdx]
0x0000000000112b0a : std ; add dword ptr [rdi], ecx ; xchg eax, esp ; ret
0x00000000001792b6 : std ; call qword ptr [rax + 0xffffffffffffffc3]
0x0000000000187462 : std ; call qword ptr [rcx + 0x11fffda7]
0x000000000018746a : std ; call qword ptr [rcx + 0x11fffda8]
0x0000000000187472 : std ; call qword ptr [rcx + 0x21fffda9]
0x0000000000187456 : std ; call qword ptr [rcx]
0x00000000001874ba : std ; call qword ptr [rsi + 0x26fffdaa]
0x00000000001792ba : std ; call rax
0x000000000018741e : std ; call rcx
0x00000000001ababc : std ; cmc ; jmp qword ptr [rdx]
0x00000000000dffc4 : std ; dec byte ptr [rdi] ; xchg eax, esp ; ret -0x2d7c
0x0000000000073107 : std ; dec dword ptr [rax + 0xffffffffffffff81] ; ret
0x00000000000b79e3 : std ; dec dword ptr [rax + 0xffffffffffffff89] ; jmp 0x48ce0334
0x00000000001228e9 : std ; dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x48
0x00000000000e5764 : std ; dec dword ptr [rax + 0xffffffffffffffc7] ; ret -1
0x00000000000368fd : std ; fstp st(1) ; ret
0x0000000000199fd4 : std ; fucomi st(5) ; jmp qword ptr [rdx]
0x0000000000187532 : std ; inc dword ptr [rax + 0xffffffffffffffa9] ; std ; call rax
0x000000000018f0a2 : std ; inc dword ptr [rax + rsi*2] ; add ah, dh ; iretd ; std ; jmp rsp
0x0000000000187452 : std ; inc dword ptr [rcx + 0xffffffffffffffa4] ; std ; call qword ptr [rcx]
0x000000000018747e : std ; inc dword ptr [rcx + 0xffffffffffffffab] ; std ; call rcx
0x0000000000187656 : std ; inc dword ptr [rcx] ; mov ebx, 0xbb01fffd ; std ; call rax
0x0000000000187596 : std ; inc dword ptr [rcx] ; mov ebx, 0xbb01fffd ; std ; jmp qword ptr [rcx]
0x000000000018768a : std ; inc dword ptr [rcx] ; mov ebx, 0xdb58fffd ; sti ; jmp qword ptr [rax]
0x00000000001874b6 : std ; inc dword ptr [rsi] ; stosb byte ptr es:[rdi], al ; std ; call qword ptr [rsi + 0x26fffdaa]
0x000000000018752e : std ; inc eax ; test al, -3 ; inc dword ptr [rax + 0xffffffffffffffa9] ; std ; call rax
0x000000000018741a : std ; jmp qword ptr [rax + 0xffffffffd1fffda6]
0x00000000001792be : std ; jmp qword ptr [rax + 0xffffffffe0fffdc8]
0x00000000001792ce : std ; jmp qword ptr [rax + 0xffffffffe0fffdd1]
0x00000000001792de : std ; jmp qword ptr [rax + 0xffffffffe0fffdda]
0x00000000001792ee : std ; jmp qword ptr [rax + 0xffffffffe0fffde3]
0x00000000001792c6 : std ; jmp qword ptr [rax]
0x0000000000187476 : std ; jmp qword ptr [rcx]
0x000000000019025a : std ; jmp qword ptr [rdi]
0x0000000000187436 : std ; jmp qword ptr [rdx]
0x0000000000187492 : std ; jmp qword ptr [rsi]
0x00000000001792c2 : std ; jmp rax
0x000000000018f0aa : std ; jmp rsp
0x000000000018768e : std ; lcall ptr [rax + 0xffffffffffffffdb] ; sti ; jmp qword ptr [rax]
0x0000000000187416 : std ; lcall ptr [rsi + 0xffffffffa0fffda5] ; cmpsb byte ptr [rsi], byte ptr es:[rdi] ; std ; call rcx
0x000000000014577b : std ; mov word ptr [rdi + 0xfffffffffffffffe], cx ; ret
0x000000000018f132 : std ; push qword ptr [rax + rdi*8 + 0xffffffffd7340001] ; std ; jmp rsp
0x000000000018747a : std ; push qword ptr [rcx + 0x41fffdaa] ; stosd dword ptr es:[rdi], eax ; std ; call rcx
0x0000000000187486 : std ; push qword ptr [rcx + 0xffffffffffffffac] ; std ; call qword ptr [rcx]
0x000000000018f1d2 : std ; push rsp ; add qword ptr [r8], r8 ; and al, -0x1f ; std ; jmp rsp
0x0000000000109f15 : std ; rep inc dword ptr [rbp + 0xffffffffffffff85] ; in al, -0x77 ; ret 0x87e
0x00000000000aa931 : std ; xor byte ptr [rax + 0xffffffffffffff89], cl ; call 0x4ccd3e49
0x0000000000084ae1 : sti ; adc al, 0x77 ; sub ecx, dword ptr [rcx + 0xffffffffffffff83] ; ret
0x0000000000084cc1 : sti ; add al, 0x77 ; or dword ptr [rcx + 0xffffffffffffff83], ecx ; ret
0x000000000019edcd : sti ; add byte ptr [rax], al ; lock cwde ; out dx, eax ; jmp rdi
0x000000000003e908 : sti ; add cl, byte ptr [rcx + 0x29] ; ret
0x00000000000b8604 : sti ; add eax, 0x2941c229 ; ret
0x0000000000187396 : sti ; call qword ptr [rax + 0xffffffffe0fffb6e]
0x00000000001877f6 : sti ; call qword ptr [rax + 0xffffffffe0fffbd0]
0x00000000001879d6 : sti ; call qword ptr [rax + 0xffffffffe0fffbee]
0x00000000001879c2 : sti ; call qword ptr [rax + 0xffffffffe0fffbfc]
0x00000000001872d6 : sti ; call qword ptr [rax]
0x0000000000187806 : sti ; call rax
0x00000000000dc7d3 : sti ; call rcx
0x00000000001b1192 : sti ; call rsi
0x000000000018ef8a : sti ; call rsp
0x00000000001ad389 : sti ; cmc ; call qword ptr [rax]
0x00000000000c1c72 : sti ; dec dword ptr [rax + 0x39] ; ret
0x0000000000132e80 : sti ; dec dword ptr [rax + 0xffffffffffffff83] ; clc ; dec dword ptr [rax + 0xffffffffffffff89] ; ret
0x000000000006aa88 : sti ; dec dword ptr [rax + 0xffffffffffffff85] ; sal byte ptr [rcx + 0x48], -0x77 ; ret
0x00000000000c1c39 : sti ; dec dword ptr [rax + 0xffffffffffffff89] ; ret
0x00000000000cb7b0 : sti ; dec dword ptr [rax + 1] ; ret
0x000000000019b7dd : sti ; in eax, dx ; jmp qword ptr [rdx]
0x000000000018735a : sti ; inc dword ptr [rax + 0x4f] ; sti ; jmp qword ptr [rax]
0x00000000001872a2 : sti ; inc dword ptr [rax + 0x50fffb13] ; adc al, -5 ; jmp qword ptr [rax]
0x000000000018737a : sti ; inc dword ptr [rax + 0x5e] ; sti ; jmp qword ptr [rax]
0x0000000000187392 : sti ; inc dword ptr [rax + 0x6d] ; sti ; call qword ptr [rax + 0xffffffffe0fffb6e]
0x00000000001873a2 : sti ; inc dword ptr [rax + 0xffffffffd0fffb72] ; jae 0x1873a6 ; jmp qword ptr [rax]
0x00000000001879e2 : sti ; inc dword ptr [rax + 0xffffffffd0fffbf2] ; rep sti ; jmp qword ptr [rax]
0x00000000001877f2 : sti ; inc dword ptr [rax + 0xffffffffffffffcf] ; sti ; call qword ptr [rax + 0xffffffffe0fffbd0]
0x000000000018771e : sti ; inc dword ptr [rax + 0xffffffffffffffe2] ; sti ; jmp qword ptr [rax]
0x00000000001879d2 : sti ; inc dword ptr [rax + 0xffffffffffffffed] ; sti ; call qword ptr [rax + 0xffffffffe0fffbee]
0x00000000001879be : sti ; inc dword ptr [rax + 0xfffffffffffffffb] ; sti ; call qword ptr [rax + 0xffffffffe0fffbfc]
0x00000000001872da : sti ; inc dword ptr [rax] ; and bl, bh ; push rax ; and bl, bh ; jmp rax
0x00000000001877be : sti ; inc dword ptr [rax] ; loope 0x1877be ; call rax
0x0000000000187362 : sti ; inc dword ptr [rax] ; push rbx ; sti ; jmp rax
0x00000000001872c2 : sti ; inc dword ptr [rax] ; sbb bh, bl ; call rax
0x00000000001879f2 : sti ; inc eax ; idiv ebx ; call qword ptr [rax]
0x00000000001873b2 : sti ; inc eax ; ja 0x1873b2 ; call qword ptr [rax]
0x000000000018799e : sti ; inc eax ; lock sti ; call qword ptr [rax]
0x0000000000187826 : sti ; inc eax ; retf ; sti ; call qword ptr [rax]
0x000000000017ac18 : sti ; inc ebx ; add dh, bh ; jmp rdi
0x00000000001a2fe9 : sti ; int1 ; jmp qword ptr [rcx]
0x000000000007c10b : sti ; je 0x7c118 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000101f5a : sti ; jmp 0x101c9b
0x0000000000187296 : sti ; jmp qword ptr [rax]
0x00000000001ab8e6 : sti ; jmp qword ptr [rdx]
0x00000000001abb02 : sti ; jmp qword ptr [rsi]
0x000000000018729a : sti ; jmp rax
0x00000000000d2ff7 : sti ; lcall ptr [rbx + 0x5d] ; xor eax, eax ; pop r12 ; ret
0x000000000006e673 : sti ; lcall ptr [rbx + 0xffffffffffffff89] ; call -0x3c9cd827
0x0000000000145b58 : sti ; mov dword ptr [rdi + 0xfffffffffffffffc], ecx ; ret
0x00000000000974ad : sti ; mov rax, rdi ; ret
0x000000000019c514 : sti ; out dx, al ; jmp qword ptr [rdx]
0x000000000018731e : sti ; push qword ptr [rax + 0x34] ; sti ; call qword ptr [rax]
0x000000000018733e : sti ; push qword ptr [rax + 0x41] ; sti ; call qword ptr [rax]
0x0000000000187356 : sti ; push qword ptr [rax + 0x4d] ; sti ; inc dword ptr [rax + 0x4f] ; sti ; jmp qword ptr [rax]
0x00000000001873ae : sti ; push qword ptr [rax + 0x76] ; sti ; inc eax ; ja 0x1873b2 ; call qword ptr [rax]
0x0000000000187822 : sti ; push qword ptr [rax + 0xffffffffffffffca] ; sti ; inc eax ; retf ; sti ; call qword ptr [rax]
0x000000000018774e : sti ; push qword ptr [rax + 0xffffffffffffffda] ; sti ; push qword ptr [rax] ; fdiv st(3), st(0) ; call qword ptr [rax]
0x000000000018799a : sti ; push qword ptr [rax + 0xffffffffffffffef] ; sti ; inc eax ; lock sti ; call qword ptr [rax]
0x00000000001879ee : sti ; push qword ptr [rax + 0xfffffffffffffff6] ; sti ; inc eax ; idiv ebx ; call qword ptr [rax]
0x0000000000187752 : sti ; push qword ptr [rax] ; fdiv st(3), st(0) ; call qword ptr [rax]
0x000000000018773a : sti ; push qword ptr [rax] ; loopne 0x18773a ; call qword ptr [rax]
0x00000000001872ce : sti ; push qword ptr [rax] ; sbb eax, 0x1e20fffb ; sti ; call qword ptr [rax]
0x00000000001872be : sti ; push qword ptr [rax] ; sbb ebx, edi ; inc dword ptr [rax] ; sbb bh, bl ; call rax
0x0000000000187336 : sti ; push qword ptr [rax] ; sti ; call rax
0x0000000000187316 : sti ; push qword ptr [rax] ; xor ebx, edi ; call rax
0x00000000001872de : sti ; push rax ; and bl, bh ; jmp rax
0x00000000001876d2 : sti ; push rax ; fdiv st(3), st(0) ; call rax
0x00000000001876b6 : sti ; push rax ; fdivp st(3) ; call rax
0x000000000017590a : sti ; ret
0x0000000000043b47 : sti ; ret -0x41
0x00000000000707ea : sti ; ret 7
0x00000000000a9072 : sti ; setne dl ; jmp 0xa9087
0x00000000001879c1 : sti ; sti ; call qword ptr [rax + 0xffffffffe0fffbfc]
0x000000000002e7a7 : sti ; test rax, rax ; je 0x2e7af ; call rax
0x00000000000f3121 : sti ; xlatb ; sub al, 0 ; add rsp, 8 ; ret
0x000000000018bc6d : stosb byte ptr es:[rdi], al ; add dword ptr [rax], eax ; and al, 0x14 ; hlt ; call rsp
0x00000000001aa0a5 : stosb byte ptr es:[rdi], al ; add dword ptr [rax], eax ; ret
0x0000000000188691 : stosb byte ptr es:[rdi], al ; cld ; jmp qword ptr [rdx]
0x0000000000175de4 : stosb byte ptr es:[rdi], al ; cli ; ret -0x539b
0x00000000001a6861 : stosb byte ptr es:[rdi], al ; hlt ; call qword ptr [rbx]
0x000000000011d1ad : stosb byte ptr es:[rdi], al ; idiv bh ; xor eax, eax ; ret
0x0000000000036bc2 : stosb byte ptr es:[rdi], al ; in al, 0x38 ; add byte ptr [rbp + 0xfffffffff30675c0], al ; ret
0x00000000001990dd : stosb byte ptr es:[rdi], al ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000a5592 : stosb byte ptr es:[rdi], al ; ja 0xa55c6 ; add byte ptr [rax + 0x39], cl ; ret
0x000000000019c3ac : stosb byte ptr es:[rdi], al ; out dx, al ; jmp qword ptr [rdx]
0x0000000000189b80 : stosb byte ptr es:[rdi], al ; pop rbp ; in eax, dx ; call rsp
0x000000000008170a : stosb byte ptr es:[rdi], al ; salc ; xor eax, dword ptr [rax] ; xor edi, edi ; call qword ptr [rax]
0x00000000001874b9 : stosb byte ptr es:[rdi], al ; std ; call qword ptr [rsi + 0x26fffdaa]
0x000000000018747d : stosb byte ptr es:[rdi], al ; std ; inc dword ptr [rcx + 0xffffffffffffffab] ; std ; call rcx
0x00000000001874bd : stosb byte ptr es:[rdi], al ; std ; jmp qword ptr [rsi]
0x000000000002c093 : stosd dword ptr es:[rdi], eax ; adc byte ptr [rax], al ; mov rdi, rbx ; call r12
0x000000000007e119 : stosd dword ptr es:[rdi], eax ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4d07
0x0000000000188649 : stosd dword ptr es:[rdi], eax ; cld ; call qword ptr [rsi]
0x0000000000188809 : stosd dword ptr es:[rdi], eax ; cld ; call rax
0x0000000000188805 : stosd dword ptr es:[rdi], eax ; cld ; inc dword ptr [rax + 0xffffffffffffffab] ; cld ; call rax
0x0000000000188789 : stosd dword ptr es:[rdi], eax ; cld ; jmp rsp
0x000000000008b8a1 : stosd dword ptr es:[rdi], eax ; ret
0x00000000000e5631 : stosd dword ptr es:[rdi], eax ; ret 0
0x0000000000187481 : stosd dword ptr es:[rdi], eax ; std ; call rcx
0x0000000000187545 : stosd dword ptr es:[rdi], eax ; std ; jmp qword ptr [rax]
0x0000000000187485 : stosd dword ptr es:[rdi], eax ; std ; push qword ptr [rcx + 0xffffffffffffffac] ; std ; call qword ptr [rcx]
0x00000000000841f3 : str word ptr [rax + 0x63] ; adc al, -0x48 ; add rax, rdx ; jmp rax
0x00000000001293e5 : str word ptr [rax + 0xffffffffffffff89] ; ret -0x7cb8
0x00000000000873a1 : str word ptr [rax + 0xffffffffffffff89] ; ret -0xcf
0x00000000001772d1 : sub ah, ah ; mov bh, 6 ; movsd dword ptr es:[rdi], dword ptr [rsi] ; int1 ; ret 0x5803
0x000000000018f321 : sub al, -0x17 ; call qword ptr [rax]
0x000000000018f2d9 : sub al, -0x17 ; call qword ptr [rsi]
0x00000000001ab51c : sub al, -0x3d ; add dword ptr [rax], eax ; loopne 0x1ab4f4 ; cmc ; jmp qword ptr [rsi]
0x00000000001a8d1c : sub al, -0x65 ; add dword ptr [rax], eax ; shr byte ptr [rsi], -0xb ; jmp qword ptr [rcx]
0x00000000001a8a1c : sub al, -0x68 ; add dword ptr [rax], eax ; add byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a821c : sub al, -0x70 ; add dword ptr [rax], eax ; and byte ptr [rbx], cl ; cmc ; jmp qword ptr [rcx]
0x00000000001a791c : sub al, -0x79 ; add dword ptr [rax], eax ; and ch, bl ; hlt ; jmp qword ptr [rcx]
0x00000000000d8463 : sub al, -0x7d ; ret 0x4801
0x00000000001977dc : sub al, -0x7e ; in eax, dx ; jmp qword ptr [rdx]
0x000000000010c50f : sub al, -0xb ; inc dword ptr [rbp + 0xffffffffffffff85] ; in al, -0x77 ; ret 0x87e
0x00000000001a8b11 : sub al, -0xb ; jmp qword ptr [rcx]
0x0000000000187a75 : sub al, -4 ; call rax
0x0000000000187ad5 : sub al, -4 ; push qword ptr [rax] ; cld ; call qword ptr [rax]
0x00000000001876ec : sub al, -5 ; call qword ptr [rax]
0x00000000000fd3b3 : sub al, 0 ; add al, byte ptr [rax] ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000000fd405 : sub al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; pop rbp ; ret
0x00000000001a12e8 : sub al, 0 ; add byte ptr [rax], al ; cld ; and byte ptr [rcx], al ; add byte ptr [rax], dh ; ret
0x0000000000136bf0 : sub al, 0 ; add byte ptr [rax], al ; jmp rax
0x00000000000fa9d2 : sub al, 0 ; add rsp, 0x18 ; ret
0x00000000000f3123 : sub al, 0 ; add rsp, 8 ; ret
0x00000000000fd498 : sub al, 0 ; add word ptr [rdx + rax*2], 1 ; ret
0x00000000000f492c : sub al, 0 ; jne 0xf5332 ; ret
0x00000000000fa1dd : sub al, 0 ; lea rax, qword ptr [rip + 0x2c85d2] ; ret
0x00000000000fa01d : sub al, 0 ; lea rax, qword ptr [rip + 0x2c8792] ; ret
0x00000000000fe0b5 : sub al, 0 ; mov eax, dword ptr [rax + 0x38] ; ret
0x00000000000fd99d : sub al, 0 ; mov rax, qword ptr [rax + 0x18] ; add dword ptr [rax], 1 ; ret
0x00000000000f31b9 : sub al, 0 ; mov rdx, rax ; jmp 0xf314f
0x00000000000f45ca : sub al, 0 ; mov rdx, rax ; jmp 0xf45a0
0x00000000000f41b6 : sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000fa3dc : sub al, 0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000fd2c4 : sub al, 0 ; pop rbx ; ret
0x00000000000fa024 : sub al, 0 ; ret
0x0000000000190b1c : sub al, 0x19 ; add byte ptr [rax], al ; sal ch, -0x17 ; call qword ptr [rcx]
0x00000000001a0f1c : sub al, 0x1d ; add dword ptr [rax], eax ; loopne 0x1a0f61 ; int1 ; jmp qword ptr [rcx]
0x00000000000a3812 : sub al, 0x3b ; sub al, 0x75 ; pop rax ; ret
0x000000000007b9fb : sub al, 0x48 ; add esp, 0x28 ; pop rbx ; pop rbp ; ret
0x00000000001344eb : sub al, 0x48 ; mov eax, dword ptr [rsp] ; add rsp, 0x18 ; ret
0x00000000001a611c : sub al, 0x6f ; add dword ptr [rax], eax ; loopne 0x1a6136 ; stc ; call qword ptr [rax]
0x00000000000c5462 : sub al, 0x74 ; cmp eax, dword ptr [rax + 0xffffffff940f7bfa] ; ret -0x49f1
0x00000000000c5251 : sub al, 0x74 ; fmul qword ptr [rax + 0xffffffffffffff83] ; ret 0x3c01
0x000000000011beca : sub al, 0x74 ; or ecx, dword ptr [rax + 0xffffffffffffff83] ; ret
0x00000000000a3815 : sub al, 0x75 ; pop rax ; ret
0x00000000001a1f6c : sub al, 0x7e ; int1 ; jmp qword ptr [rdx]
0x00000000001617c3 : sub al, 0xa ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000001a1e15 : sub al, 1 ; add byte ptr [rax], ch ; sal cl, cl ; jmp qword ptr [rbx]
0x000000000018d385 : sub al, 2 ; add byte ptr [rcx + rax + 0xfffffffffffffff8], ah ; jmp rsp
0x000000000019f91c : sub al, 7 ; add dword ptr [rax], eax ; rcr byte ptr [rbp + 0xfffffffffffffff0] ; call qword ptr [rax]
0x0000000000080ea1 : sub al, 8 ; add dword ptr [rax + 0x39], ecx ; ret
0x000000000011fb04 : sub al, byte ptr [r8] ; pop rbx ; ret
0x000000000003570a : sub al, byte ptr [rax] ; add byte ptr [rax], al ; mov rax, rcx ; pop rbx ; ret
0x00000000000048f9 : sub al, byte ptr [rax] ; add byte ptr [rdx], dl ; add byte ptr [rax + rax], cl ; nop ; ret 3
0x0000000000112d23 : sub al, byte ptr [rax] ; add rsp, 8 ; ret
0x000000000010f272 : sub al, byte ptr [rax] ; mov dword ptr fs:[rax], edx ; add rsp, 0x18 ; ret
0x000000000011ce45 : sub al, byte ptr [rax] ; mov eax, dword ptr [rax + 0x18] ; test eax, eax ; jne 0x11ce50 ; ret
0x000000000011d125 : sub al, byte ptr [rax] ; mov rax, qword ptr fs:[rax] ; ret
0x000000000011fa46 : sub al, byte ptr [rax] ; pop rbx ; ret
0x0000000000112ea5 : sub al, byte ptr [rax] ; ret
0x000000000011c9ae : sub al, byte ptr [rax] ; test eax, eax ; je 0x11c9b8 ; ret
0x0000000000120774 : sub al, byte ptr [rax] ; test eax, eax ; je 0x120780 ; ret
0x0000000000197d26 : sub al, byte ptr [rbx + 0xd1cffed] ; jb 0x197cb0 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000018d305 : sub al, byte ptr [rdx] ; add byte ptr [rsi + rdi*8 + 0xfffffffffffffff7], ah ; call rsp
0x00000000001b7024 : sub al, byte ptr [rsi + 0xfffffffffffffff7] ; jmp qword ptr [rdx]
0x0000000000129571 : sub al, ch ; cdq ; pop rsi ; out dx, eax ; dec dword ptr [rax + 0xffffffffffffff89] ; ret
0x0000000000129901 : sub al, ch ; or dword ptr [rbx + 0xffffffffffffffef], ebx ; dec dword ptr [rax + 0xffffffffffffff89] ; ret
0x000000000010d129 : sub ax, word ptr [rax] ; add rsp, 0x28 ; jmp rax
0x0000000000187af1 : sub bh, ah ; call qword ptr [rax]
0x0000000000187b11 : sub bh, ah ; call rax
0x00000000001a1ce4 : sub bh, byte ptr [rbp + 0xfffffffffffffff1] ; jmp qword ptr [rdx]
0x00000000000221fa : sub bh, byte ptr [rdx] ; add byte ptr [rbx + 0xffffffff89410fe7], al ; ret 0xb8
0x00000000001ab568 : sub bl, dl ; cmc ; jmp qword ptr [rsi]
0x00000000000a3806 : sub byte ptr [r11], r15b ; sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000000e2ef0 : sub byte ptr [r8 + 0xffffffffffffff89], r9b ; ret
0x0000000000134387 : sub byte ptr [r8 + 0xffffffffffffff89], r9b ; ret -0x76b8
0x000000000012f2d1 : sub byte ptr [r8 + r15*4], r8b ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x000000000003745f : sub byte ptr [rax + 0x44c88904], 0xf ; ret -0x72b8
0x00000000000d0bc7 : sub byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x00000000000717a8 : sub byte ptr [rax + 0xffffffffffffff88], al ; cmp dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; ret
0x00000000000742a3 : sub byte ptr [rax + 0xffffffffffffff88], r8b ; cmp dword ptr [rax + 0xf], eax ; mov dh, -0x39 ; ret
0x00000000000fbf90 : sub byte ptr [rax + 0xffffffffffffff89], cl ; fcomp dword ptr [rbx + 0x5d] ; ret
0x00000000000b606d : sub byte ptr [rax + 0xffffffffffffff89], cl ; jmp 0x48cde9bd
0x00000000000b63c4 : sub byte ptr [rax + 0xffffffffffffff89], cl ; jmp 0x4ccded14
0x0000000000124a99 : sub byte ptr [rax + 0xffffffffffffff89], cl ; out dx, eax ; mov rcx, qword ptr [rsp + 0x20] ; call rcx
0x00000000000e2ef1 : sub byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x0000000000134388 : sub byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x76b8
0x0000000000026fc3 : sub byte ptr [rax + 0xffffffffffffff89], cl ; sbb bl, ch ; ret 0x1f0f
0x0000000000029c05 : sub byte ptr [rax + 0xffffffffffffff89], cl ; sbb byte ptr [rbx + 0xffffffffeb1c2444], cl ; ret -0x76b8
0x000000000002add5 : sub byte ptr [rax + 0xffffffffffffff89], cl ; sbb byte ptr [rbx + 0xffffffffeb242444], cl ; ret -0x76b8
0x00000000000e9fe7 : sub byte ptr [rax + 0xffffffffffffff8b], cl ; adc ecx, dword ptr [rax + 0xffffffffffffff89] ; ret
0x000000000012f37a : sub byte ptr [rax + 0xffffffffffffff8b], cl ; sbb byte ptr [r11 + 0x5d], r11b ; pop r12 ; ret
0x0000000000128c8e : sub byte ptr [rax + 1], bh ; ret
0x000000000012f2d2 : sub byte ptr [rax + rdi*4], al ; add dword ptr [rax], eax ; add byte ptr [rax], al ; ret
0x0000000000191124 : sub byte ptr [rax], -0x16 ; jmp qword ptr [rdx]
0x00000000000022d1 : sub byte ptr [rax], 0x10 ; salc ; ret
0x0000000000135311 : sub byte ptr [rax], al ; add byte ptr [rcx], 0 ; add dh, dh ; ret
0x000000000013457f : sub byte ptr [rax], al ; add rsp, 8 ; pop rbx ; pop rbp ; jmp rax
0x000000000013453a : sub byte ptr [rax], al ; add rsp, 8 ; ret
0x00000000001346f6 : sub byte ptr [rax], al ; call qword ptr [rax]
0x0000000000102bfc : sub byte ptr [rax], al ; cmovns rax, qword ptr [rbx + 0x28] ; pop rbx ; ret
0x0000000000134695 : sub byte ptr [rax], al ; jmp rax
0x0000000000136ce5 : sub byte ptr [rax], al ; mov rax, qword ptr [rax + 0x108] ; jmp rax
0x000000000013468e : sub byte ptr [rax], al ; mov rax, qword ptr [rip + 0x288469] ; jmp rax
0x00000000001345e5 : sub byte ptr [rax], al ; pop r12 ; jmp rax
0x00000000001379f4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x137a00 ; xor eax, eax ; ret
0x0000000000137a24 : sub byte ptr [rax], al ; test eax, eax ; jne 0x137a30 ; xor eax, eax ; ret
0x0000000000137a54 : sub byte ptr [rax], al ; test eax, eax ; jne 0x137a60 ; xor eax, eax ; ret
0x0000000000137a84 : sub byte ptr [rax], al ; test eax, eax ; jne 0x137a90 ; xor eax, eax ; ret
0x0000000000137ab4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x137ac0 ; xor eax, eax ; ret
0x0000000000137ae4 : sub byte ptr [rax], al ; test eax, eax ; jne 0x137af0 ; xor eax, eax ; ret
0x000000000019b4a8 : sub byte ptr [rax], ch ; out dx, al ; call qword ptr [rdx]
0x00000000000022d2 : sub byte ptr [rax], dl ; salc ; ret
0x00000000000a380a : sub byte ptr [rbp + 0x63], dh ; ret
0x00000000000a3809 : sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000000da749 : sub byte ptr [rbp + 0xffffffff83480143], cl ; ret
0x00000000000d1892 : sub byte ptr [rbp + 0xfffffffffffffff1], dh ; or byte ptr [rsi + 0x32], 8 ; xor eax, eax ; ret
0x00000000001067ee : sub byte ptr [rbx + 0x2b8b9f35], cl ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret 0x2b49
0x00000000000b335a : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x0000000000021d4b : sub byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; ret
0x000000000005db7b : sub byte ptr [rbx + 0x5d], bl ; ret
0x000000000012dde7 : sub byte ptr [rbx + 0xf], bl ; mov dh, -0x40 ; pop rbp ; ret
0x0000000000136bc3 : sub byte ptr [rbx + 0xffffffffffffffda], dh ; mov eax, 1 ; ret
0x0000000000136bc2 : sub byte ptr [rbx + 0xffffffffffffffda], sil ; mov eax, 1 ; ret
0x0000000000193d58 : sub byte ptr [rbx + 0xffffffffffffffeb], cl ; jmp qword ptr [rsi]
0x00000000000d5a73 : sub byte ptr [rbx + rcx*4 + 0x76], cl ; xor byte ptr [rax + 0x39], cl ; ret -0x7cf1
0x00000000000a3807 : sub byte ptr [rbx], bh ; sub byte ptr [rbp + 0x63], r14b ; ret
0x00000000000b43fd : sub byte ptr [rcx + 0x39], cl ; ret
0x00000000000a9135 : sub byte ptr [rcx + 0xf], al ; xchg eax, esp ; ret
0x000000000017a76c : sub byte ptr [rcx + 0xffffffff9916fff4], bl ; hlt ; call qword ptr [rsi]
0x0000000000036bb5 : sub byte ptr [rcx + 0xffffffffc4894cf0], cl ; mov rbp, r9 ; jmp rdx
0x00000000000ccb12 : sub byte ptr [rcx + 0xffffffffffffff8b], cl ; or byte ptr [r8 + 0xffffffffffffff89], r9b ; ret -0x76b8
0x0000000000080bd2 : sub byte ptr [rcx + rcx*4 + 0x62], cl ; and byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x74b8
0x000000000012f3a7 : sub byte ptr [rcx + rcx*4 + 0x63], cl ; and byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x00000000001049e7 : sub byte ptr [rcx + rcx*4 + 0xffffffffffffffc8], al ; sub eax, edx ; ret
0x0000000000084038 : sub byte ptr [rcx + rcx*4 + 0xffffffffffffffe7], cl ; call rax
0x00000000000a484d : sub byte ptr [rcx + rcx*4 + 0xffffffffffffffee], cl ; lea rcx, qword ptr [rax + 4] ; call rbx
0x00000000000814ac : sub byte ptr [rcx + rcx*4 + 0xfffffffffffffff7], cl ; call qword ptr [rax]
0x00000000001068b7 : sub byte ptr [rcx], ch ; ret -0x76bf
0x00000000000719b7 : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; pop r13 ; ret
0x00000000000e26c7 : sub byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000064ef3 : sub byte ptr [rcx], dh ; rol byte ptr [rbp + 0xffffffffc09f0fdb], 0x29 ; ret
0x00000000001068b6 : sub byte ptr [rcx], r13b ; ret -0x76bf
0x000000000012289c : sub byte ptr [rdi + 0xffffffffffffffe9], dh ; mov qword ptr [rdx + 0x20], rsi ; ret
0x000000000019512c : sub byte ptr [rdi + 0xffffffffffffffec], dh ; jmp qword ptr [rdx]
0x00000000001a8db0 : sub byte ptr [rdi], -0xb ; call qword ptr [rsi]
0x00000000001a84f8 : sub byte ptr [rdi], bl ; cmc ; jmp qword ptr [rdx]
0x00000000000a6953 : sub byte ptr [rdi], cl ; xchg eax, esp ; ret
0x000000000010d634 : sub byte ptr [rdx + 0x2b], ah ; add al, ch ; ret
0x00000000000b3862 : sub byte ptr [rip + 0x440f4800], cl ; ret -0x72b8
0x0000000000193efe : sub byte ptr [rip + 0xd1cffeb], bh ; mov ch, 0x37 ; jmp 0x193f07
0x000000000019d212 : sub byte ptr [rsi + 0x300e4105], al ; add dword ptr [rsi], 2 ; ret
0x00000000001b5f28 : sub byte ptr [rsi], al ; sti ; jmp qword ptr [rdx]
0x00000000001a0a88 : sub byte ptr [rsi], dl ; int1 ; jmp qword ptr [rcx]
0x00000000001aca38 : sub ch, ch ; cmc ; call qword ptr [rdi]
0x00000000001a88a9 : sub ch, dh ; call qword ptr [rax]
0x00000000001a87e9 : sub ch, dh ; call qword ptr [rcx]
0x00000000001a8831 : sub ch, dh ; jmp qword ptr [rcx]
0x00000000000363d5 : sub cl, al ; jne 0x363e0 ; add rsp, 8 ; ret
0x00000000000366b0 : sub cl, al ; jne 0x366c0 ; add rsp, 8 ; ret
0x0000000000036258 : sub cl, al ; ret
0x00000000000f8b34 : sub cl, bh ; dec dword ptr [rax + 0x39] ; ret
0x00000000000d2403 : sub cl, byte ptr [rax + 0x39] ; ret -0x78f1
0x00000000000be01a : sub cl, byte ptr [rax + 0xffffffffffffff89] ; loope 0xbdfa8 ; ret -0x9cf
0x00000000000e80e6 : sub cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x403c
0x00000000000f7a5d : sub dh, al ; add byte ptr [rdx], cl ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000037c62 : sub dh, byte ptr [rax + rdi] ; ret
0x000000000019b4a9 : sub dh, ch ; call qword ptr [rdx]
0x00000000001a8991 : sub dh, ch ; jmp qword ptr [rcx]
0x000000000019bca5 : sub dh, ch ; jmp qword ptr [rdx]
0x000000000018bf41 : sub dh, ch ; jmp rsp
0x00000000001af4a9 : sub dh, dh ; jmp qword ptr [rcx]
0x00000000001a77f8 : sub dl, bl ; hlt ; call qword ptr [rax]
0x000000000019431e : sub dl, byte ptr [rbx + rbp*8 + 0x750d1cff] ; xchg eax, ebx ; jmp 0x194327
0x0000000000191125 : sub dl, ch ; jmp qword ptr [rdx]
0x00000000001a7348 : sub dl, cl ; hlt ; jmp qword ptr [rcx]
0x0000000000198e48 : sub dl, dl ; in eax, dx ; call rcx
0x00000000001a1e18 : sub dl, dl ; int1 ; jmp qword ptr [rbx]
0x00000000000933a6 : sub dword ptr [rax + 0xffffffffffffff89], ecx ; jmp 0x4ccbbcfa
0x00000000000fa43a : sub dword ptr [rax + rax], 0x48 ; add esp, 8 ; ret
0x000000000012b905 : sub dword ptr [rax], eax ; add rsp, 8 ; ret
0x000000000012c515 : sub dword ptr [rax], eax ; cmp dword ptr fs:[rax], 0x18 ; je 0x12c520 ; ret
0x000000000012b82c : sub dword ptr [rax], eax ; mov qword ptr fs:[rax], rdx ; ret
0x0000000000121ee5 : sub dword ptr [rax], eax ; mov rax, qword ptr [rdx + rax*8] ; jmp rax
0x00000000001312c4 : sub dword ptr [rax], eax ; test eax, eax ; je 0x1312d0 ; xor eax, eax ; ret
0x00000000000f5f43 : sub dword ptr [rbp + 0xffffffff8b49fff2], edx ; call rbx
0x000000000018f7b4 : sub dword ptr [rbp + 0xffffffffffffffe9], ecx ; jmp qword ptr [rdx]
0x0000000000196bac : sub dword ptr [rbx + 0xffffffffffffffed], edi ; jmp qword ptr [rdx]
0x00000000001ab8e4 : sub dword ptr [rbx + rdi*8], esp ; jmp qword ptr [rdx]
0x000000000015b2b3 : sub dword ptr [rbx], eax ; add byte ptr [rax], al ; ret
0x0000000000143da7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x143db4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000143ef7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x143f04 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000144047 : sub dword ptr [rdi + 0x10], ebx ; jb 0x144054 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000144197 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1441a4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001442e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1442f4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000144437 : sub dword ptr [rdi + 0x10], ebx ; jb 0x144444 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000144587 : sub dword ptr [rdi + 0x10], ebx ; jb 0x144594 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001446d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1446e4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000144827 : sub dword ptr [rdi + 0x10], ebx ; jb 0x144834 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000144977 : sub dword ptr [rdi + 0x10], ebx ; jb 0x144984 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000144ac7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x144ad4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000144c17 : sub dword ptr [rdi + 0x10], ebx ; jb 0x144c24 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000144d67 : sub dword ptr [rdi + 0x10], ebx ; jb 0x144d74 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000144eb7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x144ec4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000145007 : sub dword ptr [rdi + 0x10], ebx ; jb 0x145014 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146777 : sub dword ptr [rdi + 0x10], ebx ; jb 0x146784 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001468c7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1468d4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146a17 : sub dword ptr [rdi + 0x10], ebx ; jb 0x146a24 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146b67 : sub dword ptr [rdi + 0x10], ebx ; jb 0x146b74 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146cb7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x146cc4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146e07 : sub dword ptr [rdi + 0x10], ebx ; jb 0x146e14 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000146f57 : sub dword ptr [rdi + 0x10], ebx ; jb 0x146f64 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001470a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1470b4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001471f7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x147204 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000147347 : sub dword ptr [rdi + 0x10], ebx ; jb 0x147354 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000147497 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1474a4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001475e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1475f4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000147737 : sub dword ptr [rdi + 0x10], ebx ; jb 0x147744 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000147887 : sub dword ptr [rdi + 0x10], ebx ; jb 0x147894 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001479d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1479e4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000149147 : sub dword ptr [rdi + 0x10], ebx ; jb 0x149154 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000149297 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1492a4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001493e7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1493f4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000149537 : sub dword ptr [rdi + 0x10], ebx ; jb 0x149544 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000149687 : sub dword ptr [rdi + 0x10], ebx ; jb 0x149694 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x00000000001497d7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x1497e4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000149927 : sub dword ptr [rdi + 0x10], ebx ; jb 0x149934 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000149a77 : sub dword ptr [rdi + 0x10], ebx ; jb 0x149a84 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000149bc7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x149bd4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000149d17 : sub dword ptr [rdi + 0x10], ebx ; jb 0x149d24 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000149e67 : sub dword ptr [rdi + 0x10], ebx ; jb 0x149e74 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x0000000000149fb7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x149fc4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014a107 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14a114 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014a257 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14a264 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000014a3a7 : sub dword ptr [rdi + 0x10], ebx ; jb 0x14a3b4 ; movaps xmmword ptr [rdi], xmm4 ; jmp r9
0x000000000000258b : sub dword ptr [rdi + 0x2009646], -0x7a ; out dx, al ; ret -0x7753
0x0000000000143cff : sub dword ptr [rdi + 0xffffffffffffffe0], esp ; movaps xmmword ptr [rdi + 0xfffffffffffffff0], xmm5 ; jmp r9
0x0000000000143d03 : sub dword ptr [rdi + 0xfffffffffffffff0], ebp ; jmp r9
0x0000000000143dad : sub dword ptr [rdi], esp ; jmp r9
0x0000000000162e19 : sub dword ptr [rdx], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000161fa6 : sub dword ptr [rip + 0xfffffffff3000002], 0xf ; outsd dx, dword ptr [rsi] ; push rdi ; ret
0x000000000012b904 : sub dword ptr ss:[rax], eax ; add rsp, 8 ; ret
0x000000000012b926 : sub eax, -0x80 ; add rsp, 8 ; ret
0x000000000012f11a : sub eax, 0x10c48348 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000e3e65 : sub eax, 0x28b4800 ; mov qword ptr [rdx], rdi ; ret
0x0000000000187a55 : sub eax, 0x2ef0fffc ; cld ; call rax
0x0000000000187b39 : sub eax, 0x2f30fffc ; cld ; jmp qword ptr [rax]
0x0000000000080eea : sub eax, 0x448d48fe ; ret
0x00000000000b4f7f : sub eax, 0x48ffffd1 ; add esp, 0x18 ; ret
0x0000000000036499 : sub eax, 0x7f800000 ; shr eax, 0x1f ; ret
0x00000000000fd05f : sub eax, 0x89480008 ; ret -0xcf
0x000000000010dbd4 : sub eax, 0x8948002b ; ret -0x74b8
0x000000000009630f : sub eax, 0x89ffff19 ; ret
0x000000000010d524 : sub eax, 0x89ffffff ; ret -0x6915
0x0000000000077646 : sub eax, 0xf8830000 ; push qword ptr [rbp + 2] ; pop rbx ; ret
0x000000000012a995 : sub eax, 1 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000047107 : sub eax, 1 ; cmp rax, rbx ; jne 0x47100 ; pop rbx ; ret
0x000000000002caa4 : sub eax, 1 ; mov dword ptr [rbx + 8], eax ; pop rbx ; ret
0x000000000011e231 : sub eax, 1 ; pop r13 ; ret
0x00000000000385cf : sub eax, 1 ; ret
0x00000000001107a5 : sub eax, dword ptr [rax] ; add byte ptr [rbp + 0xffffffffffffffc2], dh ; jmp 0x110764
0x0000000000109192 : sub eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop rbx ; ret
0x000000000010e2af : sub eax, dword ptr [rax] ; add ecx, ebp ; ret
0x000000000010d12a : sub eax, dword ptr [rax] ; add rsp, 0x28 ; jmp rax
0x00000000001124da : sub eax, dword ptr [rax] ; call rax
0x00000000000fff7f : sub eax, dword ptr [rax] ; mov dword ptr fs:[rax], edx ; add rsp, 0x18 ; ret
0x000000000010b94c : sub eax, dword ptr [rax] ; pop rbp ; ret
0x0000000000108714 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108720 ; xor eax, eax ; ret
0x0000000000108744 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108750 ; xor eax, eax ; ret
0x0000000000108774 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108780 ; xor eax, eax ; ret
0x00000000001087a4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1087b0 ; xor eax, eax ; ret
0x00000000001087d4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1087e0 ; xor eax, eax ; ret
0x0000000000108804 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108810 ; xor eax, eax ; ret
0x0000000000108834 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108840 ; xor eax, eax ; ret
0x0000000000108864 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108870 ; xor eax, eax ; ret
0x0000000000108894 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1088a0 ; xor eax, eax ; ret
0x00000000001088c4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1088d0 ; xor eax, eax ; ret
0x00000000001088f4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108900 ; xor eax, eax ; ret
0x0000000000108924 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108930 ; xor eax, eax ; ret
0x0000000000108954 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108960 ; xor eax, eax ; ret
0x0000000000108984 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108990 ; xor eax, eax ; ret
0x00000000001089b4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1089c0 ; xor eax, eax ; ret
0x00000000001089e4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x1089f0 ; xor eax, eax ; ret
0x0000000000108a14 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108a20 ; xor eax, eax ; ret
0x0000000000108a44 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108a50 ; xor eax, eax ; ret
0x0000000000108a74 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108a80 ; xor eax, eax ; ret
0x0000000000108aa4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108ab0 ; xor eax, eax ; ret
0x0000000000108b04 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108b10 ; xor eax, eax ; ret
0x0000000000108b34 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108b40 ; xor eax, eax ; ret
0x0000000000108b64 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108b70 ; xor eax, eax ; ret
0x0000000000108b94 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108ba0 ; xor eax, eax ; ret
0x0000000000108bc4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108bd0 ; xor eax, eax ; ret
0x0000000000108bf4 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108c00 ; xor eax, eax ; ret
0x0000000000108c24 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108c30 ; xor eax, eax ; ret
0x0000000000108c54 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108c60 ; xor eax, eax ; ret
0x0000000000108c84 : sub eax, dword ptr [rax] ; test eax, eax ; jne 0x108c90 ; xor eax, eax ; ret
0x000000000003080f : sub eax, dword ptr [rbx + 8] ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x000000000007dd1e : sub eax, dword ptr [rdi + 0x18] ; ret
0x0000000000073c25 : sub eax, dword ptr [rdi + 0x20] ; ret
0x0000000000073b15 : sub eax, dword ptr [rdi + 0x38] ; ret
0x00000000000764f5 : sub eax, dword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x0000000000073c16 : sub eax, dword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x0000000000073b06 : sub eax, dword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x00000000001b1cfd : sub eax, dword ptr [rdx] ; add byte ptr [rax], al ; fdivr st(6), st(0) ; jmp qword ptr [rbx]
0x000000000007d233 : sub eax, dword ptr [rsi + 0x10] ; ret
0x0000000000039e41 : sub eax, eax ; mov dword ptr [rdx], eax ; mov eax, 1 ; ret
0x0000000000104a01 : sub eax, eax ; mov eax, r8d ; ret
0x00000000000a3d6c : sub eax, eax ; nop ; ret
0x00000000000a3d21 : sub eax, eax ; ret
0x000000000007c48d : sub eax, ebp ; pop r13 ; pop r14 ; ret
0x00000000000a4a83 : sub eax, ebp ; pop rbp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a4cca : sub eax, ebp ; pop rbp ; pop r12 ; ret
0x000000000007ca99 : sub eax, ecx ; lea eax, dword ptr [r8 + 0xffffffffffffffff] ; ret
0x000000000008905c : sub eax, ecx ; ret
0x0000000000089801 : sub eax, edi ; ret
0x00000000000a4598 : sub eax, edi ; sar rax, 2 ; sub rdx, rax ; jmp 0xa452d
0x000000000003c929 : sub eax, edx ; ret
0x000000000003678f : sub eax, edx ; sar eax, 0x10 ; ret
0x000000000003647f : sub eax, edx ; shr eax, 0x1f ; ret
0x00000000000360cd : sub eax, edx ; shr rax, 0x3f ; ret
0x0000000000071b6a : sub eax, esi ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000758ae : sub eax, esi ; pop r14 ; pop r15 ; ret
0x0000000000104bc2 : sub eax, esi ; ret
0x0000000000079f89 : sub eax, esp ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000a3d6b : sub eax, r8d ; nop ; ret
0x00000000000a3d20 : sub eax, r8d ; ret
0x0000000000104a1b : sub eax, r9d ; ret
0x0000000000197d27 : sub ebp, -1 ; sbb al, 0xd ; jb 0x197cb0 ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000175b7e : sub ebp, eax ; fcomp qword ptr [rdi + 0xffffffffffffffb6] ; ret 0x474c
0x0000000000118af0 : sub ebx, dword ptr [rbx + 0x5d] ; ret
0x0000000000174615 : sub ebx, dword ptr [rbx + 0xfffffffffffffff5] ; pop rbx ; and dword ptr [rsi + rbp*2 + 0xffffffffffffff86], edi ; lahf ; ret -0x78e2
0x0000000000002f63 : sub ebx, dword ptr [rsp + rax*2] ; nop ; ret 0x5bdb
0x000000000007fc07 : sub ecx, dword ptr [rax + 0x39] ; ret
0x000000000003c7f4 : sub ecx, dword ptr [rax + 0xffffffffffffff83] ; ret 0x4801
0x00000000000f783c : sub ecx, dword ptr [rax + 0xffffffffffffff89] ; fimul word ptr [rcx + rcx*4 + 0xffffffffffffffef] ; call r14
0x000000000009e351 : sub ecx, dword ptr [rax] ; add byte ptr [rax], al ; ret
0x0000000000082344 : sub ecx, dword ptr [rax] ; add ebx, ebp ; ret
0x0000000000084ae4 : sub ecx, dword ptr [rcx + 0xffffffffffffff83] ; ret
0x00000000000be164 : sub ecx, dword ptr [rcx + rcx*4 + 0xffffffffffffffff] ; call r14
0x000000000010496c : sub ecx, eax ; mov eax, ecx ; ret
0x00000000000a2b9c : sub edi, 0x10 ; add rax, rdi ; ret
0x000000000012801c : sub edi, dword ptr [rdi + 5] ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0xcf
0x000000000018d659 : sub edi, eax ; jmp rsp
0x0000000000109dc1 : sub edi, edi ; rep dec dword ptr [rax + 0xffffffffffffff81] ; ret
0x000000000018cb21 : sub edi, esi ; jmp rsp
0x0000000000187a51 : sub edi, esp ; call qword ptr [rax]
0x00000000000c4e7d : sub edi, esp ; dec dword ptr [rax + 0xffffffffffffff89] ; ret 0x19eb
0x0000000000187a11 : sub edi, esp ; inc dword ptr [rax + 0x2d] ; cld ; jmp qword ptr [rax]
0x0000000000187a71 : sub edi, esp ; push rax ; sub al, -4 ; call rax
0x000000000019a90c : sub edx, -0x13 ; jmp qword ptr [rdx]
0x000000000007d260 : sub edx, dword ptr [rax + 0x10] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x000000000007d255 : sub edx, dword ptr [rax + 0x18] ; mov eax, dword ptr [rdi + 0x10] ; sub eax, edx ; ret
0x0000000000118672 : sub edx, dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000008caa4 : sub edx, eax ; jbe 0x8cae0 ; add rax, rdi ; ret
0x000000000008cab4 : sub edx, eax ; jbe 0x8cae0 ; lea rax, qword ptr [rdi + rax + 0x10] ; ret
0x000000000008cac4 : sub edx, eax ; jbe 0x8cae0 ; lea rax, qword ptr [rdi + rax + 0x20] ; ret
0x000000000008cad4 : sub edx, eax ; jbe 0x8cae0 ; lea rax, qword ptr [rdi + rax + 0x30] ; ret
0x00000000000a459f : sub edx, eax ; jmp 0xa452d
0x00000000000c83e0 : sub edx, eax ; jmp 0xc83fc
0x000000000002079e : sub edx, ebx ; inc rdx ; jmp 0x207a9
0x000000000003674d : sub edx, ecx ; not eax ; and eax, edx ; ret
0x000000000018e6d9 : sub edx, edi ; call rsp
0x00000000000c83dd : sub edx, edi ; sub r10, rax ; jmp 0xc83fc
0x0000000000079862 : sub edx, esi ; mov rdi, rbx ; call rax
0x000000000009801a : sub esi, 1 ; jne 0x98010 ; xor eax, eax ; ret
0x00000000000980e2 : sub esi, 1 ; jne 0x980d8 ; xor eax, eax ; ret
0x000000000011893e : sub esi, 1 ; mov byte ptr [rdi + 1], sil ; ret
0x00000000001341c7 : sub esi, dword ptr [rcx] ; ror byte ptr [rax + 0xffffffffffffff83], -0x3c ; sbb byte ptr [rbx + 0x5d], bl ; ret
0x00000000001a8a21 : sub esi, ebp ; jmp qword ptr [rcx]
0x00000000001a4611 : sub esi, ebx ; jmp rdx
0x000000000018cb71 : sub esi, edi ; call rsp
0x000000000001f6a4 : sub esi, edx ; add edx, ecx ; cmp esi, ecx ; cmovge eax, edx ; jmp 0x1f67a
0x00000000001b1035 : sub esi, esi ; jmp qword ptr [rdx]
0x000000000001f661 : sub esp, -0x80 ; mov eax, ebx ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000012f48e : sub esp, -0x80 ; mov rax, rdx ; pop rbx ; ret
0x00000000000a45ee : sub esp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116f04 : sub esp, -0x80 ; pop rbx ; ret
0x0000000000116f11 : sub esp, -0x80 ; xor eax, eax ; pop rbx ; ret
0x00000000000af87f : sub esp, eax ; pop rbp ; mov eax, r12d ; pop r12 ; ret
0x00000000001a9ec4 : sub esp, ecx ; hlt ; jmp qword ptr [rdx]
0x00000000000c83df : sub r10, rax ; jmp 0xc83fc
0x00000000000c83dc : sub r10, rdi ; sub r10, rax ; jmp 0xc83fc
0x0000000000118671 : sub r10d, dword ptr [rax] ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x00000000000af87e : sub r12d, eax ; pop rbp ; mov eax, r12d ; pop r12 ; ret
0x000000000007ca98 : sub r8, rcx ; lea eax, dword ptr [r8 + 0xffffffffffffffff] ; ret
0x000000000011fa45 : sub r8b, byte ptr [rax] ; pop rbx ; ret
0x0000000000104a00 : sub r8d, eax ; mov eax, r8d ; ret
0x0000000000082343 : sub r9, qword ptr [rax] ; add ebx, ebp ; ret
0x000000000012b925 : sub rax, -0x80 ; add rsp, 8 ; ret
0x00000000000a2223 : sub rax, 1 ; ret
0x000000000007dd1d : sub rax, qword ptr [rdi + 0x18] ; ret
0x0000000000073c24 : sub rax, qword ptr [rdi + 0x20] ; ret
0x0000000000073b14 : sub rax, qword ptr [rdi + 0x38] ; ret
0x00000000000764f4 : sub rax, qword ptr [rdx + 0x10] ; sar rax, 2 ; ret
0x0000000000073c15 : sub rax, qword ptr [rdx + 0x18] ; sar rax, 2 ; ret
0x0000000000073b05 : sub rax, qword ptr [rdx + 0x30] ; sar rax, 2 ; ret
0x0000000000079f88 : sub rax, r12 ; pop r12 ; pop r13 ; pop r14 ; ret
0x000000000007c48c : sub rax, r13 ; pop r13 ; pop r14 ; ret
0x0000000000071b69 : sub rax, r14 ; pop r14 ; pop r15 ; pop rbp ; ret
0x00000000000758ad : sub rax, r14 ; pop r14 ; pop r15 ; ret
0x00000000000a4cc9 : sub rax, rbp ; pop rbp ; pop r12 ; ret
0x0000000000089800 : sub rax, rdi ; ret
0x00000000000a4597 : sub rax, rdi ; sar rax, 2 ; sub rdx, rax ; jmp 0xa452d
0x000000000003c93d : sub rax, rdx ; ret
0x00000000000360cc : sub rax, rdx ; shr rax, 0x3f ; ret
0x000000000013da4c : sub rax, rsi ; ret
0x00000000000a2b9b : sub rdi, 0x10 ; add rax, rdi ; ret
0x000000000008caa3 : sub rdx, rax ; jbe 0x8cae0 ; add rax, rdi ; ret
0x00000000000a459e : sub rdx, rax ; jmp 0xa452d
0x000000000002079d : sub rdx, rbx ; inc rdx ; jmp 0x207a9
0x0000000000079861 : sub rdx, rsi ; mov rdi, rbx ; call rax
0x0000000000098019 : sub rsi, 1 ; jne 0x98010 ; xor eax, eax ; ret
0x00000000000980e1 : sub rsi, 1 ; jne 0x980d8 ; xor eax, eax ; ret
0x00000000001a8a68 : sub rsi, rbp ; jmp qword ptr [rcx]
0x000000000012f48d : sub rsp, -0x80 ; mov rax, rdx ; pop rbx ; ret
0x00000000000a45ed : sub rsp, -0x80 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116f03 : sub rsp, -0x80 ; pop rbx ; ret
0x0000000000116f10 : sub rsp, -0x80 ; xor eax, eax ; pop rbx ; ret
0x00000000000361b0 : subps xmm0, xmm1 ; ret
0x00000000000361af : subsd xmm0, xmm1 ; ret
0x0000000000036514 : subss xmm0, xmm1 ; ret
0x0000000000119cb1 : syscall ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x00000000000cc2ed : syscall ; neg eax ; ret
0x0000000000108cf7 : syscall ; pop rdx ; pop rsi ; ret
0x00000000000c29e5 : syscall ; ret
0x00000000000fafcf : syscall ; test rax, rax ; jl 0xfb015 ; je 0xfafd9 ; ret
0x000000000007df94 : sysenter
0x00000000001150e3 : test ah, bl ; add byte ptr [rax], al ; add byte ptr [rcx + 0x39], al ; ret -0x7bf1
0x00000000000c9cf3 : test ah, byte ptr [rax + rax*4] ; add byte ptr [rax], al ; add byte ptr [rax + 0x29], cl ; ret
0x00000000000dd0f0 : test ah, byte ptr [rax + rax*4] ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x0000000000048699 : test ah, byte ptr [rax + rbx*4] ; add byte ptr [rax], al ; add byte ptr [rcx], al ; ret -0x2817
0x00000000000b1ca9 : test ah, byte ptr [rax + rbx] ; add dword ptr [rax], eax ; add byte ptr [rax + 0x29], cl ; ret
0x00000000001b1274 : test ah, byte ptr [rax] ; add al, byte ptr [rax] ; call -0x1ce4f6bd
0x00000000000e3a2d : test ah, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rdi], cl ; xchg eax, ebp ; ret -0x1d3f
0x00000000000a5900 : test ah, byte ptr [rbx] ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x0000000000191974 : test ah, byte ptr [rdi] ; add byte ptr [rax], al ; cmp byte ptr [rsi + 0xffffffffffffffea], dl ; jmp qword ptr [rcx]
0x00000000000e7156 : test ah, byte ptr [rip + 0xffffffff85ffffff] ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000000bd0e4 : test ah, dl ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x24cf
0x0000000000103841 : test ah, dl ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000000a4129 : test al, -0x10 ; jne 0xa4180 ; lea rax, qword ptr [rdi + 0xfffffffffffffff0] ; ret
0x00000000001a78d8 : test al, -0x24 ; hlt ; jmp qword ptr [rcx]
0x00000000001a6c18 : test al, -0x4e ; hlt ; jmp qword ptr [rcx]
0x0000000000197b38 : test al, -0x54 ; in eax, dx ; call qword ptr [rcx]
0x000000000017a788 : test al, -0x68 ; hlt ; call rsp
0x0000000000174ed7 : test al, -0x69 ; xchg eax, esp ; ret
0x0000000000195858 : test al, -0x75 ; in eax, dx ; call qword ptr [rdx]
0x0000000000187469 : test al, -3 ; call qword ptr [rcx + 0x11fffda8]
0x000000000018746d : test al, -3 ; call qword ptr [rcx]
0x0000000000187531 : test al, -3 ; inc dword ptr [rax + 0xffffffffffffffa9] ; std ; call rax
0x000000000019e0c8 : test al, -4 ; stc ; call qword ptr [rax]
0x000000000012b987 : test al, 0 ; add byte ptr [rax], al ; add rsp, 8 ; ret
0x000000000012491a : test al, 0 ; add byte ptr [rax], al ; mov eax, 1 ; ret
0x000000000002ccf0 : test al, 0 ; add byte ptr [rax], al ; ret
0x00000000001a89a8 : test al, 0x2a ; cmc ; jmp qword ptr [rcx]
0x00000000001a8d08 : test al, 0x2e ; cmc ; jmp qword ptr [rcx]
0x0000000000003c82 : test al, 0x35 ; push rbx ; fs ; or byte ptr [rbx + 0x4e], ch ; ret 0x6bba
0x00000000000d50a1 : test al, 0x48 ; add eax, ecx ; jmp rax
0x00000000000be593 : test al, 0x48 ; mov edi, dword ptr [rbp + 0xffffffffffffff98] ; call r14
0x00000000001ac2dc : test al, 0x59 ; cmc ; jmp qword ptr [rdx]
0x00000000001a5b18 : test al, 0x61 ; hlt ; jmp qword ptr [rbx]
0x00000000001a6298 : test al, 0x78 ; hlt ; jmp qword ptr [rcx]
0x00000000001b60d8 : test al, 4 ; sti ; jmp qword ptr [rdx]
0x0000000000082a82 : test al, ah ; add byte ptr [rax], al ; add dh, dh ; ret
0x00000000001049e4 : test al, al ; je 0x104a10 ; mov eax, r9d ; sub eax, edx ; ret
0x00000000000977f0 : test al, al ; jne 0x977d8 ; xor eax, eax ; ret
0x000000000009805a : test al, al ; jne 0x97ffb ; mov rax, rdi ; ret
0x0000000000098b4a : test al, al ; jne 0x98b30 ; xor eax, eax ; sub eax, ecx ; ret
0x0000000000109819 : test al, al ; mov byte ptr [rdi], al ; jne 0x109808 ; mov rax, rdi ; ret
0x00000000001099d9 : test al, al ; mov byte ptr [rdi], al ; jne 0x1099c8 ; mov rax, r10 ; ret
0x0000000000070324 : test al, bh ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x74b8
0x000000000013049b : test al, byte ptr [rax + 0x1000001] ; ret -0x76b4
0x000000000016329a : test al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; lea rax, qword ptr [rdi] ; ret
0x000000000015b44a : test al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rcx], dl ; ret
0x000000000009da7a : test al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dh ; ret
0x000000000009ea4a : test al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov byte ptr [rdi], dl ; ret
0x000000000015b47a : test al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rcx], edx ; ret
0x000000000009ea6a : test al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi + 0xffffffffffffffff], edx ; ret
0x000000000009ea7a : test al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov dword ptr [rdi], edx ; ret
0x000000000015b4ba : test al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rcx], rdx ; ret
0x000000000009eaba : test al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov qword ptr [rdi], rdx ; ret
0x000000000007d50a : test al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov rax, rdi ; ret
0x000000000015b45a : test al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rcx], dx ; ret
0x000000000009ea5a : test al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov word ptr [rdi], dx ; ret
0x000000000009e73a : test al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000005dbea : test al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; pop rbx ; ret
0x0000000000046dea : test al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000097caa : test al, byte ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; xor rax, rax ; ret
0x0000000000104968 : test al, byte ptr [rax] ; add byte ptr [rax], al ; sub ecx, eax ; mov eax, ecx ; ret
0x00000000000e61bb : test al, byte ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x7cb8
0x00000000001a3774 : test al, byte ptr [rbp + 1] ; add byte ptr [rax], ch ; xchg edx, esi ; jmp qword ptr [rax]
0x00000000000f3788 : test al, byte ptr [rbx] ; add al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x3c01
0x00000000000251e1 : test al, byte ptr [rbx] ; add eax, dword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x00000000000abd1d : test al, byte ptr [rcx] ; add eax, 0xb8480000 ; ret -1
0x00000000000c5277 : test al, byte ptr [rdi*8 + 0xffffffff8348ffff] ; ret -0x14fe
0x000000000009e3f8 : test al, byte ptr [rdi] ; add byte ptr [rax], al ; ret
0x0000000000093ee4 : test al, byte ptr [rdx] ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16ff
0x0000000000048eb6 : test al, byte ptr [rsp + rax] ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret 0x2948
0x00000000001ab774 : test al, ch ; add dword ptr [rax], eax ; sbb ah, dl ; cmc ; jmp qword ptr [rsi]
0x000000000018bf54 : test al, cl ; add dword ptr [rax], eax ; xor al, 0x3b ; cmc ; call rsp
0x0000000000095322 : test al, dh ; add dword ptr [rax], eax ; add byte ptr [rcx + 0xffffffffffffff89], cl ; ret
0x0000000000188111 : test bh, ah ; call qword ptr [rsi]
0x00000000001882d1 : test bh, ah ; call rax
0x000000000017921d : test bh, ah ; inc eax ; test edi, esp ; jmp rax
0x0000000000188251 : test bh, ah ; jmp rsp
0x000000000018a508 : test bh, ah ; out dx, al ; jmp rsp
0x000000000018824d : test bh, ah ; push qword ptr [rsp + rax*4 + 0xfffffffffffffffc] ; jmp rsp
0x00000000001148f6 : test bh, bh ; add al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4104
0x000000000002fea6 : test bh, byte ptr [rax + 0x200] ; ret
0x00000000000f36cf : test bh, byte ptr [rcx + rax + 0xffffffff83480000] ; ret 0x3c01
0x0000000000085d2f : test bh, byte ptr [rcx + rax] ; add byte ptr [rcx + rcx*4 + 0xfffffffffffffff6], cl ; call rax
0x0000000000193074 : test bh, byte ptr [rsi] ; add byte ptr [rax], al ; call 0x23191b1d
0x00000000001a3074 : test bh, byte ptr [rsi] ; add dword ptr [rax], eax ; or ah, bh ; int1 ; jmp qword ptr [rcx]
0x00000000000f3730 : test bl, bl ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x3c01
0x00000000001343ae : test bl, byte ptr [rcx + 0xffffffff83000000] ; ret -0x7c80
0x0000000000096f80 : test bl, byte ptr [rdi + 0xffffffd] ; mov dh, 0x45 ; ret
0x0000000000042a1d : test bl, byte ptr [rip + 0xffffffff89000001] ; ret
0x0000000000122414 : test bl, cl ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; out dx, eax ; call qword ptr [rbx]
0x000000000019a75c : test bl, cl ; in eax, dx ; jmp qword ptr [rdx]
0x000000000002104e : test bl, dl ; add byte ptr [rax], al ; add byte ptr [rax + 0x63], cl ; ret -0x76b4
0x0000000000002b5e : test bp, word ptr [rbx + 0xffffffffffffffd2] ; cmp dl, byte ptr [rdi] ; ret
0x00000000000dc686 : test byte ptr [rax], 0 ; add byte ptr [rax + 0x63], cl ; ret -0x74b8
0x00000000000ada93 : test byte ptr [rax], 0 ; add byte ptr [rcx + 0xffffffffffffff83], cl ; ret
0x000000000010705c : test byte ptr [rbx + 0x1c], 0x20 ; je 0x1070bf ; xor eax, eax ; pop rbx ; ret
0x000000000003ffb6 : test byte ptr [rcx + 0xffffffffffffffb9], 0x40 ; add byte ptr [rax], al ; add byte ptr [rcx + 0xffffffffffffff89], cl ; ret -0x76b4
0x0000000000073b62 : test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000073b72 : test byte ptr [rdi], 8 ; sete al ; ret
0x00000000000b3dc6 : test byte ptr [rsi], -4 ; dec dword ptr [rax + 0x39] ; ret
0x00000000000fade6 : test byte ptr [rsp + 0x29], -0x80 ; setne dl ; jmp 0xfadbf
0x00000000000a2722 : test ch, -0x10 ; je 0xa2712 ; movzx eax, cl ; pop rbx ; ret
0x000000000018e44c : test ch, byte ptr [rax + 0xffffffffcfb40002] ; stc ; call rsp
0x00000000000fa3db : test ch, byte ptr [rax + rax] ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000134644 : test ch, byte ptr [rax] ; add byte ptr [rcx + 0x5c], al ; jmp rax
0x000000000018ea70 : test ch, byte ptr [rbx + 0xfffffffffffffffa] ; jmp rsp
0x000000000018d658 : test ch, byte ptr [rbx] ; clc ; jmp rsp
0x000000000019a174 : test ch, byte ptr [rdi + 0xfffffffff9c80000] ; in eax, dx ; call qword ptr [rax]
0x000000000018e564 : test ch, byte ptr [rdi + 0xfffffffffcb40002] ; stc ; call rsp
0x000000000018bc6c : test ch, byte ptr [rdx + 0x14240001] ; hlt ; call rsp
0x000000000019263d : test ch, dl ; jmp qword ptr [rdx]
0x000000000010d22e : test cl, -0x20 ; or byte ptr [rcx], cl ; lock bswap eax ; ret
0x00000000000d2a62 : test cl, 1 ; jne 0xd29ee ; pop rbx ; ret
0x000000000002423b : test cl, byte ptr [rax + 0xffffffffffffffc7] ; ret
0x000000000018e0a4 : test cl, byte ptr [rbp + 0x65340002] ; stc ; call rsp
0x0000000000024169 : test cl, byte ptr [rbp + rcx*4 + 0x2c] ; ret
0x000000000006e8a2 : test cl, byte ptr [rcx + 0xffffffff89000001] ; ret -0x1d7d
0x00000000001a8174 : test cl, byte ptr [rdi + 0xa680001] ; cmc ; call rsp
0x00000000000986a9 : test cl, cl ; je 0x98668 ; mov byte ptr [r10 + 1], 0 ; ret
0x00000000000a1eaf : test cl, cl ; jne 0xa1ea0 ; ret
0x00000000000a1f5f : test cl, cl ; jne 0xa1f50 ; ret
0x00000000000a221f : test cl, cl ; jne 0xa2210 ; sub rax, 1 ; ret
0x00000000000a274a : test dh, -0x10 ; je 0xa2712 ; movzx eax, dl ; pop rbx ; ret
0x0000000000128113 : test dh, al ; dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x4015
0x00000000001280d4 : test dh, al ; dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x72b8
0x000000000018df60 : test dh, byte ptr [rbx] ; stc ; jmp rsp
0x0000000000188d1c : test dh, byte ptr [rcx] ; add byte ptr [rcx + rdx*8 + 0xffffffffffffffe9], ah ; call rsp
0x00000000001a0606 : test dh, byte ptr [rdi + 0xd1cfff0] ; xchg eax, ebx ; mov dh, -0x10 ; jmp qword ptr [rdx]
0x00000000001952b4 : test dh, byte ptr [rdi + 0xffffffffffffffec] ; jmp qword ptr [rdx]
0x00000000000e80e0 : test dh, byte ptr [rdx + 0x3c000015] ; sub cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x403c
0x0000000000096f6d : test dh, byte ptr [rdx + 0xffffffd] ; mov dh, 0x45 ; ret -0x7cb7
0x00000000000a7d64 : test dh, byte ptr [rsi] ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffffc7], cl ; ret
0x00000000001b0349 : test dh, dh ; jmp rdx
0x0000000000097850 : test dh, dh ; jne 0x97840 ; mov qword ptr [rdx], rcx ; ret
0x00000000000257e5 : test dh, dh ; mov eax, 0xffffffff ; cmovns eax, edx ; ret
0x0000000000163124 : test dl, 0x40 ; jne 0x1630e0 ; lea rax, qword ptr [rdi + 7] ; ret
0x0000000000163152 : test dl, 4 ; jne 0x1630e0 ; lea rax, qword ptr [rdi + 3] ; ret
0x00000000000a5da0 : test dl, byte ptr [rbx] ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x000000000008bdde : test dl, byte ptr [rcx + rax + 0xffffffff83480000] ; ret -0x16ff
0x00000000000f366f : test dl, byte ptr [rcx + rax + 0xffffffff83480000] ; ret 0x3c01
0x00000000000898b4 : test dl, byte ptr [rdi + 0x48000000] ; bsf eax, edx ; ret
0x00000000000c7287 : test dl, byte ptr [rdx + 0xffffffff89000003] ; ret -0x7cb7
0x000000000018ef88 : test dl, byte ptr [rdx + 0xfffffffffffffffb] ; call rsp
0x0000000000028e00 : test dl, byte ptr [rdx] ; add eax, dword ptr [rax] ; add byte ptr [rax + 0x29], cl ; ret
0x0000000000021997 : test dl, byte ptr [rip + 0x5b000001] ; pop rbp ; pop r12 ; ret
0x00000000001a8874 : test dl, byte ptr [rsi + 0x28b80001] ; cmc ; jmp qword ptr [rcx]
0x000000000018eb24 : test dl, dh ; add al, byte ptr [rax] ; movsb byte ptr es:[rdi], byte ptr [rsi] ; cdq ; cli ; jmp rsp
0x00000000000ad0a1 : test dl, dh ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffffc7], cl ; ret
0x000000000009812e : test dl, dl ; cmovne rax, rdi ; ret
0x00000000000a20cf : test dl, dl ; jne 0xa20c0 ; lea rax, qword ptr [rcx + 0xffffffffffffffff] ; ret
0x000000000018c98d : test dword ptr [rcx], 0xf703a400 ; call rsp
0x00000000000c4fc5 : test dword ptr [rcx], 0xfa800000 ; jnp 0xc4fdc ; xchg eax, esp ; ret -0x49f1
0x000000000017a530 : test eax, 0x17fff498 ; wait ; hlt ; jmp qword ptr [rcx]
0x00000000000e089f : test eax, 0x63480009 ; add al, -0x7e ; add rdx, rax ; jmp rdx
0x0000000000176bc0 : test eax, 0x7d4c8c5d ; ret 0xd8f
0x000000000014b7f6 : test eax, 0x7f0f41f3 ; add byte ptr [rax + 0xffffffffffffff81], cl ; ret 0x80
0x0000000000036541 : test eax, 0x7fffff ; je 0x36537 ; ret
0x0000000000117e53 : test eax, 0x8900006a ; ret -0x74b8
0x0000000000187471 : test eax, 0xa991fffd ; std ; jmp qword ptr [rcx]
0x000000000017a730 : test eax, 0xa9fff498 ; cwde ; hlt ; call qword ptr [rsi]
0x000000000017a3b8 : test eax, 0xa9fff498 ; cwde ; hlt ; jmp rsp
0x000000000017ac16 : test eax, 0xc3fffb00 ; add dh, bh ; jmp rdi
0x0000000000054ee2 : test eax, dword ptr [rax + 0xffffffff83fffffe] ; ret -0x76f8
0x00000000000c57ff : test eax, dword ptr [rax + 0xfffffffff6fffff4] ; ret
0x000000000010c9d9 : test eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; mov edx, dword ptr [rbx] ; jmp 0x10c9a6
0x0000000000084542 : test eax, dword ptr [rax] ; add rax, r13 ; jmp rax
0x000000000015b398 : test eax, dword ptr [rbx + 2] ; add byte ptr [rax], al ; ret
0x0000000000161ef6 : test eax, dword ptr [rbx + rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000097b28 : test eax, dword ptr [rbx] ; add dword ptr [rax], eax ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x000000000015b09a : test eax, dword ptr [rcx + 5] ; add byte ptr [rax], al ; ret
0x00000000000a3767 : test eax, dword ptr [rcx + rax] ; add byte ptr [rax], al ; ret
0x000000000009e477 : test eax, dword ptr [rdi + rax] ; add byte ptr [rax], al ; ret
0x00000000000378c6 : test eax, dword ptr [rdi] ; setne al ; movzx eax, al ; ret
0x000000000004e901 : test eax, dword ptr [rdx + rdi*8 + 0x1ffff] ; add byte ptr [rax], al ; jmp rax
0x0000000000061301 : test eax, dword ptr [rdx] ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x47b8
0x000000000015b357 : test eax, dword ptr [rdx] ; add byte ptr [rax], al ; ret
0x000000000009e435 : test eax, dword ptr [rsi + 7] ; add byte ptr [rax], al ; ret
0x000000000010ac3a : test eax, eax ; je 0x10ac48 ; add rsp, 8 ; ret
0x000000000011210d : test eax, eax ; je 0x112116 ; mov rdi, rbx ; call rax
0x00000000001123f4 : test eax, eax ; je 0x1123fd ; mov rdi, rbx ; call rax
0x000000000011c9b0 : test eax, eax ; je 0x11c9b8 ; ret
0x000000000011fa11 : test eax, eax ; je 0x11fa1a ; mov rdi, rsp ; call rax
0x000000000011faec : test eax, eax ; je 0x11faf5 ; mov rdi, rsp ; call rax
0x00000000001203a5 : test eax, eax ; je 0x1203ae ; mov rdi, rbp ; call rax
0x0000000000120776 : test eax, eax ; je 0x120780 ; ret
0x0000000000121443 : test eax, eax ; je 0x12144c ; mov rdi, r14 ; call rax
0x00000000001216c1 : test eax, eax ; je 0x1216ca ; mov rdi, rbx ; call rax
0x000000000012516b : test eax, eax ; je 0x125174 ; mov rdi, r12 ; call rax
0x0000000000125349 : test eax, eax ; je 0x125353 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000127626 : test eax, eax ; je 0x12762f ; mov rdi, rbp ; call rax
0x0000000000127846 : test eax, eax ; je 0x12784f ; mov rdi, rbp ; call rax
0x000000000012836d : test eax, eax ; je 0x128377 ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000128a2c : test eax, eax ; je 0x128a35 ; mov rdi, r12 ; call rax
0x0000000000128d9d : test eax, eax ; je 0x128da7 ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000012b87c : test eax, eax ; je 0x12b851 ; mov qword ptr fs:[rbx], rax ; pop rbx ; ret
0x000000000012b84d : test eax, eax ; je 0x12b858 ; pop rbx ; ret
0x000000000012b8b9 : test eax, eax ; je 0x12b86c ; pop rbx ; ret
0x000000000012c5f9 : test eax, eax ; je 0x12c603 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000012cd02 : test eax, eax ; je 0x12cd0c ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x00000000001312c6 : test eax, eax ; je 0x1312d0 ; xor eax, eax ; ret
0x0000000000138e43 : test eax, eax ; je 0x138e48 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000139e28 : test eax, eax ; je 0x139e2d ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000022088 : test eax, eax ; je 0x2208e ; jmp rax
0x00000000000220b8 : test eax, eax ; je 0x220be ; jmp rax
0x000000000002d17e : test eax, eax ; je 0x2d184 ; call rax
0x000000000002e7a9 : test eax, eax ; je 0x2e7af ; call rax
0x00000000000794bd : test eax, eax ; je 0x794c8 ; pop rbx ; ret
0x0000000000084447 : test eax, eax ; je 0x8444d ; call rax
0x0000000000089460 : test eax, eax ; je 0x89469 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c1b4c : test eax, eax ; je 0xc1b52 ; call rax
0x00000000000c1d59 : test eax, eax ; je 0xc1d63 ; call rax
0x00000000000f823b : test eax, eax ; je 0xf82d8 ; call rax
0x00000000000f83b2 : test eax, eax ; je 0xf84b0 ; call rax
0x00000000000fafd2 : test eax, eax ; jl 0xfb015 ; je 0xfafd9 ; ret
0x00000000001086e6 : test eax, eax ; jne 0x1086f0 ; mov eax, 1 ; ret
0x0000000000108716 : test eax, eax ; jne 0x108720 ; xor eax, eax ; ret
0x0000000000108746 : test eax, eax ; jne 0x108750 ; xor eax, eax ; ret
0x0000000000108776 : test eax, eax ; jne 0x108780 ; xor eax, eax ; ret
0x00000000001087a6 : test eax, eax ; jne 0x1087b0 ; xor eax, eax ; ret
0x00000000001087d6 : test eax, eax ; jne 0x1087e0 ; xor eax, eax ; ret
0x0000000000108806 : test eax, eax ; jne 0x108810 ; xor eax, eax ; ret
0x0000000000108836 : test eax, eax ; jne 0x108840 ; xor eax, eax ; ret
0x0000000000108866 : test eax, eax ; jne 0x108870 ; xor eax, eax ; ret
0x0000000000108896 : test eax, eax ; jne 0x1088a0 ; xor eax, eax ; ret
0x00000000001088c6 : test eax, eax ; jne 0x1088d0 ; xor eax, eax ; ret
0x00000000001088f6 : test eax, eax ; jne 0x108900 ; xor eax, eax ; ret
0x0000000000108926 : test eax, eax ; jne 0x108930 ; xor eax, eax ; ret
0x0000000000108956 : test eax, eax ; jne 0x108960 ; xor eax, eax ; ret
0x0000000000108986 : test eax, eax ; jne 0x108990 ; xor eax, eax ; ret
0x00000000001089b6 : test eax, eax ; jne 0x1089c0 ; xor eax, eax ; ret
0x00000000001089e6 : test eax, eax ; jne 0x1089f0 ; xor eax, eax ; ret
0x0000000000108a16 : test eax, eax ; jne 0x108a20 ; xor eax, eax ; ret
0x0000000000108a46 : test eax, eax ; jne 0x108a50 ; xor eax, eax ; ret
0x0000000000108a76 : test eax, eax ; jne 0x108a80 ; xor eax, eax ; ret
0x0000000000108aa6 : test eax, eax ; jne 0x108ab0 ; xor eax, eax ; ret
0x0000000000108b06 : test eax, eax ; jne 0x108b10 ; xor eax, eax ; ret
0x0000000000108b36 : test eax, eax ; jne 0x108b40 ; xor eax, eax ; ret
0x0000000000108b66 : test eax, eax ; jne 0x108b70 ; xor eax, eax ; ret
0x0000000000108b96 : test eax, eax ; jne 0x108ba0 ; xor eax, eax ; ret
0x0000000000108bc6 : test eax, eax ; jne 0x108bd0 ; xor eax, eax ; ret
0x0000000000108bf6 : test eax, eax ; jne 0x108c00 ; xor eax, eax ; ret
0x0000000000108c26 : test eax, eax ; jne 0x108c30 ; xor eax, eax ; ret
0x0000000000108c56 : test eax, eax ; jne 0x108c60 ; xor eax, eax ; ret
0x0000000000108c86 : test eax, eax ; jne 0x108c90 ; xor eax, eax ; ret
0x0000000000108ccf : test eax, eax ; jne 0x108cc4 ; pop rdx ; pop r10 ; ret
0x00000000001090cb : test eax, eax ; jne 0x109090 ; leave ; ret
0x000000000011ce4a : test eax, eax ; jne 0x11ce50 ; ret
0x0000000000125556 : test eax, eax ; jne 0x125560 ; ret
0x000000000012c7e6 : test eax, eax ; jne 0x12c7f0 ; ret
0x000000000012e18e : test eax, eax ; jne 0x12e14e ; jmp 0x12e156
0x00000000001379f6 : test eax, eax ; jne 0x137a00 ; xor eax, eax ; ret
0x0000000000137a26 : test eax, eax ; jne 0x137a30 ; xor eax, eax ; ret
0x0000000000137a56 : test eax, eax ; jne 0x137a60 ; xor eax, eax ; ret
0x0000000000137a86 : test eax, eax ; jne 0x137a90 ; xor eax, eax ; ret
0x0000000000137ab6 : test eax, eax ; jne 0x137ac0 ; xor eax, eax ; ret
0x0000000000137ae6 : test eax, eax ; jne 0x137af0 ; xor eax, eax ; ret
0x000000000005dbdf : test eax, eax ; jne 0x5dbf0 ; mov rax, rbx ; pop rbx ; ret
0x00000000000876df : test eax, eax ; jne 0x876d0 ; xor eax, eax ; ret
0x000000000008b77f : test eax, eax ; jne 0x8b790 ; add rsp, 8 ; ret
0x000000000008ca57 : test eax, eax ; jne 0x8cab0 ; xor rax, rax ; ret
0x0000000000097bf8 : test eax, eax ; jne 0x97c70 ; xor eax, eax ; ret
0x00000000000a42d6 : test eax, eax ; jne 0xa42c8 ; xor eax, eax ; ret
0x00000000000f9faf : test eax, eax ; jne 0xf9f80 ; xor eax, eax ; pop rbx ; ret
0x00000000000fa170 : test eax, eax ; jne 0xfa140 ; xor eax, eax ; pop rbx ; ret
0x00000000000d4db6 : test eax, ecx ; add byte ptr [rax], al ; add byte ptr [rcx + 0xffffffffffffff83], cl ; ret 0x4c01
0x0000000000100521 : test eax, edx ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x00000000000fa1e3 : test ebp, dword ptr [rax + rax] ; ret
0x00000000001345e4 : test ebp, dword ptr [rax] ; add byte ptr [rcx + 0x5c], al ; jmp rax
0x0000000000002b5f : test ebp, dword ptr [rbx + 0xffffffffffffffd2] ; cmp dl, byte ptr [rdi] ; ret
0x00000000000fc3e0 : test ebp, dword ptr [rbx] ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x000000000009e312 : test ebp, dword ptr [rcx + 8] ; add byte ptr [rax], al ; ret
0x000000000003ca00 : test ebp, dword ptr [rdx + 0x48000001] ; add esp, 8 ; ret
0x000000000009e611 : test ebp, dword ptr [rdx + 5] ; add byte ptr [rax], al ; ret
0x000000000007d5a3 : test ebp, dword ptr [rdx + rax] ; add bl, dh ; ret
0x00000000001617c2 : test ebp, dword ptr [rdx + rcx] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000004bb68 : test ebp, dword ptr [rdx + rdi*8 + 0x1ffff] ; add byte ptr [rax], al ; jmp rax
0x0000000000164962 : test ebp, dword ptr [rsi + 1] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a906e : test ebp, ebp ; mov rbx, r15 ; setne dl ; jmp 0xa9087
0x000000000008c980 : test ebp, ebx ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; xlatb ; ret -0x3f7b
0x00000000001aa54c : test ebp, ecx ; hlt ; jmp qword ptr [rdx]
0x00000000000e7c81 : test ebp, edx ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4802
0x0000000000192685 : test ebp, edx ; jmp qword ptr [rdx]
0x000000000004dde1 : test ebx, dword ptr [rax + 0xffffffffe9fffffa] ; ret
0x000000000009fd30 : test ebx, dword ptr [rbx + 6] ; add byte ptr [rax], al ; ret
0x0000000000117df6 : test ebx, dword ptr [rdx] ; add dword ptr [rax], eax ; add byte ptr [rbp + rcx*4 + 5], cl ; ret 0x2a
0x000000000010ae86 : test ebx, ebx ; jne 0x10ae90 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000165e4b : test ebx, ebx ; jne 0x165e38 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000744d4 : test ebx, ebx ; jne 0x744e0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000163112 : test ebx, ecx ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7520
0x000000000016311f : test ebx, esp ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7540
0x000000000005a1c0 : test ebx, esp ; ret
0x00000000000a3720 : test ecx, dword ptr [rbx + 1] ; add byte ptr [rax], al ; ret
0x000000000015b290 : test ecx, dword ptr [rbx + 3] ; add byte ptr [rax], al ; ret
0x0000000000092485 : test ecx, dword ptr [rdi + 0xfffffffff3fffffe] ; ret
0x00000000000f4921 : test ecx, dword ptr [rdx + rcx] ; add byte ptr [rax], al ; jmp 0xf4934
0x000000000009e32d : test ecx, dword ptr [rsi + 8] ; add byte ptr [rax], al ; ret
0x000000000002d505 : test ecx, ecx ; je 0x2d50b ; call rcx
0x0000000000104a15 : test ecx, ecx ; jns 0x1049e8 ; mov eax, edx ; sub eax, r9d ; ret
0x000000000008d6e9 : test edi, dword ptr [rax + 0x48fffffb] ; mov eax, edi ; ret
0x0000000000097bbe : test edi, dword ptr [rbp] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000196ca4 : test edi, dword ptr [rbx + 0xffffffffffffffed] ; jmp qword ptr [rdx]
0x0000000000162df2 : test edi, dword ptr [rdx + rax] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a40bd : test edi, dword ptr [rsi + 0x48000000] ; lea eax, dword ptr [rdi + 0xfffffffffffffff0] ; ret
0x00000000001123e1 : test edi, edi ; jne 0x1123d0 ; pop rbx ; ret
0x000000000010d262 : test edi, edi ; js 0x10d270 ; mov eax, edi ; shr eax, 0x18 ; ret
0x0000000000059540 : test edi, edi ; ret -1
0x0000000000188109 : test edi, esp ; call qword ptr [rax]
0x0000000000188305 : test edi, esp ; jmp qword ptr [rax]
0x000000000018810d : test edi, esp ; jmp qword ptr [rsi + 0x16fffc84]
0x0000000000179221 : test edi, esp ; jmp rax
0x00000000001881c9 : test edi, esp ; jmp rdx
0x000000000009e72b : test edx, dword ptr [rax + 4] ; add byte ptr [rax], al ; ret
0x000000000009fc3b : test edx, dword ptr [rax + 7] ; add byte ptr [rax], al ; ret
0x000000000009fb3b : test edx, dword ptr [rax + 8] ; add byte ptr [rax], al ; ret
0x0000000000134719 : test edx, dword ptr [rbx + 0x48000001] ; add esp, 8 ; ret
0x0000000000161aa7 : test edx, dword ptr [rbx + 7] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000016189d : test edx, dword ptr [rcx + 9] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x0000000000164fd7 : test edx, dword ptr [rcx + rax] ; add byte ptr [rax], al ; ret
0x0000000000037663 : test edx, dword ptr [rdi + rax*8] ; setne al ; movzx eax, al ; ret
0x000000000004ea4d : test edx, dword ptr [rdx + rdi*8 + 0x1ffff] ; add byte ptr [rax], al ; jmp rax
0x000000000004ee35 : test edx, dword ptr [rdx + rdi*8 + 0xffff] ; add byte ptr [rax], al ; jmp rax
0x000000000011be65 : test edx, dword ptr [rsi] ; add al, byte ptr [rax] ; add byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x0000000000083778 : test edx, ebp ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; call qword ptr [rax]
0x00000000000f8ccf : test edx, edx ; cmovne eax, edx ; ret
0x0000000000048827 : test edx, edx ; cmovns eax, edx ; pop rbx ; ret
0x00000000000fac13 : test edx, edx ; cmovns rax, rdx ; jmp 0xfac1d
0x0000000000121f74 : test edx, edx ; je 0x121f7d ; mov rdi, r12 ; call rdx
0x0000000000127435 : test edx, edx ; je 0x12743e ; mov rdi, rbp ; call rdx
0x0000000000165bd4 : test edx, edx ; je 0x165bda ; call rdx
0x0000000000165cdd : test edx, edx ; je 0x165ce8 ; call rdx
0x0000000000073f5a : test edx, edx ; je 0x73f68 ; mov eax, 0xffffffff ; ret
0x000000000007f203 : test edx, edx ; je 0x7f209 ; call rdx
0x0000000000089689 : test edx, edx ; je 0x89691 ; bsf eax, edx ; ret
0x0000000000089732 : test edx, edx ; je 0x89740 ; bsf rax, rdx ; ret
0x00000000000896d6 : test edx, edx ; je 0x89750 ; bsf rax, rdx ; ret
0x0000000000089921 : test edx, edx ; je 0x89940 ; bsf rax, rdx ; ret
0x00000000000c1cd1 : test edx, edx ; je 0xc1cdb ; call rdx
0x0000000000108fcd : test edx, edx ; jne 0x108fc0 ; leave ; ret
0x000000000012c575 : test edx, edx ; jne 0x12c560 ; pop rbx ; ret
0x0000000000021b5b : test edx, edx ; jns 0x21a39 ; jmp 0x21b27
0x000000000012f5f0 : test edx, edx ; mov eax, 1 ; jne 0x12f600 ; ret
0x000000000012f630 : test edx, edx ; mov eax, 1 ; jne 0x12f640 ; ret
0x0000000000037a2a : test edx, edx ; sete al ; ret
0x0000000000163105 : test edx, esi ; add dword ptr [rax], eax ; add dh, dh ; ret 0x7510
0x000000000004c04f : test esi, dword ptr [rax + 0xffffffff83fffffb] ; ret -0x76f0
0x000000000004bfdf : test esi, dword ptr [rax + 0xffffffff83fffffb] ; ret -0x76f8
0x0000000000001b0e : test esi, dword ptr [rbx + 0x59e7c8ee] ; pop rbx ; ret 0x2a63
0x000000000008ca1a : test esi, dword ptr [rcx + 0x48000000] ; xor eax, eax ; ret
0x0000000000161a7d : test esi, dword ptr [rcx + 7] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x00000000000a3737 : test esi, dword ptr [rcx + rax] ; add byte ptr [rax], al ; ret
0x000000000008d5ea : test esi, dword ptr [rdi + 0x48fffffc] ; mov eax, edi ; ret
0x0000000000063b73 : test esi, dword ptr [rdi + rax*8 + 0x6ae9ffff] ; ret -1
0x000000000009fa19 : test esi, dword ptr [rdx + 9] ; add byte ptr [rax], al ; ret
0x00000000001ae8ad : test esi, ebp ; jmp qword ptr [rdx]
0x00000000001a2165 : test esi, ecx ; jmp qword ptr [rdx]
0x00000000001005f1 : test esi, edx ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x000000000002ca90 : test esi, esi ; je 0x2ca59 ; pop rbx ; ret
0x000000000012f72c : test esi, esi ; jle 0x12f768 ; call 0x12b940
0x000000000012f6ed : test esi, esi ; jne 0x12f700 ; call 0x12b940
0x0000000000089811 : test esi, esi ; jne 0x89819 ; xor rax, rax ; ret
0x00000000000949de : test esi, esi ; jne 0x949ec ; jmp 0x949a6
0x00000000000c42f9 : test esp, dword ptr [rax + 0xfffffffff7000001] ; ret
0x000000000009266f : test esp, dword ptr [rbp + 0xfffffffff3fffffc] ; ret
0x0000000000053e58 : test esp, dword ptr [rbx + 0xffffffffe8000001] ; pop rsi ; ret
0x00000000000a4018 : test esp, dword ptr [rbx + 1] ; add byte ptr [rax], al ; lea rax, qword ptr [rdi + 0xfffffffffffffff0] ; ret
0x000000000015b378 : test esp, dword ptr [rbx + 2] ; add byte ptr [rax], al ; ret
0x000000000008d400 : test esp, dword ptr [rcx + 0x48fffffe] ; mov eax, edi ; ret
0x000000000015b43a : test esp, dword ptr [rcx + 0xffffffffc3000001] ; ret
0x000000000016198d : test esp, dword ptr [rcx + 8] ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000008374d : test esp, dword ptr [rdi + 0x48000022] ; mov eax, ebx ; pop rbx ; ret
0x00000000001accc4 : test esp, dword ptr [rdi + 0xfffffffffffffff5] ; jmp qword ptr [rdx]
0x000000000009e457 : test esp, dword ptr [rdi + rax] ; add byte ptr [rax], al ; ret
0x00000000000704b3 : test esp, dword ptr [rsi + 0xfffffffff3000004] ; ret
0x000000000009276e : test esp, dword ptr [rsi + 0xfffffffff3fffffb] ; ret
0x000000000009e415 : test esp, dword ptr [rsi + 7] ; add byte ptr [rax], al ; ret
0x0000000000161cc8 : test esp, dword ptr [rsi] ; add eax, 0xc0310000 ; ret
0x0000000000087752 : test esp, esp ; jne 0x87775 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a6892 : test esp, esp ; mov r13, r14 ; setne dl ; jmp 0xa68a8
0x00000000000ab742 : test esp, esp ; mov r13, r14 ; setne dl ; jmp 0xab758
0x0000000000087751 : test r12, r12 ; jne 0x87775 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000a6891 : test r12d, r12d ; mov r13, r14 ; setne dl ; jmp 0xa68a8
0x00000000000ab741 : test r12d, r12d ; mov r13, r14 ; setne dl ; jmp 0xab758
0x000000000012f72b : test r14d, r14d ; jle 0x12f768 ; call 0x12b940
0x000000000012f6ec : test r14d, r14d ; jne 0x12f700 ; call 0x12b940
0x00000000001090ca : test r8, r8 ; jne 0x109090 ; leave ; ret
0x00000000000977ef : test r8b, r8b ; jne 0x977d8 ; xor eax, eax ; ret
0x0000000000098059 : test r8b, r8b ; jne 0x97ffb ; mov rax, rdi ; ret
0x0000000000084541 : test r8d, dword ptr [rax] ; add rax, r13 ; jmp rax
0x0000000000138e42 : test r8d, r8d ; je 0x138e48 ; xchg eax, edx ; sub eax, edx ; ret
0x0000000000139e27 : test r8d, r8d ; je 0x139e2d ; xchg eax, edx ; sub eax, edx ; ret
0x00000000000378c5 : test rax, qword ptr [rdi] ; setne al ; movzx eax, al ; ret
0x000000000010ac39 : test rax, rax ; je 0x10ac48 ; add rsp, 8 ; ret
0x000000000011210c : test rax, rax ; je 0x112116 ; mov rdi, rbx ; call rax
0x00000000001123f3 : test rax, rax ; je 0x1123fd ; mov rdi, rbx ; call rax
0x000000000011fa10 : test rax, rax ; je 0x11fa1a ; mov rdi, rsp ; call rax
0x000000000011faeb : test rax, rax ; je 0x11faf5 ; mov rdi, rsp ; call rax
0x00000000001203a4 : test rax, rax ; je 0x1203ae ; mov rdi, rbp ; call rax
0x0000000000121442 : test rax, rax ; je 0x12144c ; mov rdi, r14 ; call rax
0x00000000001216c0 : test rax, rax ; je 0x1216ca ; mov rdi, rbx ; call rax
0x000000000012516a : test rax, rax ; je 0x125174 ; mov rdi, r12 ; call rax
0x0000000000125348 : test rax, rax ; je 0x125353 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000127625 : test rax, rax ; je 0x12762f ; mov rdi, rbp ; call rax
0x0000000000127845 : test rax, rax ; je 0x12784f ; mov rdi, rbp ; call rax
0x000000000012836c : test rax, rax ; je 0x128377 ; lea rdi, qword ptr [rbx + 0x68] ; call rax
0x0000000000128a2b : test rax, rax ; je 0x128a35 ; mov rdi, r12 ; call rax
0x0000000000128d9c : test rax, rax ; je 0x128da7 ; lea rdi, qword ptr [rbx + 0x58] ; call rax
0x000000000012b84c : test rax, rax ; je 0x12b858 ; pop rbx ; ret
0x000000000012b8b8 : test rax, rax ; je 0x12b86c ; pop rbx ; ret
0x000000000012c5f8 : test rax, rax ; je 0x12c603 ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x000000000012cd01 : test rax, rax ; je 0x12cd0c ; lea rdi, qword ptr [rbp + 0x10] ; call rax
0x0000000000022087 : test rax, rax ; je 0x2208e ; jmp rax
0x00000000000220b7 : test rax, rax ; je 0x220be ; jmp rax
0x000000000002d17d : test rax, rax ; je 0x2d184 ; call rax
0x000000000002e7a8 : test rax, rax ; je 0x2e7af ; call rax
0x00000000000794bc : test rax, rax ; je 0x794c8 ; pop rbx ; ret
0x0000000000084446 : test rax, rax ; je 0x8444d ; call rax
0x000000000008945f : test rax, rax ; je 0x89469 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000c1b4b : test rax, rax ; je 0xc1b52 ; call rax
0x00000000000c1d58 : test rax, rax ; je 0xc1d63 ; call rax
0x00000000000f823a : test rax, rax ; je 0xf82d8 ; call rax
0x00000000000f83b1 : test rax, rax ; je 0xf84b0 ; call rax
0x00000000000fafd1 : test rax, rax ; jl 0xfb015 ; je 0xfafd9 ; ret
0x00000000000876de : test rax, rax ; jne 0x876d0 ; xor eax, eax ; ret
0x00000000000f9fae : test rax, rax ; jne 0xf9f80 ; xor eax, eax ; pop rbx ; ret
0x00000000000fa16f : test rax, rax ; jne 0xfa140 ; xor eax, eax ; pop rbx ; ret
0x000000000010ae85 : test rbx, rbx ; jne 0x10ae90 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000165e4a : test rbx, rbx ; jne 0x165e38 ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000744d3 : test rbx, rbx ; jne 0x744e0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000002d504 : test rcx, rcx ; je 0x2d50b ; call rcx
0x00000000001123e0 : test rdi, rdi ; jne 0x1123d0 ; pop rbx ; ret
0x0000000000121f73 : test rdx, rdx ; je 0x121f7d ; mov rdi, r12 ; call rdx
0x0000000000127434 : test rdx, rdx ; je 0x12743e ; mov rdi, rbp ; call rdx
0x0000000000165bd3 : test rdx, rdx ; je 0x165bda ; call rdx
0x0000000000165cdc : test rdx, rdx ; je 0x165ce8 ; call rdx
0x000000000007f202 : test rdx, rdx ; je 0x7f209 ; call rdx
0x0000000000089731 : test rdx, rdx ; je 0x89740 ; bsf rax, rdx ; ret
0x00000000000896d5 : test rdx, rdx ; je 0x89750 ; bsf rax, rdx ; ret
0x0000000000089920 : test rdx, rdx ; je 0x89940 ; bsf rax, rdx ; ret
0x00000000000c1cd0 : test rdx, rdx ; je 0xc1cdb ; call rdx
0x0000000000108fcc : test rdx, rdx ; jne 0x108fc0 ; leave ; ret
0x000000000012c574 : test rdx, rdx ; jne 0x12c560 ; pop rbx ; ret
0x0000000000089810 : test rsi, rsi ; jne 0x89819 ; xor rax, rax ; ret
0x00000000000949dd : test rsi, rsi ; jne 0x949ec ; jmp 0x949a6
0x000000000009784f : test sil, sil ; jne 0x97840 ; mov qword ptr [rdx], rcx ; ret
0x000000000007045d : unpckhps xmm6, xmmword ptr [rip + 0xffffffff8994eb00] ; ret -0x74b8
0x000000000007b3b7 : vminsd xmm8, xmm4, qword ptr [rcx + 0x5c] ; ret
0x000000000013de61 : vpcmpeqb xmm0, xmm0, xmm1 ; lea r10, qword ptr [r10 + r9] ; jmp r10
0x00000000001ac1c6 : vpmaddwd xmm15, xmm4, xmm7 ; sbb al, 0xd ; pop r9 ; cmc ; jmp qword ptr [rdx]
0x00000000001ad4b4 : vpshufb xmm7, xmm15, xmmword ptr [rax + 0xfffffffffffffffa] ; cmc ; jmp rsp
0x0000000000100649 : wait ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x000000000012ff07 : wait ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffffc7], cl ; ret -1
0x00000000001a8d65 : wait ; add dword ptr [rax], eax ; cmp byte ptr [rdi], ch ; cmc ; jmp qword ptr [rcx]
0x00000000001a8ddd : wait ; add dword ptr [rax], eax ; shr byte ptr [rdi], 1 ; cmc ; jmp qword ptr [rcx]
0x00000000001a8d1d : wait ; add dword ptr [rax], eax ; shr byte ptr [rsi], -0xb ; jmp qword ptr [rcx]
0x00000000001a8dad : wait ; add dword ptr [rax], eax ; sub byte ptr [rdi], -0xb ; call qword ptr [rsi]
0x00000000001a8d05 : wait ; add dword ptr [rax], eax ; test al, 0x2e ; cmc ; jmp qword ptr [rcx]
0x000000000017a535 : wait ; hlt ; jmp qword ptr [rcx]
0x0000000000195589 : wait ; in al, dx ; call rdx
0x00000000001a1129 : wait ; int1 ; call qword ptr [rax]
0x00000000001a277c : wait ; mov cl, dh ; jmp qword ptr [rdx]
0x000000000008739f : wait ; nop ; str word ptr [rax + 0xffffffffffffff89] ; ret -0xcf
0x000000000005c301 : wait ; ret
0x000000000019b7dc : wait ; sti ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000a1aed : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a1b6f : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a1c71 : wrmsr ; in eax, dx ; mov byte ptr [rdi + 0x1f], ch ; ret
0x0000000000002bb0 : xabort -0xd ; ret
0x000000000007273a : xacquire ; xchg eax, edi ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x72701
0x00000000000f5d7a : xacquire ; xchg eax, esi ; repne dec dword ptr [rax + 0xffffffffffffff8b] ; jge 0xf5d82 ; call rbx
0x0000000000188301 : xchg ah, bh ; call qword ptr [rax + 0x20fffc85]
0x0000000000188141 : xchg ah, bh ; call rsi
0x0000000000179225 : xchg ah, bh ; inc dword ptr [rax] ; mov ah, bh ; jmp qword ptr [rax]
0x000000000018813d : xchg ah, bh ; inc dword ptr [rsi + 0xffffffffffffff86] ; cld ; call rsi
0x0000000000138c4f : xchg ah, bl ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x0000000000139473 : xchg ah, bl ; or dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x000000000013adbf : xchg ah, bl ; or eax, dword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x000000000013883f : xchg ah, ch ; add eax, 0x83480000 ; ret -0x14f0
0x0000000000139563 : xchg ah, ch ; or byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x0000000000139383 : xchg ah, cl ; or al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x000000000013834b : xchg al, ah ; or al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000002e96b : xchg al, bl ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x74bf
0x0000000000138b5b : xchg al, dl ; add al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000013ed5c : xchg bh, bh ; add eax, 0x83480000 ; ret 0x4910
0x000000000013e57c : xchg bh, bl ; or eax, 0x83480000 ; ret 0x4910
0x000000000013e96c : xchg bh, ch ; or dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000013e18c : xchg bh, cl ; adc dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x00000000000ae934 : xchg bh, cl ; add al, byte ptr [rax] ; add byte ptr [rbp + 0xffffffffffffff89], cl ; ret -0x76b4
0x0000000000140c8d : xchg bh, cl ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x000000000013f791 : xchg bl, cl ; adc eax, 0x83480000 ; ret -0x16f0
0x0000000000140991 : xchg bl, cl ; add eax, dword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x0000000000140091 : xchg bl, cl ; or al, 0 ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x0000000000140391 : xchg bl, cl ; or dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x000000000013fa89 : xchg bl, dl ; adc al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x000000000013890f : xchg byte ptr [rax + 0xffffffff83480000], bl ; ret -0x14f0
0x0000000000139923 : xchg byte ptr [rax + 0xffffffff83480000], ch ; ret -0x14f0
0x0000000000067d26 : xchg byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f8
0x0000000000139dcb : xchg byte ptr [rax + rax + 0xffffffff83480000], al ; ret -0x14f0
0x000000000013b91f : xchg byte ptr [rax + rax], bh ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x000000000013b0ff : xchg byte ptr [rax + rcx + 0xffffffff83480000], bl ; ret -0x16f0
0x00000000001385cf : xchg byte ptr [rax + rcx], bl ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x000000000013a8df : xchg byte ptr [rax + rdx + 0xffffffff83480000], bh ; ret -0x16f0
0x0000000000138c2b : xchg byte ptr [rax], al ; add al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000013e32b : xchg byte ptr [rax], dh ; adc byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x0000000000138cfb : xchg byte ptr [rax], dh ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000013b43f : xchg byte ptr [rbp + rax], bl ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x00000000001390b3 : xchg byte ptr [rbp + rcx + 0xffffffff83480000], bl ; ret -0x14f0
0x000000000013ac1f : xchg byte ptr [rbp + rcx], bh ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x000000000013a3ff : xchg byte ptr [rbp + rdx + 0xffffffff83480000], bl ; ret -0x16f0
0x0000000000187c24 : xchg byte ptr [rbx + 0xfffffffffffffffc], ah ; call qword ptr [rsi]
0x000000000013b5df : xchg byte ptr [rbx + rax + 0xffffffff83480000], bh ; ret -0x16f0
0x0000000000138aaf : xchg byte ptr [rbx + rax], bh ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x0000000000139b03 : xchg byte ptr [rbx + rax], cl ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x0000000000139293 : xchg byte ptr [rbx + rcx + 0xffffffff83480000], bh ; ret -0x14f0
0x000000000013829f : xchg byte ptr [rbx + rcx + 0xffffffff83480000], cl ; ret -0x14f0
0x000000000004732f : xchg byte ptr [rcx + 1], cl ; lock cmp ecx, 0x2f ; jmp r8
0x0000000000139ce3 : xchg byte ptr [rcx + rax], ch ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x00000000001a78ed : xchg byte ptr [rcx], al ; add al, al ; fdivr st(4), st(0) ; jmp qword ptr [rcx]
0x000000000012a086 : xchg byte ptr [rcx], al ; add al, ch ; ret -0x27
0x000000000019c124 : xchg byte ptr [rcx], bh ; out dx, al ; jmp qword ptr [rdx]
0x00000000000833ae : xchg byte ptr [rcx], dh ; ror byte ptr [rax + 0xffffffffffffff83], -0x3c ; or byte ptr [rbx + 0x5d], bl ; ret
0x00000000000c4d21 : xchg byte ptr [rdi + 0xfffffffff6000000], bh ; ret
0x000000000013869f : xchg byte ptr [rdi + rax + 0xffffffff83480000], cl ; ret -0x14f0
0x000000000013e81c : xchg byte ptr [rdi], bh ; or eax, dword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000013e03c : xchg byte ptr [rdi], bl ; adc eax, dword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000013f14c : xchg byte ptr [rdi], cl ; add al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x00000000000a52b6 : xchg byte ptr [rdx + 0x31], bh ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000138b7f : xchg byte ptr [rdx + rax + 0xffffffff83480000], ch ; ret -0x14f0
0x0000000000139bf3 : xchg byte ptr [rdx + rax], bl ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x000000000013836f : xchg byte ptr [rdx + rcx + 0xffffffff83480000], bh ; ret -0x14f0
0x000000000013a73f : xchg byte ptr [rdx + rdx], bl ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x0000000000138411 : xchg byte ptr [rdx], bl ; or al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x0000000000139535 : xchg byte ptr [rdx], bl ; or dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x0000000000139625 : xchg byte ptr [rdx], ch ; or byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x0000000000139445 : xchg byte ptr [rdx], cl ; or al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x00000000000728a6 : xchg byte ptr [rsi + 0xffffffffc2890000], dl ; jmp 0x72863
0x000000000013876f : xchg byte ptr [rsi + rax + 0xffffffff83480000], bh ; ret -0x14f0
0x000000000013fd36 : xchg byte ptr [rsi], ah ; adc byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000013a875 : xchg byte ptr [rsi], ah ; adc dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000013b575 : xchg byte ptr [rsi], ah ; add al, 0 ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x0000000000140c36 : xchg byte ptr [rsi], ah ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x0000000000140336 : xchg byte ptr [rsi], ah ; or al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x0000000000140036 : xchg byte ptr [rsi], ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000013b095 : xchg byte ptr [rsi], al ; or dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000013e71d : xchg byte ptr [rsi], bh ; or al, 0 ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x000000000013fa2e : xchg byte ptr [rsi], ch ; adc eax, dword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000006da26 : xchg byte ptr [rsi], ch ; xor eax, 0x48b4800 ; ret -0x7ab8
0x000000000013f04d : xchg byte ptr [rsi], cl ; add eax, dword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x00000000001389df : xchg byte ptr [rsp + rax], cl ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x00000000001391a3 : xchg byte ptr [rsp + rcx + 0xffffffff83480000], ch ; ret -0x14f0
0x0000000000198085 : xchg ch, ch ; jmp qword ptr [rdx]
0x000000000013d0cf : xchg ch, ch ; or byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000013ceef : xchg ch, cl ; or al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000013d8c7 : xchg ch, dh ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x000000000013c7e7 : xchg ch, dl ; adc dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x000000000013d6e7 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x0000000000095ff4 : xchg ch, dl ; add al, byte ptr [rax] ; add byte ptr [rbp + 0xffffffffffffff89], cl ; ret -0x76b4
0x00000000001a21ad : xchg cl, dh ; jmp qword ptr [rdx]
0x000000000013b8b5 : xchg dh, ah ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000013abb5 : xchg dh, ah ; or eax, 0x83480000 ; ret 0x4910
0x000000000013a6d5 : xchg dh, al ; adc al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x000000000013b3d5 : xchg dh, al ; add eax, 0x83480000 ; ret 0x4910
0x000000000013e86d : xchg dh, ch ; or al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x0000000000002591 : xchg dh, ch ; ret -0x7753
0x000000000013e08d : xchg dh, cl ; adc al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16f0
0x0000000000138435 : xchg dh, dh ; or dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x14f0
0x0000000000139355 : xchg dl, bh ; or al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x0000000000139175 : xchg dl, bl ; or al, 0 ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x00000000001926cd : xchg dl, ch ; jmp qword ptr [rdx]
0x0000000000139265 : xchg dl, ch ; or eax, dword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4910
0x0000000000139085 : xchg dl, cl ; or eax, 0x83480000 ; ret 0x4910
0x000000000019550c : xchg dl, dl ; in al, dx ; jmp qword ptr [rdx]
0x0000000000067a9f : xchg dword ptr [rax + 0xffffffff83000002], esi ; ret -0x7cf8
0x00000000000dd59b : xchg dword ptr [rax + 0xffffffff8900000c], esi ; ret -0x72b8
0x00000000000b8f26 : xchg dword ptr [rax + 1], ecx ; clc ; jmp rax
0x00000000000fa023 : xchg dword ptr [rax + rax], ebp ; ret
0x000000000002db37 : xchg dword ptr [rbp + 0xffffffff83fffffc], esi ; ret -0x76ff
0x00000000000a4207 : xchg dword ptr [rbp + 0xffffffffffffff85], eax ; sal byte ptr [rbp + 0xffffffffffffffcb], -0xd ; ret
0x0000000000023c04 : xchg dword ptr [rbp + rcx*4 + 0x74], ecx ; ret
0x000000000005c95e : xchg dword ptr [rbx + 0xffffffff89000000], esi ; ret 0x348
0x0000000000068f7d : xchg dword ptr [rbx + 0xffffffff89000035], esp ; ret 0x348
0x00000000000da542 : xchg dword ptr [rbx + rbp*8 + 0x39], edi ; ret -0x3e77
0x000000000017488c : xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret -0x797
0x000000000005c640 : xchg dword ptr [rcx + 0xffffffff89000000], esi ; ret 0x348
0x0000000000082678 : xchg dword ptr [rcx + 0xfffffffff6000005], edi ; ret
0x00000000000e5a11 : xchg dword ptr [rcx + rax], ecx ; add byte ptr [rax], al ; mov dword ptr [rsi], eax ; xor eax, eax ; ret
0x00000000001a7965 : xchg dword ptr [rcx], eax ; add byte ptr [rax + 0xffffffffffffffdd], ch ; hlt ; jmp qword ptr [rcx]
0x0000000000066045 : xchg dword ptr [rdi + 0xffffffff8300000c], ebx ; ret -0x7cf8
0x000000000019523c : xchg dword ptr [rdi + 0xffffffffffffffec], esi ; jmp qword ptr [rdx]
0x0000000000108ccd : xchg dword ptr [rdi], eax ; test eax, eax ; jne 0x108cc4 ; pop rdx ; pop r10 ; ret
0x00000000000faad4 : xchg dword ptr [rdi], ecx ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x00000000001aef66 : xchg dword ptr [rdx + 0xd1cfff5], ecx ; jrcxz 0x1aeef6 ; cmc ; jmp qword ptr [rdx]
0x000000000005dba5 : xchg dword ptr [rip + 0x5d5b0036], edi ; ret
0x000000000005a35b : xchg dword ptr [rsi + 0xffffffff89000002], ebp ; ret 0x348
0x000000000019c0d6 : xchg dword ptr [rsi + rbp*8 + 0xffffffffffffffff], ebx ; sbb al, 0xd ; cmp byte ptr [rax], bh ; out dx, al ; jmp qword ptr [rdx]
0x0000000000174a2b : xchg dword ptr [rsp + rax + 0x6fa9ce9d], esp ; ret
0x000000000005ebcd : xchg eax, ebp ; adc dword ptr [rax], eax ; movsxd rax, dword ptr [rdx + rax*4] ; add rdx, rax ; jmp rdx
0x000000000013c428 : xchg eax, ebp ; adc eax, 0x83480000 ; ret -0x16f0
0x0000000000027339 : xchg eax, ebp ; add al, 0 ; add byte ptr [rax + 0x29], cl ; ret -0x74b7
0x00000000000be633 : xchg eax, ebp ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x4801
0x0000000000060675 : xchg eax, ebp ; add byte ptr [rax], 0 ; add byte ptr [rcx + 1], cl ; ret 0x3145
0x00000000001a875d : xchg eax, ebp ; add dword ptr [rax], eax ; mov al, 0x27 ; cmc ; jmp qword ptr [rcx]
0x0000000000177763 : xchg eax, ebp ; in al, dx ; lock ficomp word ptr [rdx + 0xffffffffffffffe7] ; cmc ; mov ch, -0x55 ; ret
0x0000000000196591 : xchg eax, ebp ; in eax, dx ; jmp rsi
0x000000000018ac38 : xchg eax, ebp ; into ; out dx, eax ; jmp rsp
0x000000000019547c : xchg eax, ebp ; jle 0x19546b ; jmp qword ptr [rdx]
0x000000000019d5a9 : xchg eax, ebp ; out dx, al ; call qword ptr [rdx]
0x00000000000f5ea3 : xchg eax, ebp ; repne dec dword ptr [rcx + 0xffffffffffffff8b] ; call rbx
0x00000000000f5eb0 : xchg eax, ebp ; repne dec dword ptr [rcx + 0xffffffffffffff8b] ; jge 0xf5eb7 ; call rbx
0x00000000000020c3 : xchg eax, ebp ; ret
0x00000000000e3a34 : xchg eax, ebp ; ret -0x1d3f
0x000000000003e3c4 : xchg eax, ebp ; ret -0x1f7d
0x000000000006eae7 : xchg eax, ebp ; ret -0x2509
0x000000000003e47f : xchg eax, ebp ; ret -0x2cb7
0x0000000000032a2c : xchg eax, ebp ; ret -0x2d7c
0x00000000000b1864 : xchg eax, ebp ; ret -0x2ec8
0x000000000011328b : xchg eax, ebp ; ret -0x2ee0
0x0000000000122814 : xchg eax, ebp ; ret -0x2f77
0x00000000000fadec : xchg eax, ebp ; ret -0x3015
0x000000000011335a : xchg eax, ebp ; ret -0x367b
0x00000000000b019c : xchg eax, ebp ; ret -0x3817
0x00000000000dbc32 : xchg eax, ebp ; ret -0x3df7
0x0000000000048fb9 : xchg eax, ebp ; ret -0x3fcf
0x000000000003e2b5 : xchg eax, ebp ; ret -0x49f1
0x0000000000032d8c : xchg eax, ebp ; ret -0x6417
0x0000000000032375 : xchg eax, ebp ; ret -0x6ac3
0x00000000000cffd8 : xchg eax, ebp ; ret -0x72b9
0x00000000000c812d : xchg eax, ebp ; ret -0x76bc
0x00000000000a5193 : xchg eax, ebp ; ret -0x77d
0x00000000000490de : xchg eax, ebp ; ret -0x7ab3
0x0000000000079684 : xchg eax, ebp ; ret -0x7bbb
0x000000000007e1d7 : xchg eax, ebp ; ret -0x7bbf
0x00000000000d47d1 : xchg eax, ebp ; ret -0x7bf1
0x00000000000490d5 : xchg eax, ebp ; ret -0x7cb8
0x00000000000201c6 : xchg eax, ebp ; ret -0x7cbf
0x00000000000b254b : xchg eax, ebp ; ret -0x8b7
0x0000000000048f88 : xchg eax, ebp ; ret -0xcf
0x00000000000e0870 : xchg eax, ebp ; ret 0x2041
0x000000000003e82f : xchg eax, ebp ; ret 0x2948
0x00000000000aa937 : xchg eax, ebp ; ret 0x294c
0x00000000000b2501 : xchg eax, ebp ; ret 0x3145
0x00000000000834c7 : xchg eax, ebp ; ret 0x33
0x00000000000cc4ce : xchg eax, ebp ; ret 0x460f
0x000000000006e2f9 : xchg eax, ebp ; ret 0x5389
0x00000000000961f3 : xchg eax, ebp ; ret 0x5474
0x0000000000129890 : xchg eax, ebp ; ret 0x548d
0x0000000000077b23 : xchg eax, ebp ; ret 0x60e9
0x000000000008232e : xchg eax, ebp ; ret 0x948
0x00000000000a6898 : xchg eax, ebp ; ret 0xceb
0x00000000000a9074 : xchg eax, ebp ; ret 0xfeb
0x000000000012362c : xchg eax, ebp ; ror byte ptr [rax + 0xffffffffffffff83], -0x3c ; or byte ptr [rdi], cl ; mov dh, -0x40 ; ret
0x000000000005e20a : xchg eax, ebp ; ror byte ptr [rdi], -0x4a ; sal bh, -0x28 ; pop rbx ; ret
0x00000000000f2e0c : xchg eax, ebp ; sal bh, -0x28 ; add rsp, 0x10 ; pop rbx ; ret
0x000000000012a2e4 : xchg eax, ebp ; sal bh, -0x28 ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000132e7f : xchg eax, ebp ; sti ; dec dword ptr [rax + 0xffffffffffffff83] ; clc ; dec dword ptr [rax + 0xffffffffffffff89] ; ret
0x0000000000002b5d : xchg eax, ebp ; test bp, word ptr [rbx + 0xffffffffffffffd2] ; cmp dl, byte ptr [rdi] ; ret
0x000000000007e5cb : xchg eax, ebx ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; fimul dword ptr [rax + 0x29] ; ret -0x7cb8
0x00000000001a84f5 : xchg eax, ebx ; add dword ptr [rax], eax ; sub byte ptr [rdi], bl ; cmc ; jmp qword ptr [rdx]
0x0000000000160c10 : xchg eax, ebx ; add rcx, r11 ; jmp rcx
0x0000000000003905 : xchg eax, ebx ; and cl, ah ; ret
0x00000000001af305 : xchg eax, ebx ; cmc ; jmp qword ptr [rdx]
0x000000000017a329 : xchg eax, ebx ; hlt ; jmp qword ptr [rsi]
0x0000000000194e39 : xchg eax, ebx ; in al, dx ; jmp qword ptr [rcx]
0x00000000001942dd : xchg eax, ebx ; jmp 0x1942df
0x0000000000194325 : xchg eax, ebx ; jmp 0x194327
0x000000000009d93c : xchg eax, ebx ; lea rcx, qword ptr [r11 + rcx] ; jmp rcx
0x00000000001438b2 : xchg eax, ebx ; lea rdx, qword ptr [r11 + rdx] ; jmp rdx
0x00000000001a060c : xchg eax, ebx ; mov dh, -0x10 ; jmp qword ptr [rdx]
0x00000000001b059c : xchg eax, ebx ; out dx, eax ; cmc ; jmp qword ptr [rdx]
0x00000000000d3069 : xchg eax, ebx ; ret
0x000000000003a767 : xchg eax, ebx ; ret -0x7cb8
0x0000000000063b50 : xchg eax, ebx ; ret -1
0x00000000000755a4 : xchg eax, ebx ; ret 0x3948
0x000000000003a47f : xchg eax, ebx ; ret 0x3949
0x0000000000049ab0 : xchg eax, ebx ; ret 0x841
0x00000000000e4170 : xchg eax, ebx ; ret 0x944
0x00000000000f5cd9 : xchg eax, ebx ; xchg eax, edi ; repne dec dword ptr [rcx + 0xffffffffffffff8b] ; call rbx
0x00000000001b6bd4 : xchg eax, ebx ; xor al, -9 ; jmp qword ptr [rdx]
0x000000000012237e : xchg eax, ebx ; xor eax, eax ; pop rbx ; ret
0x000000000007b03f : xchg eax, ecx ; add byte ptr [rax], 0 ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x48
0x00000000001983ad : xchg eax, ecx ; add byte ptr [rax], al ; jo 0x198369 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000006dee6 : xchg eax, ecx ; add rcx, rdx ; jmp rcx
0x0000000000187464 : xchg eax, ecx ; cmpsd dword ptr [rsi], dword ptr es:[rdi] ; std ; call qword ptr [rcx]
0x0000000000106275 : xchg eax, ecx ; int1 ; dec dword ptr [rcx + 0xffffffffffffff8b] ; cmp byte ptr [rax + 0xffffffffffffff89], r9b ; ret 0x2b49
0x00000000001a2664 : xchg eax, ecx ; mov cl, dh ; jmp qword ptr [rdx]
0x000000000013b9c1 : xchg eax, ecx ; mov eax, dword ptr [rcx + rax*4] ; sub eax, edx ; ret
0x0000000000021bfe : xchg eax, ecx ; push -0xcfffff7 ; ret
0x00000000000f092b : xchg eax, ecx ; ret
0x00000000000c2bd3 : xchg eax, ecx ; ret 0x2f
0x0000000000179cc0 : xchg eax, ecx ; sal ebx, 1 ; call rax
0x000000000013a0ef : xchg eax, ecx ; sub eax, edx ; ret
0x000000000018746c : xchg eax, ecx ; test al, -3 ; call qword ptr [rcx]
0x000000000019be54 : xchg eax, ecx ; xor al, -0x12 ; jmp qword ptr [rdx]
0x00000000000e7780 : xchg eax, edi ; add al, byte ptr [rax] ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret 0x4c6
0x00000000000602ef : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbx + 0xffffffffffee94bd], al ; call qword ptr [rax]
0x000000000005ffdb : xchg eax, edi ; add byte ptr [rax], al ; add byte ptr [rbx + 0xffffffffffeee8bd], al ; call qword ptr [rax]
0x000000000007273b : xchg eax, edi ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x72701
0x00000000000e5adc : xchg eax, edi ; add byte ptr [rcx], al ; add byte ptr [rax], al ; ret
0x0000000000084b1d : xchg eax, edi ; add dword ptr [rax], eax ; add byte ptr [rcx + 0xffffffffffffff83], cl ; ret
0x00000000001a898d : xchg eax, edi ; add dword ptr [rax], eax ; nop ; sub dh, ch ; jmp qword ptr [rcx]
0x00000000001a89ed : xchg eax, edi ; add dword ptr [rax], eax ; shr byte ptr [rdx], 1 ; cmc ; jmp qword ptr [rcx]
0x00000000001a89a5 : xchg eax, edi ; add dword ptr [rax], eax ; test al, 0x2a ; cmc ; jmp qword ptr [rcx]
0x00000000000b590e : xchg eax, edi ; add rdx, rdi ; jmp rdx
0x000000000019b98c : xchg eax, edi ; cld ; in eax, dx ; jmp qword ptr [rdx]
0x00000000001ab171 : xchg eax, edi ; cmc ; call rsp
0x000000000018b241 : xchg eax, edi ; int1 ; call rsp
0x000000000017915d : xchg eax, edi ; int1 ; jmp qword ptr [rax]
0x0000000000108e9d : xchg eax, edi ; mov edi, 0x3948002b ; ret -0x258b
0x0000000000083b55 : xchg eax, edi ; out -1, al ; dec dword ptr [rax + 0xffffffffffffff89] ; ret 0x3d83
0x00000000000f5cda : xchg eax, edi ; repne dec dword ptr [rcx + 0xffffffffffffff8b] ; call rbx
0x00000000000f5d6d : xchg eax, edi ; repne dec dword ptr [rcx + 0xffffffffffffff8b] ; jge 0xf5d74 ; call rbx
0x00000000000fa5b5 : xchg eax, edi ; ret
0x0000000000078dd8 : xchg eax, edi ; ret 0x34
0x00000000000ee0c9 : xchg eax, edi ; ror byte ptr [rdi], -0x4a ; shr byte ptr [rcx], cl ; sal bl, 1 ; ret
0x00000000000c301e : xchg eax, edi ; ror byte ptr [rdi], -0x6e ; ret -0x2fd7
0x00000000000d3b58 : xchg eax, edi ; ror dword ptr [rdi], -0x6e ; ret -0x2ec8
0x00000000000f0f34 : xchg eax, edi ; ror dword ptr [rdi], -0x6e ; ret -0x3380
0x00000000001980cc : xchg eax, edi ; xchg ch, ch ; jmp qword ptr [rdx]
0x0000000000174ed8 : xchg eax, edi ; xchg eax, esp ; ret
0x0000000000072b96 : xchg eax, edx ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x72b58
0x00000000001a844d : xchg eax, edx ; add dword ptr [rax], eax ; sbb byte ptr [rsi], -0xb ; jmp qword ptr [rsi]
0x000000000004ba8d : xchg eax, edx ; add eax, 0xf8834800 ; dec dword ptr [rcx + 0xffffffffffffff89] ; ret -0x7af1
0x00000000001a9a3c : xchg eax, edx ; fdivr st(4), st(0) ; jmp qword ptr [rdx]
0x000000000017a31d : xchg eax, edx ; hlt ; call qword ptr [rax]
0x000000000017a331 : xchg eax, edx ; hlt ; jmp qword ptr [rsi]
0x0000000000039b4a : xchg eax, edx ; idiv edi ; dec ecx ; ret
0x00000000000c56bc : xchg eax, edx ; idiv edi ; push rsi ; ret
0x0000000000195ea1 : xchg eax, edx ; in eax, dx ; call qword ptr [rax]
0x0000000000195e29 : xchg eax, edx ; in eax, dx ; jmp qword ptr [rax]
0x0000000000195ee9 : xchg eax, edx ; in eax, dx ; jmp rsp
0x000000000017679d : xchg eax, edx ; jae 0x176773 ; push rsi ; pop rdx ; je 0x176768 ; ret -0x5304
0x0000000000166180 : xchg eax, edx ; jmp 0x166182
0x00000000001adc8c : xchg eax, edx ; js 0x1adc84 ; jmp qword ptr [rdx]
0x0000000000188198 : xchg eax, edx ; mov bh, ah ; jmp qword ptr [rdx]
0x00000000000d3b5b : xchg eax, edx ; ret -0x2ec8
0x00000000000c3021 : xchg eax, edx ; ret -0x2fd7
0x00000000000f0f37 : xchg eax, edx ; ret -0x3380
0x00000000000ee0ae : xchg eax, edx ; ret -0x68f1
0x00000000000af4d6 : xchg eax, edx ; ret -0x76bf
0x000000000017488f : xchg eax, edx ; ret -0x797
0x00000000001201ca : xchg eax, edx ; ret 0
0x000000000013da3d : xchg eax, edx ; ror byte ptr [rdi], -0x6c ; ret -0x3f7b
0x0000000000138e47 : xchg eax, edx ; sub eax, edx ; ret
0x00000000000fa022 : xchg eax, edx ; xchg dword ptr [rax + rax], ebp ; ret
0x0000000000160f10 : xchg eax, esi ; add byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret -0x7cf1
0x000000000014cff3 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff81], cl ; ret 0x80
0x0000000000058c87 : xchg eax, esi ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x00000000000728a7 : xchg eax, esi ; add byte ptr [rax], al ; mov edx, eax ; jmp 0x72863
0x000000000000258e : xchg eax, esi ; add byte ptr [rdx], al ; xchg dh, ch ; ret -0x7753
0x00000000001a88a5 : xchg eax, esi ; add dword ptr [rax], eax ; fsubr dword ptr [rax] ; cmc ; call qword ptr [rax]
0x000000000018b96d : xchg eax, esi ; add dword ptr [rax], eax ; jne 0x18b966 ; call rsp
0x00000000001a882d : xchg eax, esi ; add dword ptr [rax], eax ; jo 0x1a885a ; cmc ; jmp qword ptr [rcx]
0x00000000001a8845 : xchg eax, esi ; add dword ptr [rax], eax ; mov byte ptr [rax], ch ; cmc ; jmp qword ptr [rcx]
0x0000000000179255 : xchg eax, esi ; cld ; call rax
0x00000000001af425 : xchg eax, esi ; cmc ; jmp qword ptr [rdx]
0x000000000017a419 : xchg eax, esi ; hlt ; call rdx
0x000000000017a415 : xchg eax, esi ; hlt ; dec eax ; xchg eax, esi ; hlt ; call rdx
0x000000000017a56d : xchg eax, esi ; hlt ; jmp rsi
0x0000000000179159 : xchg eax, esi ; int1 ; dec dword ptr [rax] ; xchg eax, edi ; int1 ; jmp qword ptr [rax]
0x0000000000179151 : xchg eax, esi ; int1 ; jmp rax
0x0000000000160fcd : xchg eax, esi ; lock add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret -0x7cf1
0x0000000000192e14 : xchg eax, esi ; mov ch, dl ; jmp qword ptr [rdx]
0x0000000000160f2b : xchg eax, esi ; nop ; add byte ptr [rax], al ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret -0x7cf1
0x00000000000c6d54 : xchg eax, esi ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000a55b0 : xchg eax, esi ; or eax, 0x358d4800 ; ret 0xd96
0x0000000000187c48 : xchg eax, esi ; pop rdi ; cld ; jmp qword ptr [rsi]
0x00000000000f5d7b : xchg eax, esi ; repne dec dword ptr [rax + 0xffffffffffffff8b] ; jge 0xf5d82 ; call rbx
0x00000000000f5e1d : xchg eax, esi ; repne dec dword ptr [rcx + 0xffffffffffffff8b] ; call rbx
0x00000000001119df : xchg eax, esi ; ret
0x000000000017712c : xchg eax, esi ; ret -0x32ef
0x000000000007e1d0 : xchg eax, esi ; ret -0x7cb8
0x000000000008933c : xchg eax, esi ; ret 0x144
0x000000000010a83c : xchg eax, esi ; ret 0x394c
0x0000000000160f7c : xchg eax, esi ; rol byte ptr [rax], 0 ; add byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret -0x7cf1
0x00000000000bac78 : xchg eax, esi ; ror byte ptr [rax + 0xffffffffffffff83], -0x3c ; or byte ptr [rdi], cl ; mov dh, -0x40 ; ret
0x000000000018862c : xchg eax, esi ; scasb al, byte ptr es:[rdi] ; cld ; jmp qword ptr [rsi]
0x00000000000965a8 : xchg eax, esi ; stc ; dec dword ptr [rax + 0xffffffffffffff85] ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000001874bc : xchg eax, esi ; stosb byte ptr es:[rdi], al ; std ; jmp qword ptr [rsi]
0x0000000000188134 : xchg eax, esi ; xchg esp, edi ; jmp qword ptr [rsi]
0x000000000018d654 : xchg eax, esp ; add al, byte ptr ds:[rax] ; test ch, byte ptr [rbx] ; clc ; jmp rsp
0x00000000000e2b7f : xchg eax, esp ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret -0x70f1
0x0000000000198665 : xchg eax, esp ; add byte ptr [rax], al ; js 0x198626 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000018ad1c : xchg eax, esp ; add dword ptr [r8], r8d ; fsub st(7), st(0) ; jmp rsp
0x000000000008bddf : xchg eax, esp ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret -0x16ff
0x00000000000f3670 : xchg eax, esp ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret 0x3c01
0x00000000001a5784 : xchg eax, esp ; add dword ptr gs:[rax], eax ; call -0x1ce5b46d
0x000000000018d764 : xchg eax, esp ; add r8b, byte ptr [rax] ; add al, 0x3f ; clc ; jmp rsp
0x0000000000074968 : xchg eax, esp ; and al, -0x10 ; add dword ptr [rax], eax ; add byte ptr [rax + 0xffffffffffffff81], cl ; ret
0x0000000000027406 : xchg eax, esp ; and al, -0x50 ; add byte ptr [rax], al ; add byte ptr [rax + 0x39], cl ; ret
0x0000000000040087 : xchg eax, esp ; and al, -0x50 ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x00000000000e2b7d : xchg eax, esp ; and al, -0x6c ; add byte ptr [rax], al ; add byte ptr [rcx], bh ; ret -0x70f1
0x0000000000045c75 : xchg eax, esp ; and al, -0x7c ; sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret -0x7bf1
0x00000000000aae2c : xchg eax, esp ; and al, 0x74 ; sbb eax, dword ptr [rax] ; add byte ptr [rcx], cl ; ret -0x7bf1
0x00000000001a1784 : xchg eax, esp ; and eax, 0xc7680001 ; int1 ; call qword ptr [rbx]
0x00000000001af395 : xchg eax, esp ; cmc ; jmp qword ptr [rdx]
0x0000000000188f98 : xchg eax, esp ; jne 0x188f85 ; jmp rsp
0x00000000001a9184 : xchg eax, esp ; lahf ; add dword ptr [rax], eax ; mov byte ptr [rax], bh ; cmc ; jmp qword ptr [rcx]
0x000000000019e284 : xchg eax, esp ; lock add byte ptr [rax], al ; cmp byte ptr [rsi + 0xffffffffffffffef], al ; jmp qword ptr [rsi]
0x00000000001897ac : xchg eax, esp ; lodsb al, byte ptr [rsi] ; add byte ptr [rax], al ; je 0x189788 ; jmp 0x1897b3
0x00000000001ad384 : xchg eax, esp ; loope 0x1ad388 ; add byte ptr [rax], cl ; sti ; cmc ; call qword ptr [rax]
0x000000000018ebc8 : xchg eax, esp ; mov cl, -6 ; call rsp
0x00000000001a27c4 : xchg eax, esp ; mov cl, dh ; jmp qword ptr [rdx]
0x000000000018b2c8 : xchg eax, esp ; mov dl, -0xf ; call rsp
0x00000000000c1c68 : xchg eax, esp ; mov eax, 0x8948fffb ; ret
0x000000000018beac : xchg eax, esp ; mov ecx, 0xd7e40001 ; hlt ; jmp rsp
0x000000000018b5f0 : xchg eax, esp ; mov edx, esi ; jmp rsp
0x0000000000189fa0 : xchg eax, esp ; nop ; out dx, al ; jmp rsp
0x0000000000109aab : xchg eax, esp ; nop dword ptr [rax] ; mov rax, rdi ; pop rbx ; ret
0x000000000019e184 : xchg eax, esp ; out dx, eax ; add byte ptr [rax], al ; pop rax ; adc bh, dl ; call qword ptr [rax]
0x000000000017733f : xchg eax, esp ; push rsi ; cli ; push 0x6e ; ja 0x1772c9 ; ret 0x48f
0x0000000000189ae0 : xchg eax, esp ; push rsi ; in eax, dx ; push rsp ; ret 0
0x00000000000f602e : xchg eax, esp ; repne dec dword ptr [rax + 0xffffffffffffff8b] ; jge 0xf6035 ; call rbx
0x00000000000f6013 : xchg eax, esp ; repne dec dword ptr [rcx + 0xffffffffffffff8b] ; call rbx
0x00000000000f603c : xchg eax, esp ; repne dec dword ptr [rcx + 0xffffffffffffff8b] ; cmp al, 0x24 ; call rbx
0x00000000000f6020 : xchg eax, esp ; repne dec dword ptr [rcx + 0xffffffffffffff8b] ; jge 0xf6027 ; call rbx
0x000000000001f4c3 : xchg eax, esp ; ret
0x000000000013000e : xchg eax, esp ; ret -0x157d
0x00000000000712fc : xchg eax, esp ; ret -0x2509
0x00000000000d18f7 : xchg eax, esp ; ret -0x27d
0x00000000000ce129 : xchg eax, esp ; ret -0x2a17
0x000000000004a670 : xchg eax, esp ; ret -0x2d7c
0x000000000005a7fb : xchg eax, esp ; ret -0x2e77
0x000000000013da40 : xchg eax, esp ; ret -0x3f7b
0x0000000000021f01 : xchg eax, esp ; ret -0x3fcf
0x00000000000d7167 : xchg eax, esp ; ret -0x3fd0
0x0000000000029656 : xchg eax, esp ; ret -0x49f1
0x00000000000a6d9d : xchg eax, esp ; ret -0x67d
0x00000000000b1b0e : xchg eax, esp ; ret -0x6bc6
0x0000000000021e07 : xchg eax, esp ; ret -0x72b8
0x00000000000cde98 : xchg eax, esp ; ret -0x74b8
0x000000000010485d : xchg eax, esp ; ret -0x7615
0x00000000000b28b6 : xchg eax, esp ; ret -0x76b4
0x00000000000cd3c3 : xchg eax, esp ; ret -0x76bc
0x00000000000b1a2e : xchg eax, esp ; ret -0x77c0
0x00000000000c4b65 : xchg eax, esp ; ret -0x7ab8
0x0000000000047c23 : xchg eax, esp ; ret -0x7cbf
0x00000000000cfb02 : xchg eax, esp ; ret -0x7d
0x000000000008051a : xchg eax, esp ; ret 0x1589
0x00000000000a82da : xchg eax, esp ; ret 0x294c
0x00000000000b26ed : xchg eax, esp ; ret 0x2b3c
0x00000000000cf827 : xchg eax, esp ; ret 0x38b
0x00000000000e0501 : xchg eax, esp ; ret 0x3d
0x000000000012a2b1 : xchg eax, esp ; ret 0x3d83
0x00000000000e80e8 : xchg eax, esp ; ret 0x403c
0x00000000000c667f : xchg eax, esp ; ret 0x45e9
0x00000000000345b3 : xchg eax, esp ; ret 0x70e9
0x00000000000ef712 : xchg eax, esp ; ret 0x7c83
0x000000000008079b : xchg eax, esp ; ret 0xee9
0x00000000000a48dc : xchg eax, esp ; rol bl, -0x70 ; mov eax, 1 ; ret
0x000000000018bf3c : xchg eax, esp ; rol byte ptr [rcx], 0 ; mov ah, 0x2a ; cmc ; jmp rsp
0x00000000000edacf : xchg eax, esp ; ror byte ptr [rax + 0xffffffffffffff83], -0x3c ; movzx rax, al ; ret
0x0000000000046663 : xchg eax, esp ; ror byte ptr [rax + 0xffffffffffffff83], -0x3c ; or byte ptr [rdi], cl ; mov dh, -0x40 ; ret
0x000000000012f4d6 : xchg eax, esp ; ror byte ptr [rax + 0xffffffffffffff83], -0x3c ; sbb byte ptr [rdi], cl ; mov dh, -0x40 ; ret
0x00000000000b7dae : xchg eax, esp ; ror byte ptr [rax + 0xffffffffffffff8d], 0x14 ; add byte ptr [rax + 1], cl ; ret -0x72b8
0x0000000000166b88 : xchg eax, esp ; scasd eax, dword ptr es:[rdi] ; and eax, 0xf31e7500 ; ret
0x000000000004d6f0 : xchg eax, esp ; shr eax, -0x67 ; ret -1
0x0000000000198084 : xchg eax, esp ; xchg ch, ch ; jmp qword ptr [rdx]
0x00000000000965a7 : xchg eax, r14d ; stc ; dec dword ptr [rax + 0xffffffffffffff85] ; fisttp dword ptr [rdi] ; xchg eax, ebp ; ret
0x00000000000595fe : xchg ebp, eax ; add eax, 0x83480000 ; ret
0x00000000001982d5 : xchg ebp, ebp ; jmp qword ptr [rdx]
0x00000000001228e8 : xchg ebp, edi ; dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x48
0x000000000005362e : xchg ebp, esi ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x00000000001ae9ed : xchg ebp, esi ; jmp qword ptr [rdx]
0x000000000017913d : xchg ecx, esi ; call rax
0x00000000001a24a5 : xchg ecx, esi ; jmp qword ptr [rdx]
0x00000000000fa53c : xchg edi, edi ; add byte ptr [rax], al ; add byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x000000000018d0a9 : xchg edi, esi ; jmp rsp
0x00000000000abfc9 : xchg edi, esp ; idiv edi ; dec dword ptr [rcx + 0xffffffffffffff83] ; ret 0x4104
0x000000000019275d : xchg edx, ebp ; jmp qword ptr [rdx]
0x00000000001a3779 : xchg edx, esi ; jmp qword ptr [rax]
0x00000000001a3791 : xchg edx, esi ; jmp qword ptr [rcx]
0x00000000000ada92 : xchg esi, esi ; add byte ptr [rax], al ; add byte ptr [rcx + 0xffffffffffffff83], cl ; ret
0x00000000001b0441 : xchg esi, esi ; jmp qword ptr [rdi]
0x000000000019a9e4 : xchg esp, ebp ; in eax, dx ; jmp qword ptr [rdx]
0x00000000000d4f52 : xchg esp, ecx ; idiv bh ; dec dword ptr [rax + 0xffffffffffffff83] ; ret -0x72ff
0x00000000001881b5 : xchg esp, edi ; call qword ptr [rdx]
0x00000000001880f9 : xchg esp, edi ; call rax
0x00000000001880f5 : xchg esp, edi ; inc dword ptr [rax + 0xffffffffffffff87] ; cld ; call rax
0x0000000000188135 : xchg esp, edi ; jmp qword ptr [rsi]
0x00000000001882f5 : xchg esp, edi ; jmp rax
0x00000000001228e7 : xchg r13d, r15d ; dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x48
0x00000000001a21f4 : xchg r9b, r14b ; jmp qword ptr [rdx]
0x00000000001a223c : xchg r9b, sil ; jmp qword ptr [rdx]
0x00000000001af3dc : xchg rax, r12 ; cmc ; jmp qword ptr [rdx]
0x00000000000f601f : xchg rax, r12 ; repne dec dword ptr [rcx + 0xffffffffffffff8b] ; jge 0xf6027 ; call rbx
0x00000000001af46c : xchg rax, rsi ; cmc ; jmp qword ptr [rdx]
0x00000000001a37a8 : xchg rdx, rsi ; jmp qword ptr [rcx]
0x0000000000188140 : xchg spl, r15b ; call rsi
0x000000000000ec81 : xlatb ; adc byte ptr [rax], al ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret 3
0x000000000019c96d : xlatb ; add byte ptr [rax], al ; and byte ptr [rax], dh ; out dx, al ; call qword ptr [rsi]
0x0000000000171dc9 : xlatb ; add dword ptr [rax], eax ; add byte ptr [rax], al ; add byte ptr [rax], al ; call rdi
0x0000000000143779 : xlatb ; add r9, r11 ; jmp r9
0x0000000000021a9e : xlatb ; cmp dword ptr [rax], eax ; pop r12 ; ret
0x00000000001affcc : xlatb ; fcompi st(5) ; jmp qword ptr [rdx]
0x000000000018beb1 : xlatb ; hlt ; jmp rsp
0x000000000004978b : xlatb ; jbe 0x49780 ; nop ; mov rax, rsi ; pop rbx ; ret
0x0000000000108dd9 : xlatb ; jmp rax
0x00000000001188dc : xlatb ; jne 0x1188b0 ; mov qword ptr [rsi], rcx ; xor eax, eax ; ret
0x00000000000f8f56 : xlatb ; jne 0xf8f48 ; mov rax, qword ptr [rax + 8] ; ret
0x0000000000175903 : xlatb ; jo 0x175977 ; mov ebp, 0xfb67d10d ; ret
0x000000000019b59c : xlatb ; lock in eax, dx ; jmp qword ptr [rdx]
0x0000000000049a52 : xlatb ; mov byte ptr [rsi], al ; jne 0x49a30 ; mov rax, rsi ; ret
0x0000000000189f20 : xlatb ; mov esi, ebp ; jmp rsp
0x0000000000118bd6 : xlatb ; mov qword ptr [r9], rdi ; ret
0x000000000007eb5f : xlatb ; neg rdi ; call qword ptr [rax]
0x000000000018a3c1 : xlatb ; out dx, al ; call rsp
0x000000000019dc19 : xlatb ; out dx, al ; jmp rdx
0x0000000000087b29 : xlatb ; ret
0x0000000000087b20 : xlatb ; ret -0x3eb8
0x000000000008c87f : xlatb ; ret -0x3f7b
0x00000000001b0e00 : xlatb ; ret -0xa
0x0000000000097d5b : xlatb ; ret -0xe78
0x00000000000896af : xlatb ; ret 0x4166
0x0000000000176da6 : xlatb ; ret 0x4e27
0x0000000000003230 : xlatb ; ret 0x5a51
0x000000000008b517 : xlatb ; ret 0x94c
0x00000000000945c1 : xlatb ; rol byte ptr [rbp + 0x664975c0], 0xf ; xlatb ; ret -0x3f7b
0x0000000000097bf6 : xlatb ; rol dword ptr [rbp + 0x317475c0], -0x40 ; ret
0x000000000009ddae : xlatb ; ror byte ptr [rcx + 0xffffffffffffff83], 1 ; ret 0x4d10
0x00000000001630c6 : xlatb ; ror dword ptr [rcx], cl ; ret -0x1f8c
0x0000000000097b54 : xlatb ; ror dword ptr [rdi], -0x43 ; ror byte ptr [rax + 1], -8 ; ret
0x0000000000088236 : xlatb ; sal bh, 1 ; ret -0x10
0x0000000000088736 : xlatb ; sal bh, 1 ; ret -0x100
0x0000000000088c36 : xlatb ; sal bh, 1 ; ret -0x1000
0x0000000000088376 : xlatb ; sal bh, 1 ; ret -0x20
0x0000000000088876 : xlatb ; sal bh, 1 ; ret -0x200
0x0000000000088d76 : xlatb ; sal bh, 1 ; ret -0x2000
0x00000000000884b6 : xlatb ; sal bh, 1 ; ret -0x40
0x00000000000889b6 : xlatb ; sal bh, 1 ; ret -0x400
0x0000000000088eb6 : xlatb ; sal bh, 1 ; ret -0x4000
0x00000000000885f6 : xlatb ; sal bh, 1 ; ret -0x80
0x0000000000088af6 : xlatb ; sal bh, 1 ; ret -0x800
0x0000000000088ff6 : xlatb ; sal bh, 1 ; ret -0x8000
0x0000000000087e76 : xlatb ; sal bh, 1 ; ret -2
0x0000000000087fb6 : xlatb ; sal bh, 1 ; ret -4
0x00000000000880f6 : xlatb ; sal bh, 1 ; ret -8
0x00000000001630c2 : xlatb ; shl byte ptr [rsi + 0xf], -0x29 ; ror dword ptr [rcx], cl ; ret -0x1f8c
0x000000000008b4b5 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret
0x000000000008b4c6 : xlatb ; shl byte ptr [rsi + 0xf], 1 ; outsd dx, dword ptr [rsi] ; ret 0xf66
0x000000000018f139 : xlatb ; std ; jmp rsp
0x00000000000f3122 : xlatb ; sub al, 0 ; add rsp, 8 ; ret
0x00000000000f31b8 : xlatb ; sub al, 0 ; mov rdx, rax ; jmp 0xf314f
0x00000000001aea34 : xlatb ; xchg ebp, esi ; jmp qword ptr [rdx]
0x00000000000376a8 : xlatb ; xor eax, eax ; ret
0x00000000000c5800 : xor ah, -1 ; push rsi ; ret
0x000000000009d5a8 : xor ah, ah ; mov byte ptr [rdx + 0x10], ah ; mov rax, rdi ; ret
0x000000000009d53e : xor ah, ah ; mov byte ptr [rdx + 8], ah ; mov rax, rdi ; ret
0x0000000000187a3d : xor ah, bh ; call rax
0x0000000000187754 : xor ah, bl ; sti ; call qword ptr [rax]
0x00000000000025c0 : xor ah, byte ptr [rsi] ; sahf ; jl 0x2552 ; loop 0x259d ; ret 0x23cb
0x00000000001ab790 : xor ah, dl ; cmc ; jmp qword ptr [rsi]
0x000000000019be55 : xor al, -0x12 ; jmp qword ptr [rdx]
0x0000000000189840 : xor al, -0x1a ; jmp 0x189843
0x0000000000175a6a : xor al, -0x28 ; ret
0x000000000018f138 : xor al, -0x29 ; std ; jmp rsp
0x000000000018efc8 : xor al, -0x2a ; sti ; call rsp
0x000000000017a7b0 : xor al, -0x34 ; hlt ; call rsp
0x000000000017a804 : xor al, -0x35 ; hlt ; call rsp
0x00000000001abc24 : xor al, -0x36 ; add dword ptr [rax], eax ; or dl, bl ; cmc ; call qword ptr [rax]
0x00000000001ab624 : xor al, -0x3c ; add dword ptr [rax], eax ; clc ; ret
0x000000000002e29e : xor al, -0x4e ; add r14, r10 ; jmp r14
0x00000000001283b8 : xor al, -0x50 ; add rax, rsi ; jmp rax
0x00000000001a8e24 : xor al, -0x64 ; add dword ptr [rax], eax ; xor bpl, sil ; jmp qword ptr [rcx]
0x00000000000f5c38 : xor al, -0x68 ; repne dec dword ptr [rcx + 0xffffffffffffff8b] ; call rbx
0x00000000001af34c : xor al, -0x6d ; cmc ; jmp qword ptr [rdx]
0x0000000000020bf2 : xor al, -0x77 ; inc dword ptr [rdi + 4] ; ret
0x00000000000a27a1 : xor al, -0x7e ; add rdx, rsi ; jmp rdx
0x00000000000a27e1 : xor al, -0x7f ; add rcx, rsi ; jmp rcx
0x000000000018c1c1 : xor al, -0xa ; jmp rsp
0x000000000018bce1 : xor al, -0xc ; jmp rsp
0x0000000000187a25 : xor al, -4 ; jmp rax
0x0000000000187321 : xor al, -5 ; call qword ptr [rax]
0x00000000001b6b2d : xor al, -9 ; jmp qword ptr [rdx]
0x000000000007d5c9 : xor al, 0 ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x000000000007dfdd : xor al, 0 ; add dword ptr [rbx + 0xfffffffffffffff3], ebx ; ret
0x000000000007d564 : xor al, 0 ; add dword ptr [rip + 0x344457], 1 ; ret
0x000000000007d4e5 : xor al, 0 ; ret
0x000000000007eb7e : xor al, 0 ; xor edi, edi ; mov qword ptr [rsp + 8], rcx ; call qword ptr [rax]
0x000000000007eb2d : xor al, 0 ; xor edi, edi ; mov r14, rdx ; call qword ptr [rax]
0x000000000018def8 : xor al, 0x12 ; stc ; jmp rsp
0x0000000000083555 : xor al, 0x18 ; pop rbx ; ret
0x000000000017488a : xor al, 0x19 ; xchg dword ptr [rcx + 0x79], ecx ; xchg eax, edx ; ret -0x797
0x0000000000083a5c : xor al, 0x24 ; jmp rax
0x00000000000949db : xor al, 0x24 ; test rsi, rsi ; jne 0x949ec ; jmp 0x949a6
0x00000000000c29d4 : xor al, 0x25 ; rol byte ptr [rdx], 1 ; add byte ptr [rax], al ; mov eax, esi ; ret
0x00000000000ff764 : xor al, 0x2c ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x76b8
0x0000000000002041 : xor al, 0x39 ; push rbx ; cmp byte ptr [rdi + 0xffffffffe652180d], dl ; ret
0x00000000000d836b : xor al, 0x39 ; ror byte ptr [rdi], 1 ; ret 0x538b
0x000000000018bf58 : xor al, 0x3b ; cmc ; call rsp
0x000000000018a788 : xor al, 0x3c ; out dx, eax ; call rsp
0x0000000000097c7b : xor al, 0x48 ; lea eax, dword ptr [rdi + rax + 0x20] ; ret
0x000000000018e0a8 : xor al, 0x65 ; stc ; call rsp
0x000000000018e0b8 : xor al, 0x66 ; stc ; jmp rsp
0x0000000000195e24 : xor al, 0x6c ; add byte ptr [rax], al ; pop rax ; xchg eax, edx ; in eax, dx ; jmp qword ptr [rax]
0x00000000001b5f24 : xor al, 0x6d ; add al, byte ptr [rax] ; sub byte ptr [rsi], al ; sti ; jmp qword ptr [rdx]
0x00000000001a6324 : xor al, 0x71 ; add dword ptr [rax], eax ; cmp byte ptr [rcx + 0xfffffffffffffff4], bh ; jmp qword ptr [rcx]
0x0000000000190dc6 : xor al, 0xc ; ljmp 0xfd0d1cff, -0x1600 ; jmp qword ptr [rdx]
0x00000000000a3738 : xor al, 1 ; add byte ptr [rax], al ; ret
0x000000000018773c : xor al, ah ; sti ; call qword ptr [rax]
0x00000000000fb18b : xor al, al ; or eax, edi ; ret
0x00000000000e51b3 : xor al, al ; ret
0x000000000011c691 : xor al, byte ptr [rax + 6] ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret 0x1be
0x00000000000ebcda : xor al, byte ptr [rcx] ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000018d4a5 : xor al, byte ptr [rdx] ; add byte ptr [rdx + rdx + 0xfffffffffffffff8], al ; call rsp
0x00000000000fa3da : xor al, byte ptr [rsp + rbp + 0x415d5b00] ; pop rsp ; ret
0x00000000000f0998 : xor ax, ax ; ret
0x0000000000187a21 : xor bh, ah ; jmp rax
0x000000000018731d : xor bh, bl ; push qword ptr [rax + 0x34] ; sti ; call qword ptr [rax]
0x000000000018cc21 : xor bh, dh ; jmp rsp
0x000000000008cadc : xor bl, al ; nop ; xor rax, rax ; ret
0x0000000000108602 : xor bl, al ; nop dword ptr [rax] ; xor eax, eax ; ret
0x00000000000539f2 : xor bl, bh ; add byte ptr ss:[rbp + 0x5c], dh ; mov eax, edx ; pop rbx ; ret
0x00000000001876d0 : xor bl, bl ; sti ; push rax ; fdiv st(3), st(0) ; call rax
0x00000000001abfec : xor bl, byte ptr [rcx + 0xfffffffffffffff5] ; jmp qword ptr [rdx]
0x00000000001a8e28 : xor bpl, sil ; jmp qword ptr [rcx]
0x00000000000a382c : xor byte ptr [r11], r15b ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x000000000008c99d : xor byte ptr [r14 + 0xf], r12b ; xlatb ; ret
0x0000000000047257 : xor byte ptr [r8 + 0xffffffffffffff8b], r9b ; jg 0x472c5 ; xor eax, eax ; ret
0x0000000000111f82 : xor byte ptr [r8 + 1], dil ; pop rbx ; ret
0x00000000000d593f : xor byte ptr [r9], sil ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x0000000000072e4b : xor byte ptr [rax + 0x29], cl ; ret
0x000000000004444c : xor byte ptr [rax + 0x29], cl ; ret 0x2949
0x00000000000d5a77 : xor byte ptr [rax + 0x39], cl ; ret -0x7cf1
0x0000000000087a31 : xor byte ptr [rax + 0xf], cl ; ret -0x6f3d
0x0000000000087b4f : xor byte ptr [rax + 0xf], cl ; ret 0x66c3
0x0000000000188814 : xor byte ptr [rax + 0xffffffffa7b0fffc], ch ; cld ; jmp qword ptr [rax]
0x00000000001260fb : xor byte ptr [rax + 0xffffffffffffff83], cl ; ret
0x000000000008795f : xor byte ptr [rax + 0xffffffffffffff89], cl ; add cl, byte ptr [rax + 0xffffffffffffff83] ; ret 0x4808
0x0000000000106b5b : xor byte ptr [rax + 0xffffffffffffff89], cl ; and al, 0x28 ; call 0x72d90
0x000000000012f46a : xor byte ptr [rax + 0xffffffffffffff89], cl ; and al, 8 ; xor eax, eax ; call rdx
0x00000000000aa932 : xor byte ptr [rax + 0xffffffffffffff89], cl ; call 0x4ccd3e49
0x00000000000b6186 : xor byte ptr [rax + 0xffffffffffffff89], cl ; jmp 0x48cdead6
0x00000000000b6a1e : xor byte ptr [rax + 0xffffffffffffff89], cl ; jmp 0x4ccdf36e
0x00000000000b6aaa : xor byte ptr [rax + 0xffffffffffffff89], cl ; jmp 0x4ccdf3fa
0x00000000000b6b2b : xor byte ptr [rax + 0xffffffffffffff89], cl ; jmp 0x4ccdf47b
0x00000000000b7a4b : xor byte ptr [rax + 0xffffffffffffff89], cl ; jmp 0x4cce039b
0x00000000000ddf99 : xor byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x000000000006d6c1 : xor byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x117d
0x00000000000e2f97 : xor byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x680
0x00000000000e69f0 : xor byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x74bc
0x00000000000b6f27 : xor byte ptr [rax + 0xffffffffffffff89], cl ; ret -0x7cb8
0x0000000000047598 : xor byte ptr [rax + 0xffffffffffffff8b], cl ; jbe 0x4760d ; xor eax, eax ; ret
0x0000000000047258 : xor byte ptr [rax + 0xffffffffffffff8b], cl ; jg 0x472c5 ; xor eax, eax ; ret
0x0000000000047597 : xor byte ptr [rax + 0xffffffffffffff8b], r9b ; jbe 0x4760d ; xor eax, eax ; ret
0x000000000011fb37 : xor byte ptr [rax + 0xffffffffffffff8d], cl ; add eax, 0x2a4b61 ; pop rbx ; ret
0x000000000011faff : xor byte ptr [rax + 0xffffffffffffff8d], cl ; add eax, 0x2a4b99 ; pop rbx ; ret
0x000000000011fa40 : xor byte ptr [rax + 0xffffffffffffff8d], cl ; add eax, 0x2a4c58 ; pop rbx ; ret
0x0000000000111f83 : xor byte ptr [rax + 1], bh ; pop rbx ; ret
0x0000000000097c56 : xor byte ptr [rax + 1], cl ; ret 0x547c
0x00000000000e51ec : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 0x18 ; ret
0x000000000008b7a8 : xor byte ptr [rax], al ; add byte ptr [rax], al ; add rsp, 8 ; jmp rax
0x0000000000021ee3 : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rax
0x0000000000031dad : xor byte ptr [rax], al ; add byte ptr [rax], al ; call rdx
0x0000000000036be3 : xor byte ptr [rax], al ; add byte ptr [rax], al ; jmp rax
0x00000000000a2805 : xor byte ptr [rax], al ; add byte ptr [rax], al ; pop rbx ; ret
0x0000000000075a91 : xor byte ptr [rax], al ; je 0x75aa0 ; pop rbx ; pop rbp ; pop r12 ; ret
0x000000000019b4e0 : xor byte ptr [rax], ch ; out dx, al ; call qword ptr [rdx]
0x00000000001a8e10 : xor byte ptr [rax], dh ; cmc ; jmp qword ptr [rcx]
0x00000000000a1d07 : xor byte ptr [rax], dh ; in eax, dx ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a3830 : xor byte ptr [rbp + 0x3d], dh ; ret
0x00000000000a382f : xor byte ptr [rbp + 0x3d], r14b ; ret
0x0000000000179138 : xor byte ptr [rbp + 0xffffffff8780fff1], al ; int1 ; call rax
0x00000000000892f9 : xor byte ptr [rbp + rcx*4 + 0x48], al ; rol byte ptr [rcx + 0xf], 1 ; xchg eax, esp ; ret -0x7cbf
0x000000000017aee0 : xor byte ptr [rbp + rsi*8 + 0xfffffffff5a440ff], ah ; jmp qword ptr [rbx]
0x000000000008445a : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; pop r13 ; pop r14 ; ret
0x00000000000c38f3 : xor byte ptr [rbx + 0x5d], bl ; pop r12 ; ret
0x000000000019cacf : xor byte ptr [rbx + 0xae60206], al ; ret
0x000000000007ca4e : xor byte ptr [rbx + 0xffffffffe675fff8], al ; pop rbx ; ret
0x00000000001a75bc : xor byte ptr [rbx + 0xfffffffffffffff4], ah ; jmp qword ptr [rdx]
0x000000000008d64b : xor byte ptr [rbx + rcx*4 + 0x76], cl ; cmp byte ptr [rax + 0xf], cl ; ret
0x000000000019c7b0 : xor byte ptr [rbx], ah ; out dx, al ; jmp rcx
0x00000000000a382d : xor byte ptr [rbx], bh ; xor byte ptr [rbp + 0x3d], r14b ; ret
0x0000000000187a70 : xor byte ptr [rbx], ch ; cld ; push rax ; sub al, -4 ; call rax
0x00000000001a8a50 : xor byte ptr [rbx], ch ; cmc ; jmp qword ptr [rcx]
0x00000000000a870b : xor byte ptr [rcx + 0x39], cl ; ret -0x7bf1
0x0000000000001b20 : xor byte ptr [rcx + 0x3a6d4813], ah ; ret
0x00000000000ca9fb : xor byte ptr [rcx + 0x5d], al ; pop r14 ; pop r15 ; ret
0x00000000000cfafc : xor byte ptr [rcx + 0xf40247c], cl ; xchg eax, esp ; ret -0x7d
0x00000000001884d8 : xor byte ptr [rcx + 0xffffffff80a0fffc], al ; cld ; jmp qword ptr [rax]
0x00000000000814e0 : xor byte ptr [rcx + rcx*4 + 0x5c], al ; and al, 0x28 ; call rax
0x00000000000e26e2 : xor byte ptr [rcx], -0x40 ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000116f13 : xor byte ptr [rcx], -0x40 ; pop rbx ; ret
0x00000000000f135c : xor byte ptr [rcx], -0x40 ; ret
0x00000000000e2c8d : xor byte ptr [rcx], al ; ret
0x0000000000031f6e : xor byte ptr [rcx], bh ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x00000000001a9230 : xor byte ptr [rcx], bh ; cmc ; jmp qword ptr [rcx]
0x00000000001872c0 : xor byte ptr [rcx], bl ; sti ; inc dword ptr [rax] ; sbb bh, bl ; call rax
0x00000000000d5940 : xor byte ptr [rcx], dh ; rcr byte ptr [rbx + 0x5d], 0x41 ; pop rsp ; ret
0x00000000000fe5b2 : xor byte ptr [rcx], dh ; rol byte ptr [rbx + 0xffffffff960f09ff], -0x40 ; ret
0x0000000000187318 : xor byte ptr [rcx], dh ; sti ; call rax
0x00000000000d1882 : xor byte ptr [rcx], dl ; je 0xd1890 ; xor eax, eax ; ret
0x0000000000179240 : xor byte ptr [rdi + 0xffffffff90a0fffc], cl ; cld ; call qword ptr [rax]
0x0000000000194180 : xor byte ptr [rdi + 0xffffffffffffffeb], dl ; call qword ptr [rdi]
0x0000000000195cb4 : xor byte ptr [rdi + 0xffffffffffffffed], ch ; jmp qword ptr [rdx]
0x0000000000187b0c : xor byte ptr [rdi], -4 ; call qword ptr [rax]
0x0000000000187b3c : xor byte ptr [rdi], ch ; cld ; jmp qword ptr [rax]
0x0000000000093bb4 : xor byte ptr [rdx + 0xe], 0x2a ; ret
0x0000000000188a40 : xor byte ptr [rdx + 0xffffffffa1a0fffc], ah ; cld ; call qword ptr [rax]
0x000000000019cc10 : xor byte ptr [rdx + 0xffffffffffffffee], ah ; jmp qword ptr [rsi]
0x000000000019cd30 : xor byte ptr [rdx + 0xffffffffffffffee], ch ; call qword ptr [rdi]
0x00000000001873a4 : xor byte ptr [rdx + 0xfffffffffffffffb], -1 ; sal byte ptr [rbx + 0xfffffffffffffffb], 1 ; jmp qword ptr [rax]
0x00000000001928d7 : xor byte ptr [rdx], al ; ret
0x00000000001872d0 : xor byte ptr [rip + 0x1e20fffb], bl ; sti ; call qword ptr [rax]
0x0000000000187bac : xor byte ptr [rip + 0x1e80fffc], bl ; cld ; call rax
0x0000000000187b08 : xor byte ptr [rip + 0x3780fffc], -4 ; call qword ptr [rax]
0x0000000000160cbf : xor byte ptr [rsi + 0xf], ah ; cmp byte ptr [rdi], dl ; ret -0x7cf1
0x000000000008b47c : xor byte ptr [rsi + 0xf], ah ; outsd dx, dword ptr [rsi] ; ret
0x000000000008c99e : xor byte ptr [rsi + 0xf], ah ; xlatb ; ret
0x0000000000187338 : xor byte ptr [rsi], bh ; sti ; call rax
0x0000000000187ad8 : xor byte ptr [rsi], ch ; cld ; call qword ptr [rax]
0x0000000000190a00 : xor ch, -0x17 ; call qword ptr [rbx]
0x0000000000193b11 : xor ch, bl ; call rdx
0x00000000001877b8 : xor ch, bl ; sti ; call qword ptr [rax]
0x00000000000a1a98 : xor ch, ch ; mov byte ptr [rdi + 0x10], ch ; ret
0x00000000000a1aae : xor ch, ch ; mov byte ptr [rdi + 0x11], ch ; ret
0x00000000000a1ad0 : xor ch, ch ; mov byte ptr [rdi + 0x12], ch ; ret
0x00000000000a1aee : xor ch, ch ; mov byte ptr [rdi + 0x13], ch ; ret
0x00000000000a1b0e : xor ch, ch ; mov byte ptr [rdi + 0x14], ch ; ret
0x00000000000a1b34 : xor ch, ch ; mov byte ptr [rdi + 0x15], ch ; ret
0x00000000000a1b50 : xor ch, ch ; mov byte ptr [rdi + 0x16], ch ; ret
0x00000000000a1b70 : xor ch, ch ; mov byte ptr [rdi + 0x17], ch ; ret
0x00000000000a1b90 : xor ch, ch ; mov byte ptr [rdi + 0x18], ch ; ret
0x00000000000a1bb6 : xor ch, ch ; mov byte ptr [rdi + 0x19], ch ; ret
0x00000000000a1bd8 : xor ch, ch ; mov byte ptr [rdi + 0x1a], ch ; ret
0x00000000000a1bf6 : xor ch, ch ; mov byte ptr [rdi + 0x1b], ch ; ret
0x00000000000a1c16 : xor ch, ch ; mov byte ptr [rdi + 0x1c], ch ; ret
0x00000000000a1c32 : xor ch, ch ; mov byte ptr [rdi + 0x1d], ch ; ret
0x00000000000a1c52 : xor ch, ch ; mov byte ptr [rdi + 0x1e], ch ; ret
0x00000000000a1c72 : xor ch, ch ; mov byte ptr [rdi + 0x1f], ch ; ret
0x00000000000a1c92 : xor ch, ch ; mov byte ptr [rdi + 0x20], ch ; ret
0x00000000000a1cb8 : xor ch, ch ; mov byte ptr [rdi + 0x21], ch ; ret
0x00000000000a1d08 : xor ch, ch ; mov byte ptr [rdi + 0x40], ch ; ret
0x00000000000a19de : xor ch, ch ; mov byte ptr [rdi + 0xa], ch ; ret
0x00000000000a19fc : xor ch, ch ; mov byte ptr [rdi + 0xb], ch ; ret
0x00000000000a1a1c : xor ch, ch ; mov byte ptr [rdi + 0xc], ch ; ret
0x00000000000a1a3e : xor ch, ch ; mov byte ptr [rdi + 0xd], ch ; ret
0x00000000000a1a5e : xor ch, ch ; mov byte ptr [rdi + 0xe], ch ; ret
0x00000000000a1a7e : xor ch, ch ; mov byte ptr [rdi + 0xf], ch ; ret
0x00000000000a1914 : xor ch, ch ; mov byte ptr [rdi + 1], ch ; ret
0x00000000000a1926 : xor ch, ch ; mov byte ptr [rdi + 2], ch ; ret
0x00000000000a193c : xor ch, ch ; mov byte ptr [rdi + 3], ch ; ret
0x00000000000a1954 : xor ch, ch ; mov byte ptr [rdi + 4], ch ; ret
0x00000000000a196a : xor ch, ch ; mov byte ptr [rdi + 5], ch ; ret
0x00000000000a197c : xor ch, ch ; mov byte ptr [rdi + 6], ch ; ret
0x00000000000a199a : xor ch, ch ; mov byte ptr [rdi + 7], ch ; ret
0x00000000000a19a6 : xor ch, ch ; mov byte ptr [rdi + 8], ch ; ret
0x00000000000a19bc : xor ch, ch ; mov byte ptr [rdi + 9], ch ; ret
0x00000000000a1900 : xor ch, ch ; mov byte ptr [rdi], ch ; ret
0x000000000018f429 : xor ch, cl ; call qword ptr [rcx]
0x00000000001a8e11 : xor ch, dh ; jmp qword ptr [rcx]
0x00000000001a1ed7 : xor cl, -1 ; sbb al, 0xd ; jle 0x1a1ed0 ; jmp qword ptr [rdx]
0x00000000000e92d6 : xor cl, byte ptr [rax + 0xffffffffffffff83] ; ret
0x00000000001241f0 : xor cl, byte ptr [rax + 0xffffffffffffff83] ; ret -0x72fc
0x00000000001283ff : xor cl, byte ptr [rax + 0xffffffffffffff89] ; jp 0x12840c ; ret
0x0000000000128417 : xor cl, byte ptr [rax + 0xffffffffffffff89] ; jp 0x128424 ; ret
0x0000000000128c5f : xor cl, byte ptr [rax + 0xffffffffffffff89] ; jp 0x128c6c ; ret
0x0000000000128c77 : xor cl, byte ptr [rax + 0xffffffffffffff89] ; jp 0x128c84 ; ret
0x0000000000128ca7 : xor cl, byte ptr [rax + 0xffffffffffffff89] ; jp 0x128cb4 ; ret
0x00000000000b0f16 : xor cl, byte ptr [rax + 0xffffffffffffff89] ; ret -0x3eb8
0x00000000000470ad : xor cl, byte ptr [rax + 0xffffffffffffff89] ; ret -0x72b8
0x00000000000b8cde : xor cl, byte ptr [rax + 0xffffffffffffff89] ; ror byte ptr [rax + 0xffffffffffffff83], 1 ; ret 0x4801
0x00000000000d1897 : xor cl, byte ptr [rax] ; xor eax, eax ; ret
0x000000000010d4cb : xor cl, byte ptr [rcx + 0xffffffffffffff83] ; ret 0x4d04
0x0000000000080518 : xor cl, byte ptr [rdi] ; xchg eax, esp ; ret 0x1589
0x0000000000104151 : xor cl, ch ; ret
0x000000000003f900 : xor cl, ch ; ret -0x10
0x000000000009d420 : xor cl, cl ; mov byte ptr [rax], cl ; mov rax, rdi ; ret
0x000000000018cc71 : xor dh, bh ; call rsp
0x000000000019c971 : xor dh, ch ; call qword ptr [rsi]
0x00000000001a8f49 : xor dh, ch ; jmp qword ptr [rcx]
0x000000000019be0d : xor dh, ch ; jmp qword ptr [rdx]
0x00000000001879e4 : xor dl, -5 ; call rax
0x000000000004c6ac : xor dword ptr [rax + 0xffffffffffffff83], ecx ; ret 0x4801
0x000000000009784e : xor dword ptr [rax + 0xffffffffffffff84], eax ; div byte ptr [rbp + 0xffffffffffffffec] ; mov qword ptr [rdx], rcx ; ret
0x00000000000e3271 : xor dword ptr [rax + 0xffffffffffffff8b], ecx ; adc byte ptr [rax + 0x39], cl ; ret
0x000000000003071d : xor dword ptr [rax + rax], edx ; movsxd rax, dword ptr [rdx + r12*4] ; add rdx, rax ; jmp rdx
0x00000000000b130b : xor dword ptr [rax], eax ; add rsp, 0x28 ; ret
0x00000000000b2db3 : xor dword ptr [rax], eax ; add rsp, 8 ; ret
0x000000000017b038 : xor dword ptr [rbp + 0xffffffffa579fff5], esp ; cmc ; call qword ptr [rdi]
0x000000000010aa0f : xor dword ptr [rcx], -0x40 ; ret
0x000000000018d46d : xor dword ptr [rdx], eax ; add byte ptr [rdi + rcx], al ; clc ; call rsp
0x00000000000463e6 : xor eax, 0x195 ; call rax
0x00000000000f1172 : xor eax, 0x20 ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x000000000007044b : xor eax, 0x30 ; call rax
0x000000000006612c : xor eax, 0x358e2f ; call rax
0x0000000000064844 : xor eax, 0x35a717 ; call rax
0x000000000005f3c8 : xor eax, 0x35fb93 ; call rax
0x0000000000056056 : xor eax, 0x368f05 ; call rax
0x000000000004f084 : xor eax, 0x36fed7 ; call rax
0x0000000000187b29 : xor eax, 0x3740fffc ; cld ; call rax
0x0000000000049f40 : xor eax, 0x37501b ; call rax
0x0000000000187b09 : xor eax, 0x3780fffc ; cld ; call qword ptr [rax]
0x000000000006da28 : xor eax, 0x48b4800 ; ret -0x7ab8
0x00000000000e4987 : xor eax, 0x48fffff6 ; add esp, 0x18 ; ret
0x00000000000ec2a0 : xor eax, 0x70c48348 ; pop rbx ; ret
0x00000000001043ee : xor eax, 0x8548fff8 ; ror byte ptr [rdi], -0x6b ; ret
0x000000000007045f : xor eax, 0x8994eb00 ; ret -0x74b8
0x00000000000cb9ac : xor eax, 0x8bffffff ; mov byte ptr [r9 + 0xffffffffffffff89], r8b ; ret -0x247c
0x00000000000704b0 : xor eax, 0xa6850f00 ; add al, 0 ; add bl, dh ; ret
0x000000000000245d : xor eax, 0xdd410018 ; out -0x57, al ; ret -0x42f9
0x000000000007d11b : xor eax, 0xffffe480 ; call rax
0x000000000007cd1b : xor eax, 0xffffe880 ; call rax
0x000000000007ba6b : xor eax, 0xfffffb30 ; call rax
0x00000000000707a7 : xor eax, 0xfffffcd4 ; call rax
0x000000000007b803 : xor eax, 0xfffffd98 ; call rax
0x0000000000021ee0 : xor eax, dword ptr [0x30] ; call rax
0x0000000000036be0 : xor eax, dword ptr [0x30] ; jmp rax
0x0000000000130241 : xor eax, dword ptr [rax] ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x00000000000832d4 : xor eax, dword ptr [rax] ; add byte ptr [rax], al ; add byte ptr [rax], al ; ret
0x0000000000004149 : xor eax, dword ptr [rax] ; add byte ptr [rdx], ah ; add byte ptr [rax + rax], cl ; ret 0xf
0x0000000000086a36 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; mov eax, ebx ; pop rbx ; ret
0x000000000008676e : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; pop r12 ; ret
0x0000000000086921 : xor eax, dword ptr [rax] ; add dword ptr [rax], eax ; add byte ptr [rax], al ; xor eax, eax ; ret
0x000000000008c67c : xor eax, dword ptr [rax] ; add rsp, 0x100 ; ret
0x00000000000869d4 : xor eax, dword ptr [rax] ; add rsp, 0x18 ; ret
0x000000000008b768 : xor eax, dword ptr [rax] ; add rsp, 8 ; ret
0x00000000000832c3 : xor eax, dword ptr [rax] ; mov qword ptr [rax], rdi ; ret
0x000000000008b71f : xor eax, dword ptr [rax] ; mov qword ptr [rip + 0x336548], rax ; ret
0x000000000008745d : xor eax, dword ptr [rax] ; mov qword ptr [rsp + 8], rax ; call qword ptr [rdx]
0x000000000008b726 : xor eax, dword ptr [rax] ; ret
0x000000000008170c : xor eax, dword ptr [rax] ; xor edi, edi ; call qword ptr [rax]
0x00000000000aebe5 : xor eax, dword ptr [rcx + 0xffffffffffffff89] ; ret 0x2941
0x0000000000104b9a : xor eax, dword ptr [rcx + rcx*4 + 0xffffffffffffffc0] ; sub eax, r9d ; ret
0x000000000019790e : xor eax, dword ptr [rdx + 0xd1cffed] ; jrcxz 0x197897 ; in eax, dx ; jmp qword ptr [rdx]
0x000000000008b767 : xor eax, dword ptr gs:[rax] ; add rsp, 8 ; ret
0x000000000008b725 : xor eax, dword ptr gs:[rax] ; ret
0x00000000001066cd : xor eax, eax ; add r13, 0x30 ; call 0x102960
0x000000000007d29b : xor eax, eax ; add rsp, 0x10 ; pop rbx ; ret
0x0000000000126af0 : xor eax, eax ; add rsp, 0x18 ; pop rbx ; pop rbp ; ret
0x0000000000084e5e : xor eax, eax ; add rsp, 0x18 ; ret
0x00000000000b5082 : xor eax, eax ; add rsp, 0x20 ; pop rbx ; ret
0x0000000000114432 : xor eax, eax ; add rsp, 0x28 ; pop rbx ; pop rbp ; ret
0x000000000012a4aa : xor eax, eax ; add rsp, 0x30 ; pop rbx ; ret
0x000000000012a607 : xor eax, eax ; add rsp, 0x48 ; pop rbx ; pop rbp ; ret
0x0000000000137540 : xor eax, eax ; add rsp, 0x48 ; ret
0x0000000000136d4c : xor eax, eax ; add rsp, 0x58 ; ret
0x000000000003c2ec : xor eax, eax ; add rsp, 8 ; pop rbx ; pop rbp ; ret
0x0000000000084100 : xor eax, eax ; add rsp, 8 ; ret
0x000000000002fee0 : xor eax, eax ; and edi, -0x80 ; sete al ; ret
0x00000000001066fb : xor eax, eax ; call 0x102960
0x000000000001feaa : xor eax, eax ; call 0xec1a9
0x0000000000071b57 : xor eax, eax ; call r12
0x000000000012e6c9 : xor eax, eax ; call r8
0x000000000012e713 : xor eax, eax ; call rcx
0x000000000012f470 : xor eax, eax ; call rdx
0x00000000000487f6 : xor eax, eax ; cmp byte ptr [rdi], 0 ; jne 0x48800 ; pop rbx ; ret
0x00000000000d2a34 : xor eax, eax ; cmp byte ptr [rsi], cl ; je 0xd29c2 ; pop rbx ; ret
0x00000000000fe5b3 : xor eax, eax ; cmp edi, 9 ; setbe al ; ret
0x00000000000c6d93 : xor eax, eax ; cmp edx, 1 ; sete al ; ret
0x00000000000f57dd : xor eax, eax ; cmp qword ptr [rsi], 0 ; je 0xf57e7 ; pop rbx ; ret
0x00000000000c15dd : xor eax, eax ; cmp rdx, -1 ; cmovne rax, rdx ; ret
0x00000000000fc884 : xor eax, eax ; cmp rdx, rcx ; cmovae rax, rsi ; ret
0x00000000001086d7 : xor eax, eax ; cmp rdx, rdi ; setae al ; ret
0x00000000000cb62b : xor eax, eax ; jmp 0xcae29
0x00000000000df4ce : xor eax, eax ; jmp 0xdf494
0x0000000000122210 : xor eax, eax ; jmp rcx
0x0000000000111d50 : xor eax, eax ; mov byte ptr [rdx], 0 ; pop r12 ; ret
0x00000000001183f3 : xor eax, eax ; mov dword ptr [rdi + 0xc], edx ; mov qword ptr [rsi], rdi ; ret
0x000000000003cdc7 : xor eax, eax ; mov qword ptr [rdi + 8], rdx ; ret
0x000000000003cdd7 : xor eax, eax ; mov qword ptr [rdi], rcx ; mov qword ptr [rdi + 8], rdx ; ret
0x0000000000097878 : xor eax, eax ; mov qword ptr [rdx], rcx ; ret
0x000000000010b831 : xor eax, eax ; mov rbp, rsp ; pop rbp ; ret
0x0000000000106698 : xor eax, eax ; mov rdi, r14 ; call 0x102960
0x00000000001252e7 : xor eax, eax ; mov rsi, rdx ; add rdi, 0x10 ; jmp rcx
0x000000000003d45d : xor eax, eax ; mov word ptr [rdi + 2], dx ; ret
0x00000000000376ed : xor eax, eax ; nop ; ret
0x000000000007afe2 : xor eax, eax ; pop r12 ; ret
0x00000000000af994 : xor eax, eax ; pop r14 ; ret
0x00000000000d5b96 : xor eax, eax ; pop r15 ; ret
0x00000000001200e3 : xor eax, eax ; pop rbp ; jmp rcx
0x0000000000121890 : xor eax, eax ; pop rbp ; jmp rdx
0x000000000010b8a1 : xor eax, eax ; pop rbx ; pop r12 ; pop r13 ; pop rbp ; ret
0x00000000000246cd : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; pop r13 ; ret
0x000000000003c4ad : xor eax, eax ; pop rbx ; pop rbp ; pop r12 ; ret
0x0000000000074104 : xor eax, eax ; pop rbx ; pop rbp ; ret
0x0000000000035756 : xor eax, eax ; pop rbx ; ret
0x00000000000bda6e : xor eax, eax ; pop rdx ; ret
0x0000000000037686 : xor eax, eax ; ret
0x0000000000098b4e : xor eax, eax ; sub eax, ecx ; ret
0x0000000000073b60 : xor eax, eax ; test byte ptr [rdi], 4 ; sete al ; ret
0x0000000000073b70 : xor eax, eax ; test byte ptr [rdi], 8 ; sete al ; ret
0x00000000000d2a60 : xor eax, eax ; test cl, 1 ; jne 0xd29ee ; pop rbx ; ret
0x00000000000a2748 : xor eax, eax ; test dh, -0x10 ; je 0xa2712 ; movzx eax, dl ; pop rbx ; ret
0x000000000009812c : xor eax, eax ; test dl, dl ; cmovne rax, rdi ; ret
0x00000000000fac11 : xor eax, eax ; test edx, edx ; cmovns rax, rdx ; jmp 0xfac1d
0x0000000000037a28 : xor eax, eax ; test edx, edx ; sete al ; ret
0x000000000003d0bd : xor eax, edx ; ret
0x000000000003c927 : xor eax, edx ; sub eax, edx ; ret
0x000000000003c93b : xor eax, edx ; sub rax, rdx ; ret
0x00000000001740c5 : xor ebp, ebp ; call rax
0x00000000001740c1 : xor ebp, ebp ; dec dword ptr [rax] ; xor ebp, ebp ; call rax
0x000000000002f62c : xor ebp, ebp ; jmp 0x2f633
0x00000000000a6134 : xor ebp, ebp ; mov edx, eax ; jmp 0xa60e0
0x00000000000a8974 : xor ebp, ebp ; mov edx, eax ; jmp 0xa8920
0x00000000000ab024 : xor ebp, ebp ; mov edx, eax ; jmp 0xaafd0
0x0000000000191299 : xor ebp, edx ; call qword ptr [rcx]
0x000000000006f1c9 : xor ebx, dword ptr [rbx + 0x5d] ; pop r12 ; ret
0x000000000017a568 : xor ebx, dword ptr [rdx + 0xffffffff96dcfff4] ; hlt ; jmp rsi
0x00000000000ee609 : xor ebx, dword ptr [rsi + 0xfffffffffffffffa] ; dec dword ptr [rax + 0x39] ; ret
0x000000000012f6db : xor ebx, ebx ; call 0x12b970
0x00000000000de6a0 : xor ebx, ebx ; xor r10d, r10d ; jmp 0xde6ba
0x0000000000187319 : xor ebx, edi ; call rax
0x00000000000c321e : xor ebx, esi ; ret
0x00000000000c5c3f : xor ecx, -1 ; dec dword ptr [rax + 0xffffffffffffff89] ; ret -0x72b7
0x0000000000039071 : xor ecx, dword ptr [rax + 0x39] ; ret
0x00000000000bad9c : xor ecx, dword ptr [rax + 0xffffffffffffff83] ; ret
0x000000000010482b : xor ecx, dword ptr [rcx + 0xffffffffffffff83] ; ret
0x0000000000166539 : xor ecx, dword ptr [rdi + 0x1f0fffeb] ; add bl, dh ; ret
0x00000000000bdb4e : xor ecx, ecx ; jmp 0xbdb15
0x000000000018df49 : xor ecx, edi ; call rsp
0x000000000011db9e : xor edi, dword ptr [0x30] ; call rax
0x0000000000031d5c : xor edi, dword ptr [rcx] ; add byte ptr [rax + 0xffffffffffffff89], cl ; ret
0x00000000001a1f24 : xor edi, dword ptr [rsi + 0xfffffffffffffff1] ; jmp qword ptr [rdx]
0x00000000000f48e8 : xor edi, ecx ; inc dword ptr [rbp + 0xffffffff831174c0] ; ret
0x000000000018df61 : xor edi, ecx ; jmp rsp
0x000000000008170e : xor edi, edi ; call qword ptr [rax]
0x000000000007eb80 : xor edi, edi ; mov qword ptr [rsp + 8], rcx ; call qword ptr [rax]
0x000000000007eb2f : xor edi, edi ; mov r14, rdx ; call qword ptr [rax]
0x000000000018e759 : xor edi, edx ; jmp rsp
0x0000000000031daa : xor edx, dword ptr [0x30] ; call rdx
0x0000000000001b0c : xor edx, dword ptr [rdx + 0xffffffffffffff85] ; mov bl, -0x12 ; enter 0x59e7, 0x5b ; ret 0x2a63
0x00000000000235b0 : xor edx, edx ; add eax, 2 ; mov dword ptr [rsp], eax ; call rbx
0x00000000000b56c1 : xor edx, edx ; add rsp, 8 ; mov rax, rdx ; ret
0x0000000000074539 : xor edx, edx ; div rbx ; pop rbx ; pop rbp ; pop r12 ; ret
0x00000000000de6a3 : xor edx, edx ; jmp 0xde6ba
0x0000000000089360 : xor edx, edx ; mov eax, edx ; ret
0x000000000007c729 : xor edx, edx ; mov rax, qword ptr [rax + 0x48] ; jmp rax
0x000000000008b703 : xor edx, edx ; or cl, cl ; cmove rax, rdx ; ret
0x0000000000070ed0 : xor edx, edx ; pop r12 ; jmp rax
0x00000000000744fc : xor edx, edx ; pop rbx ; div rbp ; pop rbp ; pop r12 ; ret
0x00000000000fade4 : xor edx, edx ; test byte ptr [rsp + 0x29], -0x80 ; setne dl ; jmp 0xfadbf
0x0000000000083551 : xor esi, edx ; mov byte ptr [rax + rbx], sil ; pop rbx ; ret
0x00000000000dc7ce : xor esi, esi ; call 0x8d150
0x00000000000f68b2 : xor esi, esi ; mov rdi, r12 ; call rbx
0x00000000000f68d7 : xor esi, esi ; mov rdi, r13 ; call rbx
0x00000000000f68fb : xor esi, esi ; mov rdi, r14 ; call rbx
0x00000000000f691b : xor esi, esi ; mov rdi, r15 ; call rbx
0x00000000000f688d : xor esi, esi ; mov rdi, rbp ; call rbx
0x000000000001fea8 : xor esi, esi ; xor eax, eax ; call 0xec1a9
0x000000000019aa26 : xor esp, 0xd1cffed ; mov bh, -0x14 ; in eax, dx ; jmp qword ptr [rdx]
0x0000000000187a1d : xor esp, edi ; jmp rax
0x00000000000c82d1 : xor esp, esp ; jmp 0xc8298
0x000000000012f6d7 : xor esp, esp ; push rbp ; push rbx ; xor ebx, ebx ; call 0x12b970
0x00000000000de6a2 : xor r10d, r10d ; jmp 0xde6ba
0x00000000000c82d0 : xor r12d, r12d ; jmp 0xc8298
0x000000000012f6d6 : xor r12d, r12d ; push rbp ; push rbx ; xor ebx, ebx ; call 0x12b970
0x0000000000071b56 : xor r8d, r8d ; call r12
0x0000000000104150 : xor r9b, bpl ; ret
0x00000000000d1896 : xor r9b, byte ptr [rax] ; xor eax, eax ; ret
0x00000000000f1171 : xor rax, 0x20 ; mov qword ptr [rbx + 0x48], rax ; pop rbx ; ret
0x0000000000021edf : xor rax, qword ptr [0x30] ; call rax
0x0000000000036bdf : xor rax, qword ptr [0x30] ; jmp rax
0x0000000000021ede : xor rax, qword ptr fs:[0x30] ; call rax
0x0000000000036bde : xor rax, qword ptr fs:[0x30] ; jmp rax
0x0000000000089815 : xor rax, rax ; ret
0x000000000003c93a : xor rax, rdx ; sub rax, rdx ; ret
0x000000000011db9d : xor rdi, qword ptr [0x30] ; call rax
0x000000000011db9c : xor rdi, qword ptr fs:[0x30] ; call rax
0x0000000000031da9 : xor rdx, qword ptr [0x30] ; call rdx
0x0000000000031da8 : xor rdx, qword ptr fs:[0x30] ; call rdx
0x0000000000070ecf : xor rdx, rdx ; pop r12 ; jmp rax

Unique gadgets found: 20626
